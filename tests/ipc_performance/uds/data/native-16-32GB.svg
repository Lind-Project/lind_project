<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="69" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="79.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1333" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="48.25" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (65,584,654 samples, 0.13%)</title><rect x="10.7" y="1557" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.74" y="1567.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (9,363,868,769 samples, 18.49%)</title><rect x="425.0" y="1397" width="218.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="428.05" y="1407.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1231.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,157,400 samples, 0.10%)</title><rect x="787.5" y="1317" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="790.53" y="1327.5" ></text>
</g>
<g >
<title>schedule_tail (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1125" width="11.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="73.60" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (204,358,672 samples, 0.40%)</title><rect x="995.2" y="1237" width="4.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="998.17" y="1247.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1525" width="3.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="48.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="901" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock (102,298,125 samples, 0.20%)</title><rect x="970.2" y="1365" width="2.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="973.16" y="1375.5" ></text>
</g>
<g >
<title>openat64 (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1349" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="13.74" y="1359.5" ></text>
</g>
<g >
<title>clear_page_erms (1,845,647,511 samples, 3.65%)</title><rect x="343.9" y="1301" width="43.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="346.92" y="1311.5" >clea..</text>
</g>
<g >
<title>mod_memcg_state (49,940,647 samples, 0.10%)</title><rect x="1008.4" y="1237" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1011.43" y="1247.5" ></text>
</g>
<g >
<title>mod_objcg_state (51,111,490 samples, 0.10%)</title><rect x="756.5" y="1301" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="759.52" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (43,512,240,508 samples, 85.94%)</title><rect x="175.9" y="1557" width="1014.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="178.91" y="1567.5" >__libc_start_main</text>
</g>
<g >
<title>do_wp_page (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1045" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="84.71" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="677" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="687.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (155,074,606 samples, 0.31%)</title><rect x="723.1" y="1349" width="3.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="726.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="287.5" ></text>
</g>
<g >
<title>recv (102,387,346 samples, 0.20%)</title><rect x="173.5" y="1557" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="176.52" y="1567.5" ></text>
</g>
<g >
<title>__fdget (51,120,824 samples, 0.10%)</title><rect x="1188.8" y="1397" width="1.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1191.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1343.5" ></text>
</g>
<g >
<title>consume_obj_stock (102,140,482 samples, 0.20%)</title><rect x="757.7" y="1301" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="760.71" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1189" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,645,267 samples, 0.02%)</title><rect x="41.1" y="85" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.12" y="95.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,762,215,488 samples, 5.46%)</title><rect x="89.4" y="1477" width="64.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="92.38" y="1487.5" >cpuidle..</text>
</g>
<g >
<title>asm_common_interrupt (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1461" width="22.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="92.38" y="1471.5" >a..</text>
</g>
<g >
<title>__send (9,968,202,664 samples, 19.69%)</title><rect x="188.0" y="1493" width="232.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="190.96" y="1503.5" >__send</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="565" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,467,003 samples, 0.04%)</title><rect x="38.2" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="863.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnKeys (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1493" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="15.69" y="1503.5" ></text>
</g>
<g >
<title>[bash] (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1109" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="84.85" y="1119.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (49,884,708 samples, 0.10%)</title><rect x="295.4" y="1253" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="298.37" y="1263.5" ></text>
</g>
<g >
<title>unix_write_space (102,115,090 samples, 0.20%)</title><rect x="1017.9" y="1301" width="2.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1020.94" y="1311.5" ></text>
</g>
<g >
<title>update_blocked_averages (6,225,512 samples, 0.01%)</title><rect x="172.1" y="1429" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="175.14" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="757" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1413" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.79" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,018,863 samples, 0.07%)</title><rect x="38.9" y="1285" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.90" y="1295.5" ></text>
</g>
<g >
<title>split_vma (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1381" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="56.46" y="1391.5" ></text>
</g>
<g >
<title>free_unref_page (460,045,810 samples, 0.91%)</title><rect x="989.2" y="1285" width="10.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="992.21" y="1295.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (51,234,305 samples, 0.10%)</title><rect x="747.0" y="1237" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="749.97" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="53" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="63.5" ></text>
</g>
<g >
<title>__slab_free (102,383,152 samples, 0.20%)</title><rect x="1002.5" y="1285" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1005.46" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1317" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="565" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="757" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1253" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1263.5" ></text>
</g>
<g >
<title>v8::internal::OrderedHashSet::Add (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1445" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="15.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1055.5" ></text>
</g>
<g >
<title>begin_new_exec (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1429" width="3.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="52.04" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="933" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="943.5" ></text>
</g>
<g >
<title>[bash] (9,835,837 samples, 0.02%)</title><rect x="54.8" y="1413" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="57.84" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1263.5" ></text>
</g>
<g >
<title>free_compound_page (816,891,133 samples, 1.61%)</title><rect x="980.9" y="1301" width="19.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="983.90" y="1311.5" ></text>
</g>
<g >
<title>update_rq_clock (5,935,340 samples, 0.01%)</title><rect x="172.1" y="1413" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="175.15" y="1423.5" ></text>
</g>
<g >
<title>__fdget (51,142,009 samples, 0.10%)</title><rect x="417.9" y="1397" width="1.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="420.89" y="1407.5" ></text>
</g>
<g >
<title>menu_select (181,022,379 samples, 0.36%)</title><rect x="153.8" y="1477" width="4.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="156.76" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (102,140,482 samples, 0.20%)</title><rect x="757.7" y="1317" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="760.71" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1477" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.73" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="261" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="805" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="815.5" ></text>
</g>
<g >
<title>[unknown] (56,982,658 samples, 0.11%)</title><rect x="52.1" y="1573" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="55.13" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1125" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1135.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1349" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="43.26" y="1359.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1253" width="1.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="645.09" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,455,088 samples, 0.03%)</title><rect x="38.3" y="693" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (255,638,633 samples, 0.50%)</title><rect x="191.5" y="1397" width="6.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="194.53" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_state (51,220,149 samples, 0.10%)</title><rect x="495.5" y="1205" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="498.51" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,616,757 samples, 0.02%)</title><rect x="38.3" y="565" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,832,823 samples, 0.01%)</title><rect x="82.9" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.89" y="1487.5" ></text>
</g>
<g >
<title>ksys_read (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1477" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="43.56" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="181" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="191.5" ></text>
</g>
<g >
<title>mod_objcg_state (51,167,752 samples, 0.10%)</title><rect x="1006.0" y="1285" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1009.04" y="1295.5" ></text>
</g>
<g >
<title>try_charge_memcg (51,213,347 samples, 0.10%)</title><rect x="296.5" y="1269" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="299.54" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1525" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1535.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,178,045 samples, 0.10%)</title><rect x="643.3" y="1445" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="646.28" y="1455.5" ></text>
</g>
<g >
<title>uncharge_batch (102,124,636 samples, 0.20%)</title><rect x="450.2" y="1301" width="2.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="453.20" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1077" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1087.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (4,788,978 samples, 0.01%)</title><rect x="53.3" y="1205" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="56.31" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,810,070 samples, 0.01%)</title><rect x="10.5" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.53" y="1567.5" ></text>
</g>
<g >
<title>[bash] (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1269" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.08" y="1279.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="773" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="389" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1109" width="15.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="58.08" y="1119.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,962,527 samples, 0.01%)</title><rect x="82.9" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.86" y="1567.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (13,004,085,562 samples, 25.68%)</title><rect x="655.2" y="1397" width="303.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="658.17" y="1407.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (54,093,512 samples, 0.11%)</title><rect x="162.9" y="1349" width="1.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="165.90" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1173" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1183.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (102,176,501 samples, 0.20%)</title><rect x="776.8" y="1253" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="779.81" y="1263.5" ></text>
</g>
<g >
<title>__rcu_read_lock (36,248,240 samples, 0.07%)</title><rect x="51.2" y="1253" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.17" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1493" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="239.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (102,451,060 samples, 0.20%)</title><rect x="974.9" y="1301" width="2.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="977.93" y="1311.5" ></text>
</g>
<g >
<title>irq_exit_rcu (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1429" width="22.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="92.38" y="1439.5" >i..</text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1557" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="15.69" y="1567.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (8,102,775 samples, 0.02%)</title><rect x="52.5" y="1429" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="55.46" y="1439.5" ></text>
</g>
<g >
<title>ttwu_do_activate (25,142,612 samples, 0.05%)</title><rect x="158.2" y="1461" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="161.18" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (556,108,674 samples, 1.10%)</title><rect x="98.4" y="981" width="13.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="101.39" y="991.5" ></text>
</g>
<g >
<title>parse_and_execute (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1189" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="84.85" y="1199.5" ></text>
</g>
<g >
<title>rmqueue_bulk (255,806,582 samples, 0.51%)</title><rect x="400.0" y="1285" width="6.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="403.02" y="1295.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,020,351,658 samples, 5.97%)</title><rect x="335.6" y="1317" width="70.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="338.59" y="1327.5" >get_pag..</text>
</g>
<g >
<title>tick_sched_timer (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1205" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="645.09" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,592,140 samples, 0.02%)</title><rect x="39.8" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="42.77" y="1343.5" ></text>
</g>
<g >
<title>seq_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1381" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="51.71" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1215.5" ></text>
</g>
<g >
<title>mmput (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1397" width="3.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="52.04" y="1407.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (9,688,111,237 samples, 19.13%)</title><rect x="963.0" y="1397" width="225.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="966.02" y="1407.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>uv__fs_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1509" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="51.71" y="1519.5" ></text>
</g>
<g >
<title>__sys_recvfrom (9,790,420,203 samples, 19.34%)</title><rect x="961.8" y="1429" width="228.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="964.83" y="1439.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,528,189 samples, 0.01%)</title><rect x="38.3" y="437" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="501" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="511.5" ></text>
</g>
<g >
<title>memset_erms (51,216,504 samples, 0.10%)</title><rect x="749.4" y="1301" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="752.36" y="1311.5" ></text>
</g>
<g >
<title>_dl_catch_exception (4,832,823 samples, 0.01%)</title><rect x="82.9" y="1493" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="85.89" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_free (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1077" width="11.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="73.60" y="1087.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (51,210,344 samples, 0.10%)</title><rect x="303.7" y="1317" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="306.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="645" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="655.5" ></text>
</g>
<g >
<title>menu_select (396,643,254 samples, 0.78%)</title><rect x="162.9" y="1429" width="9.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="165.86" y="1439.5" ></text>
</g>
<g >
<title>kfree (511,693,340 samples, 1.01%)</title><rect x="486.0" y="1317" width="11.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="488.97" y="1327.5" ></text>
</g>
<g >
<title>page_counter_try_charge (51,213,347 samples, 0.10%)</title><rect x="296.5" y="1253" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="299.54" y="1263.5" ></text>
</g>
<g >
<title>path_openat (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1269" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.92" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1461" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="56.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="133" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1557" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="44.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="581" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="591.5" ></text>
</g>
<g >
<title>expand_string_assignment (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1237" width="27.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="58.08" y="1247.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="591.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1397" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.74" y="1407.5" ></text>
</g>
<g >
<title>generic_perform_write (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1253" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="56.00" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1279.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (152,497,980 samples, 0.30%)</title><rect x="494.3" y="1285" width="3.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="497.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1119.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1301" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="56.00" y="1311.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (4,854,182 samples, 0.01%)</title><rect x="158.1" y="1445" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="161.07" y="1455.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (51,177,902 samples, 0.10%)</title><rect x="1003.7" y="1269" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1006.66" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="543.5" ></text>
</g>
<g >
<title>_copy_to_iter (307,854,493 samples, 0.61%)</title><rect x="520.5" y="1301" width="7.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="523.47" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="741" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="751.5" ></text>
</g>
<g >
<title>readlink (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1493" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="14.37" y="1503.5" ></text>
</g>
<g >
<title>mod_objcg_state (100,848,888 samples, 0.20%)</title><rect x="294.2" y="1269" width="2.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="297.19" y="1279.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1269" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="56.00" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1477" width="12.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="178.91" y="1487.5" ></text>
</g>
<g >
<title>InotifyBackend::start (152,434,658 samples, 0.30%)</title><rect x="41.7" y="1509" width="3.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="44.69" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (51,092,767 samples, 0.10%)</title><rect x="493.2" y="1269" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="496.15" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1413" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="86.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="479.5" ></text>
</g>
<g >
<title>__check_object_size (51,202,434 samples, 0.10%)</title><rect x="656.4" y="1365" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="659.37" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,810,070 samples, 0.01%)</title><rect x="10.5" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.53" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,517,403,543 samples, 18.80%)</title><rect x="422.7" y="1477" width="221.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="425.66" y="1487.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>kfree (516,798,874 samples, 1.02%)</title><rect x="999.9" y="1317" width="12.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1002.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1013" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1221" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1231.5" ></text>
</g>
<g >
<title>free_unref_page (664,633,208 samples, 1.31%)</title><rect x="468.1" y="1285" width="15.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="471.10" y="1295.5" ></text>
</g>
<g >
<title>__schedule (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1317" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1030.67" y="1327.5" ></text>
</g>
<g >
<title>free_compound_page (1,432,879,929 samples, 2.83%)</title><rect x="452.6" y="1301" width="33.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="455.58" y="1311.5" >fr..</text>
</g>
<g >
<title>unix_stream_sendmsg (9,355,093,759 samples, 18.48%)</title><rect x="198.7" y="1397" width="218.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="201.67" y="1407.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="399.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1429" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="13.74" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnPropertyNames (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1477" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="15.69" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="927.5" ></text>
</g>
<g >
<title>__schedule (102,406,125 samples, 0.20%)</title><rect x="505.0" y="1317" width="2.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="508.04" y="1327.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (355,626,063 samples, 0.70%)</title><rect x="289.4" y="1301" width="8.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="292.44" y="1311.5" ></text>
</g>
<g >
<title>rmqueue_bulk (357,391,940 samples, 0.71%)</title><rect x="935.6" y="1285" width="8.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="938.61" y="1295.5" ></text>
</g>
<g >
<title>malloc (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1157" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="84.71" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,528,189 samples, 0.01%)</title><rect x="38.3" y="501" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="511.5" ></text>
</g>
<g >
<title>mas_wr_bnode (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1269" width="1.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="56.46" y="1279.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1157" width="13.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="101.39" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="869" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="965" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="975.5" ></text>
</g>
<g >
<title>update_rq_clock (51,239,389 samples, 0.10%)</title><rect x="506.2" y="1301" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="509.23" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="549" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1167.5" ></text>
</g>
<g >
<title>kmalloc_reserve (355,626,063 samples, 0.70%)</title><rect x="289.4" y="1333" width="8.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="292.44" y="1343.5" ></text>
</g>
<g >
<title>ovl_getattr (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1381" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="43.26" y="1391.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (6,907,736 samples, 0.01%)</title><rect x="53.1" y="1189" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="56.09" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="511.5" ></text>
</g>
<g >
<title>__pollwait (5,796,515 samples, 0.01%)</title><rect x="52.3" y="1413" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="55.33" y="1423.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (5,829,375,489 samples, 11.51%)</title><rect x="507.4" y="1349" width="135.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="510.42" y="1359.5" >skb_copy_datagram..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="639.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1413" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.74" y="1423.5" ></text>
</g>
<g >
<title>arch_call_rest_init (416,990,833 samples, 0.82%)</title><rect x="162.6" y="1525" width="9.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="165.62" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,832,823 samples, 0.01%)</title><rect x="82.9" y="1429" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.89" y="1439.5" ></text>
</g>
<g >
<title>page_counter_try_charge (51,248,725 samples, 0.10%)</title><rect x="748.2" y="1253" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="751.17" y="1263.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (20,135,814 samples, 0.04%)</title><rect x="52.2" y="1445" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="55.18" y="1455.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (29,017,142 samples, 0.06%)</title><rect x="52.8" y="1525" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="55.79" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1093" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1103.5" ></text>
</g>
<g >
<title>uncharge_batch (409,944,567 samples, 0.81%)</title><rect x="456.2" y="1269" width="9.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="459.16" y="1279.5" ></text>
</g>
<g >
<title>page_counter_uncharge (307,685,775 samples, 0.61%)</title><rect x="458.5" y="1253" width="7.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="461.54" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,693,049 samples, 0.04%)</title><rect x="83.1" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1439.5" ></text>
</g>
<g >
<title>ksys_write (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1381" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="55.79" y="1391.5" ></text>
</g>
<g >
<title>mmput (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1397" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="85.37" y="1407.5" ></text>
</g>
<g >
<title>move_queued_task (7,461,302 samples, 0.01%)</title><rect x="88.8" y="1493" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="91.80" y="1503.5" ></text>
</g>
<g >
<title>exec_binprm (15,218,254 samples, 0.03%)</title><rect x="81.9" y="965" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="84.85" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1541" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1061" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1071.5" ></text>
</g>
<g >
<title>tcp_get_idx (8,395,507 samples, 0.02%)</title><rect x="48.8" y="1333" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="51.78" y="1343.5" ></text>
</g>
<g >
<title>mod_objcg_state (51,214,487 samples, 0.10%)</title><rect x="301.3" y="1301" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="304.31" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectKeys (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1509" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.69" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (9,466,225,498 samples, 18.70%)</title><rect x="422.7" y="1445" width="220.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="425.66" y="1455.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>exc_page_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1461" width="12.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="178.91" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1077" width="13.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="101.39" y="1087.5" ></text>
</g>
<g >
<title>sock_sendmsg (13,361,329,682 samples, 26.39%)</title><rect x="646.8" y="1413" width="311.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="649.85" y="1423.5" >sock_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_state (51,220,149 samples, 0.10%)</title><rect x="495.5" y="1221" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="498.51" y="1231.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1221" width="13.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="101.39" y="1231.5" ></text>
</g>
<g >
<title>search_binary_handler (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1461" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="52.04" y="1471.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1109" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="84.71" y="1119.5" ></text>
</g>
<g >
<title>mnt_user_ns (5,087,594 samples, 0.01%)</title><rect x="52.9" y="1333" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="55.88" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1215.5" ></text>
</g>
<g >
<title>filename_lookup (11,400,557 samples, 0.02%)</title><rect x="40.0" y="1397" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="43.00" y="1407.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (48,091,677 samples, 0.09%)</title><rect x="111.4" y="1445" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="114.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (643,587,246 samples, 1.27%)</title><rect x="25.0" y="1445" width="15.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="303.5" ></text>
</g>
<g >
<title>ion (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1461" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="55.79" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1445" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="14.37" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1285" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="645.09" y="1295.5" ></text>
</g>
<g >
<title>ovl_write_iter (23,337,240 samples, 0.05%)</title><rect x="52.9" y="1349" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="55.88" y="1359.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (674,594,494 samples, 1.33%)</title><rect x="24.7" y="1541" width="15.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="27.74" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="191.5" ></text>
</g>
<g >
<title>uncharge_folio (51,166,268 samples, 0.10%)</title><rect x="986.8" y="1269" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="989.83" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="741" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (9,790,420,203 samples, 19.34%)</title><rect x="961.8" y="1445" width="228.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="964.83" y="1455.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>hrtimer_interrupt (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1237" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="645.09" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="463.5" ></text>
</g>
<g >
<title>[bash] (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1157" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="84.85" y="1167.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (409,120,892 samples, 0.81%)</title><rect x="750.6" y="1333" width="9.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="753.55" y="1343.5" ></text>
</g>
<g >
<title>read (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1541" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="43.56" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,455,088 samples, 0.03%)</title><rect x="38.3" y="677" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="687.5" ></text>
</g>
<g >
<title>cr4_update_irqsoff (4,581,820 samples, 0.01%)</title><rect x="124.8" y="1413" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="127.84" y="1423.5" ></text>
</g>
<g >
<title>check_file (15,218,254 samples, 0.03%)</title><rect x="81.9" y="917" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="84.85" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="671.5" ></text>
</g>
<g >
<title>[perf-1156129.map] (74,455,484 samples, 0.15%)</title><rect x="12.4" y="1573" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="15.44" y="1583.5" ></text>
</g>
<g >
<title>copy_mc_enhanced_fast_string (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1013" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="84.71" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="997" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1365" width="3.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="48.25" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1413" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1423.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (102,418,964 samples, 0.20%)</title><rect x="495.5" y="1253" width="2.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="498.51" y="1263.5" ></text>
</g>
<g >
<title>execute_command (1,171,528,312 samples, 2.31%)</title><rect x="55.1" y="1445" width="27.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.07" y="1455.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="965" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="975.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1349" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="86.55" y="1359.5" ></text>
</g>
<g >
<title>update_load_avg (51,164,738 samples, 0.10%)</title><rect x="161.3" y="1429" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="164.33" y="1439.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (6,791,234,651 samples, 13.41%)</title><rect x="1030.5" y="1317" width="158.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1033.53" y="1327.5" >simple_copy_to_iter</text>
</g>
<g >
<title>[sleep] (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1525" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="86.11" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,615,984 samples, 0.03%)</title><rect x="38.3" y="757" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="767.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (357,906,760 samples, 0.71%)</title><rect x="474.1" y="1221" width="8.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="477.05" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="223.5" ></text>
</g>
<g >
<title>getgrgid_r (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1445" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.74" y="1455.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (6,863,125,019 samples, 13.56%)</title><rect x="1028.9" y="1365" width="159.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1031.86" y="1375.5" >unix_stream_read_actor</text>
</g>
<g >
<title>ret_from_fork (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1141" width="11.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="73.60" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="757" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="767.5" ></text>
</g>
<g >
<title>ext4_file_getattr (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1333" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="43.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (643,587,246 samples, 1.27%)</title><rect x="25.0" y="1413" width="15.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.00" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1285" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1295.5" ></text>
</g>
<g >
<title>rmqueue (407,844,574 samples, 0.81%)</title><rect x="396.5" y="1301" width="9.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="399.48" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,838,331 samples, 0.01%)</title><rect x="38.4" y="661" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.43" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,612,691 samples, 0.01%)</title><rect x="41.5" y="101" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.51" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1285" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1295.5" ></text>
</g>
<g >
<title>__free_one_page (51,188,908 samples, 0.10%)</title><rect x="471.7" y="1237" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="474.67" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,779,302 samples, 0.13%)</title><rect x="38.2" y="1365" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="895.5" ></text>
</g>
<g >
<title>proc_reg_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1397" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="51.71" y="1407.5" ></text>
</g>
<g >
<title>sock_def_readable (51,166,272 samples, 0.10%)</title><rect x="414.3" y="1381" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="417.32" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,941,656 samples, 0.02%)</title><rect x="12.0" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1125" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="565" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="575.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (51,248,725 samples, 0.10%)</title><rect x="748.2" y="1285" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="751.17" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (331,772,758 samples, 0.66%)</title><rect x="164.2" y="1381" width="7.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="167.16" y="1391.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1173" width="15.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="58.08" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1525" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1535.5" ></text>
</g>
<g >
<title>free_unref_page_commit (357,678,721 samples, 0.71%)</title><rect x="991.6" y="1269" width="8.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="994.60" y="1279.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (51,193,704 samples, 0.10%)</title><rect x="1004.9" y="1285" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1007.85" y="1295.5" ></text>
</g>
<g >
<title>Glob::isIgnored (649,193,661 samples, 1.28%)</title><rect x="24.9" y="1493" width="15.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="27.87" y="1503.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (102,443,454 samples, 0.20%)</title><rect x="502.6" y="1333" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="505.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1461" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1471.5" ></text>
</g>
<g >
<title>command_substitute (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1301" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="85.22" y="1311.5" ></text>
</g>
<g >
<title>post_alloc_hook (260,079,695 samples, 0.51%)</title><rect x="923.6" y="1301" width="6.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="926.58" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (178,925,705 samples, 0.35%)</title><rect x="153.8" y="1445" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="156.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1509" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="325" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="335.5" ></text>
</g>
<g >
<title>execute_command_internal (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1301" width="27.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="58.08" y="1311.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="549" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1109" width="11.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="73.60" y="1119.5" ></text>
</g>
<g >
<title>__check_object_size (508,829,816 samples, 1.00%)</title><rect x="508.6" y="1301" width="11.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="511.61" y="1311.5" ></text>
</g>
<g >
<title>mod_memcg_state (50,051,028 samples, 0.10%)</title><rect x="985.7" y="1237" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="988.66" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="101" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="111.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (102,133,517 samples, 0.20%)</title><rect x="416.7" y="1413" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="419.70" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (51,223,667 samples, 0.10%)</title><rect x="302.5" y="1317" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="305.50" y="1327.5" ></text>
</g>
<g >
<title>uv__fs_work (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1525" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="51.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="671.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5,923,230,268 samples, 11.70%)</title><rect x="1050.8" y="1301" width="138.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1053.76" y="1311.5" >copy_user_enhance..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="901" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="911.5" ></text>
</g>
<g >
<title>__mmdrop (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1093" width="11.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="73.60" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="821" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="831.5" ></text>
</g>
<g >
<title>__virt_addr_valid (51,149,592 samples, 0.10%)</title><rect x="1040.0" y="1253" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1043.03" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="207.5" ></text>
</g>
<g >
<title>poll_idle (6,752,687 samples, 0.01%)</title><rect x="153.6" y="1461" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="156.60" y="1471.5" ></text>
</g>
<g >
<title>expr (27,599,005 samples, 0.05%)</title><rect x="10.0" y="1589" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (395,224,521 samples, 0.78%)</title><rect x="162.9" y="1413" width="9.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="165.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="117" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="303.5" ></text>
</g>
<g >
<title>bprm_execve (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1509" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="85.37" y="1519.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (102,416,004 samples, 0.20%)</title><rect x="158.9" y="1477" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="161.86" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="415.5" ></text>
</g>
<g >
<title>generic_fillattr (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1301" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="43.26" y="1311.5" ></text>
</g>
<g >
<title>memcpy_erms (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1237" width="1.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="56.46" y="1247.5" ></text>
</g>
<g >
<title>__alloc_pages (4,388,744,259 samples, 8.67%)</title><rect x="306.1" y="1333" width="102.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="309.08" y="1343.5" >__alloc_pages</text>
</g>
<g >
<title>unix_stream_data_wait (102,406,125 samples, 0.20%)</title><rect x="505.0" y="1365" width="2.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="508.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1135.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (25,142,612 samples, 0.05%)</title><rect x="158.2" y="1493" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="161.18" y="1503.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (9,312,645,043 samples, 18.39%)</title><rect x="426.2" y="1381" width="217.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="429.24" y="1391.5" >unix_stream_read_generic</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="117" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="565" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,615,984 samples, 0.03%)</title><rect x="38.3" y="789" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1071.5" ></text>
</g>
<g >
<title>__poll (25,868,826 samples, 0.05%)</title><rect x="52.2" y="1525" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="55.18" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1013" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1029" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1039.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1509" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="15.92" y="1519.5" ></text>
</g>
<g >
<title>__mod_memcg_state (51,154,313 samples, 0.10%)</title><rect x="457.3" y="1221" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="460.35" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (65,584,654 samples, 0.13%)</title><rect x="10.7" y="1541" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.74" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="245" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="255.5" ></text>
</g>
<g >
<title>schedule_timeout (102,406,125 samples, 0.20%)</title><rect x="505.0" y="1349" width="2.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="508.04" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1493" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="178.91" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1013" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1023.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (51,162,223 samples, 0.10%)</title><rect x="307.3" y="1317" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="310.28" y="1327.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (51,178,045 samples, 0.10%)</title><rect x="643.3" y="1381" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="646.28" y="1391.5" ></text>
</g>
<g >
<title>kfree_skbmem (464,834,566 samples, 0.92%)</title><rect x="434.6" y="1349" width="10.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="437.59" y="1359.5" ></text>
</g>
<g >
<title>proc_pid_readlink (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1397" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="14.37" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,810,070 samples, 0.01%)</title><rect x="10.5" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.53" y="1519.5" ></text>
</g>
<g >
<title>begin_new_exec (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1429" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="85.37" y="1439.5" ></text>
</g>
<g >
<title>pick_next_task (54,742,959 samples, 0.11%)</title><rect x="161.3" y="1477" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="164.25" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="933" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1487.5" ></text>
</g>
<g >
<title>[bash] (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1285" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.08" y="1295.5" >[..</text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (102,257,593 samples, 0.20%)</title><rect x="488.4" y="1269" width="2.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="491.36" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="805" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="815.5" ></text>
</g>
<g >
<title>__folio_put (1,535,004,565 samples, 3.03%)</title><rect x="450.2" y="1333" width="35.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="453.20" y="1343.5" >__f..</text>
</g>
<g >
<title>[sleep] (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1573" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="86.11" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (102,451,060 samples, 0.20%)</title><rect x="974.9" y="1317" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="977.93" y="1327.5" ></text>
</g>
<g >
<title>_Fork (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1157" width="11.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="73.60" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="367.5" ></text>
</g>
<g >
<title>do_filp_open (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1285" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.74" y="1295.5" ></text>
</g>
<g >
<title>execute_command_internal (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1477" width="27.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="57.84" y="1487.5" >e..</text>
</g>
<g >
<title>common_interrupt (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1445" width="22.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="92.38" y="1455.5" >c..</text>
</g>
<g >
<title>execute_command_internal (9,835,837 samples, 0.02%)</title><rect x="54.8" y="1429" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="57.84" y="1439.5" ></text>
</g>
<g >
<title>schedule (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1333" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1030.67" y="1343.5" ></text>
</g>
<g >
<title>prep_compound_page (51,169,408 samples, 0.10%)</title><rect x="943.9" y="1317" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="946.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1205" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1215.5" ></text>
</g>
<g >
<title>cpu_startup_entry (416,990,833 samples, 0.82%)</title><rect x="162.6" y="1493" width="9.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="165.62" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,790,420,203 samples, 19.34%)</title><rect x="961.8" y="1461" width="228.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="964.83" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>page_counter_try_charge (153,570,181 samples, 0.30%)</title><rect x="784.0" y="1285" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="786.95" y="1295.5" ></text>
</g>
<g >
<title>[anon] (7,212,067 samples, 0.01%)</title><rect x="12.3" y="1573" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="15.27" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1407.5" ></text>
</g>
<g >
<title>_copy_from_iter (204,377,425 samples, 0.40%)</title><rect x="661.1" y="1349" width="4.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="664.13" y="1359.5" ></text>
</g>
<g >
<title>unix_destruct_scm (203,806,429 samples, 0.40%)</title><rect x="497.9" y="1333" width="4.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="500.90" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,440,223 samples, 0.02%)</title><rect x="40.9" y="69" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="43.92" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1349" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51,182,161 samples, 0.10%)</title><rect x="433.4" y="1365" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="436.40" y="1375.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (49,884,708 samples, 0.10%)</title><rect x="295.4" y="1237" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="298.37" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="997" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1141" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="741" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="751.5" ></text>
</g>
<g >
<title>cache_from_obj (102,405,683 samples, 0.20%)</title><rect x="977.3" y="1317" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="980.32" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1253" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="629" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="639.5" ></text>
</g>
<g >
<title>__entry_text_start (51,155,893 samples, 0.10%)</title><rect x="645.7" y="1477" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="648.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1189" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1509" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1519.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (9,165,906,379 samples, 18.10%)</title><rect x="731.5" y="1365" width="213.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="734.51" y="1375.5" >alloc_skb_with_frags</text>
</g>
<g >
<title>__sys_sendto (9,815,058,352 samples, 19.39%)</title><rect x="190.3" y="1429" width="228.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="193.34" y="1439.5" >__sys_sendto</text>
</g>
<g >
<title>cpuidle_enter (2,762,215,488 samples, 5.46%)</title><rect x="89.4" y="1493" width="64.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="92.38" y="1503.5" >cpuidle..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="271.5" ></text>
</g>
<g >
<title>psi_group_change (10,461,604 samples, 0.02%)</title><rect x="158.4" y="1413" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="161.44" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages (7,888,531,811 samples, 15.58%)</title><rect x="761.3" y="1349" width="183.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="764.28" y="1359.5" >alloc_pages</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1295.5" ></text>
</g>
<g >
<title>unmap_page_range (87,857,769 samples, 0.17%)</title><rect x="50.1" y="1317" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="53.09" y="1327.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6,608,625,019 samples, 13.05%)</title><rect x="789.9" y="1317" width="154.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="792.92" y="1327.5" >get_page_from_freel..</text>
</g>
<g >
<title>__open64_nocancel (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1365" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="13.92" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1423.5" ></text>
</g>
<g >
<title>free_unref_page_commit (613,478,632 samples, 1.21%)</title><rect x="469.3" y="1269" width="14.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="472.29" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="453" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1317" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.74" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (727,498,779 samples, 1.44%)</title><rect x="24.7" y="1573" width="17.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="27.74" y="1583.5" ></text>
</g>
<g >
<title>error (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1477" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.92" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51,193,716 samples, 0.10%)</title><rect x="482.4" y="1237" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="485.39" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="53" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="63.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,962,527 samples, 0.01%)</title><rect x="82.9" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="629" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,117,324 samples, 0.01%)</title><rect x="10.0" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>lru_add_drain (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1349" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="85.37" y="1359.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (51,068,526 samples, 0.10%)</title><rect x="957.1" y="1381" width="1.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="960.06" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1381" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1391.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (51,184,836 samples, 0.10%)</title><rect x="507.4" y="1301" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="510.42" y="1311.5" ></text>
</g>
<g >
<title>__rcu_read_lock (102,390,161 samples, 0.20%)</title><rect x="452.6" y="1269" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="455.58" y="1279.5" ></text>
</g>
<g >
<title>__schedule (161,362,597 samples, 0.32%)</title><rect x="158.8" y="1493" width="3.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="161.77" y="1503.5" ></text>
</g>
<g >
<title>vfs_getattr (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1365" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="43.26" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="543.5" ></text>
</g>
<g >
<title>__do_sys_newstat (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1445" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="43.00" y="1455.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (51,234,581 samples, 0.10%)</title><rect x="415.5" y="1381" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="418.51" y="1391.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1109" width="13.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="101.39" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="709" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1157" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1189" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1199.5" ></text>
</g>
<g >
<title>switch_mm (104,309,794 samples, 0.21%)</title><rect x="122.5" y="1445" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="125.52" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,693,049 samples, 0.04%)</title><rect x="83.1" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (312,344,489 samples, 0.62%)</title><rect x="41.7" y="1557" width="7.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.69" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (408,238,219 samples, 0.81%)</title><rect x="162.6" y="1461" width="9.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="165.62" y="1471.5" ></text>
</g>
<g >
<title>ip_list_rcv (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1285" width="22.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="92.38" y="1295.5" >i..</text>
</g>
<g >
<title>do_iter_write (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1317" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="56.00" y="1327.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (613,478,632 samples, 1.21%)</title><rect x="469.3" y="1253" width="14.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="472.29" y="1263.5" ></text>
</g>
<g >
<title>vfs_iter_write (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1333" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="56.00" y="1343.5" ></text>
</g>
<g >
<title>psi_task_switch (51,166,736 samples, 0.10%)</title><rect x="505.0" y="1301" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="508.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,311,470 samples, 0.05%)</title><rect x="38.2" y="1077" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1487.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (152,434,658 samples, 0.30%)</title><rect x="41.7" y="1525" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.69" y="1535.5" ></text>
</g>
<g >
<title>sock_def_readable (102,366,484 samples, 0.20%)</title><rect x="954.7" y="1381" width="2.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="957.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="463.5" ></text>
</g>
<g >
<title>uv_spawn (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1525" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.92" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (48,091,677 samples, 0.09%)</title><rect x="111.4" y="1461" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="114.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1461" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1471.5" ></text>
</g>
<g >
<title>skb_queue_tail (153,406,651 samples, 0.30%)</title><rect x="281.1" y="1381" width="3.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="284.09" y="1391.5" ></text>
</g>
<g >
<title>command_substitute (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1205" width="27.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="58.08" y="1215.5" >c..</text>
</g>
<g >
<title>futex_wait_queue (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1397" width="3.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="48.25" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1557" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="85.37" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="687.5" ></text>
</g>
<g >
<title>setlocale (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1509" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="86.11" y="1519.5" ></text>
</g>
<g >
<title>policy_node (51,156,014 samples, 0.10%)</title><rect x="408.4" y="1333" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="411.37" y="1343.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (25,142,612 samples, 0.05%)</title><rect x="158.2" y="1477" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="161.18" y="1487.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (301,154,728 samples, 0.59%)</title><rect x="41.7" y="1541" width="7.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="44.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="415.5" ></text>
</g>
<g >
<title>exec_mmap (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1413" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="85.37" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_write_end (7,278,953 samples, 0.01%)</title><rect x="53.3" y="1237" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="56.25" y="1247.5" ></text>
</g>
<g >
<title>net_rx_action (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1381" width="22.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="92.38" y="1391.5" >n..</text>
</g>
<g >
<title>__x64_sys_clone (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1413" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.92" y="1423.5" ></text>
</g>
<g >
<title>execute_command (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1141" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="84.85" y="1151.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,402,275 samples, 0.02%)</title><rect x="10.2" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.24" y="1407.5" ></text>
</g>
<g >
<title>xmalloc (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1173" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="84.71" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (47,113,577 samples, 0.09%)</title><rect x="111.4" y="1429" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="114.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="383.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (204,358,672 samples, 0.40%)</title><rect x="995.2" y="1205" width="4.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="998.17" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="495.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (54,290,630 samples, 0.11%)</title><rect x="162.9" y="1381" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="165.90" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,941,656 samples, 0.02%)</title><rect x="12.0" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_openat (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1317" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.92" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="437" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1439.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1365" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.74" y="1375.5" ></text>
</g>
<g >
<title>record__mmap_read_all (29,017,142 samples, 0.06%)</title><rect x="52.8" y="1541" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="55.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="335.5" ></text>
</g>
<g >
<title>ksys_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1429" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.71" y="1439.5" ></text>
</g>
<g >
<title>do_user_addr_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1141" width="15.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="58.08" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_poll (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1445" width="3.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="44.73" y="1455.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (51,178,045 samples, 0.10%)</title><rect x="643.3" y="1397" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="646.28" y="1407.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (18,249,646 samples, 0.04%)</title><rect x="53.0" y="1285" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="56.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1221" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1231.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (102,298,125 samples, 0.20%)</title><rect x="970.2" y="1349" width="2.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="973.16" y="1359.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1493" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="85.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="351.5" ></text>
</g>
<g >
<title>memcg_account_kmem (102,124,636 samples, 0.20%)</title><rect x="450.2" y="1285" width="2.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="453.20" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1541" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (643,587,246 samples, 1.27%)</title><rect x="25.0" y="1461" width="15.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1541" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1477" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="52.04" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (59,311,193 samples, 0.12%)</title><rect x="1026.3" y="1349" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1029.28" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="287.5" ></text>
</g>
<g >
<title>skb_release_data (1,384,861,606 samples, 2.74%)</title><rect x="979.7" y="1349" width="32.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="982.70" y="1359.5" >sk..</text>
</g>
<g >
<title>ip_sublist_rcv_finish (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1253" width="22.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="92.38" y="1263.5" >i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,955,086 samples, 0.05%)</title><rect x="38.2" y="1013" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1023.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (87,857,769 samples, 0.17%)</title><rect x="50.1" y="1301" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="53.09" y="1311.5" ></text>
</g>
<g >
<title>copy_pmd_range (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1285" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.92" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="869" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (50,830,131 samples, 0.10%)</title><rect x="189.2" y="1461" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="192.15" y="1471.5" ></text>
</g>
<g >
<title>consume_stock (51,137,906 samples, 0.10%)</title><rect x="782.8" y="1285" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="785.76" y="1295.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (51,234,305 samples, 0.10%)</title><rect x="747.0" y="1253" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="749.97" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (51,178,045 samples, 0.10%)</title><rect x="643.3" y="1413" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="646.28" y="1423.5" ></text>
</g>
<g >
<title>destroy_large_folio (1,432,879,929 samples, 2.83%)</title><rect x="452.6" y="1317" width="33.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="455.58" y="1327.5" >de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,018,863 samples, 0.07%)</title><rect x="38.9" y="1269" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.90" y="1279.5" ></text>
</g>
<g >
<title>kfree_skbmem (256,005,622 samples, 0.51%)</title><rect x="973.7" y="1349" width="6.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="976.74" y="1359.5" ></text>
</g>
<g >
<title>quiet_vmstat (4,854,182 samples, 0.01%)</title><rect x="158.1" y="1461" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="161.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,206,431 samples, 0.01%)</title><rect x="38.3" y="245" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="255.5" ></text>
</g>
<g >
<title>igc_poll (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1349" width="22.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="92.38" y="1359.5" >i..</text>
</g>
<g >
<title>do_syscall_64 (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1445" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="56.46" y="1455.5" ></text>
</g>
<g >
<title>__kmem_cache_free (511,693,340 samples, 1.01%)</title><rect x="486.0" y="1301" width="11.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="488.97" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1087.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="239.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1173" width="13.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="101.39" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="895.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (651,692,444 samples, 1.29%)</title><rect x="24.8" y="1509" width="15.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="27.81" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,955,086 samples, 0.05%)</title><rect x="38.2" y="997" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1007.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,142,189 samples, 0.10%)</title><rect x="419.1" y="1461" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="422.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="501" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="511.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (51,234,748 samples, 0.10%)</title><rect x="788.7" y="1317" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="791.72" y="1327.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1525" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="85.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="943.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1141" width="13.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="101.39" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="357" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1205" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1461" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.37" y="1471.5" ></text>
</g>
<g >
<title>shell_execve (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1093" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="84.85" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="437" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (178,925,705 samples, 0.35%)</title><rect x="153.8" y="1461" width="4.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="156.81" y="1471.5" ></text>
</g>
<g >
<title>prep_compound_page (51,120,582 samples, 0.10%)</title><rect x="407.2" y="1317" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="410.18" y="1327.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (7,329,506 samples, 0.01%)</title><rect x="162.7" y="1413" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="165.67" y="1423.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (8,102,775 samples, 0.02%)</title><rect x="52.5" y="1413" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="55.46" y="1423.5" ></text>
</g>
<g >
<title>pollwake (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1029" width="13.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="101.39" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (80,322,036 samples, 0.16%)</title><rect x="38.1" y="1397" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.13" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1429" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.92" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (155,074,606 samples, 0.31%)</title><rect x="723.1" y="1365" width="3.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="726.14" y="1375.5" ></text>
</g>
<g >
<title>rest_init (416,990,833 samples, 0.82%)</title><rect x="162.6" y="1509" width="9.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="165.62" y="1519.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1413" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="56.46" y="1423.5" ></text>
</g>
<g >
<title>kernel_clone (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1381" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="15.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="255.5" ></text>
</g>
<g >
<title>page_copy_sane (51,139,366 samples, 0.10%)</title><rect x="719.6" y="1349" width="1.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="722.57" y="1359.5" ></text>
</g>
<g >
<title>[ls] (65,584,654 samples, 0.13%)</title><rect x="10.7" y="1573" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.74" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="85" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="527.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (51,058,666 samples, 0.10%)</title><rect x="763.7" y="1317" width="1.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="766.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="917" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1407.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1317" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="85.37" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="709" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="719.5" ></text>
</g>
<g >
<title>do_idle (416,447,757 samples, 0.82%)</title><rect x="162.6" y="1477" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="165.62" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (256,014,032 samples, 0.51%)</title><rect x="298.9" y="1333" width="6.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="301.92" y="1343.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (203,479,509 samples, 0.40%)</title><rect x="743.4" y="1285" width="4.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="746.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1541" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1551.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (51,242,119 samples, 0.10%)</title><rect x="304.9" y="1333" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="307.89" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.00" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_select (183,208,316 samples, 0.36%)</title><rect x="153.8" y="1493" width="4.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="156.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="981" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,455,088 samples, 0.03%)</title><rect x="38.3" y="709" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="719.5" ></text>
</g>
<g >
<title>__virt_addr_valid (51,074,256 samples, 0.10%)</title><rect x="204.6" y="1317" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="207.63" y="1327.5" ></text>
</g>
<g >
<title>dequeue_task (139,210,583 samples, 0.27%)</title><rect x="41.9" y="1333" width="3.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="44.94" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1365" width="3.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="52.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1141" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1151.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (556,108,674 samples, 1.10%)</title><rect x="98.4" y="965" width="13.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="101.39" y="975.5" ></text>
</g>
<g >
<title>check_heap_object (51,202,434 samples, 0.10%)</title><rect x="656.4" y="1333" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="659.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1349" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.92" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1125" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="84.85" y="1135.5" ></text>
</g>
<g >
<title>do_anonymous_page (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1381" width="12.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="178.91" y="1391.5" ></text>
</g>
<g >
<title>memcg_account_kmem (50,051,028 samples, 0.10%)</title><rect x="985.7" y="1253" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="988.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,841,163 samples, 0.15%)</title><rect x="38.2" y="1381" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1391.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1493" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="15.92" y="1503.5" ></text>
</g>
<g >
<title>_start (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1573" width="27.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="57.84" y="1583.5" >_..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (150,986,713 samples, 0.30%)</title><rect x="293.0" y="1285" width="3.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="296.02" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,955,086 samples, 0.05%)</title><rect x="38.2" y="1045" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1055.5" ></text>
</g>
<g >
<title>psi_flags_change (51,166,736 samples, 0.10%)</title><rect x="505.0" y="1285" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="508.04" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1445" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1455.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (9,728,435,691 samples, 19.21%)</title><rect x="727.9" y="1381" width="226.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="730.94" y="1391.5" >sock_alloc_send_pskb</text>
</g>
<g >
<title>cache_from_obj (51,214,070 samples, 0.10%)</title><rect x="434.6" y="1333" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="437.59" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="805" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1349" width="3.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="48.25" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="149" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_execve (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1029" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="84.85" y="1039.5" ></text>
</g>
<g >
<title>[bash] (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1317" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="85.22" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,810,070 samples, 0.01%)</title><rect x="10.5" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.53" y="1551.5" ></text>
</g>
<g >
<title>unmap_single_vma (87,857,769 samples, 0.17%)</title><rect x="50.1" y="1333" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="53.09" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1397" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (407,798,559 samples, 0.81%)</title><rect x="1031.7" y="1285" width="9.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1034.72" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="117" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="127.5" ></text>
</g>
<g >
<title>skb_release_data (51,092,652 samples, 0.10%)</title><rect x="1021.5" y="1365" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1024.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,206,431 samples, 0.01%)</title><rect x="38.3" y="213" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.25" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (972,898,945 samples, 1.92%)</title><rect x="764.9" y="1317" width="22.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="767.86" y="1327.5" >_..</text>
</g>
<g >
<title>enqueue_task (7,461,302 samples, 0.01%)</title><rect x="88.8" y="1477" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="91.80" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="479.5" ></text>
</g>
<g >
<title>free_pgtables (45,062,715 samples, 0.09%)</title><rect x="49.0" y="1349" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="52.04" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="693" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="223.5" ></text>
</g>
<g >
<title>do_readlinkat (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1429" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="14.37" y="1439.5" ></text>
</g>
<g >
<title>do_sys_poll (25,868,826 samples, 0.05%)</title><rect x="52.2" y="1461" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="55.18" y="1471.5" ></text>
</g>
<g >
<title>__clone (312,344,489 samples, 0.62%)</title><rect x="41.7" y="1573" width="7.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.69" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="863.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (6,791,234,651 samples, 13.41%)</title><rect x="1030.5" y="1333" width="158.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1033.53" y="1343.5" >__skb_datagram_iter</text>
</g>
<g >
<title>ext4_dirty_inode (4,788,978 samples, 0.01%)</title><rect x="53.3" y="1189" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="56.31" y="1199.5" ></text>
</g>
<g >
<title>skb_queue_tail (206,188,281 samples, 0.41%)</title><rect x="723.1" y="1381" width="4.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="726.14" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="517" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (556,108,674 samples, 1.10%)</title><rect x="98.4" y="997" width="13.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="101.39" y="1007.5" ></text>
</g>
<g >
<title>update_process_times (45,691,778 samples, 0.09%)</title><rect x="111.4" y="1349" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="114.39" y="1359.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (10,970,693 samples, 0.02%)</title><rect x="53.0" y="1221" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="56.00" y="1231.5" ></text>
</g>
<g >
<title>__mmput (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1381" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="85.37" y="1391.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::AddKey (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1461" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="15.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="143.5" ></text>
</g>
<g >
<title>alloc_empty_file (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1253" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.92" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="351.5" ></text>
</g>
<g >
<title>check_heap_object (406,574,274 samples, 0.80%)</title><rect x="511.0" y="1269" width="9.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="514.00" y="1279.5" ></text>
</g>
<g >
<title>page_counter_cancel (256,578,947 samples, 0.51%)</title><rect x="458.5" y="1237" width="6.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="461.54" y="1247.5" ></text>
</g>
<g >
<title>sock_recvmsg (9,415,083,600 samples, 18.60%)</title><rect x="423.9" y="1413" width="219.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="426.85" y="1423.5" >sock_recvmsg</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (669,046,563 samples, 1.32%)</title><rect x="24.8" y="1525" width="15.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="27.77" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_openat (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1301" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.74" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="453" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (50,981,208 samples, 0.10%)</title><rect x="988.0" y="1285" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="991.02" y="1295.5" ></text>
</g>
<g >
<title>copy_page_range (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1317" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="15.92" y="1327.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (5,563,086,722 samples, 10.99%)</title><rect x="284.7" y="1381" width="129.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="287.66" y="1391.5" >sock_alloc_send_..</text>
</g>
<g >
<title>__count_memcg_events (51,169,996 samples, 0.10%)</title><rect x="983.3" y="1253" width="1.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="986.28" y="1263.5" ></text>
</g>
<g >
<title>dequeue_task_fair (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1285" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1030.67" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="821" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="831.5" ></text>
</g>
<g >
<title>wp_page_copy (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1029" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="84.71" y="1039.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (2,916,026,580 samples, 5.76%)</title><rect x="655.2" y="1381" width="67.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="658.17" y="1391.5" >skb_cop..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (413,620,496 samples, 0.82%)</title><rect x="435.8" y="1333" width="9.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="438.78" y="1343.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (5,829,375,489 samples, 11.51%)</title><rect x="507.4" y="1333" width="135.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="510.42" y="1343.5" >__skb_datagram_iter</text>
</g>
<g >
<title>smpboot_thread_fn (9,800,901 samples, 0.02%)</title><rect x="88.8" y="1541" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="91.80" y="1551.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,573,934,607 samples, 7.06%)</title><rect x="89.0" y="1573" width="83.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="92.04" y="1583.5" >secondary..</text>
</g>
<g >
<title>dequeue_task_fair (137,831,235 samples, 0.27%)</title><rect x="42.0" y="1317" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="44.97" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (386,552,045 samples, 0.76%)</title><rect x="89.4" y="1237" width="9.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="92.38" y="1247.5" ></text>
</g>
<g >
<title>__slab_free (204,581,286 samples, 0.40%)</title><rect x="486.0" y="1285" width="4.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="488.97" y="1295.5" ></text>
</g>
<g >
<title>execute_command (1,164,389,392 samples, 2.30%)</title><rect x="55.1" y="1349" width="27.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.07" y="1359.5" >e..</text>
</g>
<g >
<title>sock_alloc_send_pskb (51,082,531 samples, 0.10%)</title><rect x="197.5" y="1397" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="200.48" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (102,346,985 samples, 0.20%)</title><rect x="333.2" y="1317" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="336.21" y="1327.5" ></text>
</g>
<g >
<title>dequeue_entity (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1269" width="1.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1030.67" y="1279.5" ></text>
</g>
<g >
<title>vfs_fstatat (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1429" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="43.00" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,528,189 samples, 0.01%)</title><rect x="38.3" y="373" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1247.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1541" width="1.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="15.92" y="1551.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,169,996 samples, 0.10%)</title><rect x="983.3" y="1237" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="986.28" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="43.00" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1541" width="3.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="52.04" y="1551.5" ></text>
</g>
<g >
<title>update_load_avg (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1253" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1030.67" y="1263.5" ></text>
</g>
<g >
<title>__calc_delta (137,831,235 samples, 0.27%)</title><rect x="42.0" y="1269" width="3.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="44.97" y="1279.5" ></text>
</g>
<g >
<title>mprotect_fixup (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1397" width="1.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="56.46" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (51,048,506 samples, 0.10%)</title><rect x="172.3" y="1573" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="175.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="431.5" ></text>
</g>
<g >
<title>do_sys_poll (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1429" width="3.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="44.73" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,962,527 samples, 0.01%)</title><rect x="82.9" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.86" y="1519.5" ></text>
</g>
<g >
<title>memcg_account_kmem (51,154,313 samples, 0.10%)</title><rect x="457.3" y="1253" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="460.35" y="1263.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1317" width="22.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="92.38" y="1327.5" >n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="837" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1573" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="52.04" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1477" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.37" y="1487.5" ></text>
</g>
<g >
<title>__virt_addr_valid (51,202,434 samples, 0.10%)</title><rect x="656.4" y="1317" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="659.37" y="1327.5" ></text>
</g>
<g >
<title>check_heap_object (51,202,944 samples, 0.10%)</title><rect x="205.8" y="1349" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="208.82" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1461" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.73" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="607.5" ></text>
</g>
<g >
<title>__folio_put (868,062,732 samples, 1.71%)</title><rect x="979.7" y="1333" width="20.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="982.70" y="1343.5" ></text>
</g>
<g >
<title>load_elf_binary (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1445" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="85.37" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="927.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (203,455,652 samples, 0.40%)</title><rect x="1007.2" y="1285" width="4.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1010.24" y="1295.5" ></text>
</g>
<g >
<title>__fget_light (51,142,009 samples, 0.10%)</title><rect x="417.9" y="1381" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="420.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,455,088 samples, 0.03%)</title><rect x="38.3" y="725" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="645" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1573" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="85.37" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1087.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (204,712,787 samples, 0.40%)</title><rect x="439.5" y="1301" width="4.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="442.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_poll (25,868,826 samples, 0.05%)</title><rect x="52.2" y="1477" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="55.18" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1487.5" ></text>
</g>
<g >
<title>check_stack_object (102,294,964 samples, 0.20%)</title><rect x="1041.2" y="1285" width="2.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1044.23" y="1295.5" ></text>
</g>
<g >
<title>sock_wfree (203,806,429 samples, 0.40%)</title><rect x="497.9" y="1317" width="4.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="500.90" y="1327.5" ></text>
</g>
<g >
<title>exec_binprm (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1477" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="85.37" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="86.55" y="1439.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (15,218,254 samples, 0.03%)</title><rect x="81.9" y="981" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="84.85" y="991.5" ></text>
</g>
<g >
<title>[[heap]] (7,117,324 samples, 0.01%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>swapper (3,801,686,113 samples, 7.51%)</title><rect x="83.7" y="1589" width="88.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="86.73" y="1599.5" >swapper</text>
</g>
<g >
<title>__mod_memcg_state (50,932,129 samples, 0.10%)</title><rect x="451.4" y="1253" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="454.39" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1125" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1135.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (6,907,736 samples, 0.01%)</title><rect x="53.1" y="1205" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="56.09" y="1215.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (5,829,375,489 samples, 11.51%)</title><rect x="507.4" y="1317" width="135.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="510.42" y="1327.5" >simple_copy_to_iter</text>
</g>
<g >
<title>uncharge_folio (51,112,277 samples, 0.10%)</title><rect x="465.7" y="1269" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="468.71" y="1279.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (25,142,612 samples, 0.05%)</title><rect x="158.2" y="1509" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="161.18" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_clone (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1397" width="1.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="15.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (64,779,302 samples, 0.13%)</title><rect x="38.2" y="1333" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1055.5" ></text>
</g>
<g >
<title>sock_wfree (307,112,899 samples, 0.61%)</title><rect x="1013.2" y="1317" width="7.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1016.17" y="1327.5" ></text>
</g>
<g >
<title>copy_page_from_iter (50,829,730 samples, 0.10%)</title><rect x="198.7" y="1381" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="201.67" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="165" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="175.5" ></text>
</g>
<g >
<title>__poll (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1493" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="44.73" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (416,990,833 samples, 0.82%)</title><rect x="162.6" y="1557" width="9.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="165.62" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="959.5" ></text>
</g>
<g >
<title>handle_pte_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1093" width="15.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="58.08" y="1103.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (6,429,840 samples, 0.01%)</title><rect x="158.0" y="1493" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="161.03" y="1503.5" ></text>
</g>
<g >
<title>__libc_fork (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1477" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="15.92" y="1487.5" ></text>
</g>
<g >
<title>recv (9,892,833,522 samples, 19.54%)</title><rect x="959.4" y="1493" width="230.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="962.44" y="1503.5" >recv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="549" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="559.5" ></text>
</g>
<g >
<title>kthread (10,468,837 samples, 0.02%)</title><rect x="88.8" y="1557" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="91.80" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1557" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="86.11" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (6,429,840 samples, 0.01%)</title><rect x="158.0" y="1477" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="161.03" y="1487.5" ></text>
</g>
<g >
<title>consume_stock (51,106,874 samples, 0.10%)</title><rect x="317.4" y="1301" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="320.39" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,790,420,203 samples, 19.34%)</title><rect x="961.8" y="1477" width="228.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="964.83" y="1487.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[bash] (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1349" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="85.22" y="1359.5" ></text>
</g>
<g >
<title>malloc (4,938,848 samples, 0.01%)</title><rect x="41.5" y="69" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="44.51" y="79.5" ></text>
</g>
<g >
<title>ret_from_fork (10,468,837 samples, 0.02%)</title><rect x="88.8" y="1573" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="91.80" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1381" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1391.5" ></text>
</g>
<g >
<title>propagate_protected_usage (51,106,828 samples, 0.10%)</title><rect x="464.5" y="1237" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="467.52" y="1247.5" ></text>
</g>
<g >
<title>update_rq_clock (7,461,302 samples, 0.01%)</title><rect x="88.8" y="1461" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="91.80" y="1471.5" ></text>
</g>
<g >
<title>search_binary_handler (15,218,254 samples, 0.03%)</title><rect x="81.9" y="949" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="84.85" y="959.5" ></text>
</g>
<g >
<title>__split_vma (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1365" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="56.46" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (35,018,863 samples, 0.07%)</title><rect x="38.9" y="1301" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.90" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="885" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1525" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1029" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1039.5" ></text>
</g>
<g >
<title>free_unref_page_commit (51,212,084 samples, 0.10%)</title><rect x="483.6" y="1285" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="486.59" y="1295.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1125" width="13.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="101.39" y="1135.5" ></text>
</g>
<g >
<title>copy_mc_enhanced_fast_string (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1045" width="15.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="58.08" y="1055.5" ></text>
</g>
<g >
<title>skb_release_data (2,251,524,418 samples, 4.45%)</title><rect x="445.4" y="1349" width="52.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="448.42" y="1359.5" >skb_r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1317" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1327.5" ></text>
</g>
<g >
<title>zap_pte_range (87,857,769 samples, 0.17%)</title><rect x="50.1" y="1285" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="53.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1157" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1167.5" ></text>
</g>
<g >
<title>[bash] (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="85.22" y="1375.5" ></text>
</g>
<g >
<title>child (20,104,943,205 samples, 39.71%)</title><rect x="175.9" y="1509" width="468.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="178.91" y="1519.5" >child</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="261" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="271.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2,303,179,195 samples, 4.55%)</title><rect x="665.9" y="1349" width="53.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="668.89" y="1359.5" >copy_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,615,984 samples, 0.03%)</title><rect x="38.3" y="805" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="815.5" ></text>
</g>
<g >
<title>task_tick_idle (45,691,778 samples, 0.09%)</title><rect x="111.4" y="1333" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="114.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1397" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1407.5" ></text>
</g>
<g >
<title>leave_mm (104,309,794 samples, 0.21%)</title><rect x="122.5" y="1461" width="2.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="125.52" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,615,984 samples, 0.03%)</title><rect x="38.3" y="821" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="831.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1205" width="13.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="101.39" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,693,049 samples, 0.04%)</title><rect x="83.1" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1455.5" ></text>
</g>
<g >
<title>handle_pte_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1397" width="12.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="178.91" y="1407.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1509" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="48.25" y="1519.5" ></text>
</g>
<g >
<title>setlocale (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1509" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1157" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1167.5" ></text>
</g>
<g >
<title>mntput (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1365" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="14.37" y="1375.5" ></text>
</g>
<g >
<title>schedule_timeout (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1349" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1030.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="677" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1445" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1477" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1487.5" ></text>
</g>
<g >
<title>native_sched_clock (51,239,389 samples, 0.10%)</title><rect x="506.2" y="1253" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="509.23" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="191.5" ></text>
</g>
<g >
<title>uncharge_folio (51,188,835 samples, 0.10%)</title><rect x="484.8" y="1285" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="487.78" y="1295.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,229,555 samples, 0.10%)</title><rect x="941.6" y="1253" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="944.56" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,592,140 samples, 0.02%)</title><rect x="39.8" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="42.77" y="1359.5" ></text>
</g>
<g >
<title>mod_memcg_state (306,784,260 samples, 0.61%)</title><rect x="772.0" y="1285" width="7.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="775.04" y="1295.5" ></text>
</g>
<g >
<title>__mmput (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1381" width="3.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="52.04" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1455.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (6,488,706 samples, 0.01%)</title><rect x="172.1" y="1461" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="175.14" y="1471.5" ></text>
</g>
<g >
<title>vfs_readlink (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1413" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="14.37" y="1423.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,174,900 samples, 0.10%)</title><rect x="472.9" y="1237" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="475.86" y="1247.5" ></text>
</g>
<g >
<title>ip_local_deliver (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1237" width="13.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="101.39" y="1247.5" ></text>
</g>
<g >
<title>update_process_times (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1173" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="645.09" y="1183.5" ></text>
</g>
<g >
<title>ovl_permission (4,925,515 samples, 0.01%)</title><rect x="40.1" y="1349" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="43.08" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1247.5" ></text>
</g>
<g >
<title>copy_pte_range (48,675,551 samples, 0.10%)</title><rect x="13.0" y="1269" width="1.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="16.02" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1317" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1327.5" ></text>
</g>
<g >
<title>__do_softirq (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1397" width="22.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="92.38" y="1407.5" >_..</text>
</g>
<g >
<title>__d_lookup_rcu (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1301" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="86.55" y="1311.5" ></text>
</g>
<g >
<title>_copy_from_iter (50,974,143 samples, 0.10%)</title><rect x="207.0" y="1365" width="1.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="210.01" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_lock (153,638,647 samples, 0.30%)</title><rect x="767.2" y="1301" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="770.24" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1119.5" ></text>
</g>
<g >
<title>skb_unlink (212,758,278 samples, 0.42%)</title><rect x="1022.7" y="1365" width="5.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1025.71" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,815,058,352 samples, 19.39%)</title><rect x="190.3" y="1461" width="228.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="193.34" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1541" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="15.69" y="1551.5" ></text>
</g>
<g >
<title>exit_mmap (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1365" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="85.37" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,156,943,774 samples, 6.24%)</title><rect x="89.0" y="1541" width="73.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="92.04" y="1551.5" >cpu_star..</text>
</g>
<g >
<title>ls (66,201,844 samples, 0.13%)</title><rect x="10.7" y="1589" width="1.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.73" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51,229,555 samples, 0.10%)</title><rect x="941.6" y="1269" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="944.56" y="1279.5" ></text>
</g>
<g >
<title>[expr] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1573" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.17" y="1583.5" ></text>
</g>
<g >
<title>schedule (8,102,775 samples, 0.02%)</title><rect x="52.5" y="1397" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.46" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1471.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1013" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="84.85" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,311,470 samples, 0.05%)</title><rect x="38.2" y="1061" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1071.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (51,213,347 samples, 0.10%)</title><rect x="296.5" y="1285" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="299.54" y="1295.5" ></text>
</g>
<g >
<title>mas_store_b_node (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1253" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="56.46" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="581" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1199.5" ></text>
</g>
<g >
<title>__open64_nocancel (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1461" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="86.55" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task_fair (54,742,959 samples, 0.11%)</title><rect x="161.3" y="1461" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="164.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,528,189 samples, 0.01%)</title><rect x="38.3" y="309" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="319.5" ></text>
</g>
<g >
<title>page_remove_rmap (38,818,233 samples, 0.08%)</title><rect x="51.2" y="1269" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="54.17" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (153,447,085 samples, 0.30%)</title><rect x="1022.7" y="1349" width="3.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1025.71" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (101,628,764 samples, 0.20%)</title><rect x="963.0" y="1381" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="966.02" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (51,234,305 samples, 0.10%)</title><rect x="747.0" y="1269" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="749.97" y="1279.5" ></text>
</g>
<g >
<title>tick_sched_timer (47,113,577 samples, 0.09%)</title><rect x="111.4" y="1381" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="114.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="197" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="911.5" ></text>
</g>
<g >
<title>sh (1,261,570,129 samples, 2.49%)</title><rect x="53.5" y="1589" width="29.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="56.46" y="1599.5" >sh</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter (10,047,444 samples, 0.02%)</title><rect x="162.6" y="1445" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="165.62" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,517,403,543 samples, 18.80%)</title><rect x="422.7" y="1461" width="221.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="425.66" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>__virt_addr_valid (50,974,579 samples, 0.10%)</title><rect x="519.3" y="1253" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="522.29" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="133" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="143.5" ></text>
</g>
<g >
<title>established_get_next (7,405,191 samples, 0.01%)</title><rect x="48.8" y="1317" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="51.80" y="1327.5" ></text>
</g>
<g >
<title>check_heap_object (407,798,559 samples, 0.81%)</title><rect x="1031.7" y="1269" width="9.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1034.72" y="1279.5" ></text>
</g>
<g >
<title>trigger_load_balance (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1141" width="1.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="645.09" y="1151.5" ></text>
</g>
<g >
<title>parse_and_execute (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1493" width="27.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="57.84" y="1503.5" >p..</text>
</g>
<g >
<title>__rcu_read_lock (51,228,871 samples, 0.10%)</title><rect x="332.0" y="1317" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="335.01" y="1327.5" ></text>
</g>
<g >
<title>do_sys_openat2 (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1301" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.92" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="805" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.17" y="1551.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (355,626,063 samples, 0.70%)</title><rect x="289.4" y="1317" width="8.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="292.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,693,049 samples, 0.04%)</title><rect x="83.1" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1423.5" ></text>
</g>
<g >
<title>inotify_read (8,005,953 samples, 0.02%)</title><rect x="40.6" y="1445" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="43.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="69" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="431.5" ></text>
</g>
<g >
<title>execute_command (1,164,939,140 samples, 2.30%)</title><rect x="55.1" y="1397" width="27.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.07" y="1407.5" >e..</text>
</g>
<g >
<title>memcg_account_kmem (51,220,149 samples, 0.10%)</title><rect x="495.5" y="1237" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="498.51" y="1247.5" ></text>
</g>
<g >
<title>do_wp_page (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1077" width="15.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="58.08" y="1087.5" ></text>
</g>
<g >
<title>mas_wr_modify (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1285" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="56.46" y="1295.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (153,447,085 samples, 0.30%)</title><rect x="1022.7" y="1333" width="3.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1025.71" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (306,069,088 samples, 0.60%)</title><rect x="648.0" y="1397" width="7.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="651.04" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1487.5" ></text>
</g>
<g >
<title>_copy_from_iter (102,286,145 samples, 0.20%)</title><rect x="209.4" y="1349" width="2.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="212.40" y="1359.5" ></text>
</g>
<g >
<title>make_child (482,838,551 samples, 0.95%)</title><rect x="70.6" y="1189" width="11.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="73.60" y="1199.5" ></text>
</g>
<g >
<title>mod_memcg_state (321,208,862 samples, 0.63%)</title><rect x="318.6" y="1285" width="7.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="321.58" y="1295.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (7,461,302 samples, 0.01%)</title><rect x="88.8" y="1525" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="91.80" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51,113,675 samples, 0.10%)</title><rect x="726.7" y="1365" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="729.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1333" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1343.5" ></text>
</g>
<g >
<title>begin_unwind_frame (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1189" width="15.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="58.08" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="437" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (9,313,463 samples, 0.02%)</title><rect x="162.6" y="1429" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="165.62" y="1439.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (357,678,721 samples, 0.71%)</title><rect x="991.6" y="1253" width="8.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="994.60" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,402,275 samples, 0.02%)</title><rect x="10.2" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.24" y="1391.5" ></text>
</g>
<g >
<title>refill_obj_stock (152,497,980 samples, 0.30%)</title><rect x="494.3" y="1269" width="3.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="497.34" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="613" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1557" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1333" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.92" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (9,815,058,352 samples, 19.39%)</title><rect x="190.3" y="1445" width="228.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="193.34" y="1455.5" >__x64_sys_sendto</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="965" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,206,431 samples, 0.01%)</title><rect x="38.3" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1557" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.17" y="1567.5" ></text>
</g>
<g >
<title>refill_stock (51,184,102 samples, 0.10%)</title><rect x="1009.6" y="1237" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1012.59" y="1247.5" ></text>
</g>
<g >
<title>[bash] (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="85.22" y="1391.5" ></text>
</g>
<g >
<title>rmqueue (357,391,940 samples, 0.71%)</title><rect x="935.6" y="1301" width="8.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="938.61" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="991.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,941,656 samples, 0.02%)</title><rect x="12.0" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1407.5" ></text>
</g>
<g >
<title>[perf-587345.map] (453,250,900 samples, 0.90%)</title><rect x="14.2" y="1573" width="10.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="17.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (1,164,939,140 samples, 2.30%)</title><rect x="55.1" y="1381" width="27.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="58.07" y="1391.5" >e..</text>
</g>
<g >
<title>psi_task_change (18,775,697 samples, 0.04%)</title><rect x="158.2" y="1429" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="161.24" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,463,265 samples, 0.05%)</title><rect x="40.9" y="1557" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="869" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,615,984 samples, 0.03%)</title><rect x="38.3" y="741" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="751.5" ></text>
</g>
<g >
<title>sock_def_readable (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1093" width="13.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="101.39" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1503.5" ></text>
</g>
<g >
<title>exec_mmap (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1413" width="3.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="52.04" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_execve (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1541" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="85.37" y="1551.5" ></text>
</g>
<g >
<title>vfs_write (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1365" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.79" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="287.5" ></text>
</g>
<g >
<title>memcg_check_events (51,191,862 samples, 0.10%)</title><rect x="455.0" y="1269" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="457.96" y="1279.5" ></text>
</g>
<g >
<title>perf (56,982,658 samples, 0.11%)</title><rect x="52.1" y="1589" width="1.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="55.13" y="1599.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (3,485,369,803 samples, 6.88%)</title><rect x="199.9" y="1381" width="81.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="202.86" y="1391.5" >skb_copy_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="223.5" ></text>
</g>
<g >
<title>sock_sendmsg (9,661,814,923 samples, 19.08%)</title><rect x="191.5" y="1413" width="225.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="194.53" y="1423.5" >sock_sendmsg</text>
</g>
<g >
<title>anon_vma_interval_tree_remove (45,062,715 samples, 0.09%)</title><rect x="49.0" y="1317" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="52.04" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="773" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1237" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1247.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (147,328,064 samples, 0.29%)</title><rect x="41.8" y="1397" width="3.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="44.81" y="1407.5" ></text>
</g>
<g >
<title>search_binary_handler (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1461" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="85.37" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,206,431 samples, 0.01%)</title><rect x="38.3" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (510,093,523 samples, 1.01%)</title><rect x="1031.7" y="1301" width="11.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1034.72" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1461" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="48.25" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages (51,123,160 samples, 0.10%)</title><rect x="730.3" y="1365" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="733.32" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1343.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (51,171,599 samples, 0.10%)</title><rect x="979.7" y="1317" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="982.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="303.5" ></text>
</g>
<g >
<title>udp_rcv (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1189" width="13.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="101.39" y="1199.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (5,829,375,489 samples, 11.51%)</title><rect x="507.4" y="1365" width="135.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="510.42" y="1375.5" >unix_stream_read_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1525" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1535.5" ></text>
</g>
<g >
<title>copy_process (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1365" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="15.92" y="1375.5" ></text>
</g>
<g >
<title>sleep (37,302,479 samples, 0.07%)</title><rect x="82.9" y="1589" width="0.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="85.86" y="1599.5" ></text>
</g>
<g >
<title>__schedule (141,844,269 samples, 0.28%)</title><rect x="41.9" y="1349" width="3.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="44.94" y="1359.5" ></text>
</g>
<g >
<title>_start (43,512,240,508 samples, 85.94%)</title><rect x="175.9" y="1573" width="1014.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="178.91" y="1583.5" >_start</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1141" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1151.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (51,120,824 samples, 0.10%)</title><rect x="1188.8" y="1413" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1191.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="949" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,311,470 samples, 0.05%)</title><rect x="38.2" y="1109" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="933" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1285" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1295.5" ></text>
</g>
<g >
<title>fdarray__poll (27,965,500 samples, 0.06%)</title><rect x="52.1" y="1541" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="55.13" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1493" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="757" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="767.5" ></text>
</g>
<g >
<title>[bash] (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1509" width="27.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="57.84" y="1519.5" >[..</text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (152,276,975 samples, 0.30%)</title><rect x="1007.2" y="1253" width="3.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1010.24" y="1263.5" ></text>
</g>
<g >
<title>__rcu_read_lock (229,364,877 samples, 0.45%)</title><rect x="312.0" y="1301" width="5.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="315.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="389" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="655.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::GetKeys (10,112,975 samples, 0.02%)</title><rect x="12.7" y="1525" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="15.69" y="1535.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (150,941,870 samples, 0.30%)</title><rect x="41.7" y="1413" width="3.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="44.73" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (153,406,651 samples, 0.30%)</title><rect x="281.1" y="1365" width="3.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="284.09" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1221" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,868,826 samples, 0.05%)</title><rect x="52.2" y="1509" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.18" y="1519.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_remove (45,062,715 samples, 0.09%)</title><rect x="49.0" y="1301" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="52.04" y="1311.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (305,745,828 samples, 0.60%)</title><rect x="742.2" y="1301" width="7.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="745.24" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1061" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="84.85" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1045" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="84.85" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_futex (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1445" width="3.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="48.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (649,193,661 samples, 1.28%)</title><rect x="24.9" y="1477" width="15.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="27.87" y="1487.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (51,214,831 samples, 0.10%)</title><rect x="423.9" y="1397" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="426.85" y="1407.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (6,488,706 samples, 0.01%)</title><rect x="172.1" y="1445" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="175.14" y="1455.5" ></text>
</g>
<g >
<title>do_filp_open (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1285" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.92" y="1295.5" ></text>
</g>
<g >
<title>start_kernel (416,990,833 samples, 0.82%)</title><rect x="162.6" y="1541" width="9.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="165.62" y="1551.5" ></text>
</g>
<g >
<title>parent (23,407,297,303 samples, 46.23%)</title><rect x="644.5" y="1509" width="545.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="647.47" y="1519.5" >parent</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="671.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,229,475,796 samples, 2.43%)</title><rect x="124.9" y="1461" width="28.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="127.95" y="1471.5" >mw..</text>
</g>
<g >
<title>_copy_to_iter (306,869,079 samples, 0.61%)</title><rect x="1043.6" y="1301" width="7.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1046.61" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,938,848 samples, 0.01%)</title><rect x="41.5" y="53" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="44.51" y="63.5" ></text>
</g>
<g >
<title>page_counter_try_charge (102,249,250 samples, 0.20%)</title><rect x="329.6" y="1285" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="332.63" y="1295.5" ></text>
</g>
<g >
<title>uncharge_folio (51,171,599 samples, 0.10%)</title><rect x="979.7" y="1301" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="982.70" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (102,443,454 samples, 0.20%)</title><rect x="502.6" y="1349" width="2.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="505.65" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task (21,588,795 samples, 0.04%)</title><rect x="158.2" y="1445" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="161.18" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1461" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1471.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2,871,529,183 samples, 5.67%)</title><rect x="211.8" y="1349" width="66.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="214.78" y="1359.5" >copy_us..</text>
</g>
<g >
<title>unlink_anon_vmas (45,062,715 samples, 0.09%)</title><rect x="49.0" y="1333" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="52.04" y="1343.5" ></text>
</g>
<g >
<title>skb_set_owner_w (153,455,162 samples, 0.30%)</title><rect x="410.7" y="1365" width="3.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="413.74" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1503.5" ></text>
</g>
<g >
<title>policy_nodemask (50,675,600 samples, 0.10%)</title><rect x="409.6" y="1349" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="412.56" y="1359.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4,961,506,344 samples, 9.80%)</title><rect x="527.6" y="1301" width="115.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="530.65" y="1311.5" >copy_user_enha..</text>
</g>
<g >
<title>do_user_addr_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1445" width="12.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="178.91" y="1455.5" ></text>
</g>
<g >
<title>refill_stock (51,198,815 samples, 0.10%)</title><rect x="496.7" y="1237" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="499.70" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="197" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_free (256,005,622 samples, 0.51%)</title><rect x="973.7" y="1333" width="6.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="976.74" y="1343.5" ></text>
</g>
<g >
<title>skb_release_head_state (203,806,429 samples, 0.40%)</title><rect x="497.9" y="1349" width="4.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="500.90" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="607.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (153,098,506 samples, 0.30%)</title><rect x="478.8" y="1205" width="3.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="481.82" y="1215.5" ></text>
</g>
<g >
<title>vfs_statx (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1413" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="43.00" y="1423.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (254,666,819 samples, 0.50%)</title><rect x="982.1" y="1285" width="5.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="985.09" y="1295.5" ></text>
</g>
<g >
<title>schedule (145,752,406 samples, 0.29%)</title><rect x="41.8" y="1365" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="44.85" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1525" width="3.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="52.04" y="1535.5" ></text>
</g>
<g >
<title>consume_stock (51,017,278 samples, 0.10%)</title><rect x="328.4" y="1285" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="331.44" y="1295.5" ></text>
</g>
<g >
<title>worker (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1541" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="51.71" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1445" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.92" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1269" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="645.09" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1509" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1141" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1151.5" ></text>
</g>
<g >
<title>try_charge_memcg (357,967,604 samples, 0.71%)</title><rect x="779.2" y="1301" width="8.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="782.19" y="1311.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1125" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="645.09" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1205" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (51,206,935 samples, 0.10%)</title><rect x="466.9" y="1285" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="469.90" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="991.5" ></text>
</g>
<g >
<title>__send (13,514,463,781 samples, 26.69%)</title><rect x="644.5" y="1493" width="314.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="647.47" y="1503.5" >__send</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="869" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="879.5" ></text>
</g>
<g >
<title>try_charge_memcg (51,248,725 samples, 0.10%)</title><rect x="748.2" y="1269" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="751.17" y="1279.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,124,636 samples, 0.20%)</title><rect x="450.2" y="1269" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="453.20" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,779,302 samples, 0.13%)</title><rect x="38.2" y="1349" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (394,770,026 samples, 0.78%)</title><rect x="162.9" y="1397" width="9.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="165.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="863.5" ></text>
</g>
<g >
<title>skb_free_head (511,693,340 samples, 1.01%)</title><rect x="486.0" y="1333" width="11.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="488.97" y="1343.5" ></text>
</g>
<g >
<title>cache_from_obj (51,237,302 samples, 0.10%)</title><rect x="444.2" y="1317" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="447.23" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,334,318 samples, 0.05%)</title><rect x="38.2" y="949" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="959.5" ></text>
</g>
<g >
<title>[bash] (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1253" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.08" y="1263.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="719.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1061" width="13.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="101.39" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,412,513,792 samples, 26.49%)</title><rect x="646.8" y="1477" width="312.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="649.85" y="1487.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>bprm_execve (15,218,254 samples, 0.03%)</title><rect x="81.9" y="997" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="84.85" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1503.5" ></text>
</g>
<g >
<title>mod_objcg_state (154,614,074 samples, 0.31%)</title><rect x="490.7" y="1285" width="3.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="493.74" y="1295.5" ></text>
</g>
<g >
<title>__kmem_cache_free (516,798,874 samples, 1.02%)</title><rect x="999.9" y="1301" width="12.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1002.93" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,832,823 samples, 0.01%)</title><rect x="82.9" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1349" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="837" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,528,189 samples, 0.01%)</title><rect x="38.3" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="351.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,832,823 samples, 0.01%)</title><rect x="82.9" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.89" y="1471.5" ></text>
</g>
<g >
<title>__entry_text_start (51,171,992 samples, 0.10%)</title><rect x="188.0" y="1477" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="190.96" y="1487.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (508,829,816 samples, 1.00%)</title><rect x="508.6" y="1285" width="11.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="511.61" y="1295.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (1,010,165,231 samples, 2.00%)</title><rect x="308.5" y="1317" width="23.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="311.47" y="1327.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (12,061,861 samples, 0.02%)</title><rect x="39.7" y="1365" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1183.5" ></text>
</g>
<g >
<title>walk_component (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1333" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="86.55" y="1343.5" ></text>
</g>
<g >
<title>check_heap_object (153,578,337 samples, 0.30%)</title><rect x="202.2" y="1333" width="3.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="205.24" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1189" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="927.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (9,586,482,473 samples, 18.93%)</title><rect x="965.4" y="1381" width="223.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="968.39" y="1391.5" >unix_stream_read_generic</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,334,318 samples, 0.05%)</title><rect x="38.2" y="901" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="911.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1397" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="43.26" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (51,202,434 samples, 0.10%)</title><rect x="656.4" y="1349" width="1.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="659.37" y="1359.5" ></text>
</g>
<g >
<title>uds (43,665,676,360 samples, 86.24%)</title><rect x="172.3" y="1589" width="1017.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="175.33" y="1599.5" >uds</text>
</g>
<g >
<title>check_new_pages (50,745,121 samples, 0.10%)</title><rect x="942.8" y="1269" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="945.76" y="1279.5" ></text>
</g>
<g >
<title>parent (51,048,506 samples, 0.10%)</title><rect x="172.3" y="1557" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="175.33" y="1567.5" ></text>
</g>
<g >
<title>refill_obj_stock (203,455,652 samples, 0.40%)</title><rect x="1007.2" y="1269" width="4.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1010.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="559.5" ></text>
</g>
<g >
<title>__mod_memcg_state (255,671,670 samples, 0.50%)</title><rect x="773.2" y="1269" width="6.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="776.23" y="1279.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51,178,045 samples, 0.10%)</title><rect x="643.3" y="1429" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="646.28" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1439.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1077" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="84.71" y="1087.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (153,580,021 samples, 0.30%)</title><rect x="298.9" y="1317" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="301.92" y="1327.5" ></text>
</g>
<g >
<title>unix_destruct_scm (409,305,334 samples, 0.81%)</title><rect x="1012.0" y="1333" width="9.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1014.98" y="1343.5" ></text>
</g>
<g >
<title>recv (9,619,800,916 samples, 19.00%)</title><rect x="420.3" y="1493" width="224.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="423.28" y="1503.5" >recv</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="415.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1493" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="52.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1269" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1279.5" ></text>
</g>
<g >
<title>perf_mmap__push (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1509" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="55.79" y="1519.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1061" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="84.71" y="1071.5" ></text>
</g>
<g >
<title>__check_object_size (255,946,795 samples, 0.51%)</title><rect x="201.0" y="1365" width="6.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="204.05" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="869" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,018,863 samples, 0.07%)</title><rect x="38.9" y="1253" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.90" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="607.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1477" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1487.5" ></text>
</g>
<g >
<title>__slab_free (255,979,161 samples, 0.51%)</title><rect x="438.3" y="1317" width="5.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="441.26" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,223,726 samples, 0.10%)</title><rect x="425.0" y="1381" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="428.05" y="1391.5" ></text>
</g>
<g >
<title>start_secondary (3,156,943,774 samples, 6.24%)</title><rect x="89.0" y="1557" width="73.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="92.04" y="1567.5" >start_se..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1093" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="1103.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1381" width="3.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="48.25" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_state (51,154,313 samples, 0.10%)</title><rect x="457.3" y="1237" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="460.35" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,021,296 samples, 0.03%)</title><rect x="12.0" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.96" y="1503.5" ></text>
</g>
<g >
<title>_Fork (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1461" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="15.92" y="1471.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (101,809,320 samples, 0.20%)</title><rect x="323.7" y="1253" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="326.69" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,334,318 samples, 0.05%)</title><rect x="38.2" y="885" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="895.5" ></text>
</g>
<g >
<title>[ls] (52,563,358 samples, 0.10%)</title><rect x="10.7" y="1509" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.74" y="1519.5" ></text>
</g>
<g >
<title>__napi_poll (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1365" width="22.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="92.38" y="1375.5" >_..</text>
</g>
<g >
<title>__x64_sys_mprotect (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1429" width="1.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="56.46" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,616,757 samples, 0.02%)</title><rect x="38.3" y="629" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.25" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="885" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="895.5" ></text>
</g>
<g >
<title>skb_set_owner_w (409,318,910 samples, 0.81%)</title><rect x="945.1" y="1365" width="9.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="948.13" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1141" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1151.5" ></text>
</g>
<g >
<title>sock_recvmsg (9,688,111,237 samples, 19.13%)</title><rect x="963.0" y="1413" width="225.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="966.02" y="1423.5" >sock_recvmsg</text>
</g>
<g >
<title>path_put (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1381" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.37" y="1391.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (102,124,636 samples, 0.20%)</title><rect x="450.2" y="1317" width="2.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="453.20" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.56" y="1519.5" ></text>
</g>
<g >
<title>setlocale (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1509" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.17" y="1519.5" ></text>
</g>
<g >
<title>all (50,631,068,864 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>kmalloc_slab (51,179,935 samples, 0.10%)</title><rect x="297.7" y="1333" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="300.73" y="1343.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1413" width="22.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="92.38" y="1423.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1445" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="1455.5" ></text>
</g>
<g >
<title>__alloc_skb (1,123,964,135 samples, 2.22%)</title><rect x="733.9" y="1349" width="26.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="736.89" y="1359.5" >_..</text>
</g>
<g >
<title>InotifyBackend::handleEvents (690,341,180 samples, 1.36%)</title><rect x="24.7" y="1557" width="16.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="27.74" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="479.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (204,743,851 samples, 0.40%)</title><rect x="201.0" y="1349" width="4.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="204.05" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="741" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="751.5" ></text>
</g>
<g >
<title>do_filp_open (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1381" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="86.55" y="1391.5" ></text>
</g>
<g >
<title>destroy_large_folio (816,891,133 samples, 1.61%)</title><rect x="980.9" y="1317" width="19.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="983.90" y="1327.5" ></text>
</g>
<g >
<title>tick_sched_handle (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1189" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="645.09" y="1199.5" ></text>
</g>
<g >
<title>__build_skb_around (51,170,791 samples, 0.10%)</title><rect x="760.1" y="1349" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="763.09" y="1359.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2,711,900,742 samples, 5.36%)</title><rect x="657.6" y="1365" width="63.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="660.56" y="1375.5" >copy_p..</text>
</g>
<g >
<title>tick_sched_handle (47,113,577 samples, 0.09%)</title><rect x="111.4" y="1365" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="114.35" y="1375.5" ></text>
</g>
<g >
<title>__free_one_page (51,164,735 samples, 0.10%)</title><rect x="994.0" y="1237" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="996.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,917,030,672 samples, 19.59%)</title><rect x="189.2" y="1477" width="231.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="192.15" y="1487.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,693,049 samples, 0.04%)</title><rect x="83.1" y="1397" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (43,512,240,508 samples, 85.94%)</title><rect x="175.9" y="1541" width="1014.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="178.91" y="1551.5" >[libc.so.6]</text>
</g>
<g >
<title>check_tsc_unstable (10,422,343 samples, 0.02%)</title><rect x="89.0" y="1493" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="92.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="783.5" ></text>
</g>
<g >
<title>__zone_watermark_ok (102,382,807 samples, 0.20%)</title><rect x="341.5" y="1301" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="344.53" y="1311.5" ></text>
</g>
<g >
<title>seq_read_iter (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1365" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="51.71" y="1375.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1349" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.92" y="1359.5" ></text>
</g>
<g >
<title>consume_skb (2,050,172,562 samples, 4.05%)</title><rect x="973.7" y="1365" width="47.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="976.74" y="1375.5" >cons..</text>
</g>
<g >
<title>do_futex (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1429" width="3.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="48.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1157" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="645.09" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (147,328,064 samples, 0.29%)</title><rect x="41.8" y="1381" width="3.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="44.81" y="1391.5" ></text>
</g>
<g >
<title>getgrgid (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1461" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.74" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,810,070 samples, 0.01%)</title><rect x="10.5" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.53" y="1535.5" ></text>
</g>
<g >
<title>clear_page_erms (5,530,456,911 samples, 10.92%)</title><rect x="794.7" y="1301" width="128.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="797.69" y="1311.5" >clear_page_erms</text>
</g>
<g >
<title>__libc_start_main (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1557" width="27.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="57.84" y="1567.5" >_..</text>
</g>
<g >
<title>schedule_idle (161,362,597 samples, 0.32%)</title><rect x="158.8" y="1509" width="3.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="161.77" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,955,086 samples, 0.05%)</title><rect x="38.2" y="1029" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,377,775 samples, 0.02%)</title><rect x="41.3" y="517" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.29" y="527.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (53,651,199 samples, 0.11%)</title><rect x="12.9" y="1557" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,779,302 samples, 0.13%)</title><rect x="38.2" y="1317" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1327.5" ></text>
</g>
<g >
<title>dequeue_task (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1301" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1030.67" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1221" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.92" y="1231.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,044,130 samples, 0.10%)</title><rect x="984.5" y="1253" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="987.48" y="1263.5" ></text>
</g>
<g >
<title>__entry_text_start (102,413,319 samples, 0.20%)</title><rect x="959.4" y="1477" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="962.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1013" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,615,984 samples, 0.03%)</title><rect x="38.3" y="773" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,085,490 samples, 0.03%)</title><rect x="40.9" y="1541" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1551.5" ></text>
</g>
<g >
<title>path_openat (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1365" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="86.55" y="1375.5" ></text>
</g>
<g >
<title>memcg_account_kmem (321,208,862 samples, 0.63%)</title><rect x="318.6" y="1301" width="7.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="321.58" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1477" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1487.5" ></text>
</g>
<g >
<title>copy_page_from_iter (3,024,994,248 samples, 5.97%)</title><rect x="208.2" y="1365" width="70.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="211.20" y="1375.5" >copy_pa..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (101,748,647 samples, 0.20%)</title><rect x="720.8" y="1365" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="723.76" y="1375.5" ></text>
</g>
<g >
<title>vma_mas_store (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1333" width="1.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="56.46" y="1343.5" ></text>
</g>
<g >
<title>skb_release_head_state (409,305,334 samples, 0.81%)</title><rect x="1012.0" y="1349" width="9.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1014.98" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1445" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="51.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1269" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1279.5" ></text>
</g>
<g >
<title>__fget_light (51,120,824 samples, 0.10%)</title><rect x="1188.8" y="1381" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1191.81" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (357,906,760 samples, 0.71%)</title><rect x="474.1" y="1237" width="8.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="477.05" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1061" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="655.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1269" width="22.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="92.38" y="1279.5" >i..</text>
</g>
<g >
<title>execute_command_internal (1,164,389,392 samples, 2.30%)</title><rect x="55.1" y="1333" width="27.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="58.07" y="1343.5" >e..</text>
</g>
<g >
<title>established_get_first (7,405,191 samples, 0.01%)</title><rect x="48.8" y="1301" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="51.80" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="86.55" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1445" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="1455.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1381" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.74" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1125" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,206,431 samples, 0.01%)</title><rect x="38.3" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1071.5" ></text>
</g>
<g >
<title>prep_compound_page (255,866,848 samples, 0.51%)</title><rect x="929.6" y="1301" width="6.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="932.65" y="1311.5" ></text>
</g>
<g >
<title>generic_write_end (7,278,953 samples, 0.01%)</title><rect x="53.3" y="1221" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="56.25" y="1231.5" ></text>
</g>
<g >
<title>execute_command_internal (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1173" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="84.85" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1103.5" ></text>
</g>
<g >
<title>cpuidle_select (396,861,703 samples, 0.78%)</title><rect x="162.9" y="1445" width="9.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="165.85" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,555,276 samples, 0.05%)</title><rect x="83.1" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.11" y="1503.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (8,706,638 samples, 0.02%)</title><rect x="171.9" y="1381" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="174.90" y="1391.5" ></text>
</g>
<g >
<title>vfs_read (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1461" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="43.56" y="1471.5" ></text>
</g>
<g >
<title>default_wake_function (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1013" width="13.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="101.39" y="1023.5" ></text>
</g>
<g >
<title>load_misc_binary (15,218,254 samples, 0.03%)</title><rect x="81.9" y="933" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="84.85" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1167.5" ></text>
</g>
<g >
<title>[bash] (1,164,939,140 samples, 2.30%)</title><rect x="55.1" y="1365" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.07" y="1375.5" >[..</text>
</g>
<g >
<title>__zone_watermark_ok (102,388,494 samples, 0.20%)</title><rect x="792.3" y="1301" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="795.31" y="1311.5" ></text>
</g>
<g >
<title>try_charge_memcg (255,141,035 samples, 0.50%)</title><rect x="326.1" y="1301" width="5.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="329.07" y="1311.5" ></text>
</g>
<g >
<title>migration_cpu_stop (7,461,302 samples, 0.01%)</title><rect x="88.8" y="1509" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="91.80" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1461" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1471.5" ></text>
</g>
<g >
<title>__cmd_record (56,982,658 samples, 0.11%)</title><rect x="52.1" y="1557" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="55.13" y="1567.5" ></text>
</g>
<g >
<title>copy_p4d_range (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1301" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="15.92" y="1311.5" ></text>
</g>
<g >
<title>exc_page_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1125" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="84.71" y="1135.5" ></text>
</g>
<g >
<title>napi_complete_done (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1333" width="22.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="92.38" y="1343.5" >n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="949" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="399.5" ></text>
</g>
<g >
<title>dequeue_entity (137,831,235 samples, 0.27%)</title><rect x="42.0" y="1301" width="3.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="44.97" y="1311.5" ></text>
</g>
<g >
<title>[expr] (15,671,611 samples, 0.03%)</title><rect x="10.2" y="1525" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.17" y="1535.5" ></text>
</g>
<g >
<title>ext4_getattr (4,460,774 samples, 0.01%)</title><rect x="40.3" y="1317" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="43.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (643,587,246 samples, 1.27%)</title><rect x="25.0" y="1429" width="15.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.00" y="1439.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (11,400,557 samples, 0.02%)</title><rect x="40.0" y="1365" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="43.00" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1253" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1269" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="41.21" y="1279.5" ></text>
</g>
<g >
<title>__update_load_avg_se (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1237" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1030.67" y="1247.5" ></text>
</g>
<g >
<title>node (1,710,397,609 samples, 3.38%)</title><rect x="12.3" y="1589" width="39.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="15.27" y="1599.5" >node</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1119.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (10,970,693 samples, 0.02%)</title><rect x="53.0" y="1237" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="56.00" y="1247.5" ></text>
</g>
<g >
<title>bprm_execve (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1509" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="52.04" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="997" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1007.5" ></text>
</g>
<g >
<title>update_curr (137,831,235 samples, 0.27%)</title><rect x="42.0" y="1285" width="3.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="44.97" y="1295.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (942,660,719 samples, 1.86%)</title><rect x="89.4" y="1301" width="22.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="92.38" y="1311.5" >_..</text>
</g>
<g >
<title>do_sys_openat2 (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1397" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="86.55" y="1407.5" ></text>
</g>
<g >
<title>unmap_vmas (87,857,769 samples, 0.17%)</title><rect x="50.1" y="1349" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="53.09" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1557" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="52.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,311,470 samples, 0.05%)</title><rect x="38.2" y="1093" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1103.5" ></text>
</g>
<g >
<title>post_alloc_hook (256,084,384 samples, 0.51%)</title><rect x="386.9" y="1301" width="6.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="389.93" y="1311.5" ></text>
</g>
<g >
<title>[bash] (1,171,528,312 samples, 2.31%)</title><rect x="55.1" y="1413" width="27.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.07" y="1423.5" >[..</text>
</g>
<g >
<title>__x64_sys_newstat (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1461" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="43.00" y="1471.5" ></text>
</g>
<g >
<title>skb_free_head (516,798,874 samples, 1.02%)</title><rect x="999.9" y="1333" width="12.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1002.93" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (563,265,210 samples, 1.11%)</title><rect x="25.0" y="1397" width="13.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.00" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="799.5" ></text>
</g>
<g >
<title>[bash] (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1461" width="27.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="57.84" y="1471.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,615,984 samples, 0.03%)</title><rect x="38.3" y="837" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="117" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="127.5" ></text>
</g>
<g >
<title>__sys_recvfrom (9,466,225,498 samples, 18.70%)</title><rect x="422.7" y="1429" width="220.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="425.66" y="1439.5" >__sys_recvfrom</text>
</g>
<g >
<title>handle_mm_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1093" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="84.71" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="485" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="863.5" ></text>
</g>
<g >
<title>__alloc_skb (919,055,687 samples, 1.82%)</title><rect x="284.7" y="1349" width="21.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="287.66" y="1359.5" >_..</text>
</g>
<g >
<title>unix_write_space (51,189,243 samples, 0.10%)</title><rect x="1020.3" y="1317" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1023.32" y="1327.5" ></text>
</g>
<g >
<title>read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1493" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="51.71" y="1503.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (21,089,117 samples, 0.04%)</title><rect x="82.4" y="1333" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="85.37" y="1343.5" ></text>
</g>
<g >
<title>set_next_entity (51,164,738 samples, 0.10%)</title><rect x="161.3" y="1445" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="164.33" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1413" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.92" y="1423.5" ></text>
</g>
<g >
<title>perf_poll (10,299,360 samples, 0.02%)</title><rect x="52.2" y="1429" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="55.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="85" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,800,765 samples, 0.01%)</title><rect x="83.0" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.00" y="1583.5" ></text>
</g>
<g >
<title>_compound_head (35,301,337 samples, 0.07%)</title><rect x="13.3" y="1253" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="16.33" y="1263.5" ></text>
</g>
<g >
<title>kmalloc_reserve (356,962,332 samples, 0.71%)</title><rect x="742.2" y="1333" width="8.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="745.24" y="1343.5" ></text>
</g>
<g >
<title>vfs_read (11,189,761 samples, 0.02%)</title><rect x="48.7" y="1413" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="51.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="693" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="703.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (51,167,752 samples, 0.10%)</title><rect x="1006.0" y="1269" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1009.04" y="1279.5" ></text>
</g>
<g >
<title>__xstat64 (15,861,331 samples, 0.03%)</title><rect x="40.0" y="1509" width="0.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="43.00" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,868,826 samples, 0.05%)</title><rect x="52.2" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.18" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,800,765 samples, 0.01%)</title><rect x="83.0" y="1557" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.00" y="1567.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1301" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="56.46" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1541" width="27.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.84" y="1551.5" >[..</text>
</g>
<g >
<title>alloc_pages (4,439,900,273 samples, 8.77%)</title><rect x="306.1" y="1349" width="103.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="309.08" y="1359.5" >alloc_pages</text>
</g>
<g >
<title>do_idle (3,156,943,774 samples, 6.24%)</title><rect x="89.0" y="1525" width="73.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="92.04" y="1535.5" >do_idle</text>
</g>
<g >
<title>native_write_cr4 (4,581,820 samples, 0.01%)</title><rect x="124.8" y="1397" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="127.84" y="1407.5" ></text>
</g>
<g >
<title>unix_stream_data_wait (51,101,660 samples, 0.10%)</title><rect x="1027.7" y="1365" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1030.67" y="1375.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (614,638,867 samples, 1.21%)</title><rect x="452.6" y="1285" width="14.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="455.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,760,439 samples, 0.06%)</title><rect x="38.2" y="1301" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.21" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51,186,244 samples, 0.10%)</title><rect x="972.5" y="1365" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="975.54" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,962,527 samples, 0.01%)</title><rect x="82.9" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.86" y="1583.5" ></text>
</g>
<g >
<title>wp_page_copy (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1061" width="15.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="58.08" y="1071.5" ></text>
</g>
<g >
<title>load_elf_binary (132,920,484 samples, 0.26%)</title><rect x="49.0" y="1445" width="3.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="52.04" y="1455.5" ></text>
</g>
<g >
<title>uncharge_batch (152,265,154 samples, 0.30%)</title><rect x="983.3" y="1269" width="3.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="986.28" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="373" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="383.5" ></text>
</g>
<g >
<title>consume_skb (2,920,165,413 samples, 5.77%)</title><rect x="434.6" y="1365" width="68.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="437.59" y="1375.5" >consume..</text>
</g>
<g >
<title>execute_command_internal (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1397" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="85.22" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,361,329,682 samples, 26.39%)</title><rect x="646.8" y="1461" width="311.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="649.85" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>futex_wait (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1413" width="3.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="48.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,616,757 samples, 0.02%)</title><rect x="38.3" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="41.25" y="607.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (51,184,110 samples, 0.10%)</title><rect x="958.2" y="1461" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="961.25" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (51,239,389 samples, 0.10%)</title><rect x="506.2" y="1285" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="509.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,440,223 samples, 0.02%)</title><rect x="40.9" y="293" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.92" y="303.5" ></text>
</g>
<g >
<title>write (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1445" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="55.79" y="1455.5" ></text>
</g>
<g >
<title>exc_page_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1157" width="15.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="58.08" y="1167.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (10,422,343 samples, 0.02%)</title><rect x="89.0" y="1509" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="92.04" y="1519.5" ></text>
</g>
<g >
<title>tcp_seq_start (8,395,507 samples, 0.02%)</title><rect x="48.8" y="1349" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="51.78" y="1359.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (102,388,593 samples, 0.20%)</title><rect x="278.7" y="1365" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="281.70" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,199,682 samples, 0.01%)</title><rect x="81.7" y="1141" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="84.71" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="799.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1365" width="12.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="178.91" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1429" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.79" y="1439.5" ></text>
</g>
<g >
<title>execve (15,218,254 samples, 0.03%)</title><rect x="81.9" y="1077" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="84.85" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="735.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (51,235,397 samples, 0.10%)</title><rect x="982.1" y="1269" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="985.09" y="1279.5" ></text>
</g>
<g >
<title>mas_store_prealloc (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1317" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="56.46" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="399.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (153,406,651 samples, 0.30%)</title><rect x="281.1" y="1349" width="3.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="284.09" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (1,171,528,312 samples, 2.31%)</title><rect x="55.1" y="1429" width="27.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="58.07" y="1439.5" >e..</text>
</g>
<g >
<title>[libc.so.6] (12,054,208 samples, 0.02%)</title><rect x="83.3" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="86.27" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="37" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="47.5" ></text>
</g>
<g >
<title>__vma_adjust (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1349" width="1.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="56.46" y="1359.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (356,962,332 samples, 0.71%)</title><rect x="742.2" y="1317" width="8.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="745.24" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_read (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1493" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="43.56" y="1503.5" ></text>
</g>
<g >
<title>schedule (102,406,125 samples, 0.20%)</title><rect x="505.0" y="1333" width="2.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="508.04" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1429" width="12.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="178.91" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (148,720,070 samples, 0.29%)</title><rect x="45.2" y="1477" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="48.25" y="1487.5" ></text>
</g>
<g >
<title>record__write (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1477" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="55.79" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="1413" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1333" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.74" y="1343.5" ></text>
</g>
<g >
<title>post_alloc_hook (51,153,814 samples, 0.10%)</title><rect x="406.0" y="1317" width="1.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="408.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,956,152,794 samples, 5.84%)</title><rect x="89.3" y="1509" width="68.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="92.28" y="1519.5" >cpuidle..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="367.5" ></text>
</g>
<g >
<title>__switch_to (51,237,186 samples, 0.10%)</title><rect x="421.5" y="1477" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="424.47" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,491,105 samples, 0.02%)</title><rect x="10.2" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.24" y="1423.5" ></text>
</g>
<g >
<title>__handle_mm_fault (516,939,625 samples, 1.02%)</title><rect x="175.9" y="1413" width="12.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="178.91" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (102,387,346 samples, 0.20%)</title><rect x="173.5" y="1573" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="176.52" y="1583.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (47,113,577 samples, 0.09%)</title><rect x="111.4" y="1397" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="114.35" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,654,731 samples, 0.02%)</title><rect x="40.6" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="43.56" y="1535.5" ></text>
</g>
<g >
<title>main (43,512,240,508 samples, 85.94%)</title><rect x="175.9" y="1525" width="1014.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="178.91" y="1535.5" >main</text>
</g>
<g >
<title>consume_stock (52,155,341 samples, 0.10%)</title><rect x="770.8" y="1301" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="773.82" y="1311.5" ></text>
</g>
<g >
<title>[bash] (9,835,837 samples, 0.02%)</title><rect x="54.8" y="1445" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="57.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1525" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="623.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (104,309,794 samples, 0.21%)</title><rect x="122.5" y="1429" width="2.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="125.52" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_write (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1397" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="55.79" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1311.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (51,167,752 samples, 0.10%)</title><rect x="1006.0" y="1253" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1009.04" y="1263.5" ></text>
</g>
<g >
<title>operator new (4,938,848 samples, 0.01%)</title><rect x="41.5" y="85" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="44.51" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,612,691 samples, 0.01%)</title><rect x="41.5" y="325" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.51" y="335.5" ></text>
</g>
<g >
<title>prep_compound_page (153,454,606 samples, 0.30%)</title><rect x="392.9" y="1301" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="395.90" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="821" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="831.5" ></text>
</g>
<g >
<title>[bash] (1,164,389,392 samples, 2.30%)</title><rect x="55.1" y="1317" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.07" y="1327.5" >[..</text>
</g>
<g >
<title>__sys_sendto (13,361,329,682 samples, 26.39%)</title><rect x="646.8" y="1429" width="311.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="649.85" y="1439.5" >__sys_sendto</text>
</g>
<g >
<title>hrtimer_interrupt (47,113,577 samples, 0.09%)</title><rect x="111.4" y="1413" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="114.35" y="1423.5" ></text>
</g>
<g >
<title>[ls] (27,030,855 samples, 0.05%)</title><rect x="10.7" y="1493" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.74" y="1503.5" ></text>
</g>
<g >
<title>main (1,181,364,149 samples, 2.33%)</title><rect x="54.8" y="1525" width="27.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="57.84" y="1535.5" >m..</text>
</g>
<g >
<title>[ls] (7,952,716 samples, 0.02%)</title><rect x="10.7" y="1477" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.74" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="821" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,612,691 samples, 0.01%)</title><rect x="41.5" y="373" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.51" y="383.5" ></text>
</g>
<g >
<title>record__pushfn (27,283,463 samples, 0.05%)</title><rect x="52.8" y="1493" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="55.79" y="1503.5" ></text>
</g>
<g >
<title>__libc_fork (476,638,869 samples, 0.94%)</title><rect x="70.6" y="1173" width="11.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="73.60" y="1183.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (51,202,552 samples, 0.10%)</title><rect x="642.1" y="1221" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="645.09" y="1231.5" ></text>
</g>
<g >
<title>lookup_fast (6,862,227 samples, 0.01%)</title><rect x="83.5" y="1317" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="86.55" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (54,093,512 samples, 0.11%)</title><rect x="162.9" y="1365" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="165.90" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,377,775 samples, 0.02%)</title><rect x="41.3" y="37" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.29" y="47.5" ></text>
</g>
<g >
<title>sched_clock (51,239,389 samples, 0.10%)</title><rect x="506.2" y="1269" width="1.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="509.23" y="1279.5" ></text>
</g>
<g >
<title>handle_mm_fault (665,939,915 samples, 1.32%)</title><rect x="55.1" y="1125" width="15.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="58.08" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="463.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (6,863,125,019 samples, 13.56%)</title><rect x="1028.9" y="1349" width="159.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1031.86" y="1359.5" >skb_copy_datagram_iter</text>
</g>
<g >
<title>[bash] (1,163,996,720 samples, 2.30%)</title><rect x="55.1" y="1221" width="27.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="58.08" y="1231.5" >[..</text>
</g>
<g >
<title>path_lookupat (11,400,557 samples, 0.02%)</title><rect x="40.0" y="1381" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="43.00" y="1391.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (204,358,672 samples, 0.40%)</title><rect x="995.2" y="1221" width="4.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="998.17" y="1231.5" ></text>
</g>
<g >
<title>dup_mmap (52,866,226 samples, 0.10%)</title><rect x="12.9" y="1333" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="15.92" y="1343.5" ></text>
</g>
<g >
<title>memcg_account_kmem (306,784,260 samples, 0.61%)</title><rect x="772.0" y="1301" width="7.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="775.04" y="1311.5" ></text>
</g>
<g >
<title>__mod_memcg_state (270,013,638 samples, 0.53%)</title><rect x="319.8" y="1269" width="6.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="322.77" y="1279.5" ></text>
</g>
<g >
<title>__wake_up_common (556,108,674 samples, 1.10%)</title><rect x="98.4" y="1045" width="13.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="101.39" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="367.5" ></text>
</g>
<g >
<title>skb_unlink (102,443,454 samples, 0.20%)</title><rect x="502.6" y="1365" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="505.65" y="1375.5" ></text>
</g>
<g >
<title>refill_stock (51,178,677 samples, 0.10%)</title><rect x="1010.8" y="1253" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1013.79" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1509" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,377,775 samples, 0.02%)</title><rect x="41.3" y="997" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.29" y="1007.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (51,017,594 samples, 0.10%)</title><rect x="742.2" y="1285" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="745.24" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,645,267 samples, 0.02%)</title><rect x="41.1" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="44.12" y="1391.5" ></text>
</g>
<g >
<title>__alloc_file (19,078,139 samples, 0.04%)</title><rect x="10.9" y="1237" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.92" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (13,361,329,682 samples, 26.39%)</title><rect x="646.8" y="1445" width="311.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="649.85" y="1455.5" >__x64_sys_sendto</text>
</g>
<g >
<title>alloc_skb_with_frags (5,409,631,560 samples, 10.68%)</title><rect x="284.7" y="1365" width="126.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="287.66" y="1375.5" >alloc_skb_with_..</text>
</g>
<g >
<title>check_new_pages (51,212,764 samples, 0.10%)</title><rect x="404.8" y="1269" width="1.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="407.79" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,440,223 samples, 0.02%)</title><rect x="40.9" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.92" y="1183.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (255,844,740 samples, 0.51%)</title><rect x="751.7" y="1317" width="6.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="754.75" y="1327.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (51,154,576 samples, 0.10%)</title><rect x="468.1" y="1269" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="471.10" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (59,116,863 samples, 0.12%)</title><rect x="53.5" y="1573" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.46" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,645,267 samples, 0.02%)</title><rect x="41.1" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.12" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages (7,888,531,811 samples, 15.58%)</title><rect x="761.3" y="1333" width="183.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="764.28" y="1343.5" >__alloc_pages</text>
</g>
<g >
<title>expand_string_assignment (6,589,172 samples, 0.01%)</title><rect x="82.2" y="1333" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="85.22" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_lock (25,532,503 samples, 0.05%)</title><rect x="11.4" y="1349" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="14.37" y="1359.5" ></text>
</g>
<g >
<title>ct_idle_exit (426,789,156 samples, 0.84%)</title><rect x="112.6" y="1461" width="9.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="115.55" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,962,527 samples, 0.01%)</title><rect x="82.9" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="85.86" y="1551.5" ></text>
</g>
<g >
<title>[ls] (65,584,654 samples, 0.13%)</title><rect x="10.7" y="1525" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.74" y="1535.5" ></text>
</g>
</g>
</svg>
