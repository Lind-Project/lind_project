<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>cpuidle_enter_state (1,936,995,240 samples, 0.01%)</title><rect x="65.5" y="1493" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="68.46" y="1503.5" ></text>
</g>
<g >
<title>__check_object_size (154,372,105,935 samples, 1.02%)</title><rect x="1126.3" y="1317" width="12.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1129.30" y="1327.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,644,278,076 samples, 0.02%)</title><rect x="20.0" y="1381" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.99" y="1391.5" ></text>
</g>
<g >
<title>put_pid (4,705,701,824 samples, 0.03%)</title><rect x="126.2" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="129.24" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="229" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (2,729,245,764 samples, 0.02%)</title><rect x="24.1" y="1413" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="27.08" y="1423.5" ></text>
</g>
<g >
<title>ret_from_fork (4,812,846,032 samples, 0.03%)</title><rect x="48.6" y="1589" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="51.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1077" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1087.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,808,020,675 samples, 0.04%)</title><rect x="22.0" y="1397" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.96" y="1407.5" ></text>
</g>
<g >
<title>free_p4d_range (2,653,484,673 samples, 0.02%)</title><rect x="38.0" y="1333" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="41.02" y="1343.5" ></text>
</g>
<g >
<title>___slab_alloc (39,415,799,882 samples, 0.26%)</title><rect x="235.2" y="1301" width="3.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="238.20" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="229" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1519.5" ></text>
</g>
<g >
<title>rest_init (9,383,171,921 samples, 0.06%)</title><rect x="64.6" y="1525" width="0.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="67.64" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_write (18,354,933,654 samples, 0.12%)</title><rect x="43.6" y="1413" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.61" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1461" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,542,426,364 samples, 0.12%)</title><rect x="43.6" y="1429" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="46.61" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,352,517,473 samples, 0.04%)</title><rect x="18.8" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.82" y="1583.5" ></text>
</g>
<g >
<title>__virt_addr_valid (26,279,545,659 samples, 0.17%)</title><rect x="577.8" y="1269" width="2.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="580.83" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,869,442,901 samples, 0.16%)</title><rect x="29.9" y="1349" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.93" y="1359.5" ></text>
</g>
<g >
<title>ret_from_fork (1,406,645,540 samples, 0.01%)</title><rect x="45.7" y="1589" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="48.68" y="1599.5" ></text>
</g>
<g >
<title>vfs_read (3,490,348,912 samples, 0.02%)</title><rect x="37.4" y="1429" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="40.43" y="1439.5" ></text>
</g>
<g >
<title>__pmd_alloc (2,604,995,712 samples, 0.02%)</title><rect x="25.9" y="1285" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.93" y="1295.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,635,491,068 samples, 0.01%)</title><rect x="757.9" y="1365" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="760.87" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,642,672,394 samples, 0.10%)</title><rect x="53.6" y="1445" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.60" y="1455.5" ></text>
</g>
<g >
<title>tcp_get_idx (1,660,897,094 samples, 0.01%)</title><rect x="37.6" y="1349" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="40.57" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,967,572,051 samples, 0.02%)</title><rect x="12.4" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1301" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1253" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1263.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (3,019,669,352 samples, 0.02%)</title><rect x="506.2" y="1269" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="509.21" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,924,831,791 samples, 0.02%)</title><rect x="12.4" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1455.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5,676,019,056 samples, 0.04%)</title><rect x="893.7" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="896.72" y="1455.5" ></text>
</g>
<g >
<title>proactive_compact_node (3,910,040,702 samples, 0.03%)</title><rect x="48.6" y="1541" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="51.59" y="1551.5" ></text>
</g>
<g >
<title>zap_pte_range (41,033,306,727 samples, 0.27%)</title><rect x="39.1" y="1301" width="3.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="42.08" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,693,806,609 samples, 0.02%)</title><rect x="20.8" y="1477" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.77" y="1487.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (62,865,906,123 samples, 0.41%)</title><rect x="1046.9" y="1285" width="4.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1049.94" y="1295.5" ></text>
</g>
<g >
<title>unix_write_space (6,751,221,640 samples, 0.04%)</title><rect x="542.7" y="1333" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="545.70" y="1343.5" ></text>
</g>
<g >
<title>release_pages (4,319,931,341 samples, 0.03%)</title><rect x="41.7" y="1237" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="44.68" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="533" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="543.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,705,951,539 samples, 0.01%)</title><rect x="56.4" y="1541" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="59.37" y="1551.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (5,475,168,313 samples, 0.04%)</title><rect x="685.1" y="1413" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="688.09" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="805" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="815.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (45,907,987,896 samples, 0.30%)</title><rect x="29.4" y="1541" width="3.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="32.40" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1397" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="863.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (11,253,548,920 samples, 0.07%)</title><rect x="729.2" y="1381" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="732.18" y="1391.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (4,209,984,644 samples, 0.03%)</title><rect x="20.0" y="1429" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.97" y="1439.5" ></text>
</g>
<g >
<title>__filemap_add_folio (1,903,749,737 samples, 0.01%)</title><rect x="44.4" y="1173" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="47.44" y="1183.5" ></text>
</g>
<g >
<title>[bash] (2,537,303,051 samples, 0.02%)</title><rect x="52.1" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.05" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (55,069,233,537 samples, 0.36%)</title><rect x="38.0" y="1589" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.99" y="1599.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (5,778,109,256 samples, 0.04%)</title><rect x="792.0" y="1301" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="795.04" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (2,633,064,764 samples, 0.02%)</title><rect x="52.1" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="55.05" y="1423.5" ></text>
</g>
<g >
<title>consume_skb (9,660,878,715 samples, 0.06%)</title><rect x="959.0" y="1397" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="962.05" y="1407.5" ></text>
</g>
<g >
<title>__fdget (4,090,433,438 samples, 0.03%)</title><rect x="377.9" y="1429" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="380.87" y="1439.5" ></text>
</g>
<g >
<title>skb_queue_tail (3,731,897,605 samples, 0.02%)</title><rect x="684.0" y="1413" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="686.98" y="1423.5" ></text>
</g>
<g >
<title>cache_from_obj (24,539,904,371 samples, 0.16%)</title><rect x="1014.6" y="1333" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1017.62" y="1343.5" ></text>
</g>
<g >
<title>skb_release_head_state (6,188,027,323 samples, 0.04%)</title><rect x="1108.4" y="1381" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1111.44" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (1,367,442,481 samples, 0.01%)</title><rect x="62.5" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="65.51" y="1423.5" ></text>
</g>
<g >
<title>__schedule (3,907,936,307 samples, 0.03%)</title><rect x="36.5" y="1365" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="39.50" y="1375.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (234,475,336,867 samples, 1.54%)</title><rect x="586.8" y="1317" width="18.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="589.77" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1045" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1055.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (56,746,695,974 samples, 0.37%)</title><rect x="1009.4" y="1317" width="4.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1012.39" y="1327.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,402,100,534 samples, 0.02%)</title><rect x="1052.5" y="1237" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1055.53" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="133" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="143.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,708,820,068 samples, 0.02%)</title><rect x="226.9" y="1349" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="229.86" y="1359.5" ></text>
</g>
<g >
<title>refill_obj_stock (4,497,682,630 samples, 0.03%)</title><rect x="262.4" y="1285" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="265.40" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,581,194,480 samples, 0.01%)</title><rect x="11.8" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.84" y="1471.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3,835,807,956 samples, 0.03%)</title><rect x="1059.0" y="1269" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1061.99" y="1279.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (3,882,780,766 samples, 0.03%)</title><rect x="1107.6" y="1381" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1110.58" y="1391.5" ></text>
</g>
<g >
<title>free_pgd_range (2,697,157,242 samples, 0.02%)</title><rect x="38.0" y="1349" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="41.02" y="1359.5" ></text>
</g>
<g >
<title>lock_page_memcg (1,613,878,223 samples, 0.01%)</title><rect x="41.4" y="1269" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="44.43" y="1279.5" ></text>
</g>
<g >
<title>unix_destruct_scm (4,294,492,546 samples, 0.03%)</title><rect x="543.2" y="1365" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="546.22" y="1375.5" ></text>
</g>
<g >
<title>do_iter_write (13,175,903,982 samples, 0.09%)</title><rect x="44.0" y="1333" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="46.99" y="1343.5" ></text>
</g>
<g >
<title>skb_free_head (3,727,699,188 samples, 0.02%)</title><rect x="473.9" y="1365" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="476.89" y="1375.5" ></text>
</g>
<g >
<title>getgrgid_r (1,639,212,574 samples, 0.01%)</title><rect x="20.5" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="23.48" y="1487.5" ></text>
</g>
<g >
<title>put_cpu_partial (9,354,854,282 samples, 0.06%)</title><rect x="458.2" y="1317" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="461.19" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="341" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="351.5" ></text>
</g>
<g >
<title>consume_obj_stock (25,209,314,913 samples, 0.17%)</title><rect x="259.3" y="1285" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="262.27" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,741,812,324 samples, 0.02%)</title><rect x="19.6" y="1285" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.64" y="1295.5" ></text>
</g>
<g >
<title>__alloc_skb (5,220,636,843 samples, 0.03%)</title><rect x="209.0" y="1381" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="211.95" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="245" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="255.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2,022,326,194 samples, 0.01%)</title><rect x="44.8" y="1205" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="47.81" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,323,776,015 samples, 0.02%)</title><rect x="30.1" y="325" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.12" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1333" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1343.5" ></text>
</g>
<g >
<title>[ls] (12,713,880,780 samples, 0.08%)</title><rect x="19.4" y="1493" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,108,681,020 samples, 0.08%)</title><rect x="30.0" y="805" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.04" y="815.5" ></text>
</g>
<g >
<title>start_secondary (1,436,541,591 samples, 0.01%)</title><rect x="13.9" y="1573" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.91" y="1583.5" ></text>
</g>
<g >
<title>mas_wr_modify (1,414,890,804 samples, 0.01%)</title><rect x="28.4" y="1301" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="31.35" y="1311.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (4,751,935,932 samples, 0.03%)</title><rect x="936.1" y="1413" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="939.12" y="1423.5" ></text>
</g>
<g >
<title>InotifyBackend::start (10,285,152,346 samples, 0.07%)</title><rect x="36.2" y="1525" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="39.17" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,816,267,292 samples, 0.03%)</title><rect x="30.1" y="389" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.11" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (13,895,506,076 samples, 0.09%)</title><rect x="10.6" y="1573" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.60" y="1583.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (17,407,772,910 samples, 0.11%)</title><rect x="49.0" y="1589" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="51.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="309" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (12,966,415,741 samples, 0.09%)</title><rect x="44.0" y="1301" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="46.99" y="1311.5" ></text>
</g>
<g >
<title>sock_def_readable (5,724,270,046 samples, 0.04%)</title><rect x="130.5" y="1413" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="133.46" y="1423.5" ></text>
</g>
<g >
<title>put_cpu_partial (11,759,375,705 samples, 0.08%)</title><rect x="1051.8" y="1285" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1054.82" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,480,016,010 samples, 0.10%)</title><rect x="30.0" y="917" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.02" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1125" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="373" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="383.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (2,041,248,579 samples, 0.01%)</title><rect x="935.4" y="1397" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="938.36" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,980,930,631 samples, 0.03%)</title><rect x="30.1" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.10" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1093" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1103.5" ></text>
</g>
<g >
<title>bprm_execve (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1525" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="55.54" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,762,630,351 samples, 0.05%)</title><rect x="53.8" y="1413" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.80" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,828,205,172 samples, 0.13%)</title><rect x="21.5" y="1445" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.54" y="1455.5" ></text>
</g>
<g >
<title>isolate_freepages_block (1,312,879,152 samples, 0.01%)</title><rect x="48.8" y="1445" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="51.76" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1413" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1423.5" ></text>
</g>
<g >
<title>_compound_head (12,605,993,597 samples, 0.08%)</title><rect x="26.6" y="1269" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="29.62" y="1279.5" ></text>
</g>
<g >
<title>check_heap_object (98,374,223,507 samples, 0.65%)</title><rect x="572.4" y="1285" width="7.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="575.36" y="1295.5" ></text>
</g>
<g >
<title>__kmem_cache_free (6,184,691,765 samples, 0.04%)</title><rect x="476.7" y="1333" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="479.71" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetPropertyWithAccessor (2,273,480,810 samples, 0.01%)</title><rect x="25.2" y="1493" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="28.24" y="1503.5" ></text>
</g>
<g >
<title>_copy_to_iter (9,454,229,945 samples, 0.06%)</title><rect x="1124.6" y="1333" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1127.61" y="1343.5" ></text>
</g>
<g >
<title>unix_write_space (39,724,102,698 samples, 0.26%)</title><rect x="539.6" y="1317" width="3.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="542.61" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,474,444,540 samples, 0.15%)</title><rect x="29.9" y="1317" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.94" y="1327.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (521,641,245,833 samples, 3.44%)</title><rect x="1121.5" y="1365" width="40.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1124.48" y="1375.5" >skb..</text>
</g>
<g >
<title>cpu_startup_entry (14,232,447,959 samples, 0.09%)</title><rect x="17.0" y="1557" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="19.98" y="1567.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (7,878,075,040 samples, 0.05%)</title><rect x="902.1" y="1445" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="905.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1253" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1263.5" ></text>
</g>
<g >
<title>proc_readfd (2,825,676,222 samples, 0.02%)</title><rect x="51.2" y="1269" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="54.16" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (7,448,438,587 samples, 0.05%)</title><rect x="51.5" y="1397" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.47" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (139,699,420,659 samples, 0.92%)</title><rect x="1126.3" y="1301" width="10.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1129.30" y="1311.5" ></text>
</g>
<g >
<title>check_heap_object (6,441,703,205 samples, 0.04%)</title><rect x="1137.2" y="1301" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1140.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1333" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (272,775,691,452 samples, 1.80%)</title><rect x="937.5" y="1397" width="21.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="940.49" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,942,730,459 samples, 0.01%)</title><rect x="703.7" y="1397" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="706.74" y="1407.5" ></text>
</g>
<g >
<title>consume_stock (4,191,569,125 samples, 0.03%)</title><rect x="816.5" y="1269" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="819.49" y="1279.5" ></text>
</g>
<g >
<title>mod_objcg_state (45,857,282,905 samples, 0.30%)</title><rect x="295.1" y="1317" width="3.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="298.08" y="1327.5" ></text>
</g>
<g >
<title>kthread (1,406,536,954 samples, 0.01%)</title><rect x="45.7" y="1573" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="48.68" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,464,470,574 samples, 0.02%)</title><rect x="18.1" y="1461" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="21.10" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (18,137,069,381 samples, 0.12%)</title><rect x="50.9" y="1493" width="1.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="53.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="687.5" ></text>
</g>
<g >
<title>uds (14,468,687,884,298 samples, 95.28%)</title><rect x="65.7" y="1605" width="1124.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="68.69" y="1615.5" >uds</text>
</g>
<g >
<title>__check_object_size (9,557,863,970 samples, 0.06%)</title><rect x="567.0" y="1333" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="569.99" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (4,787,755,313 samples, 0.03%)</title><rect x="23.3" y="1589" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="869" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="879.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (2,842,269,175 samples, 0.02%)</title><rect x="33.2" y="1525" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="36.17" y="1535.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (41,597,657,843 samples, 0.27%)</title><rect x="25.5" y="1573" width="3.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="28.49" y="1583.5" ></text>
</g>
<g >
<title>record__write (1,872,043,313 samples, 0.01%)</title><rect x="45.1" y="1525" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="48.06" y="1535.5" ></text>
</g>
<g >
<title>execute_command_internal (2,712,465,293 samples, 0.02%)</title><rect x="51.5" y="1301" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.47" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1525" width="4.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="40.99" y="1535.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (1,296,108,923 samples, 0.01%)</title><rect x="17.8" y="1509" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="20.83" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1109" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1119.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,525,001,808 samples, 0.02%)</title><rect x="12.4" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.38" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,923,308,979 samples, 0.01%)</title><rect x="19.7" y="1221" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.73" y="1231.5" ></text>
</g>
<g >
<title>cfree (2,661,660,808 samples, 0.02%)</title><rect x="34.1" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="37.13" y="79.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (462,343,328,142 samples, 3.04%)</title><rect x="1125.3" y="1333" width="36.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1128.34" y="1343.5" >sim..</text>
</g>
<g >
<title>pthread_cond_broadcast (2,829,501,544 samples, 0.02%)</title><rect x="33.2" y="1493" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="36.18" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,182,271,685 samples, 0.03%)</title><rect x="19.6" y="1381" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (50,449,429,234 samples, 0.33%)</title><rect x="807.2" y="1285" width="3.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="810.20" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="399.5" ></text>
</g>
<g >
<title>do_idle (5,291,841,247 samples, 0.03%)</title><rect x="56.0" y="1541" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="58.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,355,751,526 samples, 0.01%)</title><rect x="30.4" y="357" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="33.38" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (22,180,167,194 samples, 0.15%)</title><rect x="240.1" y="1301" width="1.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="243.15" y="1311.5" ></text>
</g>
<g >
<title>___slab_alloc (39,452,972,602 samples, 0.26%)</title><rect x="278.5" y="1333" width="3.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="281.53" y="1343.5" ></text>
</g>
<g >
<title>amd_clear_divider (3,832,392,138 samples, 0.03%)</title><rect x="894.2" y="1461" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="897.16" y="1471.5" ></text>
</g>
<g >
<title>child (7,159,755,348,706 samples, 47.15%)</title><rect x="70.0" y="1525" width="556.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="73.04" y="1535.5" >child</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,574,003,970 samples, 0.02%)</title><rect x="50.5" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.51" y="1599.5" ></text>
</g>
<g >
<title>anon_vma_fork (3,229,351,296 samples, 0.02%)</title><rect x="25.6" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="28.59" y="1343.5" ></text>
</g>
<g >
<title>mod_objcg_state (6,950,812,023 samples, 0.05%)</title><rect x="1028.4" y="1349" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1031.36" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,999,689,615 samples, 0.01%)</title><rect x="65.5" y="1525" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="68.46" y="1535.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (8,228,278,494 samples, 0.05%)</title><rect x="810.5" y="1269" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="813.48" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,274,427,293,679 samples, 21.56%)</title><rect x="369.8" y="1477" width="254.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="372.78" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>__alloc_skb (1,204,873,088,256 samples, 7.93%)</title><rect x="764.3" y="1365" width="93.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="767.32" y="1375.5" >__alloc_skb</text>
</g>
<g >
<title>glob_filename (4,631,277,963 samples, 0.03%)</title><rect x="51.0" y="1397" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="54.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,296,067,009 samples, 0.19%)</title><rect x="29.9" y="1429" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.86" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="757" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,085,103,096 samples, 0.02%)</title><rect x="48.3" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.34" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1221" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1231.5" ></text>
</g>
<g >
<title>lookup_fast (1,475,813,085 samples, 0.01%)</title><rect x="20.9" y="1349" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="23.86" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="223.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (2,763,762,675 samples, 0.02%)</title><rect x="37.0" y="1541" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="39.97" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,588,692,025 samples, 0.01%)</title><rect x="23.3" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.33" y="1583.5" ></text>
</g>
<g >
<title>schedule (4,115,088,779 samples, 0.03%)</title><rect x="36.5" y="1381" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.49" y="1391.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (48,313,645,213 samples, 0.32%)</title><rect x="29.4" y="1557" width="3.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="32.39" y="1567.5" ></text>
</g>
<g >
<title>sock_recvmsg (2,922,503,009,415 samples, 19.25%)</title><rect x="378.7" y="1429" width="227.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="381.71" y="1439.5" >sock_recvmsg</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (363,894,504,013 samples, 2.40%)</title><rect x="176.4" y="1365" width="28.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="179.38" y="1375.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (139,629,967,696 samples, 0.92%)</title><rect x="980.3" y="1381" width="10.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="983.27" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (65,999,549,814 samples, 0.43%)</title><rect x="343.4" y="1445" width="5.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="346.38" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,628,151,214 samples, 0.02%)</title><rect x="52.3" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.29" y="1503.5" ></text>
</g>
<g >
<title>__poll (13,963,767,876 samples, 0.09%)</title><rect x="42.4" y="1541" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="45.38" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (22,496,848,053 samples, 0.15%)</title><rect x="68.3" y="1589" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="71.29" y="1599.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (6,798,656,682 samples, 0.04%)</title><rect x="281.6" y="1333" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="284.59" y="1343.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,958,773,140 samples, 0.05%)</title><rect x="624.7" y="1477" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="627.69" y="1487.5" ></text>
</g>
<g >
<title>cache_from_obj (5,822,940,237 samples, 0.04%)</title><rect x="442.7" y="1349" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="445.65" y="1359.5" ></text>
</g>
<g >
<title>sh (31,748,316,411 samples, 0.21%)</title><rect x="50.4" y="1605" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="53.40" y="1615.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1557" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="36.71" y="1567.5" ></text>
</g>
<g >
<title>ion (19,013,499,819 samples, 0.13%)</title><rect x="43.6" y="1477" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="46.58" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,439,327,280 samples, 0.02%)</title><rect x="18.1" y="1445" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="21.10" y="1455.5" ></text>
</g>
<g >
<title>operator new (1,801,214,982 samples, 0.01%)</title><rect x="34.3" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="37.33" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,289,683,782 samples, 0.01%)</title><rect x="33.7" y="165" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="175.5" ></text>
</g>
<g >
<title>do_idle (1,432,307,987 samples, 0.01%)</title><rect x="13.9" y="1541" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.91" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1285" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,392,872,969 samples, 0.15%)</title><rect x="29.9" y="1285" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.95" y="1295.5" ></text>
</g>
<g >
<title>[[heap]] (3,063,026,808 samples, 0.02%)</title><rect x="18.6" y="1589" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="21.56" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (3,576,362,782 samples, 0.02%)</title><rect x="337.7" y="1413" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="340.71" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,850,706,120 samples, 0.01%)</title><rect x="37.0" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.01" y="1503.5" ></text>
</g>
<g >
<title>kthread (4,436,204,089 samples, 0.03%)</title><rect x="16.6" y="1573" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.64" y="1583.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (8,365,804,513 samples, 0.06%)</title><rect x="49.0" y="1493" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="51.98" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="997" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1007.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (2,368,600,073 samples, 0.02%)</title><rect x="25.2" y="1525" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="28.23" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1141" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1151.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,304,897,915 samples, 0.02%)</title><rect x="13.4" y="1525" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,015,753,934 samples, 0.04%)</title><rect x="30.1" y="453" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.09" y="463.5" ></text>
</g>
<g >
<title>mod_objcg_state (7,207,484,738 samples, 0.05%)</title><rect x="298.6" y="1333" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="301.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1135.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,655,469,564 samples, 0.02%)</title><rect x="11.7" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1535.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,328,331,031 samples, 0.02%)</title><rect x="64.1" y="1477" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="67.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1477" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1487.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,848,629,962 samples, 0.05%)</title><rect x="241.9" y="1301" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="244.87" y="1311.5" ></text>
</g>
<g >
<title>shrink_node (1,365,615,836 samples, 0.01%)</title><rect x="62.0" y="1525" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="65.05" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,660,161,202 samples, 0.02%)</title><rect x="458.7" y="1285" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="461.70" y="1295.5" ></text>
</g>
<g >
<title>cpu_startup_entry (9,376,686,247 samples, 0.06%)</title><rect x="64.6" y="1509" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="67.64" y="1519.5" ></text>
</g>
<g >
<title>__tsearch (3,576,478,279 samples, 0.02%)</title><rect x="22.6" y="1413" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="25.65" y="1423.5" ></text>
</g>
<g >
<title>unix_write_space (6,489,154,990 samples, 0.04%)</title><rect x="1100.3" y="1333" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1103.33" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1349" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,402,100,534 samples, 0.02%)</title><rect x="1052.5" y="1253" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1055.53" y="1263.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (546,639,584,632 samples, 3.60%)</title><rect x="563.3" y="1381" width="42.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="566.33" y="1391.5" >uni..</text>
</g>
<g >
<title>kmem_cache_free (5,721,775,136 samples, 0.04%)</title><rect x="473.4" y="1365" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="476.45" y="1375.5" ></text>
</g>
<g >
<title>Glob::isIgnored (33,024,810,833 samples, 0.22%)</title><rect x="29.5" y="1509" width="2.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="32.54" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,191,042,823 samples, 0.01%)</title><rect x="22.7" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.73" y="1407.5" ></text>
</g>
<g >
<title>should_failslab (1,586,026,876 samples, 0.01%)</title><rect x="263.6" y="1301" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="266.61" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39,136,269,597 samples, 0.26%)</title><rect x="25.5" y="1461" width="3.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.53" y="1471.5" ></text>
</g>
<g >
<title>__build_skb_around (6,339,122,293 samples, 0.04%)</title><rect x="857.9" y="1365" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="860.94" y="1375.5" ></text>
</g>
<g >
<title>mutex_unlock (44,221,985,515 samples, 0.29%)</title><rect x="960.2" y="1397" width="3.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="963.16" y="1407.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1541" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="55.54" y="1551.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5,931,936,535 samples, 0.04%)</title><rect x="615.6" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="618.64" y="1455.5" ></text>
</g>
<g >
<title>setlocale (2,628,151,214 samples, 0.02%)</title><rect x="52.3" y="1509" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="55.29" y="1519.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1,892,830,230 samples, 0.01%)</title><rect x="854.0" y="1285" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="857.01" y="1295.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (10,530,639,049 samples, 0.07%)</title><rect x="460.6" y="1333" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="463.62" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (4,672,107,327 samples, 0.03%)</title><rect x="23.9" y="1461" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="26.93" y="1471.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (39,721,806,382 samples, 0.26%)</title><rect x="25.5" y="1509" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="28.52" y="1519.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (230,932,375,939 samples, 1.52%)</title><rect x="1143.3" y="1317" width="18.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1146.33" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,281,289,335 samples, 0.05%)</title><rect x="30.1" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.07" y="559.5" ></text>
</g>
<g >
<title>execute_command (2,714,252,919 samples, 0.02%)</title><rect x="51.5" y="1317" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.47" y="1327.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (41,423,479,460 samples, 0.27%)</title><rect x="838.6" y="1333" width="3.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="841.63" y="1343.5" ></text>
</g>
<g >
<title>docker (3,990,810,403 samples, 0.03%)</title><rect x="10.1" y="1605" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="13.09" y="1615.5" ></text>
</g>
<g >
<title>[bash] (4,518,077,282 samples, 0.03%)</title><rect x="51.7" y="1285" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.68" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="741" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="751.5" ></text>
</g>
<g >
<title>epoll_wait (2,517,342,514 samples, 0.02%)</title><rect x="35.6" y="1557" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="38.56" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1157" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1167.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,393,462,889 samples, 0.04%)</title><rect x="701.8" y="1397" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="704.78" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1183.5" ></text>
</g>
<g >
<title>refill_stock (9,036,418,144 samples, 0.06%)</title><rect x="1064.5" y="1253" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1067.48" y="1263.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (9,305,684,553 samples, 0.06%)</title><rect x="151.8" y="1397" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="154.76" y="1407.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (115,551,132,791 samples, 0.76%)</title><rect x="708.1" y="1365" width="9.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="711.14" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,738,434,505 samples, 0.12%)</title><rect x="30.0" y="1013" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.00" y="1023.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (3,406,352,827 samples, 0.02%)</title><rect x="38.2" y="1349" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="41.24" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1285" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,822,569,310 samples, 0.03%)</title><rect x="53.2" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.16" y="1583.5" ></text>
</g>
<g >
<title>check_stack_object (8,078,671,647 samples, 0.05%)</title><rect x="580.9" y="1301" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="583.93" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="757" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,294,043,098 samples, 0.01%)</title><rect x="31.3" y="997" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.28" y="1007.5" ></text>
</g>
<g >
<title>send_to_group (2,499,417,207 samples, 0.02%)</title><rect x="43.7" y="1333" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="46.72" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (3,185,256,514,315 samples, 20.98%)</title><rect x="924.8" y="1461" width="247.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="927.75" y="1471.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>__x64_sys_statx (1,292,329,148 samples, 0.01%)</title><rect x="20.3" y="1429" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="23.32" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,693,806,609 samples, 0.02%)</title><rect x="20.8" y="1461" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.77" y="1471.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (15,438,750,893 samples, 0.10%)</title><rect x="330.5" y="1397" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="333.47" y="1407.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (4,809,593,034 samples, 0.03%)</title><rect x="682.9" y="1413" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="685.91" y="1423.5" ></text>
</g>
<g >
<title>exit_mm (4,675,054,614 samples, 0.03%)</title><rect x="23.9" y="1509" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="26.93" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,076,728,291 samples, 0.01%)</title><rect x="52.3" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.30" y="1423.5" ></text>
</g>
<g >
<title>mod_objcg_state (6,136,108,815 samples, 0.04%)</title><rect x="1067.3" y="1317" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1070.29" y="1327.5" ></text>
</g>
<g >
<title>do_idle (4,196,696,368 samples, 0.03%)</title><rect x="50.0" y="1493" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="52.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="645" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="655.5" ></text>
</g>
<g >
<title>write (1,853,809,761 samples, 0.01%)</title><rect x="45.1" y="1493" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="48.06" y="1503.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (19,227,705,955 samples, 0.13%)</title><rect x="823.1" y="1349" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="826.08" y="1359.5" ></text>
</g>
<g >
<title>__mod_memcg_state (5,313,849,036 samples, 0.03%)</title><rect x="261.8" y="1253" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="264.80" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (2,835,761,240 samples, 0.02%)</title><rect x="51.2" y="1301" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="54.16" y="1311.5" ></text>
</g>
<g >
<title>filename_lookup (2,465,174,690 samples, 0.02%)</title><rect x="20.8" y="1397" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="23.79" y="1407.5" ></text>
</g>
<g >
<title>vfs_read (1,751,307,699 samples, 0.01%)</title><rect x="48.4" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="51.42" y="1535.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (3,990,704,626 samples, 0.03%)</title><rect x="98.9" y="1429" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="101.92" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,274,899,228 samples, 0.09%)</title><rect x="42.4" y="1509" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.42" y="1519.5" ></text>
</g>
<g >
<title>kfree_skbmem (422,997,405,518 samples, 2.79%)</title><rect x="996.3" y="1365" width="32.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="999.28" y="1375.5" >kf..</text>
</g>
<g >
<title>start_kernel (3,793,561,346 samples, 0.02%)</title><rect x="18.1" y="1557" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="21.09" y="1567.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (12,994,526,266 samples, 0.09%)</title><rect x="44.0" y="1317" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="46.99" y="1327.5" ></text>
</g>
<g >
<title>kcompactd (3,916,833,182 samples, 0.03%)</title><rect x="48.6" y="1557" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="51.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="965" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="975.5" ></text>
</g>
<g >
<title>ovl_permission (1,629,215,235 samples, 0.01%)</title><rect x="32.4" y="1349" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="35.41" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (12,624,000,238 samples, 0.08%)</title><rect x="368.8" y="1477" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="371.80" y="1487.5" ></text>
</g>
<g >
<title>_copy_from_iter (7,824,720,935 samples, 0.05%)</title><rect x="702.8" y="1397" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="705.77" y="1407.5" ></text>
</g>
<g >
<title>check_heap_object (4,753,629,700 samples, 0.03%)</title><rect x="717.1" y="1365" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="720.12" y="1375.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,396,624,470 samples, 0.03%)</title><rect x="1022.9" y="1301" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1025.92" y="1311.5" ></text>
</g>
<g >
<title>mutex_lock (46,597,189,449 samples, 0.31%)</title><rect x="544.0" y="1381" width="3.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="547.00" y="1391.5" ></text>
</g>
<g >
<title>put_pid (3,886,430,158 samples, 0.03%)</title><rect x="1105.6" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1108.60" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="741" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="751.5" ></text>
</g>
<g >
<title>[bash] (2,456,893,567 samples, 0.02%)</title><rect x="51.5" y="1285" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.47" y="1295.5" ></text>
</g>
<g >
<title>__send (10,842,386,852 samples, 0.07%)</title><rect x="68.3" y="1573" width="0.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="71.29" y="1583.5" ></text>
</g>
<g >
<title>__nss_next2 (4,369,112,538 samples, 0.03%)</title><rect x="19.6" y="1445" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="22.63" y="1455.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (39,923,087,944 samples, 0.26%)</title><rect x="25.5" y="1557" width="3.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="28.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="293" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (24,688,192,021 samples, 0.16%)</title><rect x="714.8" y="1333" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="717.78" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="181" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="191.5" ></text>
</g>
<g >
<title>__mod_memcg_state (3,424,309,470 samples, 0.02%)</title><rect x="1064.0" y="1221" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1067.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1055.5" ></text>
</g>
<g >
<title>__filemap_get_folio (3,833,401,361 samples, 0.03%)</title><rect x="44.4" y="1205" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="47.42" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,899,209,995 samples, 0.01%)</title><rect x="61.3" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.26" y="1599.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,687,375,961 samples, 0.01%)</title><rect x="1064.2" y="1205" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1067.17" y="1215.5" ></text>
</g>
<g >
<title>execute_command (1,333,812,382 samples, 0.01%)</title><rect x="51.8" y="1157" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.81" y="1167.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,407,555,246 samples, 0.02%)</title><rect x="50.5" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.51" y="1535.5" ></text>
</g>
<g >
<title>__sys_sendto (6,646,232,002 samples, 0.04%)</title><rect x="94.2" y="1461" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="97.15" y="1471.5" ></text>
</g>
<g >
<title>mod_objcg_state (77,442,707,255 samples, 0.51%)</title><rect x="1017.3" y="1333" width="6.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1020.32" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1509" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="26.78" y="1519.5" ></text>
</g>
<g >
<title>do_idle (14,153,140,069 samples, 0.09%)</title><rect x="17.0" y="1541" width="1.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="149" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="159.5" ></text>
</g>
<g >
<title>__alloc_skb (4,602,964,720 samples, 0.03%)</title><rect x="762.0" y="1381" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="764.97" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,875,946,593 samples, 0.05%)</title><rect x="288.0" y="1317" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="290.97" y="1327.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,789,609,361 samples, 0.01%)</title><rect x="1105.5" y="1381" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1108.46" y="1391.5" ></text>
</g>
<g >
<title>[ls] (2,661,662,101 samples, 0.02%)</title><rect x="23.5" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.46" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,447,292,461 samples, 0.02%)</title><rect x="33.2" y="1445" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="36.20" y="1455.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1509" width="4.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="40.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,339,293,754 samples, 0.09%)</title><rect x="30.0" y="869" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.03" y="879.5" ></text>
</g>
<g >
<title>do_group_exit (5,824,502,515 samples, 0.04%)</title><rect x="23.9" y="1541" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="26.89" y="1551.5" ></text>
</g>
<g >
<title>page_remove_rmap (7,793,027,411 samples, 0.05%)</title><rect x="41.0" y="1285" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="44.03" y="1295.5" ></text>
</g>
<g >
<title>readlink (4,290,964,274 samples, 0.03%)</title><rect x="21.1" y="1509" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="24.14" y="1519.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (75,700,037,597 samples, 0.50%)</title><rect x="502.7" y="1301" width="5.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="505.65" y="1311.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (2,252,939,794 samples, 0.01%)</title><rect x="682.7" y="1381" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="685.74" y="1391.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,504,789,534 samples, 0.02%)</title><rect x="64.1" y="1493" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="67.11" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_lock (16,977,408,614 samples, 0.11%)</title><rect x="835.4" y="1333" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="838.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,388,383,373 samples, 0.09%)</title><rect x="30.0" y="901" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.03" y="911.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,456,221,649 samples, 0.02%)</title><rect x="12.4" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,465,955,649 samples, 0.02%)</title><rect x="19.7" y="1237" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.67" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="437" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="447.5" ></text>
</g>
<g >
<title>command_substitute (2,515,594,170 samples, 0.02%)</title><rect x="52.1" y="1317" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="55.05" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,755,375,095 samples, 0.14%)</title><rect x="30.0" y="1173" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.97" y="1183.5" ></text>
</g>
<g >
<title>kcompactd (8,119,084,559 samples, 0.05%)</title><rect x="61.4" y="1557" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="64.41" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (19,320,857,294 samples, 0.13%)</title><rect x="30.0" y="1093" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.99" y="1103.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (56,800,221,176 samples, 0.37%)</title><rect x="453.8" y="1317" width="4.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="456.78" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,208,342,648 samples, 0.01%)</title><rect x="35.6" y="1541" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.57" y="1551.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (8,746,899,503 samples, 0.06%)</title><rect x="381.9" y="1397" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="384.92" y="1407.5" ></text>
</g>
<g >
<title>sock_recvmsg (4,596,728,952 samples, 0.03%)</title><rect x="1171.5" y="1445" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1174.49" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="949" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,125,190,448 samples, 0.17%)</title><rect x="29.9" y="1381" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.92" y="1391.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,811,200,959 samples, 0.08%)</title><rect x="895.0" y="1461" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="897.96" y="1471.5" ></text>
</g>
<g >
<title>kmalloc_reserve (548,445,827,588 samples, 3.61%)</title><rect x="227.1" y="1349" width="42.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="230.07" y="1359.5" >kmal..</text>
</g>
<g >
<title>recv (3,535,607,291,032 samples, 23.28%)</title><rect x="351.3" y="1509" width="274.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="354.28" y="1519.5" >recv</text>
</g>
<g >
<title>apparmor_socket_recvmsg (9,096,614,531 samples, 0.06%)</title><rect x="933.5" y="1413" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="936.49" y="1423.5" ></text>
</g>
<g >
<title>filename_lookup (4,936,058,479 samples, 0.03%)</title><rect x="32.3" y="1413" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="35.31" y="1423.5" ></text>
</g>
<g >
<title>unix_destruct_scm (404,418,790,682 samples, 2.66%)</title><rect x="1069.4" y="1349" width="31.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1072.41" y="1359.5" >un..</text>
</g>
<g >
<title>__virt_addr_valid (6,394,212,480 samples, 0.04%)</title><rect x="156.6" y="1349" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="159.65" y="1359.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (21,410,203,569 samples, 0.14%)</title><rect x="203.0" y="1349" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="206.00" y="1359.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (8,584,691,749 samples, 0.06%)</title><rect x="226.2" y="1349" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="229.19" y="1359.5" ></text>
</g>
<g >
<title>start_secondary (13,173,228,251 samples, 0.09%)</title><rect x="49.0" y="1573" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="51.96" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (72,492,052,539 samples, 0.48%)</title><rect x="497.0" y="1301" width="5.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="500.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,289,683,782 samples, 0.01%)</title><rect x="33.7" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="207.5" ></text>
</g>
<g >
<title>path_lookupat (2,385,909,532 samples, 0.02%)</title><rect x="20.8" y="1381" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="23.79" y="1391.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (7,772,303,450 samples, 0.05%)</title><rect x="563.8" y="1365" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="566.81" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock (315,985,708,576 samples, 2.08%)</title><rect x="100.7" y="1413" width="24.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="103.74" y="1423.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,276,035,105 samples, 0.13%)</title><rect x="30.0" y="1077" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.99" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,170,579,842 samples, 0.03%)</title><rect x="19.6" y="1333" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="1343.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (1,454,333,630,805 samples, 9.58%)</title><rect x="206.2" y="1397" width="113.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="209.25" y="1407.5" >sock_alloc_se..</text>
</g>
<g >
<title>sock_sendmsg (3,987,359,750 samples, 0.03%)</title><rect x="893.4" y="1445" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="896.41" y="1455.5" ></text>
</g>
<g >
<title>sock_recvmsg (4,910,395,124 samples, 0.03%)</title><rect x="615.3" y="1445" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="618.25" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (10,207,360,832 samples, 0.07%)</title><rect x="51.5" y="1445" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.47" y="1455.5" ></text>
</g>
<g >
<title>consume_skb (1,372,363,141,911 samples, 9.04%)</title><rect x="436.9" y="1381" width="106.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="439.92" y="1391.5" >consume_skb</text>
</g>
<g >
<title>setlocale (13,550,077,892 samples, 0.09%)</title><rect x="10.6" y="1525" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.62" y="1535.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4,028,398,880 samples, 0.03%)</title><rect x="44.4" y="1237" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="47.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1493" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,421,021,879 samples, 0.02%)</title><rect x="31.9" y="1381" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.87" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,082,670,700 samples, 0.03%)</title><rect x="21.2" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="24.15" y="1503.5" ></text>
</g>
<g >
<title>should_failslab (1,637,191,824 samples, 0.01%)</title><rect x="822.0" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="825.01" y="1327.5" ></text>
</g>
<g >
<title>seq_read_iter (1,593,643,926 samples, 0.01%)</title><rect x="48.4" y="1509" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="51.42" y="1519.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (40,989,020,306 samples, 0.27%)</title><rect x="299.2" y="1333" width="3.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="302.20" y="1343.5" ></text>
</g>
<g >
<title>memset_erms (32,356,903,303 samples, 0.21%)</title><rect x="819.2" y="1317" width="2.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="822.18" y="1327.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (21,520,169,422 samples, 0.14%)</title><rect x="1105.9" y="1381" width="1.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1108.90" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,186,166,475 samples, 0.04%)</title><rect x="538.5" y="1317" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="541.46" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,874,081,185 samples, 0.01%)</title><rect x="48.4" y="1557" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="51.41" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (3,475,441,469 samples, 0.02%)</title><rect x="891.1" y="1413" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="894.13" y="1423.5" ></text>
</g>
<g >
<title>invalidate_bh_lrus (1,825,723,633 samples, 0.01%)</title><rect x="61.6" y="1413" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="64.59" y="1423.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (131,790,322,492 samples, 0.87%)</title><rect x="425.5" y="1365" width="10.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="428.47" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,259,357,997,378 samples, 21.46%)</title><rect x="649.4" y="1477" width="253.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="652.41" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>consume_obj_stock (16,917,577,281 samples, 0.11%)</title><rect x="852.5" y="1317" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="855.47" y="1327.5" ></text>
</g>
<g >
<title>__mmput (2,234,304,584 samples, 0.01%)</title><rect x="52.5" y="1397" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="55.54" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="655.5" ></text>
</g>
<g >
<title>amd_clear_divider (3,882,760,061 samples, 0.03%)</title><rect x="340.6" y="1461" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="343.62" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1269" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1279.5" ></text>
</g>
<g >
<title>__refill_stock (2,656,510,292 samples, 0.02%)</title><rect x="508.2" y="1237" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="511.23" y="1247.5" ></text>
</g>
<g >
<title>check_stack_object (8,230,982,071 samples, 0.05%)</title><rect x="1137.7" y="1301" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1140.65" y="1311.5" ></text>
</g>
<g >
<title>try_charge_memcg (4,191,916,018 samples, 0.03%)</title><rect x="302.1" y="1317" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="305.06" y="1327.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,419,083,770 samples, 0.01%)</title><rect x="62.5" y="1429" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="65.51" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,700,313,263 samples, 0.12%)</title><rect x="53.6" y="1509" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.57" y="1519.5" ></text>
</g>
<g >
<title>vfs_read (2,631,827,276 samples, 0.02%)</title><rect x="33.5" y="1477" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="36.48" y="1487.5" ></text>
</g>
<g >
<title>try_charge_memcg (3,578,420,229 samples, 0.02%)</title><rect x="854.4" y="1317" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="857.41" y="1327.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,532,944,141 samples, 0.01%)</title><rect x="502.4" y="1253" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="505.41" y="1263.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,736,398,182 samples, 0.01%)</title><rect x="471.1" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="474.08" y="1311.5" ></text>
</g>
<g >
<title>move_to_new_folio (2,501,602,398 samples, 0.02%)</title><rect x="61.6" y="1461" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="64.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,698,742,866 samples, 0.06%)</title><rect x="30.1" y="645" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.06" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,556,554,881 samples, 0.10%)</title><rect x="30.0" y="933" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.02" y="943.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (3,793,561,346 samples, 0.02%)</title><rect x="18.1" y="1573" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="21.09" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,826,820,182 samples, 0.04%)</title><rect x="288.6" y="1317" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="291.58" y="1327.5" ></text>
</g>
<g >
<title>[bash] (2,603,061,591 samples, 0.02%)</title><rect x="52.1" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.05" y="1391.5" ></text>
</g>
<g >
<title>__check_heap_object (28,676,755,316 samples, 0.19%)</title><rect x="1132.2" y="1269" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1135.25" y="1279.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1,686,570,483 samples, 0.01%)</title><rect x="816.8" y="1269" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="819.82" y="1279.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (8,691,935,055 samples, 0.06%)</title><rect x="128.1" y="1397" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="131.13" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="917" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="927.5" ></text>
</g>
<g >
<title>[grep] (4,969,681,603 samples, 0.03%)</title><rect x="12.2" y="1589" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.24" y="1599.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (6,133,670,999 samples, 0.04%)</title><rect x="131.4" y="1413" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="134.36" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,354,570,408,253 samples, 22.09%)</title><rect x="920.8" y="1493" width="260.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="923.81" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>file_modified (1,582,965,092 samples, 0.01%)</title><rect x="44.0" y="1269" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="47.00" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,940,030,238 samples, 0.03%)</title><rect x="11.7" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1567.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,736,639,156 samples, 0.02%)</title><rect x="45.8" y="1589" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="48.79" y="1599.5" ></text>
</g>
<g >
<title>main (21,139,340,930 samples, 0.14%)</title><rect x="50.8" y="1541" width="1.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="53.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1317" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1327.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (4,604,873,805 samples, 0.03%)</title><rect x="703.4" y="1381" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="706.38" y="1391.5" ></text>
</g>
<g >
<title>skb_unlink (7,053,243,244 samples, 0.05%)</title><rect x="407.0" y="1397" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="410.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,008,005,746 samples, 0.07%)</title><rect x="30.0" y="725" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.05" y="735.5" ></text>
</g>
<g >
<title>user_path_at_empty (1,844,531,816 samples, 0.01%)</title><rect x="21.2" y="1429" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="24.17" y="1439.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7,516,030,449 samples, 0.05%)</title><rect x="1181.8" y="1493" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1184.84" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1141" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1151.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (22,556,915,299 samples, 0.15%)</title><rect x="756.1" y="1349" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="759.12" y="1359.5" ></text>
</g>
<g >
<title>try_charge_memcg (9,767,090,719 samples, 0.06%)</title><rect x="816.2" y="1285" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="819.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="389" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (12,063,824,868 samples, 0.08%)</title><rect x="92.0" y="1477" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="95.04" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,398,897,487 samples, 0.02%)</title><rect x="52.5" y="1573" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,428,311,471 samples, 0.11%)</title><rect x="30.0" y="997" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.01" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3,733,249,218 samples, 0.02%)</title><rect x="496.0" y="1253" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="498.97" y="1263.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (11,968,932,252 samples, 0.08%)</title><rect x="471.3" y="1301" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="474.32" y="1311.5" ></text>
</g>
<g >
<title>fsnotify (2,986,039,801 samples, 0.02%)</title><rect x="43.7" y="1349" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="46.68" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,185,693,982 samples, 0.01%)</title><rect x="37.0" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.99" y="1519.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (55,723,035,658 samples, 0.37%)</title><rect x="29.4" y="1573" width="4.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="32.38" y="1583.5" ></text>
</g>
<g >
<title>seq_read_iter (3,282,796,954 samples, 0.02%)</title><rect x="37.4" y="1381" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="40.45" y="1391.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (4,909,242,601 samples, 0.03%)</title><rect x="857.3" y="1349" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="860.35" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="757" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="767.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,313,486,012 samples, 0.01%)</title><rect x="56.4" y="1477" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="59.37" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock (288,416,781,922 samples, 1.90%)</title><rect x="657.0" y="1413" width="22.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="660.02" y="1423.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (3,295,961,951,827 samples, 21.70%)</title><rect x="93.0" y="1477" width="256.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="95.98" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>mutex_unlock (40,797,201,501 samples, 0.27%)</title><rect x="403.5" y="1397" width="3.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="406.46" y="1407.5" ></text>
</g>
<g >
<title>__fdget (47,451,038,754 samples, 0.31%)</title><rect x="887.4" y="1413" width="3.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="890.44" y="1423.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,906,015,237 samples, 0.03%)</title><rect x="502.2" y="1269" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="505.15" y="1279.5" ></text>
</g>
<g >
<title>do_idle (9,288,682,572 samples, 0.06%)</title><rect x="64.6" y="1493" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.64" y="1503.5" ></text>
</g>
<g >
<title>futex_wake (2,160,322,573 samples, 0.01%)</title><rect x="33.2" y="1413" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="36.21" y="1423.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,405,297,784 samples, 0.01%)</title><rect x="62.4" y="1445" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="65.40" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,821,539,319 samples, 0.05%)</title><rect x="798.4" y="1285" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="801.38" y="1295.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5,517,511,807 samples, 0.04%)</title><rect x="623.8" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="626.80" y="1455.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (4,904,348,730 samples, 0.03%)</title><rect x="580.0" y="1285" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="583.01" y="1295.5" ></text>
</g>
<g >
<title>__slab_free (150,771,367,191 samples, 0.99%)</title><rect x="484.6" y="1301" width="11.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="487.56" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,292,329,148 samples, 0.01%)</title><rect x="20.3" y="1461" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.32" y="1471.5" ></text>
</g>
<g >
<title>__cmd_record (36,939,633,546 samples, 0.24%)</title><rect x="42.3" y="1573" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="45.34" y="1583.5" ></text>
</g>
<g >
<title>unix_destruct_scm (3,937,958,401 samples, 0.03%)</title><rect x="1100.8" y="1365" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1103.84" y="1375.5" ></text>
</g>
<g >
<title>__check_object_size (1,635,310,461 samples, 0.01%)</title><rect x="569.0" y="1317" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="572.05" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,060,336,554 samples, 0.03%)</title><rect x="21.2" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.16" y="1487.5" ></text>
</g>
<g >
<title>__fdget (45,608,630,788 samples, 0.30%)</title><rect x="334.2" y="1413" width="3.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="337.17" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,220,941,793 samples, 0.03%)</title><rect x="50.0" y="1509" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="52.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,426,692,934 samples, 0.15%)</title><rect x="29.9" y="1301" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.94" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="549" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1269" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1279.5" ></text>
</g>
<g >
<title>start_secondary (2,048,814,611 samples, 0.01%)</title><rect x="65.5" y="1573" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="68.46" y="1583.5" ></text>
</g>
<g >
<title>mod_objcg_state (6,084,321,479 samples, 0.04%)</title><rect x="811.1" y="1301" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="814.12" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,601,586,601 samples, 0.03%)</title><rect x="435.9" y="1381" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="438.88" y="1391.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (6,644,399,410 samples, 0.04%)</title><rect x="378.2" y="1429" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="381.20" y="1439.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4,788,811,378 samples, 0.03%)</title><rect x="41.6" y="1253" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="44.65" y="1263.5" ></text>
</g>
<g >
<title>v8::internal::Object::GetProperty (2,273,480,810 samples, 0.01%)</title><rect x="25.2" y="1509" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="28.24" y="1519.5" ></text>
</g>
<g >
<title>refill_obj_stock (1,329,274,560 samples, 0.01%)</title><rect x="263.5" y="1301" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="266.50" y="1311.5" ></text>
</g>
<g >
<title>[[heap]] (1,694,810,391 samples, 0.01%)</title><rect x="10.5" y="1589" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.47" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,285,261,344 samples, 0.02%)</title><rect x="19.0" y="1445" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.99" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,483,091,145 samples, 0.01%)</title><rect x="1064.4" y="1253" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1067.36" y="1263.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (39,018,033,774 samples, 0.26%)</title><rect x="25.5" y="1365" width="3.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="28.53" y="1375.5" ></text>
</g>
<g >
<title>skb_queue_tail (405,054,950,973 samples, 2.67%)</title><rect x="174.3" y="1397" width="31.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="177.29" y="1407.5" >sk..</text>
</g>
<g >
<title>[bash] (7,250,536,920 samples, 0.05%)</title><rect x="50.9" y="1429" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="53.86" y="1439.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,646,711,703 samples, 0.04%)</title><rect x="838.1" y="1333" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="841.11" y="1343.5" ></text>
</g>
<g >
<title>kfree_skbmem (418,830,222,023 samples, 2.76%)</title><rect x="440.9" y="1365" width="32.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="443.90" y="1375.5" >kf..</text>
</g>
<g >
<title>[expr] (13,702,573,646 samples, 0.09%)</title><rect x="10.6" y="1541" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.60" y="1551.5" ></text>
</g>
<g >
<title>__cond_resched (4,704,709,063 samples, 0.03%)</title><rect x="147.8" y="1397" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="150.82" y="1407.5" ></text>
</g>
<g >
<title>[[heap]] (1,725,308,733 samples, 0.01%)</title><rect x="53.0" y="1589" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="56.01" y="1599.5" ></text>
</g>
<g >
<title>__unfreeze_partials (6,544,206,417 samples, 0.04%)</title><rect x="458.4" y="1301" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="461.41" y="1311.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,208,093,835 samples, 0.05%)</title><rect x="508.9" y="1317" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="511.92" y="1327.5" ></text>
</g>
<g >
<title>show_mountinfo (1,383,806,434 samples, 0.01%)</title><rect x="48.4" y="1477" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="51.44" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,497,722,010 samples, 0.03%)</title><rect x="402.1" y="1397" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="405.06" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (104,784,466,572 samples, 0.69%)</title><rect x="1111.2" y="1349" width="8.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1114.25" y="1359.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1541" width="4.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="40.99" y="1551.5" ></text>
</g>
<g >
<title>skb_set_owner_w (152,153,862,729 samples, 1.00%)</title><rect x="859.7" y="1381" width="11.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="862.72" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,395,389,650 samples, 0.09%)</title><rect x="10.6" y="1509" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="1519.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (1,263,962,850,080 samples, 8.32%)</title><rect x="209.4" y="1381" width="98.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="212.36" y="1391.5" >alloc_skb_w..</text>
</g>
<g >
<title>__x64_sys_sendto (3,165,131,139,932 samples, 20.84%)</title><rect x="94.7" y="1461" width="245.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="97.67" y="1471.5" >__x64_sys_sendto</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,344,884,283 samples, 0.03%)</title><rect x="855.0" y="1349" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="857.99" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,791,720,909 samples, 0.02%)</title><rect x="18.1" y="1509" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="21.09" y="1519.5" ></text>
</g>
<g >
<title>put_pid (4,346,647,788 samples, 0.03%)</title><rect x="680.3" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="683.33" y="1423.5" ></text>
</g>
<g >
<title>mmput (4,675,054,614 samples, 0.03%)</title><rect x="23.9" y="1493" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="26.93" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,340,096,522 samples, 0.04%)</title><rect x="148.2" y="1397" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="151.19" y="1407.5" ></text>
</g>
<g >
<title>proactive_compact_node (2,689,921,961 samples, 0.02%)</title><rect x="16.6" y="1541" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="19.64" y="1551.5" ></text>
</g>
<g >
<title>mutex_lock (3,986,541,340 samples, 0.03%)</title><rect x="403.1" y="1397" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="406.15" y="1407.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1,821,854,466 samples, 0.01%)</title><rect x="61.6" y="1397" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="64.59" y="1407.5" ></text>
</g>
<g >
<title>getgrgid (1,639,212,574 samples, 0.01%)</title><rect x="20.5" y="1493" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="23.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="735.5" ></text>
</g>
<g >
<title>load_elf_binary (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1461" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="55.54" y="1471.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (1,484,578,276 samples, 0.01%)</title><rect x="936.0" y="1381" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="939.00" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (359,538,266,171 samples, 2.37%)</title><rect x="730.1" y="1381" width="27.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="733.06" y="1391.5" >_..</text>
</g>
<g >
<title>[ls] (50,885,060,199 samples, 0.34%)</title><rect x="19.3" y="1541" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.32" y="1551.5" ></text>
</g>
<g >
<title>begin_new_exec (2,454,913,379 samples, 0.02%)</title><rect x="52.5" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="55.54" y="1455.5" ></text>
</g>
<g >
<title>skb_release_head_state (6,134,726,676 samples, 0.04%)</title><rect x="550.4" y="1381" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="553.39" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (5,059,282,338 samples, 0.03%)</title><rect x="125.3" y="1413" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="128.30" y="1423.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,458,156,098 samples, 0.01%)</title><rect x="11.7" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.72" y="1519.5" ></text>
</g>
<g >
<title>pte_alloc_one (3,271,378,557 samples, 0.02%)</title><rect x="26.4" y="1253" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="29.36" y="1263.5" ></text>
</g>
<g >
<title>unmap_single_vma (46,612,690,629 samples, 0.31%)</title><rect x="38.6" y="1349" width="3.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="41.64" y="1359.5" ></text>
</g>
<g >
<title>__poll (10,001,130,042 samples, 0.07%)</title><rect x="36.2" y="1509" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.19" y="1519.5" ></text>
</g>
<g >
<title>path_lookupat (4,754,194,367 samples, 0.03%)</title><rect x="32.3" y="1397" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,450,943,784 samples, 0.19%)</title><rect x="29.8" y="1477" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.77" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (9,981,503,930 samples, 0.07%)</title><rect x="49.0" y="1525" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="51.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,383,433,778 samples, 0.11%)</title><rect x="30.0" y="981" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.01" y="991.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (5,470,377,156 samples, 0.04%)</title><rect x="1125.9" y="1317" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1128.87" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,797,245,065 samples, 0.14%)</title><rect x="30.0" y="1189" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.96" y="1199.5" ></text>
</g>
<g >
<title>__schedule (2,250,428,077 samples, 0.01%)</title><rect x="64.3" y="1509" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="67.32" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (5,983,035,906 samples, 0.04%)</title><rect x="1029.2" y="1365" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1032.15" y="1375.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (77,076,023,036 samples, 0.51%)</title><rect x="1059.3" y="1301" width="6.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1062.32" y="1311.5" ></text>
</g>
<g >
<title>check_stack_object (6,749,198,645 samples, 0.04%)</title><rect x="717.5" y="1365" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="720.49" y="1375.5" ></text>
</g>
<g >
<title>_copy_from_iter (7,921,325,782 samples, 0.05%)</title><rect x="149.1" y="1397" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="152.11" y="1407.5" ></text>
</g>
<g >
<title>memcg_account_kmem (7,718,402,108 samples, 0.05%)</title><rect x="1063.8" y="1253" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1066.76" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1333" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1343.5" ></text>
</g>
<g >
<title>isolate_freepages (1,918,782,110 samples, 0.01%)</title><rect x="48.7" y="1461" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="51.73" y="1471.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (3,733,249,218 samples, 0.02%)</title><rect x="496.0" y="1237" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="498.97" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="815.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (21,776,887,394 samples, 0.14%)</title><rect x="794.1" y="1301" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="797.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1477" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1487.5" ></text>
</g>
<g >
<title>anon_vma_clone (2,119,379,973 samples, 0.01%)</title><rect x="25.6" y="1317" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="28.59" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,365,210,075 samples, 0.01%)</title><rect x="62.4" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="65.40" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,095,477,355 samples, 0.01%)</title><rect x="13.9" y="1589" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.91" y="1599.5" ></text>
</g>
<g >
<title>_dl_catch_error (4,174,338,317 samples, 0.03%)</title><rect x="19.6" y="1365" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="22.63" y="1375.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3,579,973,994 samples, 0.02%)</title><rect x="307.3" y="1365" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="310.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1445" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,686,893,586 samples, 0.01%)</title><rect x="507.6" y="1253" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="510.60" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1141" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,448,947,392 samples, 0.03%)</title><rect x="679.4" y="1413" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="682.44" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,292,042,161 samples, 0.05%)</title><rect x="23.8" y="1589" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.78" y="1599.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,859,347,237 samples, 0.01%)</title><rect x="56.0" y="1477" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="59.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1365" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1375.5" ></text>
</g>
<g >
<title>inotify_read (1,824,322,363 samples, 0.01%)</title><rect x="33.5" y="1461" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="36.50" y="1471.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,990,751,529 samples, 0.03%)</title><rect x="263.8" y="1317" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="266.77" y="1327.5" ></text>
</g>
<g >
<title>uv__fs_work (4,273,592,517 samples, 0.03%)</title><rect x="37.4" y="1541" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="40.41" y="1551.5" ></text>
</g>
<g >
<title>__mmput (4,675,054,614 samples, 0.03%)</title><rect x="23.9" y="1477" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="26.93" y="1487.5" ></text>
</g>
<g >
<title>_dl_catch_exception (2,672,547,413 samples, 0.02%)</title><rect x="19.0" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="21.97" y="1519.5" ></text>
</g>
<g >
<title>pool-udisksd (11,063,685,985 samples, 0.07%)</title><rect x="45.2" y="1605" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="48.22" y="1615.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,095,535,308 samples, 0.01%)</title><rect x="1062.7" y="1269" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1065.75" y="1279.5" ></text>
</g>
<g >
<title>__slab_free (5,624,451,128 samples, 0.04%)</title><rect x="997.6" y="1349" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1000.57" y="1359.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (401,796,399,056 samples, 2.65%)</title><rect x="271.4" y="1349" width="31.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="274.45" y="1359.5" >km..</text>
</g>
<g >
<title>__check_object_size (127,053,961,136 samples, 0.84%)</title><rect x="708.1" y="1381" width="9.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="711.14" y="1391.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,751,729,903 samples, 0.01%)</title><rect x="65.5" y="1477" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="68.47" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,631,701,893 samples, 0.02%)</title><rect x="50.0" y="1445" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="52.99" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1525" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,400,826,157 samples, 0.12%)</title><rect x="282.1" y="1333" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="285.12" y="1343.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,048,814,611 samples, 0.01%)</title><rect x="65.5" y="1557" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="68.46" y="1567.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (63,401,557,691 samples, 0.42%)</title><rect x="169.4" y="1381" width="4.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="172.37" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,266,012,962 samples, 0.01%)</title><rect x="52.3" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.29" y="1439.5" ></text>
</g>
<g >
<title>kmalloc_reserve (4,293,320,531 samples, 0.03%)</title><rect x="306.3" y="1365" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="309.28" y="1375.5" ></text>
</g>
<g >
<title>__sys_sendto (3,134,921,389,429 samples, 20.64%)</title><rect x="94.9" y="1445" width="243.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="97.86" y="1455.5" >__sys_sendto</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (32,940,428,234 samples, 0.22%)</title><rect x="29.6" y="1493" width="2.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="32.55" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (39,312,268,367 samples, 0.26%)</title><rect x="851.6" y="1333" width="3.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="854.63" y="1343.5" ></text>
</g>
<g >
<title>start_kernel (4,234,544,659 samples, 0.03%)</title><rect x="50.0" y="1557" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="52.99" y="1567.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (2,229,985,371 samples, 0.01%)</title><rect x="43.7" y="1317" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="46.74" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_free (381,677,028,939 samples, 2.51%)</title><rect x="443.1" y="1349" width="29.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="446.11" y="1359.5" >km..</text>
</g>
<g >
<title>__slab_free (109,928,735,331 samples, 0.72%)</title><rect x="450.4" y="1333" width="8.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="453.38" y="1343.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (4,450,214,443 samples, 0.03%)</title><rect x="684.3" y="1413" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="687.27" y="1423.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (4,495,490,272 samples, 0.03%)</title><rect x="655.0" y="1429" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="658.01" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,356,771,377 samples, 0.09%)</title><rect x="30.0" y="885" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.03" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,080,235,055 samples, 0.03%)</title><rect x="10.8" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.79" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1189" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1199.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (44,988,097,208 samples, 0.30%)</title><rect x="38.8" y="1317" width="3.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.77" y="1327.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,146,681,076 samples, 0.01%)</title><rect x="281.4" y="1301" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="284.40" y="1311.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1,584,821,108 samples, 0.01%)</title><rect x="1027.2" y="1253" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1030.24" y="1263.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (60,098,654,851 samples, 0.40%)</title><rect x="722.4" y="1381" width="4.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="725.40" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,798,017,070 samples, 0.08%)</title><rect x="10.6" y="1461" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="1471.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (7,254,296,260 samples, 0.05%)</title><rect x="797.8" y="1285" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="800.82" y="1295.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4,234,544,659 samples, 0.03%)</title><rect x="50.0" y="1573" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="52.99" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (1,745,037,235 samples, 0.01%)</title><rect x="35.8" y="1493" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="38.83" y="1503.5" ></text>
</g>
<g >
<title>file_modified_flags (1,339,346,230 samples, 0.01%)</title><rect x="44.0" y="1253" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="47.01" y="1263.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (139,118,194,313 samples, 0.92%)</title><rect x="980.3" y="1365" width="10.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="983.31" y="1375.5" ></text>
</g>
<g >
<title>[ls] (21,289,729,632 samples, 0.14%)</title><rect x="19.4" y="1509" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.40" y="1519.5" ></text>
</g>
<g >
<title>__check_heap_object (6,083,847,195 samples, 0.04%)</title><rect x="571.4" y="1285" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="574.42" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,807,545,255 samples, 0.01%)</title><rect x="45.1" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="48.07" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,498,760,535 samples, 0.08%)</title><rect x="10.6" y="1445" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.63" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,272,167,372 samples, 0.09%)</title><rect x="30.0" y="837" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.04" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,355,731,055 samples, 0.02%)</title><rect x="30.1" y="341" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.12" y="351.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,741,812,324 samples, 0.02%)</title><rect x="19.6" y="1253" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.64" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="783.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (84,403,333,482 samples, 0.56%)</title><rect x="1173.9" y="1461" width="6.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1176.86" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_write (13,181,195,079 samples, 0.09%)</title><rect x="44.0" y="1349" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="46.99" y="1359.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,608,936,877 samples, 0.02%)</title><rect x="458.7" y="1269" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="461.70" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_clone (39,136,269,597 samples, 0.26%)</title><rect x="25.5" y="1429" width="3.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="613" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="623.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (5,930,083,976 samples, 0.04%)</title><rect x="885.9" y="1413" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="888.86" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,877,924,012 samples, 0.04%)</title><rect x="441.7" y="1349" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="444.72" y="1359.5" ></text>
</g>
<g >
<title>[bash] (4,504,756,364 samples, 0.03%)</title><rect x="51.7" y="1269" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.68" y="1279.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,892,707,910 samples, 0.01%)</title><rect x="163.2" y="1333" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="166.24" y="1343.5" ></text>
</g>
<g >
<title>tcp_seq_next (1,543,485,617 samples, 0.01%)</title><rect x="37.5" y="1365" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="40.45" y="1375.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,448,249,270 samples, 0.03%)</title><rect x="298.3" y="1285" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="301.25" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,852,905,553 samples, 0.02%)</title><rect x="51.2" y="1317" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="54.16" y="1327.5" ></text>
</g>
<g >
<title>search_binary_handler (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1477" width="4.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="40.99" y="1487.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (39,472,763,423 samples, 0.26%)</title><rect x="796.4" y="1301" width="3.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="799.36" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1029" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1039.5" ></text>
</g>
<g >
<title>do_idle (2,727,903,002 samples, 0.02%)</title><rect x="45.8" y="1541" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="48.79" y="1551.5" ></text>
</g>
<g >
<title>__entry_text_start (129,383,446,996 samples, 0.85%)</title><rect x="357.1" y="1493" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="360.05" y="1503.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (6,853,906,460 samples, 0.05%)</title><rect x="332.5" y="1413" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="335.55" y="1423.5" ></text>
</g>
<g >
<title>do_idle (1,702,999,752 samples, 0.01%)</title><rect x="56.4" y="1493" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="805" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="165" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="175.5" ></text>
</g>
<g >
<title>parse_and_execute (1,877,567,718 samples, 0.01%)</title><rect x="51.8" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="54.80" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="415.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1541" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="36.71" y="1551.5" ></text>
</g>
<g >
<title>free_pud_range (2,653,484,673 samples, 0.02%)</title><rect x="38.0" y="1317" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="41.02" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4,139,807,168 samples, 0.03%)</title><rect x="859.4" y="1365" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="862.40" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (16,346,987,950 samples, 0.11%)</title><rect x="30.0" y="965" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.01" y="975.5" ></text>
</g>
<g >
<title>__unmap_and_move.constprop.0 (2,805,683,841 samples, 0.02%)</title><rect x="61.5" y="1477" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="64.53" y="1487.5" ></text>
</g>
<g >
<title>put_pid (4,091,252,083 samples, 0.03%)</title><rect x="1068.8" y="1349" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1071.81" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (60,492,148,053 samples, 0.40%)</title><rect x="1184.6" y="1589" width="4.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1187.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="991.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1,995,668,924 samples, 0.01%)</title><rect x="263.3" y="1269" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="266.32" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,928,881,975 samples, 0.14%)</title><rect x="36.2" y="1573" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="39.17" y="1583.5" ></text>
</g>
<g >
<title>[grep] (4,915,749,883 samples, 0.03%)</title><rect x="12.2" y="1541" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.24" y="1551.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2,561,596,443 samples, 0.02%)</title><rect x="43.0" y="1445" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="46.00" y="1455.5" ></text>
</g>
<g >
<title>vfs_statx (2,837,754,821 samples, 0.02%)</title><rect x="20.8" y="1413" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="23.78" y="1423.5" ></text>
</g>
<g >
<title>memset (1,328,862,678 samples, 0.01%)</title><rect x="265.8" y="1317" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="268.83" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,436,878,661 samples, 0.02%)</title><rect x="52.3" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.29" y="1455.5" ></text>
</g>
<g >
<title>expand_string_assignment (2,541,732,467 samples, 0.02%)</title><rect x="52.1" y="1349" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="55.05" y="1359.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (5,521,859,075 samples, 0.04%)</title><rect x="963.6" y="1397" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="966.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,299,488,253 samples, 0.02%)</title><rect x="30.1" y="309" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.12" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="607.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,029,525,156 samples, 0.02%)</title><rect x="65.5" y="1589" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="68.46" y="1599.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (117,115,100,273 samples, 0.77%)</title><rect x="553.1" y="1349" width="9.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="556.09" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,240,943,167 samples, 0.02%)</title><rect x="62.4" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="65.39" y="1471.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4,234,544,659 samples, 0.03%)</title><rect x="50.0" y="1541" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="52.99" y="1551.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,806,112,554 samples, 0.04%)</title><rect x="901.5" y="1429" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="904.54" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,319,040,459,439 samples, 94.29%)</title><rect x="70.0" y="1557" width="1112.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.04" y="1567.5" >[libc.so.6]</text>
</g>
<g >
<title>search_binary_handler (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1477" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="26.78" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (8,457,396,166 samples, 0.06%)</title><rect x="55.0" y="1589" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="58.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="863.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,437,622,727 samples, 0.01%)</title><rect x="62.5" y="1445" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="65.51" y="1455.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (2,116,485,341 samples, 0.01%)</title><rect x="35.8" y="1509" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="38.80" y="1519.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,381,516,273 samples, 0.01%)</title><rect x="810.9" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="813.94" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="965" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="975.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (8,639,854,066 samples, 0.06%)</title><rect x="705.3" y="1397" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="708.31" y="1407.5" ></text>
</g>
<g >
<title>__do_sys_clone (39,136,269,597 samples, 0.26%)</title><rect x="25.5" y="1413" width="3.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="28.53" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,795,357,828 samples, 0.04%)</title><rect x="996.6" y="1349" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="999.61" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,913,421,711 samples, 0.14%)</title><rect x="30.0" y="1205" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.96" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="837" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="847.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1,740,074,190 samples, 0.01%)</title><rect x="301.7" y="1285" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="304.70" y="1295.5" ></text>
</g>
<g >
<title>ep_poll (1,763,187,459 samples, 0.01%)</title><rect x="35.6" y="1477" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="38.59" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1461" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,937,588,021 samples, 0.14%)</title><rect x="30.0" y="1221" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.96" y="1231.5" ></text>
</g>
<g >
<title>_Fork (39,151,520,759 samples, 0.26%)</title><rect x="25.5" y="1477" width="3.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="28.53" y="1487.5" ></text>
</g>
<g >
<title>mod_objcg_state (52,608,166,723 samples, 0.35%)</title><rect x="253.5" y="1285" width="4.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="256.54" y="1295.5" ></text>
</g>
<g >
<title>dequeue_entity (1,491,589,199 samples, 0.01%)</title><rect x="36.5" y="1317" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="39.53" y="1327.5" ></text>
</g>
<g >
<title>isolate_freepages (3,708,360,459 samples, 0.02%)</title><rect x="61.8" y="1461" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="64.75" y="1471.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (153,674,510,363 samples, 1.01%)</title><rect x="245.7" y="1301" width="11.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="248.69" y="1311.5" ></text>
</g>
<g >
<title>record__write (19,129,262,874 samples, 0.13%)</title><rect x="43.6" y="1493" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="46.57" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_getxattr (1,576,991,054 samples, 0.01%)</title><rect x="20.6" y="1445" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="23.62" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="437" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="447.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (4,910,133,993 samples, 0.03%)</title><rect x="154.2" y="1381" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="157.20" y="1391.5" ></text>
</g>
<g >
<title>__cond_resched (3,474,758,915 samples, 0.02%)</title><rect x="779.5" y="1349" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="782.48" y="1359.5" ></text>
</g>
<g >
<title>proc_pid_readlink (1,964,222,965 samples, 0.01%)</title><rect x="21.3" y="1413" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="24.32" y="1423.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (2,493,712,146 samples, 0.02%)</title><rect x="37.2" y="1557" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="40.18" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13,341,036,918 samples, 0.09%)</title><rect x="1119.4" y="1365" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1122.39" y="1375.5" ></text>
</g>
<g >
<title>kmalloc_reserve (4,244,740,823 samples, 0.03%)</title><rect x="858.4" y="1365" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="861.44" y="1375.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (6,997,951,141 samples, 0.05%)</title><rect x="679.8" y="1413" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="682.78" y="1423.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (501,088,586,242 samples, 3.30%)</title><rect x="1122.3" y="1349" width="39.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1125.33" y="1359.5" >__s..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,496,433,237 samples, 0.04%)</title><rect x="894.5" y="1461" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="897.46" y="1471.5" ></text>
</g>
<g >
<title>skb_put (8,937,385,710 samples, 0.06%)</title><rect x="683.3" y="1413" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="686.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,950,773,182 samples, 0.07%)</title><rect x="30.1" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.05" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_free (384,759,262,107 samples, 2.53%)</title><rect x="998.5" y="1349" width="29.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1001.47" y="1359.5" >km..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (87,065,386,277 samples, 0.57%)</title><rect x="342.3" y="1461" width="6.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="345.33" y="1471.5" ></text>
</g>
<g >
<title>copy_page_range (31,855,472,693 samples, 0.21%)</title><rect x="25.8" y="1333" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="28.84" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (3,525,282,771 samples, 0.02%)</title><rect x="991.3" y="1381" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="994.31" y="1391.5" ></text>
</g>
<g >
<title>mmput (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1413" width="4.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="40.99" y="1423.5" ></text>
</g>
<g >
<title>generic_perform_write (11,119,913,543 samples, 0.07%)</title><rect x="44.1" y="1269" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="47.13" y="1279.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (3,475,209,371 samples, 0.02%)</title><rect x="716.9" y="1349" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="719.85" y="1359.5" ></text>
</g>
<g >
<title>refill_obj_stock (4,552,942,754 samples, 0.03%)</title><rect x="508.6" y="1301" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="511.57" y="1311.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,292,976,135 samples, 0.03%)</title><rect x="850.9" y="1285" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="853.88" y="1295.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (2,954,983,676 samples, 0.02%)</title><rect x="33.2" y="1541" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="36.17" y="1551.5" ></text>
</g>
<g >
<title>kmalloc_slab (15,747,647,742 samples, 0.10%)</title><rect x="817.4" y="1317" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="820.42" y="1327.5" ></text>
</g>
<g >
<title>worker (6,384,798,111 samples, 0.04%)</title><rect x="37.4" y="1557" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="40.38" y="1567.5" ></text>
</g>
<g >
<title>__mmput (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1397" width="4.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="40.99" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="373" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="383.5" ></text>
</g>
<g >
<title>[bash] (10,120,183,810 samples, 0.07%)</title><rect x="51.5" y="1429" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.47" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (8,743,803,433 samples, 0.06%)</title><rect x="991.6" y="1381" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="994.58" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,240,569,916 samples, 0.09%)</title><rect x="30.0" y="821" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.04" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,989,182,241 samples, 0.19%)</title><rect x="29.8" y="1461" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.81" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,958,890,915 samples, 0.14%)</title><rect x="30.0" y="1237" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.96" y="1247.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (532,728,225,181 samples, 3.51%)</title><rect x="564.4" y="1365" width="41.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="567.41" y="1375.5" >skb..</text>
</g>
<g >
<title>copy_p4d_range (31,822,177,605 samples, 0.21%)</title><rect x="25.8" y="1317" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="28.84" y="1327.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (118,354,236,337 samples, 0.78%)</title><rect x="154.6" y="1365" width="9.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="157.59" y="1375.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (7,566,792,225 samples, 0.05%)</title><rect x="348.5" y="1445" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="351.51" y="1455.5" ></text>
</g>
<g >
<title>kworker/0:0 (5,036,810,472 samples, 0.03%)</title><rect x="13.7" y="1605" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="16.68" y="1615.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::Run (1,313,166,415 samples, 0.01%)</title><rect x="37.2" y="1509" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="40.24" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="869" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="879.5" ></text>
</g>
<g >
<title>__check_heap_object (7,003,163,142 samples, 0.05%)</title><rect x="1128.0" y="1285" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1131.03" y="1295.5" ></text>
</g>
<g >
<title>rest_init (1,705,951,539 samples, 0.01%)</title><rect x="56.4" y="1525" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="59.37" y="1535.5" ></text>
</g>
<g >
<title>grep (7,369,539,079 samples, 0.05%)</title><rect x="12.2" y="1605" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.22" y="1615.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (8,900,850,108 samples, 0.06%)</title><rect x="682.2" y="1397" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="685.22" y="1407.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (5,164,671,307 samples, 0.03%)</title><rect x="406.6" y="1397" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="409.63" y="1407.5" ></text>
</g>
<g >
<title>poll_idle (1,469,538,653 samples, 0.01%)</title><rect x="49.5" y="1477" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="52.52" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1509" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="55.54" y="1519.5" ></text>
</g>
<g >
<title>mutex_lock (4,651,966,894 samples, 0.03%)</title><rect x="959.8" y="1397" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="962.80" y="1407.5" ></text>
</g>
<g >
<title>unmap_vmas (46,738,500,674 samples, 0.31%)</title><rect x="38.6" y="1365" width="3.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="41.63" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="565" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.52" y="1487.5" ></text>
</g>
<g >
<title>check_heap_object (80,313,443,959 samples, 0.53%)</title><rect x="157.1" y="1349" width="6.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="160.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1301" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1189" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1199.5" ></text>
</g>
<g >
<title>do_idle (30,131,289,331 samples, 0.20%)</title><rect x="62.3" y="1541" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.28" y="1551.5" ></text>
</g>
<g >
<title>parse_and_execute (18,137,069,381 samples, 0.12%)</title><rect x="50.9" y="1509" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.85" y="1519.5" ></text>
</g>
<g >
<title>filename_lookup (1,603,654,025 samples, 0.01%)</title><rect x="21.2" y="1413" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="24.17" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="437" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,444,616,639 samples, 0.02%)</title><rect x="50.5" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.51" y="1551.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,983,539,859 samples, 0.04%)</title><rect x="510.4" y="1317" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="513.42" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,150,836,140 samples, 0.09%)</title><rect x="49.0" y="1557" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="51.96" y="1567.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,705,791,423 samples, 0.01%)</title><rect x="56.4" y="1509" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="59.37" y="1519.5" ></text>
</g>
<g >
<title>__send (3,574,667,054,309 samples, 23.54%)</title><rect x="73.5" y="1509" width="277.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="76.50" y="1519.5" >__send</text>
</g>
<g >
<title>aa_unix_msg_perm (1,837,293,902 samples, 0.01%)</title><rect x="381.8" y="1397" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="384.78" y="1407.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (271,507,527,722 samples, 1.79%)</title><rect x="706.0" y="1397" width="21.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="708.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,115,369,480 samples, 0.05%)</title><rect x="34.1" y="1541" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.05" y="1551.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (5,111,340,183 samples, 0.03%)</title><rect x="130.1" y="1413" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="133.06" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,143,926,045 samples, 0.05%)</title><rect x="34.1" y="1557" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.05" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="709" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="719.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (17,376,984,413 samples, 0.11%)</title><rect x="836.8" y="1333" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="839.76" y="1343.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (3,469,188,583 samples, 0.02%)</title><rect x="1014.3" y="1269" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1017.34" y="1279.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (2,158,415,178 samples, 0.01%)</title><rect x="35.8" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="38.80" y="1535.5" ></text>
</g>
<g >
<title>record__pushfn (19,141,000,714 samples, 0.13%)</title><rect x="43.6" y="1509" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="46.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="901" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="927.5" ></text>
</g>
<g >
<title>schedule_idle (2,396,380,354 samples, 0.02%)</title><rect x="64.3" y="1525" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="67.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="245" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="255.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (9,613,603,595 samples, 0.06%)</title><rect x="1161.3" y="1349" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1164.27" y="1359.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2,089,184,966 samples, 0.01%)</title><rect x="44.8" y="1221" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="47.80" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (107,851,077,664 samples, 0.71%)</title><rect x="1111.0" y="1365" width="8.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1114.01" y="1375.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,999,285,128 samples, 0.03%)</title><rect x="13.4" y="1589" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="16.37" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="319.5" ></text>
</g>
<g >
<title>compaction_alloc (3,760,417,092 samples, 0.02%)</title><rect x="61.7" y="1477" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="64.75" y="1487.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (138,801,249,755 samples, 0.91%)</title><rect x="569.6" y="1301" width="10.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="572.60" y="1311.5" ></text>
</g>
<g >
<title>__virt_addr_valid (25,413,125,452 samples, 0.17%)</title><rect x="161.3" y="1333" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="164.26" y="1343.5" ></text>
</g>
<g >
<title>skb_free_head (466,097,105,443 samples, 3.07%)</title><rect x="1032.0" y="1349" width="36.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1034.96" y="1359.5" >skb..</text>
</g>
<g >
<title>[anon] (5,358,653,834 samples, 0.04%)</title><rect x="24.4" y="1589" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="27.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,591,122,213 samples, 0.04%)</title><rect x="34.1" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,369,112,538 samples, 0.03%)</title><rect x="19.6" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,353,577,550 samples, 0.15%)</title><rect x="29.9" y="1269" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.95" y="1279.5" ></text>
</g>
<g >
<title>sock_def_readable (152,370,844,309 samples, 1.00%)</title><rect x="871.5" y="1397" width="11.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="874.55" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="565" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="575.5" ></text>
</g>
<g >
<title>consume_obj_stock (17,988,638,891 samples, 0.12%)</title><rect x="300.1" y="1317" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="303.14" y="1327.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4,933,008,615 samples, 0.03%)</title><rect x="36.4" y="1413" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="39.43" y="1423.5" ></text>
</g>
<g >
<title>__fdget (5,155,609,672 samples, 0.03%)</title><rect x="98.5" y="1429" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="101.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,591,122,213 samples, 0.04%)</title><rect x="34.1" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23,925,635,008 samples, 0.16%)</title><rect x="1182.7" y="1589" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1237" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1247.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (4,757,475,042 samples, 0.03%)</title><rect x="510.9" y="1317" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="513.89" y="1327.5" ></text>
</g>
<g >
<title>kcompactd (2,689,921,961 samples, 0.02%)</title><rect x="16.6" y="1557" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.64" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,788,665,371 samples, 0.03%)</title><rect x="18.8" y="1525" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.82" y="1535.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (24,652,078,468 samples, 0.16%)</title><rect x="681.0" y="1413" width="1.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="684.00" y="1423.5" ></text>
</g>
<g >
<title>free_swap_cache (2,021,773,084 samples, 0.01%)</title><rect x="42.0" y="1253" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="45.02" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1541" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,925,941,634 samples, 0.03%)</title><rect x="53.2" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.16" y="1599.5" ></text>
</g>
<g >
<title>kfree (5,728,362,844 samples, 0.04%)</title><rect x="1031.5" y="1349" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1034.52" y="1359.5" ></text>
</g>
<g >
<title>__schedule (2,400,075,942 samples, 0.02%)</title><rect x="43.0" y="1397" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="46.01" y="1407.5" ></text>
</g>
<g >
<title>__tfind (1,409,919,060 samples, 0.01%)</title><rect x="22.5" y="1413" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="25.54" y="1423.5" ></text>
</g>
<g >
<title>getxattr (1,776,509,913 samples, 0.01%)</title><rect x="20.6" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.61" y="1503.5" ></text>
</g>
<g >
<title>[bash] (4,533,879,557 samples, 0.03%)</title><rect x="51.7" y="1301" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.68" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1269" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="501" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="511.5" ></text>
</g>
<g >
<title>mod_memcg_state (7,359,782,843 samples, 0.05%)</title><rect x="507.0" y="1237" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="510.03" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="591.5" ></text>
</g>
<g >
<title>rest_init (4,234,544,659 samples, 0.03%)</title><rect x="50.0" y="1525" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="52.99" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1013" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1023.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,088,216,402 samples, 0.03%)</title><rect x="150.4" y="1397" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="153.39" y="1407.5" ></text>
</g>
<g >
<title>kthread (11,030,369,443 samples, 0.07%)</title><rect x="61.4" y="1573" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="64.41" y="1583.5" ></text>
</g>
<g >
<title>recv@plt (2,253,136,226 samples, 0.01%)</title><rect x="1182.4" y="1509" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1185.42" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,707,586,320 samples, 0.06%)</title><rect x="34.7" y="69" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="421" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,797,707,654 samples, 0.11%)</title><rect x="21.7" y="1429" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="485" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="495.5" ></text>
</g>
<g >
<title>skb_release_data (7,206,927,158 samples, 0.05%)</title><rect x="1107.9" y="1381" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1110.88" y="1391.5" ></text>
</g>
<g >
<title>__libc_fork (39,396,897,127 samples, 0.26%)</title><rect x="25.5" y="1493" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.52" y="1503.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1573" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="36.71" y="1583.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,845,034,471 samples, 0.05%)</title><rect x="348.0" y="1429" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="350.97" y="1439.5" ></text>
</g>
<g >
<title>__alloc_pages (1,960,005,104 samples, 0.01%)</title><rect x="25.9" y="1253" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="28.94" y="1263.5" ></text>
</g>
<g >
<title>poll_freewait (1,588,760,700 samples, 0.01%)</title><rect x="43.3" y="1461" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.28" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,172,082,470 samples, 0.01%)</title><rect x="35.6" y="1525" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.58" y="1535.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (3,987,702,316 samples, 0.03%)</title><rect x="126.6" y="1413" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="129.61" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="357" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="367.5" ></text>
</g>
<g >
<title>compact_zone (3,910,040,702 samples, 0.03%)</title><rect x="48.6" y="1525" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="51.59" y="1535.5" ></text>
</g>
<g >
<title>consume_stock (1,790,392,346 samples, 0.01%)</title><rect x="302.2" y="1301" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="305.17" y="1311.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (8,588,956,338 samples, 0.06%)</title><rect x="538.9" y="1317" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="541.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1445" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,903,478,629 samples, 0.03%)</title><rect x="841.5" y="1317" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="844.46" y="1327.5" ></text>
</g>
<g >
<title>recv (3,573,153,878,838 samples, 23.53%)</title><rect x="904.8" y="1509" width="277.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="907.76" y="1519.5" >recv</text>
</g>
<g >
<title>pagecache_get_page (3,943,518,078 samples, 0.03%)</title><rect x="44.4" y="1221" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="47.42" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,004,428,653 samples, 0.01%)</title><rect x="30.1" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.13" y="255.5" ></text>
</g>
<g >
<title>kworker/u48:0 (1,402,598,043 samples, 0.01%)</title><rect x="18.4" y="1605" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="21.38" y="1615.5" ></text>
</g>
<g >
<title>__pollwait (1,972,350,179 samples, 0.01%)</title><rect x="42.8" y="1429" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="45.80" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,988,913,187 samples, 0.02%)</title><rect x="51.2" y="1333" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="54.15" y="1343.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,340,501,502 samples, 0.04%)</title><rect x="340.9" y="1461" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="343.92" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,086,670,592 samples, 0.04%)</title><rect x="30.1" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.09" y="495.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,379,908,104 samples, 0.01%)</title><rect x="484.4" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="487.38" y="1311.5" ></text>
</g>
<g >
<title>__build_skb_around (6,442,055,397 samples, 0.04%)</title><rect x="305.8" y="1365" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="308.78" y="1375.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,316,309,635 samples, 0.04%)</title><rect x="56.0" y="1557" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="58.95" y="1567.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8,434,231,268 samples, 0.06%)</title><rect x="350.6" y="1493" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="353.62" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,318,548,474 samples, 0.05%)</title><rect x="616.3" y="1461" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="619.32" y="1471.5" ></text>
</g>
<g >
<title>parent (15,742,909,361 samples, 0.10%)</title><rect x="67.1" y="1573" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="70.07" y="1583.5" ></text>
</g>
<g >
<title>setlocale (22,787,561,831 samples, 0.15%)</title><rect x="21.5" y="1525" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="24.50" y="1535.5" ></text>
</g>
<g >
<title>__mod_memcg_state (3,475,863,088 samples, 0.02%)</title><rect x="507.3" y="1221" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="510.25" y="1231.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2,534,972,720,990 samples, 16.69%)</title><rect x="965.0" y="1397" width="197.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="968.04" y="1407.5" >unix_stream_read_generic</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="421" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,289,683,782 samples, 0.01%)</title><rect x="33.7" y="149" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="159.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (14,516,683,263 samples, 0.10%)</title><rect x="790.9" y="1285" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="793.87" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,338,988,220 samples, 0.04%)</title><rect x="1066.4" y="1317" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1069.39" y="1327.5" ></text>
</g>
<g >
<title>menu_select (1,993,629,724 samples, 0.01%)</title><rect x="63.8" y="1493" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="66.81" y="1503.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (1,789,227,250 samples, 0.01%)</title><rect x="682.1" y="1397" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="685.08" y="1407.5" ></text>
</g>
<g >
<title>__kmem_cache_free (388,045,279,136 samples, 2.56%)</title><rect x="478.8" y="1317" width="30.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="481.77" y="1327.5" >__..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (7,977,651,185 samples, 0.05%)</title><rect x="268.8" y="1333" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="271.81" y="1343.5" ></text>
</g>
<g >
<title>refill_obj_stock (4,902,775,260 samples, 0.03%)</title><rect x="1028.0" y="1333" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1030.98" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1429" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1077" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (3,150,035,573,414 samples, 20.74%)</title><rect x="371.3" y="1461" width="244.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="374.32" y="1471.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="671.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,613,898,265 samples, 0.01%)</title><rect x="11.8" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.83" y="1487.5" ></text>
</g>
<g >
<title>readdir64 (3,082,014,820 samples, 0.02%)</title><rect x="51.1" y="1365" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="54.14" y="1375.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (19,883,796,478 samples, 0.13%)</title><rect x="560.6" y="1333" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="563.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1205" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1029" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1039.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (18,041,662,036 samples, 0.12%)</title><rect x="17.0" y="1589" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="19.98" y="1599.5" ></text>
</g>
<g >
<title>__mod_memcg_state (5,063,102,505 samples, 0.03%)</title><rect x="815.3" y="1253" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="818.33" y="1263.5" ></text>
</g>
<g >
<title>getgrgid (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1525" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.52" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,066,665,994 samples, 0.11%)</title><rect x="53.6" y="1461" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.59" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,028,185,004 samples, 0.05%)</title><rect x="89.6" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="92.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1381" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,171,814,898 samples, 0.02%)</title><rect x="33.5" y="1525" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.45" y="1535.5" ></text>
</g>
<g >
<title>__kmem_cache_free (403,332,956,483 samples, 2.66%)</title><rect x="1034.5" y="1317" width="31.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1037.45" y="1327.5" >__..</text>
</g>
<g >
<title>vfs_write (1,717,636,465 samples, 0.01%)</title><rect x="45.1" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="48.07" y="1423.5" ></text>
</g>
<g >
<title>[perf-1156129.map] (54,619,925,871 samples, 0.36%)</title><rect x="24.8" y="1589" width="4.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="27.85" y="1599.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3,578,099,157 samples, 0.02%)</title><rect x="473.2" y="1349" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="476.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="453" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="463.5" ></text>
</g>
<g >
<title>statx (1,292,329,148 samples, 0.01%)</title><rect x="20.3" y="1477" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="23.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1061" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1461" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1471.5" ></text>
</g>
<g >
<title>send@plt (1,634,629,947 samples, 0.01%)</title><rect x="1182.6" y="1509" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1185.59" y="1519.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (21,111,106,852 samples, 0.14%)</title><rect x="283.6" y="1333" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="286.55" y="1343.5" ></text>
</g>
<g >
<title>migrate_pages (1,386,045,027 samples, 0.01%)</title><rect x="55.8" y="1509" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="58.81" y="1519.5" ></text>
</g>
<g >
<title>skb_put (8,943,634,032 samples, 0.06%)</title><rect x="129.1" y="1413" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="132.06" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,663,367,699 samples, 0.06%)</title><rect x="32.2" y="1509" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.16" y="1519.5" ></text>
</g>
<g >
<title>skb_unlink (160,389,445,095 samples, 1.06%)</title><rect x="550.9" y="1381" width="12.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="553.87" y="1391.5" ></text>
</g>
<g >
<title>execute_command_internal (1,849,567,249 samples, 0.01%)</title><rect x="51.8" y="1189" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.80" y="1199.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (59,199,687,777 samples, 0.39%)</title><rect x="1023.3" y="1333" width="4.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1026.33" y="1343.5" ></text>
</g>
<g >
<title>start_secondary (30,467,087,453 samples, 0.20%)</title><rect x="62.3" y="1573" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="65.27" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,277,091,892 samples, 0.09%)</title><rect x="10.6" y="1493" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="1503.5" ></text>
</g>
<g >
<title>_start (21,139,340,930 samples, 0.14%)</title><rect x="50.8" y="1589" width="1.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="53.85" y="1599.5" ></text>
</g>
<g >
<title>do_futex (2,371,518,521 samples, 0.02%)</title><rect x="33.2" y="1429" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="36.20" y="1439.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,705,951,539 samples, 0.01%)</title><rect x="56.4" y="1573" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="59.37" y="1583.5" ></text>
</g>
<g >
<title>mod_memcg_state (4,245,958,566 samples, 0.03%)</title><rect x="471.6" y="1269" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="474.56" y="1279.5" ></text>
</g>
<g >
<title>tcp_seq_start (1,660,897,094 samples, 0.01%)</title><rect x="37.6" y="1365" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="40.57" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,279,912,079 samples, 0.08%)</title><rect x="10.6" y="1477" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.62" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="821" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="831.5" ></text>
</g>
<g >
<title>shell_glob_filename (5,104,034,904 samples, 0.03%)</title><rect x="51.0" y="1413" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="54.03" y="1423.5" ></text>
</g>
<g >
<title>mod_memcg_state (10,484,083,987 samples, 0.07%)</title><rect x="815.0" y="1269" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="817.97" y="1279.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (53,974,409,694 samples, 0.36%)</title><rect x="46.1" y="1605" width="4.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="49.12" y="1615.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (6,331,397,998 samples, 0.04%)</title><rect x="44.2" y="1253" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="47.24" y="1263.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9,868,130,066 samples, 0.06%)</title><rect x="379.9" y="1413" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="382.94" y="1423.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (5,829,238,791 samples, 0.04%)</title><rect x="130.9" y="1413" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="133.91" y="1423.5" ></text>
</g>
<g >
<title>__check_object_size (2,247,601,675 samples, 0.01%)</title><rect x="154.0" y="1381" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="157.03" y="1391.5" ></text>
</g>
<g >
<title>proc_readfd_common (2,812,774,523 samples, 0.02%)</title><rect x="51.2" y="1253" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="54.16" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,427,121,619 samples, 0.06%)</title><rect x="30.1" y="565" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.07" y="575.5" ></text>
</g>
<g >
<title>send@plt (2,095,330,429 samples, 0.01%)</title><rect x="626.2" y="1509" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="629.24" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,966,669,566 samples, 0.03%)</title><rect x="12.2" y="1557" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.24" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,998,376,899 samples, 0.03%)</title><rect x="56.0" y="1525" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="58.96" y="1535.5" ></text>
</g>
<g >
<title>__sys_recvfrom (4,755,131,602 samples, 0.03%)</title><rect x="370.9" y="1461" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="373.95" y="1471.5" ></text>
</g>
<g >
<title>__fget_light (73,507,360,394 samples, 0.48%)</title><rect x="607.4" y="1397" width="5.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="610.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="501" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="511.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (98,189,761,540 samples, 0.65%)</title><rect x="605.8" y="1429" width="7.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="608.81" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,068,935,340 samples, 0.03%)</title><rect x="11.7" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.68" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,705,911,387 samples, 0.03%)</title><rect x="367.1" y="1493" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="370.10" y="1503.5" ></text>
</g>
<g >
<title>__fdget (3,991,038,463 samples, 0.03%)</title><rect x="654.7" y="1429" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="657.70" y="1439.5" ></text>
</g>
<g >
<title>try_charge_memcg (9,565,252,355 samples, 0.06%)</title><rect x="262.7" y="1285" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="265.75" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,610,903,149 samples, 0.12%)</title><rect x="43.6" y="1445" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="46.60" y="1455.5" ></text>
</g>
<g >
<title>[bash] (2,593,226,907 samples, 0.02%)</title><rect x="52.1" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.05" y="1375.5" ></text>
</g>
<g >
<title>__sys_recvfrom (4,089,734,009 samples, 0.03%)</title><rect x="924.4" y="1461" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="927.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (522,925,418,017 samples, 3.44%)</title><rect x="228.2" y="1333" width="40.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="231.18" y="1343.5" >__k..</text>
</g>
<g >
<title>wait_for_unix_gc (11,393,112,595 samples, 0.08%)</title><rect x="885.0" y="1397" width="0.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="887.97" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="309" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="319.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (7,109,378,006 samples, 0.05%)</title><rect x="287.4" y="1317" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="290.42" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_statx (3,618,767,636 samples, 0.02%)</title><rect x="20.8" y="1445" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="23.77" y="1455.5" ></text>
</g>
<g >
<title>__libc_start_main (51,583,707,722 samples, 0.34%)</title><rect x="19.3" y="1573" width="4.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="22.32" y="1583.5" ></text>
</g>
<g >
<title>ksys_read (1,832,596,243 samples, 0.01%)</title><rect x="48.4" y="1541" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="51.41" y="1551.5" ></text>
</g>
<g >
<title>kmalloc_slab (15,537,105,368 samples, 0.10%)</title><rect x="270.0" y="1333" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="272.96" y="1343.5" ></text>
</g>
<g >
<title>kfree_skbmem (5,725,862,283 samples, 0.04%)</title><rect x="543.6" y="1381" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="546.56" y="1391.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (7,720,606,309 samples, 0.05%)</title><rect x="1120.9" y="1365" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1123.88" y="1375.5" ></text>
</g>
<g >
<title>set_default_locale (2,693,714,726 samples, 0.02%)</title><rect x="52.3" y="1525" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="55.28" y="1535.5" ></text>
</g>
<g >
<title>amd_clear_divider (2,809,546,825 samples, 0.02%)</title><rect x="616.1" y="1461" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="619.10" y="1471.5" ></text>
</g>
<g >
<title>write (18,895,600,503 samples, 0.12%)</title><rect x="43.6" y="1461" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="46.58" y="1471.5" ></text>
</g>
<g >
<title>poll_idle (1,374,635,852 samples, 0.01%)</title><rect x="17.6" y="1477" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="20.58" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,407,003,146 samples, 0.01%)</title><rect x="49.0" y="1477" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="52.01" y="1487.5" ></text>
</g>
<g >
<title>uv__fs_read (3,556,998,612 samples, 0.02%)</title><rect x="37.4" y="1525" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="40.43" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (2,989,721,759 samples, 0.02%)</title><rect x="25.2" y="1557" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="28.21" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3,219,755,771 samples, 0.02%)</title><rect x="1028.9" y="1349" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1031.90" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,292,329,148 samples, 0.01%)</title><rect x="20.3" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.32" y="1455.5" ></text>
</g>
<g >
<title>kfree_skbmem (5,829,851,485 samples, 0.04%)</title><rect x="1101.1" y="1381" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1104.14" y="1391.5" ></text>
</g>
<g >
<title>__check_object_size (130,882,051,002 samples, 0.86%)</title><rect x="154.6" y="1381" width="10.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="157.59" y="1391.5" ></text>
</g>
<g >
<title>kmalloc_slab (4,500,663,593 samples, 0.03%)</title><rect x="824.6" y="1349" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="827.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,066,246,437 samples, 0.08%)</title><rect x="30.0" y="789" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.04" y="799.5" ></text>
</g>
<g >
<title>unmap_and_move (2,155,565,612 samples, 0.01%)</title><rect x="16.7" y="1493" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="19.68" y="1503.5" ></text>
</g>
<g >
<title>__kmem_cache_free (6,340,615,023 samples, 0.04%)</title><rect x="1032.5" y="1333" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1035.46" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (119,720,807,265 samples, 0.79%)</title><rect x="552.9" y="1365" width="9.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="555.95" y="1375.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (5,981,353,871 samples, 0.04%)</title><rect x="305.2" y="1349" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="308.17" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,355,001,251 samples, 0.02%)</title><rect x="991.1" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="994.12" y="1391.5" ></text>
</g>
<g >
<title>do_sys_poll (12,675,904,232 samples, 0.08%)</title><rect x="42.4" y="1477" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="45.42" y="1487.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,194,375,398 samples, 0.01%)</title><rect x="262.0" y="1237" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="265.05" y="1247.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (10,128,009,160 samples, 0.07%)</title><rect x="175.4" y="1381" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="178.39" y="1391.5" ></text>
</g>
<g >
<title>__fdget (1,431,238,202 samples, 0.01%)</title><rect x="42.5" y="1445" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="45.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="549" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="773" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3,469,188,583 samples, 0.02%)</title><rect x="1014.3" y="1285" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1017.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1397" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,949,752,131 samples, 0.05%)</title><rect x="1095.2" y="1317" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1098.15" y="1327.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (5,513,189,407 samples, 0.04%)</title><rect x="569.2" y="1317" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="572.18" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (8,690,506,071 samples, 0.06%)</title><rect x="436.2" y="1381" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="439.23" y="1391.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (12,577,025,303 samples, 0.08%)</title><rect x="1026.9" y="1301" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1029.89" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,427,169,859 samples, 0.01%)</title><rect x="10.5" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.47" y="1583.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (4,041,814,176 samples, 0.03%)</title><rect x="821.7" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="824.69" y="1327.5" ></text>
</g>
<g >
<title>statx (3,787,437,128 samples, 0.02%)</title><rect x="20.8" y="1493" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="23.76" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (1,696,266,711 samples, 0.01%)</title><rect x="35.8" y="1461" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="38.83" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,839,953,665 samples, 0.02%)</title><rect x="18.1" y="1477" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="21.10" y="1487.5" ></text>
</g>
<g >
<title>[ls] (2,362,760,834 samples, 0.02%)</title><rect x="23.5" y="1557" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.47" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,545,254,483 samples, 0.02%)</title><rect x="37.4" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.43" y="1503.5" ></text>
</g>
<g >
<title>skb_release_data (477,096,118,850 samples, 3.14%)</title><rect x="474.2" y="1365" width="37.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="477.18" y="1375.5" >skb..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,145,167,089 samples, 0.01%)</title><rect x="435.7" y="1381" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="438.71" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (10,279,670,183 samples, 0.07%)</title><rect x="256.8" y="1269" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="259.83" y="1279.5" ></text>
</g>
<g >
<title>_dl_catch_error (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1413" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="26.52" y="1423.5" ></text>
</g>
<g >
<title>__check_object_size (7,924,845,658 samples, 0.05%)</title><rect x="1124.0" y="1333" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1126.99" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,995,867,872 samples, 0.06%)</title><rect x="36.2" y="1493" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="39.23" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1157" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1167.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (4,756,515,977 samples, 0.03%)</title><rect x="883.4" y="1397" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="886.39" y="1407.5" ></text>
</g>
<g >
<title>mod_memcg_state (1,378,550,186 samples, 0.01%)</title><rect x="262.3" y="1285" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="265.29" y="1295.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (8,744,192,495 samples, 0.06%)</title><rect x="496.3" y="1301" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="499.28" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,306,886,226 samples, 0.02%)</title><rect x="53.3" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="277" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="693" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="703.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,965,027,704 samples, 0.02%)</title><rect x="791.8" y="1269" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="794.77" y="1279.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,838,051,005 samples, 0.01%)</title><rect x="547.6" y="1381" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="550.62" y="1391.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (8,131,158,177 samples, 0.05%)</title><rect x="840.2" y="1317" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="843.24" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,957,756,733 samples, 0.01%)</title><rect x="65.5" y="1509" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="68.46" y="1519.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,646,427,320 samples, 0.04%)</title><rect x="349.1" y="1477" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="352.09" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,308,333,104 samples, 0.02%)</title><rect x="53.3" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.30" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,170,579,842 samples, 0.03%)</title><rect x="19.6" y="1317" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.63" y="1327.5" ></text>
</g>
<g >
<title>memcg_account_kmem (3,424,358,767 samples, 0.02%)</title><rect x="1027.1" y="1285" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1030.12" y="1295.5" ></text>
</g>
<g >
<title>memset_erms (22,856,795,598 samples, 0.15%)</title><rect x="303.4" y="1349" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="306.39" y="1359.5" ></text>
</g>
<g >
<title>ksys_read (2,905,286,503 samples, 0.02%)</title><rect x="33.5" y="1493" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="36.46" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (1,560,054,797 samples, 0.01%)</title><rect x="35.8" y="1445" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="38.83" y="1455.5" ></text>
</g>
<g >
<title>put_cpu_partial (10,994,559,155 samples, 0.07%)</title><rect x="495.4" y="1285" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="498.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="655.5" ></text>
</g>
<g >
<title>__fget_light (4,189,277,095 samples, 0.03%)</title><rect x="613.1" y="1413" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="616.11" y="1423.5" ></text>
</g>
<g >
<title>start_secondary (2,770,757,999 samples, 0.02%)</title><rect x="45.8" y="1573" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="48.79" y="1583.5" ></text>
</g>
<g >
<title>proactive_compact_node (1,609,912,127 samples, 0.01%)</title><rect x="55.8" y="1541" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="58.80" y="1551.5" ></text>
</g>
<g >
<title>recv (11,654,461,201 samples, 0.08%)</title><rect x="69.1" y="1573" width="0.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="72.14" y="1583.5" ></text>
</g>
<g >
<title>sock_wfree (365,808,645,792 samples, 2.41%)</title><rect x="514.3" y="1333" width="28.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="517.27" y="1343.5" >so..</text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (4,498,323,459 samples, 0.03%)</title><rect x="238.3" y="1301" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="241.27" y="1311.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,984,944,601 samples, 0.04%)</title><rect x="257.6" y="1301" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="260.63" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1445" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="725" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,756,496,574 samples, 0.06%)</title><rect x="30.1" y="661" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.06" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1061" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1071.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2,097,035,468 samples, 0.01%)</title><rect x="1119.2" y="1333" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1122.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1503.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (22,386,202,156 samples, 0.15%)</title><rect x="43.5" y="1541" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="46.47" y="1551.5" ></text>
</g>
<g >
<title>__rcu_read_lock (21,271,579,257 samples, 0.14%)</title><rect x="792.5" y="1301" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="795.49" y="1311.5" ></text>
</g>
<g >
<title>memset (4,396,486,545 samples, 0.03%)</title><rect x="855.3" y="1349" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="858.33" y="1359.5" ></text>
</g>
<g >
<title>skb_queue_tail (411,234,167,607 samples, 2.71%)</title><rect x="727.1" y="1397" width="31.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="730.07" y="1407.5" >sk..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1509" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1519.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (41,458,082,152 samples, 0.27%)</title><rect x="242.4" y="1301" width="3.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="245.40" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,124,223,264 samples, 0.05%)</title><rect x="30.1" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.09" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="789" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="799.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,458,437,409 samples, 0.02%)</title><rect x="56.0" y="1509" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="58.96" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,653,842,688 samples, 0.03%)</title><rect x="958.7" y="1397" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="961.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,759,282,362 samples, 0.12%)</title><rect x="30.0" y="1029" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.00" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="367.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (6,382,747,655 samples, 0.04%)</title><rect x="834.9" y="1333" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="837.94" y="1343.5" ></text>
</g>
<g >
<title>unix_write_space (50,600,309,861 samples, 0.33%)</title><rect x="1096.4" y="1317" width="3.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1099.40" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (30,420,484,133 samples, 0.20%)</title><rect x="62.3" y="1557" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="65.27" y="1567.5" ></text>
</g>
<g >
<title>journal-offline (11,458,922,709 samples, 0.08%)</title><rect x="12.8" y="1605" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="15.79" y="1615.5" ></text>
</g>
<g >
<title>refill_stock (3,938,039,098 samples, 0.03%)</title><rect x="471.9" y="1285" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="474.94" y="1295.5" ></text>
</g>
<g >
<title>mod_objcg_state (78,503,948,405 samples, 0.52%)</title><rect x="461.5" y="1333" width="6.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="464.51" y="1343.5" ></text>
</g>
<g >
<title>memset (3,681,198,165 samples, 0.02%)</title><rect x="303.1" y="1349" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="306.10" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,337,419,893 samples, 0.11%)</title><rect x="34.0" y="1573" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.03" y="1583.5" ></text>
</g>
<g >
<title>balance_pgdat (1,365,615,836 samples, 0.01%)</title><rect x="62.0" y="1541" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="65.05" y="1551.5" ></text>
</g>
<g >
<title>___slab_alloc (38,066,299,023 samples, 0.25%)</title><rect x="832.0" y="1333" width="2.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="834.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,707,586,320 samples, 0.06%)</title><rect x="34.7" y="85" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1093" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,289,683,782 samples, 0.01%)</title><rect x="33.7" y="181" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="191.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (280,720,338,907 samples, 1.85%)</title><rect x="152.5" y="1397" width="21.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="155.48" y="1407.5" >s..</text>
</g>
<g >
<title>load_elf_binary (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1461" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="26.78" y="1471.5" ></text>
</g>
<g >
<title>schedule (2,494,550,038 samples, 0.02%)</title><rect x="43.0" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="46.00" y="1423.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,613,898,265 samples, 0.01%)</title><rect x="11.8" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.83" y="1519.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (355,499,290,639 samples, 2.34%)</title><rect x="730.2" y="1365" width="27.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="733.25" y="1375.5" >_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,406,091,337 samples, 0.01%)</title><rect x="49.0" y="1461" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.01" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,517,598,284 samples, 0.06%)</title><rect x="30.1" y="613" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.06" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="223.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,049,068,169 samples, 0.01%)</title><rect x="45.8" y="1525" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="48.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,039,617,462 samples, 0.01%)</title><rect x="30.1" y="261" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.13" y="271.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (9,454,862,395 samples, 0.06%)</title><rect x="1016.5" y="1333" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1019.52" y="1343.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,883,478,265 samples, 0.03%)</title><rect x="822.8" y="1333" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="825.78" y="1343.5" ></text>
</g>
<g >
<title>__send (3,540,579,744,358 samples, 23.32%)</title><rect x="629.6" y="1509" width="275.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="632.63" y="1519.5" >__send</text>
</g>
<g >
<title>__libc_start_main (18,820,869,015 samples, 0.12%)</title><rect x="53.6" y="1573" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="56.56" y="1583.5" ></text>
</g>
<g >
<title>__check_heap_object (6,643,810,693 samples, 0.04%)</title><rect x="709.7" y="1349" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="712.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="885" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="895.5" ></text>
</g>
<g >
<title>alloc_pages (2,268,293,936 samples, 0.01%)</title><rect x="26.4" y="1237" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="29.38" y="1247.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4,877,824,023 samples, 0.03%)</title><rect x="36.4" y="1397" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.43" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,224,551,748 samples, 0.05%)</title><rect x="30.1" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.08" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,800,993,546 samples, 0.01%)</title><rect x="45.1" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="48.07" y="1471.5" ></text>
</g>
<g >
<title>memcg_account_kmem (3,835,084,330 samples, 0.03%)</title><rect x="301.6" y="1317" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="304.56" y="1327.5" ></text>
</g>
<g >
<title>skb_set_owner_w (150,395,960,800 samples, 0.99%)</title><rect x="307.6" y="1381" width="11.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="310.57" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,337,988,228 samples, 0.14%)</title><rect x="21.5" y="1477" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.51" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,309,011,918,537 samples, 21.79%)</title><rect x="923.3" y="1477" width="257.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="926.29" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,097,682,871 samples, 0.02%)</title><rect x="48.3" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="51.34" y="1599.5" ></text>
</g>
<g >
<title>unmap_page_range (45,426,712,115 samples, 0.30%)</title><rect x="38.7" y="1333" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="41.74" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (4,602,973,611 samples, 0.03%)</title><rect x="1181.5" y="1493" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1184.48" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,783,665,805 samples, 0.01%)</title><rect x="37.0" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.01" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (21,139,340,930 samples, 0.14%)</title><rect x="50.8" y="1573" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="53.85" y="1583.5" ></text>
</g>
<g >
<title>__check_heap_object (5,316,833,451 samples, 0.04%)</title><rect x="156.2" y="1349" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.23" y="1359.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5,625,711,559 samples, 0.04%)</title><rect x="257.2" y="1253" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="260.15" y="1263.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9,252,530,286 samples, 0.06%)</title><rect x="1189.3" y="1589" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.28" y="1599.5" ></text>
</g>
<g >
<title>skb_unlink (148,139,801,586 samples, 0.98%)</title><rect x="1108.9" y="1381" width="11.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1111.92" y="1391.5" ></text>
</g>
<g >
<title>ksys_write (18,265,749,648 samples, 0.12%)</title><rect x="43.6" y="1397" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="46.62" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,307,104,026 samples, 0.09%)</title><rect x="30.0" y="853" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.03" y="863.5" ></text>
</g>
<g >
<title>consume_stock (1,687,422,085 samples, 0.01%)</title><rect x="854.5" y="1301" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="857.51" y="1311.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (7,037,189,741 samples, 0.05%)</title><rect x="56.0" y="1589" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="58.95" y="1599.5" ></text>
</g>
<g >
<title>begin_new_exec (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1445" width="4.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="40.99" y="1455.5" ></text>
</g>
<g >
<title>free_pgtables (6,579,536,947 samples, 0.04%)</title><rect x="38.0" y="1365" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="41.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,782,601,711 samples, 0.06%)</title><rect x="30.1" y="677" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.05" y="687.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (6,695,948,397 samples, 0.04%)</title><rect x="964.5" y="1397" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="967.51" y="1407.5" ></text>
</g>
<g >
<title>memset_erms (21,579,246,126 samples, 0.14%)</title><rect x="855.7" y="1349" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="858.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,177,971,875 samples, 0.01%)</title><rect x="30.1" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.12" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,317,209,118 samples, 0.01%)</title><rect x="19.1" y="1413" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.07" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (4,344,919,091 samples, 0.03%)</title><rect x="625.2" y="1493" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="628.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,134,287,849 samples, 0.01%)</title><rect x="30.1" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.13" y="287.5" ></text>
</g>
<g >
<title>[perf-486471.map] (2,028,051,178 samples, 0.01%)</title><rect x="29.1" y="1589" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="32.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="719.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (2,572,026,067,616 samples, 16.94%)</title><rect x="686.0" y="1413" width="199.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="689.00" y="1423.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>security_socket_getpeersec_dgram (4,289,979,385 samples, 0.03%)</title><rect x="680.7" y="1413" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="683.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="821" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="831.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,292,591,873 samples, 0.01%)</title><rect x="64.7" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="67.67" y="1423.5" ></text>
</g>
<g >
<title>wake_up_q (1,468,802,018 samples, 0.01%)</title><rect x="33.3" y="1397" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="36.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,460,279,198 samples, 0.13%)</title><rect x="30.0" y="1125" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.98" y="1135.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,574,332,964 samples, 0.04%)</title><rect x="265.4" y="1317" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="268.40" y="1327.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,225,305,009 samples, 0.03%)</title><rect x="818.6" y="1317" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="821.65" y="1327.5" ></text>
</g>
<g >
<title>skb_release_data (6,186,429,065 samples, 0.04%)</title><rect x="549.9" y="1381" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="552.91" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (33,480,263,459 samples, 0.22%)</title><rect x="65.7" y="1589" width="2.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.69" y="1599.5" ></text>
</g>
<g >
<title>__check_heap_object (25,831,207,266 samples, 0.17%)</title><rect x="712.8" y="1333" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="715.77" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,644,112,387 samples, 0.04%)</title><rect x="441.2" y="1349" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="444.20" y="1359.5" ></text>
</g>
<g >
<title>do_statx (3,083,278,658 samples, 0.02%)</title><rect x="20.8" y="1429" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="23.77" y="1439.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,061,099,782 samples, 0.03%)</title><rect x="851.2" y="1333" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="854.24" y="1343.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (5,267,312,469 samples, 0.03%)</title><rect x="1067.8" y="1317" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1070.77" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,880,506,153 samples, 0.01%)</title><rect x="13.4" y="1509" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="16.37" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,709,468,637 samples, 0.01%)</title><rect x="45.8" y="1509" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="48.80" y="1519.5" ></text>
</g>
<g >
<title>skb_free_head (3,320,769,272 samples, 0.02%)</title><rect x="1029.6" y="1365" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1032.62" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="661" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="671.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,800,601,020 samples, 0.04%)</title><rect x="795.8" y="1301" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="798.83" y="1311.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (2,402,603,106 samples, 0.02%)</title><rect x="128.6" y="1381" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="131.61" y="1391.5" ></text>
</g>
<g >
<title>mod_objcg_state (72,704,424,010 samples, 0.48%)</title><rect x="1053.7" y="1301" width="5.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1056.67" y="1311.5" ></text>
</g>
<g >
<title>memset_erms (31,334,438,490 samples, 0.21%)</title><rect x="265.9" y="1317" width="2.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="268.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,985,309,696 samples, 0.04%)</title><rect x="30.1" y="437" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.09" y="447.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (13,601,815,181 samples, 0.09%)</title><rect x="237.2" y="1285" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="240.19" y="1295.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (57,301,116,490 samples, 0.38%)</title><rect x="491.0" y="1285" width="4.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="493.97" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,045,483,284 samples, 0.04%)</title><rect x="30.1" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.09" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,088,033,970 samples, 0.01%)</title><rect x="18.6" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="21.56" y="1583.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (5,776,600,682 samples, 0.04%)</title><rect x="707.7" y="1381" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="710.69" y="1391.5" ></text>
</g>
<g >
<title>[bash] (18,367,553,910 samples, 0.12%)</title><rect x="50.8" y="1525" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="53.85" y="1535.5" ></text>
</g>
<g >
<title>[bash] (1,843,131,105 samples, 0.01%)</title><rect x="51.8" y="1173" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.80" y="1183.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,896,412,392 samples, 0.05%)</title><rect x="1172.4" y="1461" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1175.44" y="1471.5" ></text>
</g>
<g >
<title>__sys_recvfrom (3,118,644,364,123 samples, 20.54%)</title><rect x="371.5" y="1445" width="242.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="374.51" y="1455.5" >__sys_recvfrom</text>
</g>
<g >
<title>memcg_account_kmem (12,527,967,411 samples, 0.08%)</title><rect x="814.8" y="1285" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="817.81" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_select (2,282,205,118 samples, 0.02%)</title><rect x="63.8" y="1509" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="66.81" y="1519.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (3,886,315,004 samples, 0.03%)</title><rect x="268.4" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="271.37" y="1327.5" ></text>
</g>
<g >
<title>__cond_resched (4,393,531,153 samples, 0.03%)</title><rect x="701.4" y="1397" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="704.44" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,741,322,475 samples, 0.11%)</title><rect x="53.6" y="1477" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.58" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,788,600,037 samples, 0.03%)</title><rect x="53.2" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.16" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,992,133,933 samples, 0.06%)</title><rect x="349.6" y="1477" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="352.61" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (25,037,904,576 samples, 0.16%)</title><rect x="1063.2" y="1269" width="2.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1066.24" y="1279.5" ></text>
</g>
<g >
<title>poll_idle (3,569,835,221 samples, 0.02%)</title><rect x="63.5" y="1477" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="66.48" y="1487.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (5,828,386,641 samples, 0.04%)</title><rect x="149.7" y="1381" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="152.72" y="1391.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1397" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,379,107,461 samples, 0.01%)</title><rect x="31.4" y="1061" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.38" y="1071.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (10,285,152,346 samples, 0.07%)</title><rect x="36.2" y="1541" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="39.17" y="1551.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (1,776,073,658 samples, 0.01%)</title><rect x="37.2" y="1541" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="40.24" y="1551.5" ></text>
</g>
<g >
<title>refill_obj_stock (5,520,979,367 samples, 0.04%)</title><rect x="472.3" y="1333" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="475.33" y="1343.5" ></text>
</g>
<g >
<title>proc_reg_read (3,282,908,905 samples, 0.02%)</title><rect x="37.4" y="1413" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="40.45" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="629" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="639.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (6,810,584,462 samples, 0.04%)</title><rect x="41.6" y="1285" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="44.65" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,863,874,829 samples, 0.12%)</title><rect x="30.0" y="1061" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.99" y="1071.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (2,165,646,498 samples, 0.01%)</title><rect x="44.2" y="1237" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="47.24" y="1247.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,085,992,881 samples, 0.02%)</title><rect x="13.4" y="1557" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.37" y="1567.5" ></text>
</g>
<g >
<title>compact_zone (7,836,626,776 samples, 0.05%)</title><rect x="61.4" y="1525" width="0.6" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="64.44" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (12,988,669,729 samples, 0.09%)</title><rect x="922.3" y="1477" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="925.28" y="1487.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8,136,859,640 samples, 0.05%)</title><rect x="904.1" y="1493" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="907.13" y="1503.5" ></text>
</g>
<g >
<title>Watcher::notify (3,259,677,274 samples, 0.02%)</title><rect x="33.1" y="1557" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="36.14" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (7,253,771,540 samples, 0.05%)</title><rect x="51.5" y="1349" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.47" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,642,470,140 samples, 0.18%)</title><rect x="29.9" y="1397" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.91" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,278,982,204 samples, 0.05%)</title><rect x="646.0" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="648.96" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,527,491,396 samples, 0.04%)</title><rect x="997.1" y="1349" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1000.14" y="1359.5" ></text>
</g>
<g >
<title>setlocale (3,477,755,375 samples, 0.02%)</title><rect x="12.4" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.36" y="1535.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (7,973,791,932 samples, 0.05%)</title><rect x="244.0" y="1285" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="247.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,174,081,781 samples, 0.05%)</title><rect x="30.1" y="517" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.08" y="527.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,237,265,884 samples, 0.04%)</title><rect x="1181.0" y="1477" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1183.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="997" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1007.5" ></text>
</g>
<g >
<title>unmap_vmas (3,054,445,466 samples, 0.02%)</title><rect x="24.1" y="1445" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="27.05" y="1455.5" ></text>
</g>
<g >
<title>cache_from_obj (5,928,958,337 samples, 0.04%)</title><rect x="998.0" y="1349" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1001.00" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,603,611,678 samples, 0.01%)</title><rect x="19.8" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.75" y="1215.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (12,923,821,199 samples, 0.09%)</title><rect x="44.0" y="1285" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="46.99" y="1295.5" ></text>
</g>
<g >
<title>start_secondary (5,331,238,202 samples, 0.04%)</title><rect x="56.0" y="1573" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="58.95" y="1583.5" ></text>
</g>
<g >
<title>__fdget (4,495,974,463 samples, 0.03%)</title><rect x="931.2" y="1429" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="934.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="581" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="591.5" ></text>
</g>
<g >
<title>__tfind (1,388,779,491 samples, 0.01%)</title><rect x="54.4" y="1413" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="57.43" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,997,341,822 samples, 0.16%)</title><rect x="29.9" y="1365" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.93" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="927.5" ></text>
</g>
<g >
<title>exit_mmap (2,036,312,143 samples, 0.01%)</title><rect x="52.6" y="1381" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="55.56" y="1391.5" ></text>
</g>
<g >
<title>kmalloc_slab (16,964,878,986 samples, 0.11%)</title><rect x="264.1" y="1317" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="267.08" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (11,030,369,443 samples, 0.07%)</title><rect x="61.4" y="1589" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="64.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,034,453,847 samples, 0.15%)</title><rect x="30.0" y="1253" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.95" y="1263.5" ></text>
</g>
<g >
<title>__fsnotify_parent (3,305,012,960 samples, 0.02%)</title><rect x="43.7" y="1365" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="46.66" y="1375.5" ></text>
</g>
<g >
<title>refill_stock (5,777,291,467 samples, 0.04%)</title><rect x="1027.4" y="1285" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1030.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,444,059,976 samples, 0.06%)</title><rect x="30.1" y="581" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.07" y="591.5" ></text>
</g>
<g >
<title>unmap_and_move (6,688,802,767 samples, 0.04%)</title><rect x="61.5" y="1493" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="64.52" y="1503.5" ></text>
</g>
<g >
<title>__fdget (77,530,003,073 samples, 0.51%)</title><rect x="1163.2" y="1413" width="6.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1166.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1205" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1215.5" ></text>
</g>
<g >
<title>unmap_and_move (3,328,942,612 samples, 0.02%)</title><rect x="48.6" y="1493" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="51.63" y="1503.5" ></text>
</g>
<g >
<title>malloc (1,801,214,982 samples, 0.01%)</title><rect x="34.3" y="53" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="37.33" y="63.5" ></text>
</g>
<g >
<title>__build_skb_around (15,640,809,593 samples, 0.10%)</title><rect x="778.3" y="1349" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="781.26" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_poll (12,757,062,689 samples, 0.08%)</title><rect x="42.4" y="1493" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="45.42" y="1503.5" ></text>
</g>
<g >
<title>futex_wait (1,387,863,562 samples, 0.01%)</title><rect x="37.0" y="1429" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="40.02" y="1439.5" ></text>
</g>
<g >
<title>refill_obj_stock (4,496,622,714 samples, 0.03%)</title><rect x="815.9" y="1285" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="818.88" y="1295.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (10,585,903,018 samples, 0.07%)</title><rect x="605.0" y="1349" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="607.99" y="1359.5" ></text>
</g>
<g >
<title>[bash] (7,837,692,045 samples, 0.05%)</title><rect x="50.9" y="1461" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="53.86" y="1471.5" ></text>
</g>
<g >
<title>__sys_recvfrom (3,153,983,562,442 samples, 20.77%)</title><rect x="924.9" y="1445" width="245.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="927.88" y="1455.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="847.5" ></text>
</g>
<g >
<title>sock_wfree (379,943,480,968 samples, 2.50%)</title><rect x="1070.8" y="1333" width="29.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1073.81" y="1343.5" >so..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,760,248,039 samples, 0.02%)</title><rect x="150.2" y="1397" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="153.18" y="1407.5" ></text>
</g>
<g >
<title>copy_present_pte (8,228,736,721 samples, 0.05%)</title><rect x="27.6" y="1269" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="30.60" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (132,097,654,938 samples, 0.87%)</title><rect x="425.4" y="1381" width="10.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="428.44" y="1391.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (2,952,639,093 samples, 0.02%)</title><rect x="20.0" y="1397" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.99" y="1407.5" ></text>
</g>
<g >
<title>isolate_freepages_block (2,692,791,631 samples, 0.02%)</title><rect x="61.8" y="1445" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="64.81" y="1455.5" ></text>
</g>
<g >
<title>refill_stock (1,688,133,663 samples, 0.01%)</title><rect x="1065.2" y="1269" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1068.18" y="1279.5" ></text>
</g>
<g >
<title>__tsearch (1,612,086,892 samples, 0.01%)</title><rect x="11.2" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.25" y="1423.5" ></text>
</g>
<g >
<title>__check_object_size (2,350,995,819 samples, 0.02%)</title><rect x="707.5" y="1381" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="710.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1413" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="335.5" ></text>
</g>
<g >
<title>ksys_write (1,767,172,086 samples, 0.01%)</title><rect x="45.1" y="1429" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="48.07" y="1439.5" ></text>
</g>
<g >
<title>sock_recvmsg (2,959,531,323,937 samples, 19.49%)</title><rect x="932.0" y="1429" width="230.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="935.04" y="1439.5" >sock_recvmsg</text>
</g>
<g >
<title>unix_stream_read_generic (4,191,990,906 samples, 0.03%)</title><rect x="382.6" y="1413" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="385.60" y="1423.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,943,727,727 samples, 0.01%)</title><rect x="716.7" y="1333" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="719.70" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,672,547,413 samples, 0.02%)</title><rect x="19.0" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.97" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,390,758,728 samples, 0.04%)</title><rect x="18.8" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.82" y="1599.5" ></text>
</g>
<g >
<title>check_stack_object (7,313,701,551 samples, 0.05%)</title><rect x="164.2" y="1365" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="167.19" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,245,287,527 samples, 0.01%)</title><rect x="53.3" y="1445" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.30" y="1455.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,534,157,919 samples, 0.01%)</title><rect x="502.5" y="1269" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="505.53" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,985,019,572 samples, 0.03%)</title><rect x="11.7" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="357" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="367.5" ></text>
</g>
<g >
<title>vfs_write (17,906,345,676 samples, 0.12%)</title><rect x="43.6" y="1381" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="46.64" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,482,323,334 samples, 0.02%)</title><rect x="50.5" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1439.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2,551,277,189 samples, 0.02%)</title><rect x="43.0" y="1429" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="46.00" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,675,384,782 samples, 0.04%)</title><rect x="799.0" y="1285" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="801.99" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="837" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="847.5" ></text>
</g>
<g >
<title>check_heap_object (5,214,113,114 samples, 0.03%)</title><rect x="163.8" y="1365" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="166.78" y="1375.5" ></text>
</g>
<g >
<title>refill_stock (9,092,140,979 samples, 0.06%)</title><rect x="507.7" y="1253" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="510.74" y="1263.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (8,738,620,618 samples, 0.06%)</title><rect x="306.6" y="1365" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="309.62" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,324,806,615 samples, 0.11%)</title><rect x="30.0" y="949" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.01" y="959.5" ></text>
</g>
<g >
<title>command_substitute (4,475,680,940 samples, 0.03%)</title><rect x="51.7" y="1221" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="54.69" y="1231.5" ></text>
</g>
<g >
<title>cache_from_obj (21,874,698,067 samples, 0.14%)</title><rect x="458.9" y="1333" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="461.92" y="1343.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (2,706,944,391 samples, 0.02%)</title><rect x="549.7" y="1381" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="552.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1029" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (3,937,722,701 samples, 0.03%)</title><rect x="350.3" y="1493" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="353.31" y="1503.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (11,201,022,454 samples, 0.07%)</title><rect x="1052.7" y="1301" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1055.74" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (22,962,605,645 samples, 0.15%)</title><rect x="62.3" y="1525" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="65.30" y="1535.5" ></text>
</g>
<g >
<title>memcg_account_kmem (9,150,847,419 samples, 0.06%)</title><rect x="506.9" y="1253" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="509.89" y="1263.5" ></text>
</g>
<g >
<title>refill_obj_stock (2,200,064,962 samples, 0.01%)</title><rect x="301.9" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="304.89" y="1327.5" ></text>
</g>
<g >
<title>skb_unlink (6,286,879,703 samples, 0.04%)</title><rect x="964.0" y="1397" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="967.03" y="1407.5" ></text>
</g>
<g >
<title>execute_command (7,449,748,332 samples, 0.05%)</title><rect x="51.5" y="1413" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.47" y="1423.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (2,868,249,723,169 samples, 18.89%)</title><rect x="382.9" y="1413" width="222.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="385.93" y="1423.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>__mod_memcg_state (2,710,958,224 samples, 0.02%)</title><rect x="471.7" y="1253" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="474.66" y="1263.5" ></text>
</g>
<g >
<title>parent (7,159,285,110,733 samples, 47.15%)</title><rect x="626.4" y="1525" width="556.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="629.40" y="1535.5" >parent</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,309,831,000,756 samples, 21.80%)</title><rect x="646.6" y="1493" width="257.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="649.61" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="325" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="949" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="959.5" ></text>
</g>
<g >
<title>__rcu_read_lock (19,696,689,810 samples, 0.13%)</title><rect x="238.6" y="1301" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="241.62" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,839,861,767 samples, 0.16%)</title><rect x="29.9" y="1333" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.94" y="1343.5" ></text>
</g>
<g >
<title>__check_object_size (153,781,018,058 samples, 1.01%)</title><rect x="569.6" y="1317" width="12.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="572.60" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6,748,584,365 samples, 0.04%)</title><rect x="704.2" y="1397" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="707.23" y="1407.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,413,121,385 samples, 0.05%)</title><rect x="1180.4" y="1477" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1183.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="501" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,324,331,255 samples, 0.01%)</title><rect x="19.1" y="1429" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.07" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (8,427,393,272 samples, 0.06%)</title><rect x="32.2" y="1477" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="35.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1477" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1487.5" ></text>
</g>
<g >
<title>copy_pte_range (26,650,168,875 samples, 0.18%)</title><rect x="26.2" y="1285" width="2.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="29.23" y="1295.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (12,435,688,435 samples, 0.08%)</title><rect x="834.0" y="1317" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="836.96" y="1327.5" ></text>
</g>
<g >
<title>skb_set_owner_w (6,181,429,601 samples, 0.04%)</title><rect x="205.8" y="1397" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="208.77" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,024,795,382 samples, 0.08%)</title><rect x="30.0" y="773" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.04" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1157" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,653,559,748 samples, 0.01%)</title><rect x="20.6" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.62" y="1487.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (120,457,880,695 samples, 0.79%)</title><rect x="841.9" y="1333" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="844.88" y="1343.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5,728,982,533 samples, 0.04%)</title><rect x="710.3" y="1349" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="713.26" y="1359.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="26.78" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1317" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="293" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="303.5" ></text>
</g>
<g >
<title>___slab_alloc (42,161,301,543 samples, 0.28%)</title><rect x="788.8" y="1301" width="3.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="791.76" y="1311.5" ></text>
</g>
<g >
<title>buffer_migrate_folio_norefs (2,037,259,490 samples, 0.01%)</title><rect x="61.6" y="1445" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="64.58" y="1455.5" ></text>
</g>
<g >
<title>perf_poll (3,842,424,944 samples, 0.03%)</title><rect x="42.7" y="1445" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="45.70" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,415,834,176 samples, 0.02%)</title><rect x="56.0" y="1493" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="58.96" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1557" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="55.54" y="1567.5" ></text>
</g>
<g >
<title>__alloc_pages (2,056,947,879 samples, 0.01%)</title><rect x="26.4" y="1221" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="29.39" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,719,103,102 samples, 0.01%)</title><rect x="12.1" y="1589" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="15.07" y="1599.5" ></text>
</g>
<g >
<title>exec_mmap (2,246,395,687 samples, 0.01%)</title><rect x="52.5" y="1429" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="55.54" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="245" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,299,426,243 samples, 0.01%)</title><rect x="64.7" y="1429" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="67.67" y="1439.5" ></text>
</g>
<g >
<title>__alloc_skb (1,218,158,856,761 samples, 8.02%)</title><rect x="211.1" y="1365" width="94.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="214.12" y="1375.5" >__alloc_skb</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="901" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="911.5" ></text>
</g>
<g >
<title>consume_skb (1,401,182,766,430 samples, 9.23%)</title><rect x="992.3" y="1381" width="108.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="995.26" y="1391.5" >consume_skb</text>
</g>
<g >
<title>kthread (4,809,891,575 samples, 0.03%)</title><rect x="48.6" y="1573" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="51.59" y="1583.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (15,644,601,157 samples, 0.10%)</title><rect x="883.8" y="1397" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="886.76" y="1407.5" ></text>
</g>
<g >
<title>zap_pte_range (2,406,339,046 samples, 0.02%)</title><rect x="24.1" y="1381" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="27.10" y="1391.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (2,619,014,772 samples, 0.02%)</title><rect x="64.1" y="1509" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="67.10" y="1519.5" ></text>
</g>
<g >
<title>all (15,185,379,738,525 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>execute_command (7,256,094,690 samples, 0.05%)</title><rect x="51.5" y="1365" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.47" y="1375.5" ></text>
</g>
<g >
<title>search_binary_handler (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1477" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="55.54" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,139,340,930 samples, 0.14%)</title><rect x="50.8" y="1557" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.85" y="1567.5" ></text>
</g>
<g >
<title>__refill_stock (2,350,666,430 samples, 0.02%)</title><rect x="1065.0" y="1237" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1067.99" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,684,317,376 samples, 0.14%)</title><rect x="21.5" y="1461" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.53" y="1471.5" ></text>
</g>
<g >
<title>path_lookupat (1,603,654,025 samples, 0.01%)</title><rect x="21.2" y="1397" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="24.17" y="1407.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (535,188,295,831 samples, 3.52%)</title><rect x="1120.4" y="1381" width="41.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1123.43" y="1391.5" >uni..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,672,547,413 samples, 0.02%)</title><rect x="19.0" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.97" y="1487.5" ></text>
</g>
<g >
<title>ret_from_fork (4,436,204,089 samples, 0.03%)</title><rect x="16.6" y="1589" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="19.64" y="1599.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (9,224,050,905 samples, 0.06%)</title><rect x="42.5" y="1461" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="45.48" y="1471.5" ></text>
</g>
<g >
<title>iterate_dir (2,835,761,240 samples, 0.02%)</title><rect x="51.2" y="1285" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="54.16" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,331,571,013 samples, 0.01%)</title><rect x="1026.7" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1029.66" y="1311.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9,305,700,485 samples, 0.06%)</title><rect x="779.7" y="1349" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="782.75" y="1359.5" ></text>
</g>
<g >
<title>sleep (46,771,657,318 samples, 0.31%)</title><rect x="52.9" y="1605" width="3.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="55.87" y="1615.5" ></text>
</g>
<g >
<title>consume_skb (9,512,653,891 samples, 0.06%)</title><rect x="402.4" y="1397" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="405.41" y="1407.5" ></text>
</g>
<g >
<title>swapper (4,159,217,771 samples, 0.03%)</title><rect x="65.4" y="1605" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="68.37" y="1615.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (1,745,037,235 samples, 0.01%)</title><rect x="35.8" y="1477" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="38.83" y="1487.5" ></text>
</g>
<g >
<title>mutex_lock (49,757,022,125 samples, 0.33%)</title><rect x="1101.6" y="1381" width="3.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1104.60" y="1391.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,393,540,476 samples, 0.03%)</title><rect x="810.7" y="1253" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="813.70" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (8,937,683,609 samples, 0.06%)</title><rect x="17.0" y="1509" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="20.01" y="1519.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (5,832,293,307 samples, 0.04%)</title><rect x="891.4" y="1429" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="894.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1247.5" ></text>
</g>
<g >
<title>sshd (114,109,625,414 samples, 0.75%)</title><rect x="56.5" y="1605" width="8.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="59.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,707,586,320 samples, 0.06%)</title><rect x="34.7" y="117" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="821" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="831.5" ></text>
</g>
<g >
<title>[grep] (1,426,943,062 samples, 0.01%)</title><rect x="12.2" y="1525" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.24" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,470,881,157 samples, 0.04%)</title><rect x="148.7" y="1397" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="151.68" y="1407.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (4,371,342,259 samples, 0.03%)</title><rect x="20.0" y="1445" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="22.97" y="1455.5" ></text>
</g>
<g >
<title>kworker/dying (53,166,082,826 samples, 0.35%)</title><rect x="14.3" y="1605" width="4.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.25" y="1615.5" ></text>
</g>
<g >
<title>__refill_stock (1,994,169,348 samples, 0.01%)</title><rect x="1027.7" y="1269" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1030.72" y="1279.5" ></text>
</g>
<g >
<title>__unfreeze_partials (6,952,551,389 samples, 0.05%)</title><rect x="1052.2" y="1269" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1055.18" y="1279.5" ></text>
</g>
<g >
<title>node (230,782,422,931 samples, 1.52%)</title><rect x="24.3" y="1605" width="18.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="27.34" y="1615.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1,359,008,360 samples, 0.01%)</title><rect x="17.8" y="1525" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="20.83" y="1535.5" ></text>
</g>
<g >
<title>[expr] (13,895,506,076 samples, 0.09%)</title><rect x="10.6" y="1589" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.60" y="1599.5" ></text>
</g>
<g >
<title>__check_object_size (4,656,655,624 samples, 0.03%)</title><rect x="701.1" y="1397" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="704.08" y="1407.5" ></text>
</g>
<g >
<title>enqueue_task (2,141,718,004 samples, 0.01%)</title><rect x="64.1" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="67.12" y="1471.5" ></text>
</g>
<g >
<title>[sleep] (18,820,869,015 samples, 0.12%)</title><rect x="53.6" y="1589" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="56.56" y="1599.5" ></text>
</g>
<g >
<title>do_idle (2,048,814,611 samples, 0.01%)</title><rect x="65.5" y="1541" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="68.46" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,129,592,189 samples, 0.05%)</title><rect x="34.7" y="53" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.73" y="63.5" ></text>
</g>
<g >
<title>cpuidle_enter (8,461,310,169 samples, 0.06%)</title><rect x="49.0" y="1509" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="51.98" y="1519.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,536,429,917 samples, 0.01%)</title><rect x="17.0" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="20.03" y="1487.5" ></text>
</g>
<g >
<title>consume_obj_stock (25,830,984,921 samples, 0.17%)</title><rect x="812.7" y="1285" width="2.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="815.75" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,944,226,725 samples, 0.03%)</title><rect x="30.1" y="405" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.10" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (82,926,625,119 samples, 0.55%)</title><rect x="617.8" y="1461" width="6.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="620.78" y="1471.5" ></text>
</g>
<g >
<title>exec_mmap (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1429" width="4.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="40.99" y="1439.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (439,236,410,789 samples, 2.89%)</title><rect x="229.6" y="1317" width="34.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="232.64" y="1327.5" >__..</text>
</g>
<g >
<title>put_pid (4,089,328,163 samples, 0.03%)</title><rect x="547.8" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="550.77" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,309,879,463 samples, 0.02%)</title><rect x="10.8" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.85" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (51,406,961,713 samples, 0.34%)</title><rect x="19.3" y="1557" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.32" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="677" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="687.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (1,441,694,226,074 samples, 9.49%)</title><rect x="759.5" y="1397" width="112.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="762.52" y="1407.5" >sock_alloc_se..</text>
</g>
<g >
<title>skb_set_owner_w (6,288,332,752 samples, 0.04%)</title><rect x="759.0" y="1397" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="762.03" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (7,779,063,249 samples, 0.05%)</title><rect x="50.9" y="1445" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="53.86" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (3,085,992,881 samples, 0.02%)</title><rect x="13.4" y="1573" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.37" y="1583.5" ></text>
</g>
<g >
<title>kworker/16:1 (2,227,013,479 samples, 0.01%)</title><rect x="14.1" y="1605" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="17.08" y="1615.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,764,917,296 samples, 0.02%)</title><rect x="45.8" y="1557" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="48.79" y="1567.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (24,387,987,617 samples, 0.16%)</title><rect x="380.7" y="1413" width="1.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="383.71" y="1423.5" ></text>
</g>
<g >
<title>__xstat64 (8,863,148,007 samples, 0.06%)</title><rect x="32.1" y="1525" width="0.7" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="35.14" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="549" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="559.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (434,278,280,810 samples, 2.86%)</title><rect x="783.4" y="1317" width="33.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="786.42" y="1327.5" >__..</text>
</g>
<g >
<title>getdents64 (3,000,862,216 samples, 0.02%)</title><rect x="51.1" y="1349" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="54.15" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8,010,491,529 samples, 0.05%)</title><rect x="36.2" y="1461" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="39.25" y="1471.5" ></text>
</g>
<g >
<title>getgrgid (8,919,378,295 samples, 0.06%)</title><rect x="19.6" y="1477" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.61" y="1487.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (20,800,872,611 samples, 0.14%)</title><rect x="548.1" y="1381" width="1.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="551.08" y="1391.5" ></text>
</g>
<g >
<title>__cond_resched (3,479,960,783 samples, 0.02%)</title><rect x="229.4" y="1317" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="232.36" y="1327.5" ></text>
</g>
<g >
<title>amd_clear_divider (2,199,400,177 samples, 0.01%)</title><rect x="1172.3" y="1461" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1175.27" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="981" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="991.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,436,336,013 samples, 0.01%)</title><rect x="13.9" y="1557" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.91" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (40,751,964,170 samples, 0.27%)</title><rect x="334.5" y="1397" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="337.54" y="1407.5" ></text>
</g>
<g >
<title>should_failslab (1,944,126,397 samples, 0.01%)</title><rect x="305.6" y="1349" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="308.63" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,395,712,376 samples, 0.04%)</title><rect x="53.9" y="1397" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.91" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="165" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1253" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,257,396,071 samples, 0.03%)</title><rect x="18.8" y="1557" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.82" y="1567.5" ></text>
</g>
<g >
<title>[bash] (2,606,110,961 samples, 0.02%)</title><rect x="52.1" y="1397" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="55.05" y="1407.5" ></text>
</g>
<g >
<title>__sys_sendto (3,096,090,787,646 samples, 20.39%)</title><rect x="651.3" y="1445" width="240.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="654.26" y="1455.5" >__sys_sendto</text>
</g>
<g >
<title>[libc.so.6] (1,510,405,880 samples, 0.01%)</title><rect x="52.3" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.32" y="1407.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2,545,440,873,311 samples, 16.76%)</title><rect x="408.0" y="1397" width="197.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="411.01" y="1407.5" >unix_stream_read_generic</text>
</g>
<g >
<title>execute_command_internal (1,333,812,382 samples, 0.01%)</title><rect x="51.8" y="1141" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.81" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13,893,603,629 samples, 0.09%)</title><rect x="562.3" y="1365" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="565.25" y="1375.5" ></text>
</g>
<g >
<title>do_sys_poll (7,493,086,036 samples, 0.05%)</title><rect x="36.3" y="1445" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="39.27" y="1455.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,670,503,735 samples, 0.01%)</title><rect x="36.5" y="1333" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="39.52" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1381" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1391.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1317" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.52" y="1327.5" ></text>
</g>
<g >
<title>do_idle (3,772,736,443 samples, 0.02%)</title><rect x="18.1" y="1493" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="21.09" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,859,360,481 samples, 0.03%)</title><rect x="245.2" y="1285" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="248.25" y="1295.5" ></text>
</g>
<g >
<title>sock_sendmsg (2,972,260,148,116 samples, 19.57%)</title><rect x="655.4" y="1429" width="230.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="658.36" y="1439.5" >sock_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="581" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="591.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,086,588,877 samples, 0.04%)</title><rect x="1179.5" y="1429" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1182.49" y="1439.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1,585,419,626 samples, 0.01%)</title><rect x="257.5" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="260.47" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1557" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="26.78" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (39,136,269,597 samples, 0.26%)</title><rect x="25.5" y="1445" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.53" y="1455.5" ></text>
</g>
<g >
<title>ovl_write_iter (13,962,951,712 samples, 0.09%)</title><rect x="43.9" y="1365" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="46.93" y="1375.5" ></text>
</g>
<g >
<title>alloc_pages (2,023,689,414 samples, 0.01%)</title><rect x="25.9" y="1269" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="28.94" y="1279.5" ></text>
</g>
<g >
<title>mod_memcg_state (11,144,138,538 samples, 0.07%)</title><rect x="261.4" y="1269" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="264.42" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,867,047,082 samples, 0.01%)</title><rect x="61.3" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="64.26" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5,824,502,515 samples, 0.04%)</title><rect x="23.9" y="1557" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.89" y="1567.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,048,763,434 samples, 0.02%)</title><rect x="24.1" y="1429" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="27.05" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1221" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1013" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1285" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (18,602,391,876 samples, 0.12%)</title><rect x="62.3" y="1493" width="1.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="65.34" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6,492,304,180 samples, 0.04%)</title><rect x="150.7" y="1397" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="153.71" y="1407.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (2,582,962,758,048 samples, 17.01%)</title><rect x="131.8" y="1413" width="200.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="134.84" y="1423.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>ret_from_fork (2,028,930,552 samples, 0.01%)</title><rect x="55.8" y="1589" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="58.80" y="1599.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (9,962,215,629 samples, 0.07%)</title><rect x="552.2" y="1365" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="555.17" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,801,214,982 samples, 0.01%)</title><rect x="34.3" y="37" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.33" y="47.5" ></text>
</g>
<g >
<title>skb_free_head (450,409,452,275 samples, 2.97%)</title><rect x="476.3" y="1349" width="35.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="479.26" y="1359.5" >sk..</text>
</g>
<g >
<title>unix_stream_recvmsg (5,214,000,056 samples, 0.03%)</title><rect x="613.4" y="1429" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="616.44" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1333" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1343.5" ></text>
</g>
<g >
<title>__slab_free (112,402,581,351 samples, 0.74%)</title><rect x="1005.9" y="1333" width="8.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1008.88" y="1343.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (13,048,915,021 samples, 0.09%)</title><rect x="36.2" y="1557" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="39.17" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,308,333,104 samples, 0.02%)</title><rect x="53.3" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.30" y="1487.5" ></text>
</g>
<g >
<title>ion (1,853,809,761 samples, 0.01%)</title><rect x="45.1" y="1509" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="48.06" y="1519.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (7,721,371,024 samples, 0.05%)</title><rect x="935.5" y="1397" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="938.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="933" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1205" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1215.5" ></text>
</g>
<g >
<title>mod_objcg_state (5,215,483,796 samples, 0.03%)</title><rect x="472.8" y="1349" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="475.76" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="389" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5,241,311,726 samples, 0.03%)</title><rect x="467.1" y="1301" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="470.14" y="1311.5" ></text>
</g>
<g >
<title>kfree (6,899,555,342 samples, 0.05%)</title><rect x="475.7" y="1349" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="478.72" y="1359.5" ></text>
</g>
<g >
<title>m_show (1,403,813,132 samples, 0.01%)</title><rect x="48.4" y="1493" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="51.44" y="1503.5" ></text>
</g>
<g >
<title>sock_def_readable (6,083,603,561 samples, 0.04%)</title><rect x="684.6" y="1413" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="687.62" y="1423.5" ></text>
</g>
<g >
<title>[ls] (51,708,584,651 samples, 0.34%)</title><rect x="19.3" y="1589" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.31" y="1599.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (3,286,848,544 samples, 0.02%)</title><rect x="20.0" y="1413" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.97" y="1423.5" ></text>
</g>
<g >
<title>[sleep] (18,781,814,420 samples, 0.12%)</title><rect x="53.6" y="1541" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="56.56" y="1551.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (3,727,690,549 samples, 0.02%)</title><rect x="32.3" y="1381" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="35.34" y="1391.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,960,096,860 samples, 0.03%)</title><rect x="340.2" y="1445" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="343.24" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_state (4,291,811,700 samples, 0.03%)</title><rect x="853.9" y="1301" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="856.88" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,872,439,977 samples, 0.03%)</title><rect x="11.7" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="453" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="463.5" ></text>
</g>
<g >
<title>skb_release_head_state (420,266,671,594 samples, 2.77%)</title><rect x="1068.2" y="1365" width="32.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1071.18" y="1375.5" >sk..</text>
</g>
<g >
<title>copy_pmd_range (31,283,394,547 samples, 0.21%)</title><rect x="25.9" y="1301" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.88" y="1311.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (517,117,820,529 samples, 3.41%)</title><rect x="781.9" y="1333" width="40.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="784.95" y="1343.5" >__k..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="933" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="543.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (7,110,884,213 samples, 0.05%)</title><rect x="125.7" y="1413" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="128.69" y="1423.5" ></text>
</g>
<g >
<title>unix_scm_to_skb (6,184,307,186 samples, 0.04%)</title><rect x="685.5" y="1413" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="688.51" y="1423.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (4,964,341,094 samples, 0.03%)</title><rect x="1169.6" y="1429" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1172.58" y="1439.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (1,689,219,391 samples, 0.01%)</title><rect x="128.0" y="1397" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="130.99" y="1407.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,665,721,520 samples, 0.05%)</title><rect x="1065.8" y="1317" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1068.79" y="1327.5" ></text>
</g>
<g >
<title>migrate_pages (6,754,679,926 samples, 0.04%)</title><rect x="61.5" y="1509" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="64.52" y="1519.5" ></text>
</g>
<g >
<title>uv__async_io (4,358,594,313 samples, 0.03%)</title><rect x="35.8" y="1557" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="38.75" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2,749,864,872 samples, 0.02%)</title><rect x="64.1" y="1525" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="67.10" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (5,422,335,320 samples, 0.04%)</title><rect x="64.7" y="1445" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="67.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="421" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="431.5" ></text>
</g>
<g >
<title>filemap_add_folio (2,229,336,927 samples, 0.01%)</title><rect x="44.4" y="1189" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="47.44" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,545,254,483 samples, 0.02%)</title><rect x="37.4" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.43" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (4,537,812,067 samples, 0.03%)</title><rect x="51.7" y="1317" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="54.68" y="1327.5" ></text>
</g>
<g >
<title>record__mmap_read_all (22,400,748,607 samples, 0.15%)</title><rect x="43.5" y="1557" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="46.47" y="1567.5" ></text>
</g>
<g >
<title>vfs_readlink (1,969,486,672 samples, 0.01%)</title><rect x="21.3" y="1429" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="24.31" y="1439.5" ></text>
</g>
<g >
<title>dequeue_task (1,725,075,252 samples, 0.01%)</title><rect x="36.5" y="1349" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="39.52" y="1359.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,553,213,407 samples, 0.08%)</title><rect x="616.9" y="1461" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="619.88" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,676,706,548 samples, 0.05%)</title><rect x="244.6" y="1285" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="247.65" y="1295.5" ></text>
</g>
<g >
<title>sock_wfree (4,450,746,860 samples, 0.03%)</title><rect x="512.3" y="1349" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="515.32" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,660,395,242 samples, 0.02%)</title><rect x="506.0" y="1269" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="509.00" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (4,351,592,577 samples, 0.03%)</title><rect x="703.9" y="1397" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="706.89" y="1407.5" ></text>
</g>
<g >
<title>sock_sendmsg (3,009,364,109,283 samples, 19.82%)</title><rect x="99.2" y="1429" width="233.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="102.23" y="1439.5" >sock_sendmsg</text>
</g>
<g >
<title>cgroup_rstat_updated (1,330,186,945 samples, 0.01%)</title><rect x="507.4" y="1205" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="510.42" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="639.5" ></text>
</g>
<g >
<title>kmalloc_slab (15,036,679,282 samples, 0.10%)</title><rect x="823.4" y="1333" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="826.41" y="1343.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (43,109,398,195 samples, 0.28%)</title><rect x="285.7" y="1333" width="3.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="288.68" y="1343.5" ></text>
</g>
<g >
<title>recv@plt (2,863,103,693 samples, 0.02%)</title><rect x="626.0" y="1509" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="629.01" y="1519.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,567,475,111 samples, 0.05%)</title><rect x="840.9" y="1317" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="843.88" y="1327.5" ></text>
</g>
<g >
<title>check_heap_object (99,625,450,256 samples, 0.66%)</title><rect x="1129.1" y="1285" width="7.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1132.11" y="1295.5" ></text>
</g>
<g >
<title>compaction_alloc (1,937,765,740 samples, 0.01%)</title><rect x="48.7" y="1477" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="51.73" y="1487.5" ></text>
</g>
<g >
<title>__unfreeze_partials (7,967,626,148 samples, 0.05%)</title><rect x="1014.0" y="1301" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1017.00" y="1311.5" ></text>
</g>
<g >
<title>refill_obj_stock (71,652,230,852 samples, 0.47%)</title><rect x="1059.7" y="1285" width="5.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1062.75" y="1295.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (6,847,438,919 samples, 0.05%)</title><rect x="1022.8" y="1317" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1025.80" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,004,523,050 samples, 0.04%)</title><rect x="34.1" y="85" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="37.13" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1,944,340,081 samples, 0.01%)</title><rect x="35.6" y="1509" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="38.58" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,707,767,060 samples, 0.02%)</title><rect x="50.0" y="1461" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="52.99" y="1471.5" ></text>
</g>
<g >
<title>__build_skb_around (16,194,148,287 samples, 0.11%)</title><rect x="224.5" y="1349" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="227.54" y="1359.5" ></text>
</g>
<g >
<title>unmap_and_move (1,353,895,602 samples, 0.01%)</title><rect x="55.8" y="1493" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="58.81" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,661,660,808 samples, 0.02%)</title><rect x="34.1" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="37.13" y="63.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (149,448,005,578 samples, 0.98%)</title><rect x="799.5" y="1301" width="11.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="802.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,291,827,497 samples, 0.05%)</title><rect x="23.8" y="1573" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.78" y="1583.5" ></text>
</g>
<g >
<title>worker_thread (1,345,280,580 samples, 0.01%)</title><rect x="62.2" y="1557" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="65.17" y="1567.5" ></text>
</g>
<g >
<title>__fdget (77,749,164,483 samples, 0.51%)</title><rect x="607.1" y="1413" width="6.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="610.07" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,652,682,316 samples, 0.01%)</title><rect x="45.8" y="1493" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="48.80" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (4,018,901,121 samples, 0.03%)</title><rect x="21.2" y="1461" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="24.16" y="1471.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (2,244,928,116 samples, 0.01%)</title><rect x="37.0" y="1525" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.99" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,299,787,963 samples, 0.02%)</title><rect x="50.0" y="1477" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="52.99" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (69,484,046,871 samples, 0.46%)</title><rect x="258.1" y="1301" width="5.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="261.09" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (386,907,650,946 samples, 2.55%)</title><rect x="824.9" y="1349" width="30.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="827.93" y="1359.5" >km..</text>
</g>
<g >
<title>should_failslab (1,842,245,702 samples, 0.01%)</title><rect x="268.7" y="1317" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="271.67" y="1327.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (9,919,143,755 samples, 0.07%)</title><rect x="62.7" y="1477" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="65.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="933" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="943.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (3,373,525,319 samples, 0.02%)</title><rect x="128.8" y="1413" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="131.80" y="1423.5" ></text>
</g>
<g >
<title>dup_mmap (38,994,851,998 samples, 0.26%)</title><rect x="25.5" y="1349" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="28.53" y="1359.5" ></text>
</g>
<g >
<title>vfs_statx (6,611,327,923 samples, 0.04%)</title><rect x="32.3" y="1429" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="35.30" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,694,876,699 samples, 0.04%)</title><rect x="902.7" y="1477" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="905.68" y="1487.5" ></text>
</g>
<g >
<title>[ls] (2,286,348,929 samples, 0.02%)</title><rect x="23.5" y="1541" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.47" y="1551.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,681,593,710 samples, 0.02%)</title><rect x="271.2" y="1349" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="274.16" y="1359.5" ></text>
</g>
<g >
<title>import_single_range (19,569,087,430 samples, 0.13%)</title><rect x="1170.0" y="1445" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1172.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1173" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1183.5" ></text>
</g>
<g >
<title>__cond_resched (4,139,299,437 samples, 0.03%)</title><rect x="783.1" y="1317" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="786.10" y="1327.5" ></text>
</g>
<g >
<title>do_exit (5,692,862,367 samples, 0.04%)</title><rect x="23.9" y="1525" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="26.90" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,401,119,720 samples, 0.02%)</title><rect x="52.5" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.54" y="1599.5" ></text>
</g>
<g >
<title>ls (74,500,481,772 samples, 0.49%)</title><rect x="18.6" y="1605" width="5.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="21.56" y="1615.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,221,622,121 samples, 0.02%)</title><rect x="780.5" y="1349" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="783.47" y="1359.5" ></text>
</g>
<g >
<title>__entry_text_start (129,683,674,725 samples, 0.85%)</title><rect x="79.5" y="1493" width="10.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="82.54" y="1503.5" ></text>
</g>
<g >
<title>__nss_next2 (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="26.52" y="1503.5" ></text>
</g>
<g >
<title>refill_obj_stock (1,996,557,556 samples, 0.01%)</title><rect x="854.3" y="1317" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="857.25" y="1327.5" ></text>
</g>
<g >
<title>_dl_catch_exception (3,741,812,324 samples, 0.02%)</title><rect x="19.6" y="1269" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.64" y="1279.5" ></text>
</g>
<g >
<title>_copy_from_iter (59,349,725,284 samples, 0.39%)</title><rect x="164.8" y="1381" width="4.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="167.76" y="1391.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (64,476,989,355 samples, 0.42%)</title><rect x="897.1" y="1445" width="5.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="900.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1397" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1407.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (39,850,259,374 samples, 0.26%)</title><rect x="62.3" y="1589" width="3.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="65.27" y="1599.5" ></text>
</g>
<g >
<title>__clone (21,928,881,975 samples, 0.14%)</title><rect x="36.2" y="1589" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="39.17" y="1599.5" ></text>
</g>
<g >
<title>_dl_catch_exception (2,308,333,104 samples, 0.02%)</title><rect x="53.3" y="1509" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="56.30" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (10,653,051,695 samples, 0.07%)</title><rect x="17.0" y="1525" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="20.00" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (1,491,116,405 samples, 0.01%)</title><rect x="25.1" y="1541" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.07" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,729,291,338 samples, 0.18%)</title><rect x="29.9" y="1413" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.90" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (3,128,096,685,849 samples, 20.60%)</title><rect x="651.1" y="1461" width="243.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="654.08" y="1471.5" >__x64_sys_sendto</text>
</g>
<g >
<title>exit_mmap (54,997,596,459 samples, 0.36%)</title><rect x="38.0" y="1381" width="4.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="40.99" y="1391.5" ></text>
</g>
<g >
<title>import_single_range (20,041,506,337 samples, 0.13%)</title><rect x="891.8" y="1445" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="894.85" y="1455.5" ></text>
</g>
<g >
<title>__slab_free (6,185,349,054 samples, 0.04%)</title><rect x="442.2" y="1349" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="445.17" y="1359.5" ></text>
</g>
<g >
<title>start_kernel (9,383,171,921 samples, 0.06%)</title><rect x="64.6" y="1557" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="67.64" y="1567.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,789,100,196 samples, 0.01%)</title><rect x="579.9" y="1269" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="582.87" y="1279.5" ></text>
</g>
<g >
<title>child (17,737,354,098 samples, 0.12%)</title><rect x="65.7" y="1573" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="68.69" y="1583.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,325,654,479 samples, 0.02%)</title><rect x="817.2" y="1317" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="820.17" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1013" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,366,503,320 samples, 0.01%)</title><rect x="54.6" y="1397" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="57.60" y="1407.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,397,390,100 samples, 0.08%)</title><rect x="1173.0" y="1461" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1175.97" y="1471.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (1,253,346,452,149 samples, 8.25%)</title><rect x="762.3" y="1381" width="97.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="765.33" y="1391.5" >alloc_skb_w..</text>
</g>
<g >
<title>do_syscall_64 (8,596,948,307 samples, 0.06%)</title><rect x="32.2" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.16" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (37,112,021,425 samples, 0.24%)</title><rect x="42.3" y="1589" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="45.34" y="1599.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (7,767,325,032 samples, 0.05%)</title><rect x="850.6" y="1301" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="853.64" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (4,192,931,574 samples, 0.03%)</title><rect x="903.8" y="1493" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="906.80" y="1503.5" ></text>
</g>
<g >
<title>fdarray__poll (14,020,513,606 samples, 0.09%)</title><rect x="42.4" y="1557" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="45.38" y="1567.5" ></text>
</g>
<g >
<title>refill_obj_stock (56,184,395,401 samples, 0.37%)</title><rect x="467.9" y="1317" width="4.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="470.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="485" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="495.5" ></text>
</g>
<g >
<title>__tsearch (2,397,952,132 samples, 0.02%)</title><rect x="54.5" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="57.54" y="1423.5" ></text>
</g>
<g >
<title>compact_zone (2,689,921,961 samples, 0.02%)</title><rect x="16.6" y="1525" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="19.64" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1557" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1509" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,782,797,630 samples, 0.01%)</title><rect x="60.9" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="63.86" y="1599.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (6,085,611,576 samples, 0.04%)</title><rect x="1058.9" y="1285" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1061.85" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter (5,517,048,005 samples, 0.04%)</title><rect x="64.7" y="1461" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="67.65" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (67,895,292,938 samples, 0.45%)</title><rect x="1174.7" y="1445" width="5.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1177.68" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1381" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.52" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_state (3,527,932,688 samples, 0.02%)</title><rect x="301.6" y="1301" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="304.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="613" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="623.5" ></text>
</g>
<g >
<title>refill_obj_stock (55,059,935,888 samples, 0.36%)</title><rect x="1023.7" y="1317" width="4.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1026.66" y="1327.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (3,885,235,910 samples, 0.03%)</title><rect x="1136.9" y="1285" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1139.85" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1189" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1199.5" ></text>
</g>
<g >
<title>kthread (2,028,930,552 samples, 0.01%)</title><rect x="55.8" y="1573" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="58.80" y="1583.5" ></text>
</g>
<g >
<title>sock_wfree (3,629,520,276 samples, 0.02%)</title><rect x="1069.1" y="1349" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1072.13" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="885" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="895.5" ></text>
</g>
<g >
<title>kfree (438,343,122,801 samples, 2.89%)</title><rect x="477.2" y="1333" width="34.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="480.19" y="1343.5" >kf..</text>
</g>
<g >
<title>unix_stream_recvmsg (2,902,379,258,202 samples, 19.11%)</title><rect x="936.5" y="1413" width="225.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="939.49" y="1423.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>mmput (2,235,910,503 samples, 0.01%)</title><rect x="52.5" y="1413" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="55.54" y="1423.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4,935,555,133 samples, 0.03%)</title><rect x="17.2" y="1477" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="20.19" y="1487.5" ></text>
</g>
<g >
<title>load_elf_binary (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1461" width="4.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="40.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,434,744,955 samples, 0.13%)</title><rect x="30.0" y="1109" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.98" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="709" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="997" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1007.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (63,140,642,918 samples, 0.42%)</title><rect x="333.1" y="1429" width="4.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="336.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1311.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (11,294,353,987 samples, 0.07%)</title><rect x="331.7" y="1397" width="0.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="334.67" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="469" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="479.5" ></text>
</g>
<g >
<title>uv_spawn (39,865,664,515 samples, 0.26%)</title><rect x="25.5" y="1541" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.51" y="1551.5" ></text>
</g>
<g >
<title>__sys_sendto (6,391,433,027 samples, 0.04%)</title><rect x="650.6" y="1461" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="653.59" y="1471.5" ></text>
</g>
<g >
<title>__pte_alloc (3,476,235,238 samples, 0.02%)</title><rect x="26.3" y="1269" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="29.35" y="1279.5" ></text>
</g>
<g >
<title>walk_component (1,481,010,239 samples, 0.01%)</title><rect x="20.9" y="1365" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="23.86" y="1375.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (8,077,156,928 samples, 0.05%)</title><rect x="502.0" y="1285" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="505.02" y="1295.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (6,825,924,175 samples, 0.04%)</title><rect x="931.5" y="1429" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="934.51" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,779,418,401 samples, 0.01%)</title><rect x="45.1" y="1445" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="48.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,591,122,213 samples, 0.04%)</title><rect x="34.1" y="101" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="111.5" ></text>
</g>
<g >
<title>do_epoll_wait (1,869,021,323 samples, 0.01%)</title><rect x="35.6" y="1493" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="38.58" y="1503.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (10,075,815,048 samples, 0.07%)</title><rect x="1110.2" y="1365" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1113.23" y="1375.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (39,826,768,090 samples, 0.26%)</title><rect x="25.5" y="1525" width="3.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="28.51" y="1535.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (510,383,291,679 samples, 3.36%)</title><rect x="565.3" y="1349" width="39.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="568.33" y="1359.5" >__s..</text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (2,158,415,178 samples, 0.01%)</title><rect x="35.8" y="1541" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="38.80" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (66,349,823,873 samples, 0.44%)</title><rect x="618.6" y="1445" width="5.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="621.64" y="1455.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,530,109,396 samples, 0.01%)</title><rect x="17.0" y="1461" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.03" y="1471.5" ></text>
</g>
<g >
<title>proc_fill_cache (2,076,624,921 samples, 0.01%)</title><rect x="51.2" y="1237" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="54.20" y="1247.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1349" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.52" y="1359.5" ></text>
</g>
<g >
<title>__cond_resched (5,110,802,016 samples, 0.03%)</title><rect x="425.0" y="1381" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="428.05" y="1391.5" ></text>
</g>
<g >
<title>consume_stock (4,348,032,016 samples, 0.03%)</title><rect x="263.0" y="1269" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="265.98" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="597" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="607.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (1,354,558,323 samples, 0.01%)</title><rect x="62.0" y="1509" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="65.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="479.5" ></text>
</g>
<g >
<title>unix_passcred_enabled (3,937,353,556 samples, 0.03%)</title><rect x="330.2" y="1397" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="333.16" y="1407.5" ></text>
</g>
<g >
<title>mod_memcg_state (2,912,693,758 samples, 0.02%)</title><rect x="1027.2" y="1269" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1030.16" y="1279.5" ></text>
</g>
<g >
<title>__slab_free (5,315,372,338 samples, 0.04%)</title><rect x="1066.9" y="1317" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.88" y="1327.5" ></text>
</g>
<g >
<title>do_idle (3,063,492,654 samples, 0.02%)</title><rect x="13.4" y="1541" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.37" y="1551.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (69,517,379,029 samples, 0.46%)</title><rect x="811.6" y="1301" width="5.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="814.59" y="1311.5" ></text>
</g>
<g >
<title>expr (22,334,031,593 samples, 0.15%)</title><rect x="10.5" y="1605" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.47" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="869" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="879.5" ></text>
</g>
<g >
<title>skb_release_data (492,936,912,861 samples, 3.25%)</title><rect x="1029.9" y="1365" width="38.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1032.88" y="1375.5" >skb..</text>
</g>
<g >
<title>tlb_batch_pages_flush (6,810,584,462 samples, 0.04%)</title><rect x="41.6" y="1269" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="44.65" y="1279.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,710,655,347 samples, 0.02%)</title><rect x="1136.6" y="1269" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1139.64" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="565" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,707,586,320 samples, 0.06%)</title><rect x="34.7" y="101" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="111.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,513,694,341 samples, 0.01%)</title><rect x="18.2" y="1429" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="21.16" y="1439.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,453,047,274 samples, 0.02%)</title><rect x="834.7" y="1301" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="837.74" y="1311.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (7,693,533,770 samples, 0.05%)</title><rect x="467.0" y="1317" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="470.01" y="1327.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (8,182,632,863 samples, 0.05%)</title><rect x="858.8" y="1365" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="861.77" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,666,005,860 samples, 0.06%)</title><rect x="30.1" y="629" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.06" y="639.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,720,303,703 samples, 0.05%)</title><rect x="903.2" y="1477" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="906.20" y="1487.5" ></text>
</g>
<g >
<title>kswapd (1,365,615,836 samples, 0.01%)</title><rect x="62.0" y="1557" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="65.05" y="1567.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,252,597,698 samples, 0.02%)</title><rect x="62.4" y="1477" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="65.38" y="1487.5" ></text>
</g>
<g >
<title>__entry_text_start (128,539,872,972 samples, 0.85%)</title><rect x="636.0" y="1493" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="638.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="229" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="239.5" ></text>
</g>
<g >
<title>getgrgid_r (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1509" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="26.52" y="1519.5" ></text>
</g>
<g >
<title>exec_binprm (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1493" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="26.78" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,628,151,214 samples, 0.02%)</title><rect x="52.3" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.29" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,567,686,386 samples, 0.02%)</title><rect x="33.2" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.19" y="1471.5" ></text>
</g>
<g >
<title>inode_permission (2,547,029,841 samples, 0.02%)</title><rect x="32.4" y="1365" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="35.35" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,477,755,375 samples, 0.02%)</title><rect x="12.4" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (88,158,824,691 samples, 0.58%)</title><rect x="29.3" y="1589" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="32.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1317" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,719,103,102 samples, 0.01%)</title><rect x="12.1" y="1573" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.07" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (3,375,839,077 samples, 0.02%)</title><rect x="1062.9" y="1269" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1065.91" y="1279.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,352,617,764 samples, 0.01%)</title><rect x="11.8" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1525" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,301,237,564 samples, 0.06%)</title><rect x="10.7" y="1429" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,722,921,263 samples, 0.01%)</title><rect x="31.1" y="933" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.15" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1061" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1071.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5,828,386,641 samples, 0.04%)</title><rect x="149.7" y="1397" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="152.72" y="1407.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,333,252,349 samples, 0.04%)</title><rect x="285.2" y="1333" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="288.19" y="1343.5" ></text>
</g>
<g >
<title>check_heap_object (6,901,096,656 samples, 0.05%)</title><rect x="580.4" y="1301" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="583.39" y="1311.5" ></text>
</g>
<g >
<title>_copy_to_iter (10,984,837,912 samples, 0.07%)</title><rect x="567.7" y="1333" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="570.74" y="1343.5" ></text>
</g>
<g >
<title>import_single_range (18,149,795,718 samples, 0.12%)</title><rect x="613.8" y="1445" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="616.84" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5,678,984,827 samples, 0.04%)</title><rect x="625.6" y="1493" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="628.57" y="1503.5" ></text>
</g>
<g >
<title>proactive_compact_node (7,836,626,776 samples, 0.05%)</title><rect x="61.4" y="1541" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="64.44" y="1551.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (6,080,488,738 samples, 0.04%)</title><rect x="338.0" y="1429" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="340.99" y="1439.5" ></text>
</g>
<g >
<title>read (3,549,225,244 samples, 0.02%)</title><rect x="37.4" y="1509" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="40.43" y="1519.5" ></text>
</g>
<g >
<title>kernel_clone (39,136,269,597 samples, 0.26%)</title><rect x="25.5" y="1397" width="3.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="28.53" y="1407.5" ></text>
</g>
<g >
<title>expand_string_assignment (4,501,370,229 samples, 0.03%)</title><rect x="51.7" y="1253" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="54.68" y="1263.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (12,928,687,883 samples, 0.09%)</title><rect x="280.6" y="1317" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="283.56" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,635,080,171 samples, 0.12%)</title><rect x="53.6" y="1493" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.57" y="1503.5" ></text>
</g>
<g >
<title>uv__io_poll (8,087,002,416 samples, 0.05%)</title><rect x="35.5" y="1573" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="38.54" y="1583.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (60,478,994,570 samples, 0.40%)</title><rect x="467.6" y="1333" width="4.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="470.61" y="1343.5" ></text>
</g>
<g >
<title>compact_zone (1,609,912,127 samples, 0.01%)</title><rect x="55.8" y="1525" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="58.80" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,423,386,371 samples, 0.09%)</title><rect x="53.7" y="1429" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.71" y="1439.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4,745,263,005 samples, 0.03%)</title><rect x="49.1" y="1477" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="52.15" y="1487.5" ></text>
</g>
<g >
<title>memcg_account_kmem (4,956,278,633 samples, 0.03%)</title><rect x="853.8" y="1317" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="856.83" y="1327.5" ></text>
</g>
<g >
<title>kmalloc_size_roundup (18,962,778,631 samples, 0.12%)</title><rect x="269.7" y="1349" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="272.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="373" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="383.5" ></text>
</g>
<g >
<title>[grep] (1,348,741,410 samples, 0.01%)</title><rect x="12.2" y="1509" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="15.25" y="1519.5" ></text>
</g>
<g >
<title>skb_queue_tail (3,937,500,695 samples, 0.03%)</title><rect x="129.8" y="1413" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="132.76" y="1423.5" ></text>
</g>
<g >
<title>[bash] (18,066,482,198 samples, 0.12%)</title><rect x="50.9" y="1477" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="53.86" y="1487.5" ></text>
</g>
<g >
<title>kmalloc_reserve (545,133,363,980 samples, 3.59%)</title><rect x="780.7" y="1349" width="42.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="783.72" y="1359.5" >kma..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="693" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="677" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="197" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (6,240,309,050 samples, 0.04%)</title><rect x="147.3" y="1397" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="150.34" y="1407.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (2,830,432,602 samples, 0.02%)</title><rect x="33.2" y="1509" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="36.18" y="1519.5" ></text>
</g>
<g >
<title>refill_obj_stock (70,181,620,394 samples, 0.46%)</title><rect x="503.1" y="1285" width="5.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="506.08" y="1295.5" ></text>
</g>
<g >
<title>arch_call_rest_init (9,383,171,921 samples, 0.06%)</title><rect x="64.6" y="1541" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="67.64" y="1551.5" ></text>
</g>
<g >
<title>__check_heap_object (24,683,849,135 samples, 0.16%)</title><rect x="159.3" y="1333" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.34" y="1343.5" ></text>
</g>
<g >
<title>do_readlinkat (3,994,997,413 samples, 0.03%)</title><rect x="21.2" y="1445" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="24.16" y="1455.5" ></text>
</g>
<g >
<title>main (14,319,040,459,439 samples, 94.29%)</title><rect x="70.0" y="1541" width="1112.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="73.04" y="1551.5" >main</text>
</g>
<g >
<title>cpuidle_enter (18,933,113,893 samples, 0.12%)</title><rect x="62.3" y="1509" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="65.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,297,515,773 samples, 0.01%)</title><rect x="31.8" y="1317" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="34.77" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,346,827,865,184 samples, 22.04%)</title><rect x="90.2" y="1493" width="260.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="93.24" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>Watcher::isIgnored (33,853,045,648 samples, 0.22%)</title><rect x="29.5" y="1525" width="2.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="32.51" y="1535.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (123,253,463,535 samples, 0.81%)</title><rect x="289.1" y="1333" width="9.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="292.06" y="1343.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,329,209,915 samples, 0.04%)</title><rect x="623.3" y="1429" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="626.30" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1365" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1375.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (1,468,452,483 samples, 0.01%)</title><rect x="28.4" y="1317" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="31.35" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,971,238,296 samples, 0.07%)</title><rect x="30.1" y="709" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="33.05" y="719.5" ></text>
</g>
<g >
<title>make_child (1,399,282,994 samples, 0.01%)</title><rect x="51.5" y="1269" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="54.49" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="325" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1381" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,625,419,957 samples, 0.04%)</title><rect x="920.4" y="1493" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="923.37" y="1503.5" ></text>
</g>
<g >
<title>do_futex (1,440,842,819 samples, 0.01%)</title><rect x="37.0" y="1445" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="40.02" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (7,564,801,593 samples, 0.05%)</title><rect x="298.1" y="1301" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="301.05" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (1,491,116,405 samples, 0.01%)</title><rect x="25.1" y="1557" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="28.07" y="1567.5" ></text>
</g>
<g >
<title>__fget_light (73,541,413,020 samples, 0.48%)</title><rect x="1163.5" y="1397" width="5.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1166.51" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_read (3,541,013,482 samples, 0.02%)</title><rect x="37.4" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="40.43" y="1471.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (2,152,573,600 samples, 0.01%)</title><rect x="43.7" y="1301" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="46.74" y="1311.5" ></text>
</g>
<g >
<title>exec_binprm (2,531,861,707 samples, 0.02%)</title><rect x="52.5" y="1493" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="55.54" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4,604,873,805 samples, 0.03%)</title><rect x="703.4" y="1397" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="706.38" y="1407.5" ></text>
</g>
<g >
<title>execute_command (10,209,600,121 samples, 0.07%)</title><rect x="51.5" y="1461" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.47" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_execve (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1557" width="4.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="40.99" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,019,910,898 samples, 0.08%)</title><rect x="30.0" y="757" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.04" y="767.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,487,159,203 samples, 0.01%)</title><rect x="50.1" y="1429" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="53.07" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,280,247,000 samples, 0.02%)</title><rect x="33.4" y="1541" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.45" y="1551.5" ></text>
</g>
<g >
<title>__entry_text_start (129,722,961,284 samples, 0.85%)</title><rect x="910.3" y="1493" width="10.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="913.28" y="1503.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (5,747,511,427 samples, 0.04%)</title><rect x="25.0" y="1573" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="28.00" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,674,045,467 samples, 0.15%)</title><rect x="21.5" y="1493" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1525" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="36.71" y="1535.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3,378,524,653 samples, 0.02%)</title><rect x="64.8" y="1429" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="67.79" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,824,132,306 samples, 0.06%)</title><rect x="36.2" y="1477" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.25" y="1487.5" ></text>
</g>
<g >
<title>skb_release_head_state (411,408,540,211 samples, 2.71%)</title><rect x="511.3" y="1365" width="31.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="514.25" y="1375.5" >sk..</text>
</g>
<g >
<title>__virt_addr_valid (5,980,909,378 samples, 0.04%)</title><rect x="571.9" y="1285" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="574.90" y="1295.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (8,334,428,988 samples, 0.05%)</title><rect x="822.1" y="1333" width="0.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="825.13" y="1343.5" ></text>
</g>
<g >
<title>memcg_account_kmem (5,013,478,456 samples, 0.03%)</title><rect x="471.5" y="1285" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="474.50" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (6,616,731,323 samples, 0.04%)</title><rect x="64.6" y="1477" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="67.65" y="1487.5" ></text>
</g>
<g >
<title>__buffer_migrate_folio (1,933,344,625 samples, 0.01%)</title><rect x="61.6" y="1429" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="64.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="693" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="703.5" ></text>
</g>
<g >
<title>mas_store (1,530,246,591 samples, 0.01%)</title><rect x="28.4" y="1333" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="31.35" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (1,607,738,376 samples, 0.01%)</title><rect x="50.7" y="1589" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="53.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,653,475,751 samples, 0.14%)</title><rect x="30.0" y="1141" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.97" y="1151.5" ></text>
</g>
<g >
<title>seq_read (3,282,796,954 samples, 0.02%)</title><rect x="37.4" y="1397" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="40.45" y="1407.5" ></text>
</g>
<g >
<title>__check_heap_object (29,907,602,237 samples, 0.20%)</title><rect x="575.5" y="1269" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="578.50" y="1279.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::JobTask::Run (1,313,166,415 samples, 0.01%)</title><rect x="37.2" y="1525" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="40.24" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,482,323,334 samples, 0.02%)</title><rect x="50.5" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="53.51" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="181" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12,780,963,040 samples, 0.08%)</title><rect x="204.8" y="1381" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="207.78" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="949" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="959.5" ></text>
</g>
<g >
<title>setlocale (18,716,847,586 samples, 0.12%)</title><rect x="53.6" y="1525" width="1.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="56.57" y="1535.5" ></text>
</g>
<g >
<title>_copy_to_iter (64,765,986,996 samples, 0.43%)</title><rect x="1138.3" y="1317" width="5.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1141.29" y="1327.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,729,245,764 samples, 0.02%)</title><rect x="24.1" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="27.08" y="1407.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6,848,377,788 samples, 0.05%)</title><rect x="1128.6" y="1285" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1131.58" y="1295.5" ></text>
</g>
<g >
<title>should_failslab (2,660,390,769 samples, 0.02%)</title><rect x="854.7" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="857.74" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,512,872,521 samples, 0.01%)</title><rect x="18.9" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.85" y="1519.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (6,644,919,428 samples, 0.04%)</title><rect x="151.2" y="1397" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="154.21" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (9,383,171,921 samples, 0.06%)</title><rect x="64.6" y="1573" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="67.64" y="1583.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (5,621,817,644 samples, 0.04%)</title><rect x="407.6" y="1397" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="410.58" y="1407.5" ></text>
</g>
<g >
<title>memset (1,583,919,336 samples, 0.01%)</title><rect x="819.1" y="1317" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="822.05" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="485" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="495.5" ></text>
</g>
<g >
<title>import_single_range (18,864,388,318 samples, 0.12%)</title><rect x="338.5" y="1445" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="341.46" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,815,708,777 samples, 0.12%)</title><rect x="53.6" y="1557" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.56" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13,292,761,643 samples, 0.09%)</title><rect x="758.0" y="1381" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="761.00" y="1391.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,532,236,578 samples, 0.01%)</title><rect x="1040.2" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1043.19" y="1311.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (6,799,633,668 samples, 0.04%)</title><rect x="704.8" y="1397" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="707.75" y="1407.5" ></text>
</g>
<g >
<title>should_failslab (2,762,552,470 samples, 0.02%)</title><rect x="857.7" y="1349" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="860.73" y="1359.5" ></text>
</g>
<g >
<title>perf_mmap__push (20,085,095,175 samples, 0.13%)</title><rect x="43.5" y="1525" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="46.50" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,766,749,837 samples, 0.15%)</title><rect x="21.5" y="1509" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.50" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="965" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="975.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1237" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1247.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,572,161,802 samples, 0.04%)</title><rect x="302.7" y="1349" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="305.67" y="1359.5" ></text>
</g>
<g >
<title>_dl_catch_exception (4,170,579,842 samples, 0.03%)</title><rect x="19.6" y="1349" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.63" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,881,892,720 samples, 0.09%)</title><rect x="10.6" y="1557" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.60" y="1567.5" ></text>
</g>
<g >
<title>__cond_resched (4,242,519,093 samples, 0.03%)</title><rect x="979.9" y="1381" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="982.94" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,780,348,596 samples, 0.03%)</title><rect x="30.1" y="373" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.11" y="383.5" ></text>
</g>
<g >
<title>start_secondary (14,248,100,690 samples, 0.09%)</title><rect x="17.0" y="1573" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="19.98" y="1583.5" ></text>
</g>
<g >
<title>path_getxattr (1,576,991,054 samples, 0.01%)</title><rect x="20.6" y="1429" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="23.62" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,619,736,756 samples, 0.02%)</title><rect x="33.2" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.19" y="1487.5" ></text>
</g>
<g >
<title>rest_init (3,793,561,346 samples, 0.02%)</title><rect x="18.1" y="1525" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="21.09" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,722,927,068 samples, 0.03%)</title><rect x="53.2" y="1541" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.16" y="1551.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (6,624,166,696 samples, 0.04%)</title><rect x="36.3" y="1429" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="39.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,049,882,690 samples, 0.07%)</title><rect x="30.0" y="741" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.05" y="751.5" ></text>
</g>
<g >
<title>__do_sys_newstat (8,380,355,941 samples, 0.06%)</title><rect x="32.2" y="1461" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="35.17" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1349" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (5,206,988,218 samples, 0.03%)</title><rect x="18.8" y="1541" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.82" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,567,789,420 samples, 0.06%)</title><rect x="21.8" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="24.82" y="1423.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,321,544,466 samples, 0.02%)</title><rect x="269.4" y="1333" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="272.43" y="1343.5" ></text>
</g>
<g >
<title>check_heap_object (79,054,431,070 samples, 0.52%)</title><rect x="710.7" y="1349" width="6.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="713.71" y="1359.5" ></text>
</g>
<g >
<title>[ls] (27,744,062,939 samples, 0.18%)</title><rect x="19.3" y="1525" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.33" y="1535.5" ></text>
</g>
<g >
<title>__slab_free (5,621,657,256 samples, 0.04%)</title><rect x="510.0" y="1317" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="512.98" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1285" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.52" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1125" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1573" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,494,088,420 samples, 0.06%)</title><rect x="30.1" y="597" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.07" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,317,171,779,758 samples, 21.84%)</title><rect x="367.5" y="1493" width="257.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="370.47" y="1503.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__fget_light (4,599,963,383 samples, 0.03%)</title><rect x="1169.2" y="1413" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1172.22" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,363,834,277 samples, 0.09%)</title><rect x="42.4" y="1525" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="45.41" y="1535.5" ></text>
</g>
<g >
<title>memcg_account_kmem (12,677,455,181 samples, 0.08%)</title><rect x="261.3" y="1285" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="264.30" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1503.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (24,643,008,129 samples, 0.16%)</title><rect x="934.2" y="1413" width="1.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="937.20" y="1423.5" ></text>
</g>
<g >
<title>__cond_resched (5,014,727,662 samples, 0.03%)</title><rect x="225.8" y="1349" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="228.80" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,613,898,265 samples, 0.01%)</title><rect x="11.8" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.83" y="1503.5" ></text>
</g>
<g >
<title>unix_destruct_scm (393,311,868,305 samples, 2.59%)</title><rect x="512.7" y="1349" width="30.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="515.66" y="1359.5" >un..</text>
</g>
<g >
<title>__rcu_read_unlock (6,389,150,038 samples, 0.04%)</title><rect x="702.3" y="1397" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="705.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,677,341,543 samples, 0.14%)</title><rect x="30.0" y="1157" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="32.97" y="1167.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (97,316,480,357 samples, 0.64%)</title><rect x="1162.0" y="1429" width="7.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1165.02" y="1439.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (25,189,170,684 samples, 0.17%)</title><rect x="506.5" y="1269" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="509.48" y="1279.5" ></text>
</g>
<g >
<title>__libc_start_main (4,969,681,603 samples, 0.03%)</title><rect x="12.2" y="1573" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.24" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,507,228,985 samples, 0.01%)</title><rect x="53.0" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="1349" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="885" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="895.5" ></text>
</g>
<g >
<title>glob_vector (3,716,035,500 samples, 0.02%)</title><rect x="51.1" y="1381" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="54.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,591,122,213 samples, 0.04%)</title><rect x="34.1" y="117" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="127.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,401,058,114 samples, 0.02%)</title><rect x="238.1" y="1269" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="241.06" y="1279.5" ></text>
</g>
<g >
<title>kfree (453,361,330,602 samples, 2.99%)</title><rect x="1033.0" y="1333" width="35.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1035.95" y="1343.5" >kf..</text>
</g>
<g >
<title>mod_objcg_state (45,232,903,543 samples, 0.30%)</title><rect x="847.7" y="1317" width="3.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="850.73" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,554,980,879 samples, 0.01%)</title><rect x="37.0" y="1461" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="40.01" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,653,559,748 samples, 0.01%)</title><rect x="20.6" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.62" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,327,775,785 samples, 0.01%)</title><rect x="847.5" y="1317" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="850.47" y="1327.5" ></text>
</g>
<g >
<title>put_pid (4,443,631,511 samples, 0.03%)</title><rect x="512.0" y="1349" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="514.97" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="629" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.08" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,376,245,615 samples, 0.01%)</title><rect x="33.3" y="1381" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="36.27" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,672,547,413 samples, 0.02%)</title><rect x="19.0" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.97" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,369,112,538 samples, 0.03%)</title><rect x="19.6" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="1423.5" ></text>
</g>
<g >
<title>refill_obj_stock (5,822,356,522 samples, 0.04%)</title><rect x="1065.3" y="1301" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1068.34" y="1311.5" ></text>
</g>
<g >
<title>sock_def_readable (140,325,883,412 samples, 0.92%)</title><rect x="319.3" y="1397" width="10.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="322.26" y="1407.5" ></text>
</g>
<g >
<title>start_kernel (1,705,951,539 samples, 0.01%)</title><rect x="56.4" y="1557" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="59.37" y="1567.5" ></text>
</g>
<g >
<title>kcompactd (1,609,912,127 samples, 0.01%)</title><rect x="55.8" y="1557" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="58.80" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (87,535,432,570 samples, 0.58%)</title><rect x="895.9" y="1461" width="6.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="898.88" y="1471.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5,422,036,414 samples, 0.04%)</title><rect x="1171.8" y="1445" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1174.84" y="1455.5" ></text>
</g>
<g >
<title>[bash] (7,448,438,587 samples, 0.05%)</title><rect x="51.5" y="1381" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.47" y="1391.5" ></text>
</g>
<g >
<title>_dl_catch_exception (3,741,812,324 samples, 0.02%)</title><rect x="19.6" y="1301" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.64" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,022,389,653 samples, 0.02%)</title><rect x="12.4" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.36" y="1487.5" ></text>
</g>
<g >
<title>__virt_addr_valid (27,864,903,621 samples, 0.18%)</title><rect x="1134.5" y="1269" width="2.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1137.48" y="1279.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,115,912,817 samples, 0.03%)</title><rect x="163.4" y="1349" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="166.38" y="1359.5" ></text>
</g>
<g >
<title>exec_binprm (55,049,918,194 samples, 0.36%)</title><rect x="38.0" y="1493" width="4.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="40.99" y="1503.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1269" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.52" y="1279.5" ></text>
</g>
<g >
<title>copy_process (39,135,894,466 samples, 0.26%)</title><rect x="25.5" y="1381" width="3.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1231.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (9,090,184,784 samples, 0.06%)</title><rect x="1095.7" y="1317" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1098.69" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="799.5" ></text>
</g>
<g >
<title>_start (14,319,040,459,439 samples, 94.29%)</title><rect x="70.0" y="1589" width="1112.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="73.04" y="1599.5" >_start</text>
</g>
<g >
<title>bprm_execve (1,467,324,982 samples, 0.01%)</title><rect x="23.8" y="1525" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="26.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,184,741,939 samples, 0.03%)</title><rect x="19.6" y="1397" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.63" y="1407.5" ></text>
</g>
<g >
<title>__libc_start_main (14,319,040,459,439 samples, 94.29%)</title><rect x="70.0" y="1573" width="1112.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="73.04" y="1583.5" >__libc_start_main</text>
</g>
<g >
<title>perf (37,327,977,264 samples, 0.25%)</title><rect x="42.3" y="1605" width="2.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="45.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,816,613,860 samples, 0.19%)</title><rect x="29.8" y="1445" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="32.82" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,381,700,128 samples, 0.01%)</title><rect x="1026.8" y="1301" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1029.76" y="1311.5" ></text>
</g>
<g >
<title>_copy_from_iter (56,488,486,259 samples, 0.37%)</title><rect x="718.0" y="1381" width="4.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="721.01" y="1391.5" ></text>
</g>
<g >
<title>do_idle (13,074,471,247 samples, 0.09%)</title><rect x="49.0" y="1541" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="51.96" y="1551.5" ></text>
</g>
<g >
<title>generic_write_end (2,940,682,789 samples, 0.02%)</title><rect x="44.7" y="1237" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="47.74" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (368,088,995,326 samples, 2.42%)</title><rect x="176.2" y="1381" width="28.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="179.17" y="1391.5" >_r..</text>
</g>
<g >
<title>__unfreeze_partials (7,720,737,904 samples, 0.05%)</title><rect x="495.7" y="1269" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="498.67" y="1279.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3,064,748,125 samples, 0.02%)</title><rect x="44.7" y="1253" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="47.73" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,580,221,552 samples, 0.01%)</title><rect x="23.5" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.52" y="1471.5" ></text>
</g>
<g >
<title>aa_unix_msg_perm (2,302,586,985 samples, 0.02%)</title><rect x="382.4" y="1381" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="385.42" y="1391.5" ></text>
</g>
<g >
<title>sock_sendmsg (3,987,005,495 samples, 0.03%)</title><rect x="339.9" y="1445" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="342.93" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (8,736,984,728 samples, 0.06%)</title><rect x="17.0" y="1493" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="20.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="901" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="911.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,761,708,777 samples, 0.08%)</title><rect x="341.4" y="1461" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="344.42" y="1471.5" ></text>
</g>
<g >
<title>ksys_read (3,538,897,547 samples, 0.02%)</title><rect x="37.4" y="1445" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="40.43" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,799,593,213 samples, 0.12%)</title><rect x="30.0" y="1045" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.00" y="1055.5" ></text>
</g>
<g >
<title>vfs_fstatat (8,023,858,348 samples, 0.05%)</title><rect x="32.2" y="1445" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="35.19" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="213" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="223.5" ></text>
</g>
<g >
<title>getgrgid_r (8,919,378,295 samples, 0.06%)</title><rect x="19.6" y="1461" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.61" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (1,513,445,766 samples, 0.01%)</title><rect x="35.8" y="1429" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="38.84" y="1439.5" ></text>
</g>
<g >
<title>[bash] (7,253,771,540 samples, 0.05%)</title><rect x="51.5" y="1333" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.47" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (13,391,820,490 samples, 0.09%)</title><rect x="648.4" y="1477" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="651.37" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="1221" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1093" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="261" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.69" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="773" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="783.5" ></text>
</g>
<g >
<title>put_cpu_partial (10,473,171,716 samples, 0.07%)</title><rect x="1013.8" y="1317" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1016.80" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,393,956,076 samples, 0.02%)</title><rect x="30.1" y="357" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="33.11" y="367.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (24,227,749,334 samples, 0.16%)</title><rect x="126.9" y="1413" width="1.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="129.92" y="1423.5" ></text>
</g>
<g >
<title>_copy_to_iter (67,031,143,048 samples, 0.44%)</title><rect x="581.6" y="1317" width="5.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="584.55" y="1327.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5,874,774,840 samples, 0.04%)</title><rect x="1180.0" y="1445" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1182.96" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (2,388,948,697 samples, 0.02%)</title><rect x="25.2" y="1541" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="28.23" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="853" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="863.5" ></text>
</g>
<g >
<title>__fget_light (42,902,350,164 samples, 0.28%)</title><rect x="887.8" y="1397" width="3.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="890.79" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_read (2,989,462,777 samples, 0.02%)</title><rect x="33.5" y="1509" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="36.46" y="1519.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (65,342,726,747 samples, 0.43%)</title><rect x="886.3" y="1429" width="5.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="889.32" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,859,894,526 samples, 0.01%)</title><rect x="13.4" y="1493" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="16.37" y="1503.5" ></text>
</g>
<g >
<title>__slab_free (159,337,998,270 samples, 1.05%)</title><rect x="1040.4" y="1301" width="12.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1043.35" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,022,932,082 samples, 0.03%)</title><rect x="53.2" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.18" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,437,744,678 samples, 0.04%)</title><rect x="509.5" y="1317" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="512.48" y="1327.5" ></text>
</g>
<g >
<title>migrate_pages (3,348,312,080 samples, 0.02%)</title><rect x="48.6" y="1509" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="51.63" y="1519.5" ></text>
</g>
<g >
<title>[bash] (4,498,785,305 samples, 0.03%)</title><rect x="51.7" y="1237" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="54.68" y="1247.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,483,790,769 samples, 0.01%)</title><rect x="204.7" y="1365" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="207.66" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="671.5" ></text>
</g>
<g >
<title>arch_call_rest_init (3,793,561,346 samples, 0.02%)</title><rect x="18.1" y="1541" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="21.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,530,918,000 samples, 0.02%)</title><rect x="52.3" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.29" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1119.5" ></text>
</g>
<g >
<title>mod_memcg_state (6,389,403,661 samples, 0.04%)</title><rect x="1063.9" y="1237" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1066.87" y="1247.5" ></text>
</g>
<g >
<title>should_failslab (2,658,301,652 samples, 0.02%)</title><rect x="302.4" y="1333" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="305.43" y="1343.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,035,818,781 samples, 0.04%)</title><rect x="624.2" y="1477" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="627.23" y="1487.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,352,344,005 samples, 0.02%)</title><rect x="815.5" y="1237" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="818.55" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,765,397,256 samples, 0.04%)</title><rect x="34.1" y="261" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="37.08" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1077" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="36.71" y="1087.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1,301,784,922 samples, 0.01%)</title><rect x="64.5" y="1525" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="67.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,909,200,409 samples, 0.06%)</title><rect x="34.7" y="405" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="37.69" y="415.5" ></text>
</g>
<g >
<title>read (3,746,571,766 samples, 0.02%)</title><rect x="33.4" y="1557" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="36.41" y="1567.5" ></text>
</g>
<g >
<title>migrate_pages (2,478,647,960 samples, 0.02%)</title><rect x="16.7" y="1509" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="19.65" y="1519.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (468,368,241,887 samples, 3.08%)</title><rect x="568.6" y="1333" width="36.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="571.59" y="1343.5" >sim..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,316,429,249 samples, 0.01%)</title><rect x="33.7" y="1253" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.71" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock (232,678,891,622 samples, 1.53%)</title><rect x="384.0" y="1397" width="18.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="386.98" y="1407.5" ></text>
</g>
</g>
</svg>
