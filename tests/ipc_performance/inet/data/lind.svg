<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1670.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1653" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1653" > </text>
<g id="frames">
<g >
<title>tcp_v4_rcv (2,099,751,273 samples, 4.52%)</title><rect x="903.0" y="949" width="53.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="905.97" y="959.5" >tcp_v..</text>
</g>
<g >
<title>__x64_sys_read (7,120,851 samples, 0.02%)</title><rect x="1149.6" y="1557" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1152.65" y="1567.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (6,428,367 samples, 0.01%)</title><rect x="1102.0" y="1461" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1104.95" y="1471.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (51,169,843 samples, 0.11%)</title><rect x="941.7" y="885" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="944.68" y="895.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (51,327,198 samples, 0.11%)</title><rect x="609.8" y="1285" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="612.76" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1461" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="67.39" y="1471.5" ></text>
</g>
<g >
<title>__mod_memcg_state (51,069,200 samples, 0.11%)</title><rect x="1068.1" y="1285" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1071.09" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,345,073 samples, 0.04%)</title><rect x="45.7" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1455.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (102,432,855 samples, 0.22%)</title><rect x="950.8" y="901" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="953.76" y="911.5" ></text>
</g>
<g >
<title>__libc_start_main (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1119.36" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_execve (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1557" width="2.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="67.67" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,133,877 samples, 0.02%)</title><rect x="45.4" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.44" y="1583.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1509" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1152.69" y="1519.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (51,118,366 samples, 0.11%)</title><rect x="993.0" y="1141" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="995.97" y="1151.5" ></text>
</g>
<g >
<title>_start (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1589" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1104.94" y="1599.5" ></text>
</g>
<g >
<title>_compound_head (37,924,214 samples, 0.08%)</title><rect x="65.7" y="1301" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="68.74" y="1311.5" ></text>
</g>
<g >
<title>ksys_read (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1413" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="49.73" y="1423.5" ></text>
</g>
<g >
<title>do_iter_write (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1333" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="74.54" y="1343.5" ></text>
</g>
<g >
<title>inet_sendmsg (10,082,688,246 samples, 21.69%)</title><rect x="816.0" y="1397" width="256.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="819.04" y="1407.5" >inet_sendmsg</text>
</g>
<g >
<title>[libc.so.6] (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1509" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1519.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1333" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1120.86" y="1343.5" ></text>
</g>
<g >
<title>sleep (43,351,892 samples, 0.09%)</title><rect x="1117.0" y="1605" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1119.97" y="1615.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1461" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1152.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1125" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="309" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="319.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (51,143,636 samples, 0.11%)</title><rect x="788.6" y="1349" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="791.55" y="1359.5" ></text>
</g>
<g >
<title>neigh_hh_output (4,873,554,973 samples, 10.48%)</title><rect x="874.5" y="1173" width="123.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="877.46" y="1183.5" >neigh_hh_output</text>
</g>
<g >
<title>try_charge_memcg (101,667,656 samples, 0.22%)</title><rect x="1069.4" y="1301" width="2.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1072.39" y="1311.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,924,392,660 samples, 10.59%)</title><rect x="873.2" y="1205" width="125.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="876.17" y="1215.5" >__ip_finish_out..</text>
</g>
<g >
<title>__release_sock (253,963,939 samples, 0.55%)</title><rect x="587.6" y="1285" width="6.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="590.60" y="1295.5" ></text>
</g>
<g >
<title>ioctl (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1509" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="74.38" y="1519.5" ></text>
</g>
<g >
<title>mod_memcg_state (51,069,200 samples, 0.11%)</title><rect x="1068.1" y="1301" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1071.09" y="1311.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1413" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="74.38" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="293" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="303.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (51,206,517 samples, 0.11%)</title><rect x="1082.3" y="1445" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1085.34" y="1455.5" ></text>
</g>
<g >
<title>__fget_light (51,284,787 samples, 0.11%)</title><rect x="1079.7" y="1397" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1082.74" y="1407.5" ></text>
</g>
<g >
<title>_compound_head (6,576,527 samples, 0.01%)</title><rect x="1116.7" y="1381" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1119.67" y="1391.5" ></text>
</g>
<g >
<title>event_function_call (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1381" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="74.38" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (51,342,931 samples, 0.11%)</title><rect x="669.4" y="1333" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="672.38" y="1343.5" ></text>
</g>
<g >
<title>write (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1461" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="57.69" y="1471.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (309,527,261 samples, 0.67%)</title><rect x="1141.8" y="1541" width="7.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1144.79" y="1551.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (50,642,734 samples, 0.11%)</title><rect x="760.0" y="1317" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="763.04" y="1327.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (203,459,175 samples, 0.44%)</title><rect x="1072.0" y="1397" width="5.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1074.97" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="357" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1445" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1455.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1301" width="4.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="69.71" y="1311.5" ></text>
</g>
<g >
<title>do_fcntl (663,991,401 samples, 1.43%)</title><rect x="441.4" y="1349" width="16.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="444.43" y="1359.5" ></text>
</g>
<g >
<title>aa_sk_perm (101,771,281 samples, 0.22%)</title><rect x="1074.6" y="1365" width="2.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1077.55" y="1375.5" ></text>
</g>
<g >
<title>seq_read_iter (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1152.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="197" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1317" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="49.73" y="1327.5" ></text>
</g>
<g >
<title>ttwu_do_activate (263,826,038 samples, 0.57%)</title><rect x="1172.3" y="1477" width="6.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1175.30" y="1487.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,204,435,281 samples, 2.59%)</title><rect x="168.6" y="1349" width="30.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="171.60" y="1359.5" >pi..</text>
</g>
<g >
<title>tcp_v4_do_rcv (253,963,939 samples, 0.55%)</title><rect x="587.6" y="1269" width="6.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="590.60" y="1279.5" ></text>
</g>
<g >
<title>__libc_fork (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1493" width="3.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="59.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="85" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="95.5" ></text>
</g>
<g >
<title>__folio_alloc (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1237" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1120.86" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="229" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="239.5" ></text>
</g>
<g >
<title>[perf-363.map] (45,068,591 samples, 0.10%)</title><rect x="54.6" y="1589" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="57.63" y="1599.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (13,631,899 samples, 0.03%)</title><rect x="1189.4" y="1461" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.41" y="1471.5" ></text>
</g>
<g >
<title>do_idle (22,648,264 samples, 0.05%)</title><rect x="1189.4" y="1477" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.41" y="1487.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (301,182,170 samples, 0.65%)</title><rect x="574.8" y="1285" width="7.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="577.75" y="1295.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,135,670,083 samples, 2.44%)</title><rect x="926.1" y="917" width="28.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="929.14" y="927.5" >tc..</text>
</g>
<g >
<title>kfree_skbmem (51,243,338 samples, 0.11%)</title><rect x="592.7" y="1189" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="595.75" y="1199.5" ></text>
</g>
<g >
<title>release_sock (465,653,804 samples, 1.00%)</title><rect x="583.7" y="1301" width="11.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="586.70" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1509" width="4.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="69.71" y="1519.5" ></text>
</g>
<g >
<title>[bash] (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1285" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.41" y="1295.5" ></text>
</g>
<g >
<title>NaClSysPollDecoder (24,246,001,578 samples, 52.15%)</title><rect x="108.9" y="1557" width="615.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="111.93" y="1567.5" >NaClSysPollDecoder</text>
</g>
<g >
<title>do_iter_read (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1477" width="5.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="19.58" y="1487.5" ></text>
</g>
<g >
<title>[perf-377.map] (8,064,111 samples, 0.02%)</title><rect x="55.8" y="1589" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="58.77" y="1599.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (1,429,916,041 samples, 3.08%)</title><rect x="752.3" y="1333" width="36.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="755.26" y="1343.5" >tcp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="757" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="767.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1461" width="17.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="24.77" y="1471.5" ></text>
</g>
<g >
<title>__napi_poll (50,486,977 samples, 0.11%)</title><rect x="883.5" y="1093" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="886.53" y="1103.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DeleteProperty (7,577,592 samples, 0.02%)</title><rect x="55.8" y="1525" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="58.77" y="1535.5" ></text>
</g>
<g >
<title>read_tsc (102,560,244 samples, 0.22%)</title><rect x="1009.8" y="1301" width="2.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1012.80" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="501" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="511.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (63,658,819 samples, 0.14%)</title><rect x="953.4" y="901" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="956.36" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1253" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="56.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="533" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="149" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="159.5" ></text>
</g>
<g >
<title>mas_split.isra.0 (8,213,076 samples, 0.02%)</title><rect x="46.2" y="1285" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="49.25" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="67.23" y="1519.5" ></text>
</g>
<g >
<title>tcp_tso_segs (97,812,160 samples, 0.21%)</title><rect x="1022.7" y="1301" width="2.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1025.74" y="1311.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1413" width="1.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="709.42" y="1423.5" ></text>
</g>
<g >
<title>__mmput (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1397" width="2.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="67.67" y="1407.5" ></text>
</g>
<g >
<title>[grep] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1589" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.73" y="1599.5" ></text>
</g>
<g >
<title>pick_next_entity (152,301,739 samples, 0.33%)</title><rect x="182.9" y="1333" width="3.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="185.87" y="1343.5" ></text>
</g>
<g >
<title>sock_recvmsg (51,229,678 samples, 0.11%)</title><rect x="673.3" y="1365" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="676.28" y="1375.5" ></text>
</g>
<g >
<title>set_next_entity (127,739,139 samples, 0.27%)</title><rect x="1179.0" y="1461" width="3.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1181.99" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (102,477,210 samples, 0.22%)</title><rect x="1092.9" y="1557" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1095.88" y="1567.5" ></text>
</g>
<g >
<title>sel_ldr (41,155,379,749 samples, 88.53%)</title><rect x="71.7" y="1605" width="1044.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="74.73" y="1615.5" >sel_ldr</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (225,393,009 samples, 0.48%)</title><rect x="1160.1" y="1461" width="5.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1163.10" y="1471.5" ></text>
</g>
<g >
<title>__libc_start_main (29,151,708 samples, 0.06%)</title><rect x="53.3" y="1573" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="56.29" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (127,739,139 samples, 0.27%)</title><rect x="1179.0" y="1477" width="3.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1181.99" y="1487.5" ></text>
</g>
<g >
<title>read (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1477" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="49.73" y="1487.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1301" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="74.54" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (222,110,870 samples, 0.48%)</title><rect x="1160.1" y="1397" width="5.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1163.10" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1493" width="2.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="732.56" y="1503.5" ></text>
</g>
<g >
<title>__schedule (1,930,013,882 samples, 4.15%)</title><rect x="152.8" y="1381" width="49.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="155.78" y="1391.5" >__sc..</text>
</g>
<g >
<title>intel_pmu_enable_all (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1237" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="74.38" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="821" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="831.5" ></text>
</g>
<g >
<title>search_binary_handler (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1477" width="2.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="67.67" y="1487.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::checked_add (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1349" width="1.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="709.42" y="1359.5" ></text>
</g>
<g >
<title>memory_stat_format.constprop.0 (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1429" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1152.69" y="1439.5" ></text>
</g>
<g >
<title>[grep] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1493" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.73" y="1503.5" ></text>
</g>
<g >
<title>__refill_stock (50,900,805 samples, 0.11%)</title><rect x="778.2" y="1253" width="1.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="781.17" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="837" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="847.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1349" width="6.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="49.92" y="1359.5" ></text>
</g>
<g >
<title>__netif_rx (309,763,718 samples, 0.67%)</title><rect x="983.8" y="1109" width="7.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="986.81" y="1119.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (101,511,071 samples, 0.22%)</title><rect x="1098.1" y="1525" width="2.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1101.08" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::syscall_error (53,017,474 samples, 0.11%)</title><rect x="688.3" y="1445" width="1.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="691.25" y="1455.5" ></text>
</g>
<g >
<title>vfs_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1429" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="67.39" y="1439.5" ></text>
</g>
<g >
<title>perf-exec (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1605" width="4.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="69.71" y="1615.5" ></text>
</g>
<g >
<title>glob_matcher::match (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1445" width="6.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="42.14" y="1455.5" ></text>
</g>
<g >
<title>do_flush_stats (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1397" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1152.69" y="1407.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (50,386,385 samples, 0.11%)</title><rect x="1100.7" y="1541" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1103.66" y="1551.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1253" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="74.38" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1589" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="69.71" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1541" width="5.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="19.58" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_enter (9,648,951 samples, 0.02%)</title><rect x="1189.4" y="1429" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.41" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (222,110,870 samples, 0.48%)</title><rect x="1160.1" y="1413" width="5.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1163.10" y="1423.5" ></text>
</g>
<g >
<title>kernfs_seq_show (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1477" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1152.69" y="1487.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1493" width="7.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1144.79" y="1503.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (49,069,205 samples, 0.11%)</title><rect x="471.1" y="1365" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="474.13" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (50,386,385 samples, 0.11%)</title><rect x="1100.7" y="1509" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1103.66" y="1519.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1477" width="7.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1144.79" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1461" width="0.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="74.38" y="1471.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (51,274,028 samples, 0.11%)</title><rect x="674.6" y="1381" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="677.58" y="1391.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6,428,367 samples, 0.01%)</title><rect x="1102.0" y="1429" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1104.95" y="1439.5" ></text>
</g>
<g >
<title>node::StreamBase::JSMethod&lt;&amp;node::StreamBase::WriteBuffer&gt; (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1557" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="57.69" y="1567.5" ></text>
</g>
<g >
<title>[perf-293.map] (19,319,372 samples, 0.04%)</title><rect x="54.1" y="1589" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="57.14" y="1599.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (153,825,219 samples, 0.33%)</title><rect x="1077.1" y="1413" width="3.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1080.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="677" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1413" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="732.56" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (14,873,703,500 samples, 31.99%)</title><rect x="312.1" y="1461" width="377.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="315.07" y="1471.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl ru..</text>
</g>
<g >
<title>update_rq_clock (51,144,788 samples, 0.11%)</title><rect x="200.5" y="1365" width="1.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="203.47" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1381" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1397" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1407.5" ></text>
</g>
<g >
<title>__cond_resched (50,400,214 samples, 0.11%)</title><rect x="563.1" y="1301" width="1.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="566.10" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (6,428,367 samples, 0.01%)</title><rect x="1102.0" y="1477" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1104.95" y="1487.5" ></text>
</g>
<g >
<title>malloc (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1365" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="56.86" y="1375.5" ></text>
</g>
<g >
<title>recvfrom (7,997,774,361 samples, 17.20%)</title><rect x="485.3" y="1429" width="203.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="488.25" y="1439.5" >recvfrom</text>
</g>
<g >
<title>remote_function (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1333" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="74.38" y="1343.5" ></text>
</g>
<g >
<title>core::time::Duration::new (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1365" width="1.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="709.42" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (101,511,071 samples, 0.22%)</title><rect x="1098.1" y="1557" width="2.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1101.08" y="1567.5" ></text>
</g>
<g >
<title>consume_stock (101,667,656 samples, 0.22%)</title><rect x="1069.4" y="1285" width="2.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1072.39" y="1295.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (436,354,738 samples, 0.94%)</title><rect x="675.9" y="1381" width="11.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="678.88" y="1391.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,094,732 samples, 0.11%)</title><rect x="687.0" y="1397" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="689.96" y="1407.5" ></text>
</g>
<g >
<title>established_get_next (7,190,809 samples, 0.02%)</title><rect x="64.4" y="1349" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="67.41" y="1359.5" ></text>
</g>
<g >
<title>__evlist__enable (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1557" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="74.38" y="1567.5" ></text>
</g>
<g >
<title>cpu_startup_entry (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1493" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.41" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_write (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1413" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="74.52" y="1423.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1541" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="74.38" y="1551.5" ></text>
</g>
<g >
<title>generic_file_read_iter (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1429" width="5.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="19.58" y="1439.5" ></text>
</g>
<g >
<title>main (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1541" width="6.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="49.92" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1205" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1215.5" ></text>
</g>
<g >
<title>[ls] (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="56.29" y="1535.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (152,966,325 samples, 0.33%)</title><rect x="796.4" y="1525" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="799.37" y="1535.5" ></text>
</g>
<g >
<title>rest_init (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1509" width="0.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1192.41" y="1519.5" ></text>
</g>
<g >
<title>setlocale (20,770,449 samples, 0.04%)</title><rect x="53.5" y="1525" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="56.50" y="1535.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (101,708,989 samples, 0.22%)</title><rect x="987.7" y="1061" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="990.69" y="1071.5" ></text>
</g>
<g >
<title>ext4_da_write_end (7,177,211 samples, 0.02%)</title><rect x="71.5" y="1253" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="74.55" y="1263.5" ></text>
</g>
<g >
<title>NaClSysPoll (24,246,001,578 samples, 52.15%)</title><rect x="108.9" y="1541" width="615.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="111.93" y="1551.5" >NaClSysPoll</text>
</g>
<g >
<title>cpptools (1,396,143,072 samples, 3.00%)</title><rect x="10.0" y="1605" width="35.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >cpp..</text>
</g>
<g >
<title>tcp_ack (408,330,998 samples, 0.88%)</title><rect x="932.6" y="901" width="10.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="935.61" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1317" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1327.5" ></text>
</g>
<g >
<title>perf (13,750,302 samples, 0.03%)</title><rect x="71.4" y="1605" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="74.38" y="1615.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1493" width="17.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="24.77" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (180,738,478 samples, 0.39%)</title><rect x="745.1" y="1333" width="4.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="748.08" y="1343.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (6,656,456 samples, 0.01%)</title><rect x="71.6" y="1221" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="74.56" y="1231.5" ></text>
</g>
<g >
<title>exit_mmap (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1381" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="67.67" y="1391.5" ></text>
</g>
<g >
<title>do_anonymous_page (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1253" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="22.99" y="1263.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1365" width="4.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="69.71" y="1375.5" ></text>
</g>
<g >
<title>__inet_lookup_established (305,613,848 samples, 0.66%)</title><rect x="904.3" y="933" width="7.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="907.27" y="943.5" ></text>
</g>
<g >
<title>update_blocked_averages (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1445" width="3.0" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1152.86" y="1455.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (8,064,111 samples, 0.02%)</title><rect x="55.8" y="1573" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="58.77" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1557" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1119.67" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (408,844,183 samples, 0.88%)</title><rect x="1179.0" y="1525" width="10.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1181.99" y="1535.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1365" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1152.69" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (23,455,053,733 samples, 50.45%)</title><rect x="126.4" y="1493" width="595.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="129.41" y="1503.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;..</text>
</g>
<g >
<title>__memcpy_fwd (153,146,066 samples, 0.33%)</title><rect x="12.7" y="1589" width="3.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="15.69" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1445" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="59.41" y="1455.5" ></text>
</g>
<g >
<title>__memset (102,271,947 samples, 0.22%)</title><rect x="1056.5" y="1317" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1059.49" y="1327.5" ></text>
</g>
<g >
<title>skb_release_head_state (50,816,566 samples, 0.11%)</title><rect x="978.5" y="1061" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="981.48" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1493" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1503.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1381" width="4.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="69.71" y="1391.5" ></text>
</g>
<g >
<title>ls (39,790,787 samples, 0.09%)</title><rect x="53.1" y="1605" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="56.13" y="1615.5" ></text>
</g>
<g >
<title>__schedule (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1445" width="7.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1144.79" y="1455.5" ></text>
</g>
<g >
<title>uv__read (6,290,352 samples, 0.01%)</title><rect x="64.2" y="1541" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="67.18" y="1551.5" ></text>
</g>
<g >
<title>check_heap_object (129,022,068 samples, 0.28%)</title><rect x="835.5" y="1301" width="3.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="838.52" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="67.23" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,668,167 samples, 0.02%)</title><rect x="1117.7" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.67" y="1407.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (51,317,390 samples, 0.11%)</title><rect x="832.9" y="1349" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="835.94" y="1359.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (55,110,157 samples, 0.12%)</title><rect x="990.3" y="1045" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="993.27" y="1055.5" ></text>
</g>
<g >
<title>do_anonymous_page (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1237" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="56.86" y="1247.5" ></text>
</g>
<g >
<title>node::StreamBase::WriteBuffer (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1541" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="57.69" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (23,608,615,402 samples, 50.78%)</title><rect x="125.1" y="1509" width="599.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="128.11" y="1519.5" >dispatcher</text>
</g>
<g >
<title>ksys_read (5,355,751 samples, 0.01%)</title><rect x="1149.7" y="1541" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1152.69" y="1551.5" ></text>
</g>
<g >
<title>tcp_write_xmit (7,088,708,871 samples, 15.25%)</title><rect x="845.3" y="1317" width="179.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="848.30" y="1327.5" >tcp_write_xmit</text>
</g>
<g >
<title>__fget_light (254,549,430 samples, 0.55%)</title><rect x="662.9" y="1317" width="6.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="665.92" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1429" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="57.69" y="1439.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (51,280,844 samples, 0.11%)</title><rect x="949.5" y="901" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="952.45" y="911.5" ></text>
</g>
<g >
<title>do_sched_yield (2,458,939,974 samples, 5.29%)</title><rect x="141.9" y="1413" width="62.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="144.93" y="1423.5" >do_sch..</text>
</g>
<g >
<title>entry_SYSCALL_64 (102,516,306 samples, 0.22%)</title><rect x="1089.0" y="1557" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1092.00" y="1567.5" ></text>
</g>
<g >
<title>walk_component (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1381" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="56.29" y="1391.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,452,395,428 samples, 5.28%)</title><rect x="897.8" y="1045" width="62.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="900.81" y="1055.5" >__neti..</text>
</g>
<g >
<title>copy_page_range (136,086,261 samples, 0.29%)</title><rect x="56.5" y="1333" width="3.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="59.46" y="1343.5" ></text>
</g>
<g >
<title>uv__fs_work (9,725,743 samples, 0.02%)</title><rect x="64.3" y="1541" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="67.34" y="1551.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1429" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="732.56" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,085,429 samples, 0.02%)</title><rect x="45.7" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.74" y="1407.5" ></text>
</g>
<g >
<title>do_readlinkat (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1445" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="56.29" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (51,339,061 samples, 0.11%)</title><rect x="99.9" y="1557" width="1.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="102.95" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_core (98,267,099 samples, 0.21%)</title><rect x="956.3" y="997" width="2.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="959.27" y="1007.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (101,779,432 samples, 0.22%)</title><rect x="205.6" y="1429" width="2.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="208.62" y="1439.5" ></text>
</g>
<g >
<title>__getdelim (7,194,406 samples, 0.02%)</title><rect x="53.7" y="1429" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="56.68" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::poll_syscall (51,132,045 samples, 0.11%)</title><rect x="77.9" y="1573" width="1.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="80.92" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,123,172,004 samples, 4.57%)</title><rect x="741.2" y="1445" width="53.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="744.17" y="1455.5" >entry..</text>
</g>
<g >
<title>skb_do_copy_data_nocache (384,235,262 samples, 0.83%)</title><rect x="834.2" y="1349" width="9.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="837.24" y="1359.5" ></text>
</g>
<g >
<title>find_vma (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1253" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="49.73" y="1263.5" ></text>
</g>
<g >
<title>update_process_times (220,933,306 samples, 0.48%)</title><rect x="1160.1" y="1349" width="5.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1163.13" y="1359.5" ></text>
</g>
<g >
<title>tcp_send_mss (255,019,515 samples, 0.55%)</title><rect x="1025.2" y="1349" width="6.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1028.23" y="1359.5" ></text>
</g>
<g >
<title>native_sched_clock (51,144,788 samples, 0.11%)</title><rect x="200.5" y="1301" width="1.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="203.47" y="1311.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (50,497,428 samples, 0.11%)</title><rect x="831.7" y="1349" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="834.66" y="1359.5" ></text>
</g>
<g >
<title>rustposix::interface::errnos::Errno::from_discriminant (51,030,878 samples, 0.11%)</title><rect x="1095.5" y="1573" width="1.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1098.48" y="1583.5" ></text>
</g>
<g >
<title>__fdget_pos (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1381" width="1.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="57.69" y="1391.5" ></text>
</g>
<g >
<title>do_anonymous_page (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1269" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1120.86" y="1279.5" ></text>
</g>
<g >
<title>vdbeCompareMemString (49,847,764 samples, 0.11%)</title><rect x="37.9" y="1365" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="40.87" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1573" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="67.67" y="1583.5" ></text>
</g>
<g >
<title>sched_clock_cpu (51,144,788 samples, 0.11%)</title><rect x="200.5" y="1349" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="203.47" y="1359.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (152,966,325 samples, 0.33%)</title><rect x="796.4" y="1509" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="799.37" y="1519.5" ></text>
</g>
<g >
<title>__calc_delta (153,491,608 samples, 0.33%)</title><rect x="179.0" y="1333" width="3.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="181.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="933" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="943.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (150,149,004 samples, 0.32%)</title><rect x="103.8" y="1541" width="3.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="106.83" y="1551.5" ></text>
</g>
<g >
<title>ksys_write (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1397" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="57.69" y="1407.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1301" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1120.86" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="74.52" y="1439.5" ></text>
</g>
<g >
<title>skb_release_data (369,132,131 samples, 0.79%)</title><rect x="969.1" y="1061" width="9.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="972.11" y="1071.5" ></text>
</g>
<g >
<title>unmap_page_range (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1413" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1119.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="661" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="671.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (3,842,719,116 samples, 8.27%)</title><rect x="882.2" y="1125" width="97.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="885.23" y="1135.5" >do_softirq...</text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (39,151,981 samples, 0.08%)</title><rect x="76.9" y="1573" width="1.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="79.93" y="1583.5" ></text>
</g>
<g >
<title>fput (205,098,105 samples, 0.44%)</title><rect x="465.9" y="1365" width="5.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="468.92" y="1375.5" ></text>
</g>
<g >
<title>netif_rx_internal (309,763,718 samples, 0.67%)</title><rect x="983.8" y="1093" width="7.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="986.81" y="1103.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (13,649,014,817 samples, 29.36%)</title><rect x="341.8" y="1445" width="346.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="344.81" y="1455.5" >rustposix::interface::comm::Socket::recvfrom_n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1349" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1359.5" ></text>
</g>
<g >
<title>cache_from_obj (50,869,213 samples, 0.11%)</title><rect x="977.2" y="1013" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="980.19" y="1023.5" ></text>
</g>
<g >
<title>uv__try_write (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1493" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="57.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="549" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (152,736,856 samples, 0.33%)</title><rect x="1068.1" y="1317" width="3.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1071.09" y="1327.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1381" width="6.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="49.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="453" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="463.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (84,121,217 samples, 0.18%)</title><rect x="16.6" y="1365" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="19.58" y="1375.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1525" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="74.38" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1397" width="2.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="732.56" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (9,648,951 samples, 0.02%)</title><rect x="1189.4" y="1413" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.41" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (51,038,657 samples, 0.11%)</title><rect x="404.3" y="1381" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="407.31" y="1391.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (50,016,639 samples, 0.11%)</title><rect x="1021.5" y="1301" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1024.47" y="1311.5" ></text>
</g>
<g >
<title>call_cpuidle (476,247,075 samples, 1.02%)</title><rect x="1160.1" y="1509" width="12.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1163.10" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (316,648,112 samples, 0.68%)</title><rect x="1141.8" y="1589" width="8.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1144.79" y="1599.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (5,651,240,456 samples, 12.16%)</title><rect x="341.8" y="1429" width="143.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="344.81" y="1439.5" >__libc_fcntl64</text>
</g>
<g >
<title>update_load_avg (127,739,139 samples, 0.27%)</title><rect x="1179.0" y="1445" width="3.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1181.99" y="1455.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1253" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="67.67" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (480,454,920 samples, 1.03%)</title><rect x="1160.1" y="1525" width="12.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1163.10" y="1535.5" ></text>
</g>
<g >
<title>workspace_folder_context::is_file_excluded (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1477" width="6.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="42.14" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1509" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="63.03" y="1519.5" ></text>
</g>
<g >
<title>pick_next_task (127,739,139 samples, 0.27%)</title><rect x="1179.0" y="1493" width="3.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1181.99" y="1503.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1285" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="67.67" y="1295.5" ></text>
</g>
<g >
<title>lock_sock_nested (352,480,130 samples, 0.76%)</title><rect x="574.8" y="1301" width="8.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="577.75" y="1311.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1173" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="74.59" y="1183.5" ></text>
</g>
<g >
<title>ima_get_action (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1253" width="6.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="49.92" y="1263.5" ></text>
</g>
<g >
<title>__check_object_size (308,112,432 samples, 0.66%)</title><rect x="622.8" y="1237" width="7.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="625.75" y="1247.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (520,199,237 samples, 1.12%)</title><rect x="979.8" y="1141" width="13.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="982.77" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1381" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="709.42" y="1391.5" ></text>
</g>
<g >
<title>__do_softirq (3,791,723,190 samples, 8.16%)</title><rect x="883.5" y="1109" width="96.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="886.53" y="1119.5" >__do_softirq</text>
</g>
<g >
<title>execute_command_internal (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1397" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1119.36" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1557" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (109,013,066 samples, 0.23%)</title><rect x="1084.9" y="1573" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1087.94" y="1583.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (136,086,261 samples, 0.29%)</title><rect x="56.5" y="1365" width="3.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="59.46" y="1375.5" ></text>
</g>
<g >
<title>_copy_to_iter (256,018,411 samples, 0.55%)</title><rect x="630.6" y="1237" width="6.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="633.57" y="1247.5" ></text>
</g>
<g >
<title>handle_mm_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1317" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1120.86" y="1327.5" ></text>
</g>
<g >
<title>arch_call_rest_init (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1525" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.41" y="1535.5" ></text>
</g>
<g >
<title>setfl (306,392,527 samples, 0.66%)</title><rect x="450.5" y="1333" width="7.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="453.50" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,020,782 samples, 0.03%)</title><rect x="53.5" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (101,511,071 samples, 0.22%)</title><rect x="1098.1" y="1493" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1101.08" y="1503.5" ></text>
</g>
<g >
<title>[expr] (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1541" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="48.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="613" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="623.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_AllocateInYoungGeneration (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1541" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="63.03" y="1551.5" ></text>
</g>
<g >
<title>alloc_pages (13,736,676 samples, 0.03%)</title><rect x="56.5" y="1285" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="59.46" y="1295.5" ></text>
</g>
<g >
<title>_perf_event_enable (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1397" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="74.38" y="1407.5" ></text>
</g>
<g >
<title>__errno_location (50,907,435 samples, 0.11%)</title><rect x="1087.7" y="1573" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1090.71" y="1583.5" ></text>
</g>
<g >
<title>schedule (50,295,710 samples, 0.11%)</title><rect x="204.3" y="1413" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="207.35" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1429" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="49.25" y="1439.5" ></text>
</g>
<g >
<title>recvfrom (102,477,210 samples, 0.22%)</title><rect x="1092.9" y="1573" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1095.88" y="1583.5" ></text>
</g>
<g >
<title>_IO_doallocbuf (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1397" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="56.86" y="1407.5" ></text>
</g>
<g >
<title>napi_consume_skb (674,598,951 samples, 1.45%)</title><rect x="962.6" y="1077" width="17.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="965.65" y="1087.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1541" width="2.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="67.67" y="1551.5" ></text>
</g>
<g >
<title>ovl_write_iter (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1365" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="74.54" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1541" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1551.5" ></text>
</g>
<g >
<title>fgets_unlocked (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1461" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="56.86" y="1471.5" ></text>
</g>
<g >
<title>NaClSysWrite (11,317,744,545 samples, 24.35%)</title><rect x="796.4" y="1541" width="287.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="799.37" y="1551.5" >NaClSysWrite</text>
</g>
<g >
<title>unmap_vmas (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1445" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1119.67" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (3,689,962,111 samples, 7.94%)</title><rect x="886.1" y="1093" width="93.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="889.11" y="1103.5" >net_rx_action</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1461" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="59.41" y="1471.5" ></text>
</g>
<g >
<title>vm_normal_page (8,072,323 samples, 0.02%)</title><rect x="59.7" y="1269" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="62.71" y="1279.5" ></text>
</g>
<g >
<title>[bash] (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.36" y="1391.5" ></text>
</g>
<g >
<title>__tsearch (15,872,431 samples, 0.03%)</title><rect x="1117.7" y="1413" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1120.67" y="1423.5" ></text>
</g>
<g >
<title>__copy_skb_header (101,849,844 samples, 0.22%)</title><rect x="1003.4" y="1253" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1006.36" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="885" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="895.5" ></text>
</g>
<g >
<title>write (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1461" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="74.52" y="1471.5" ></text>
</g>
<g >
<title>read_tsc (51,280,844 samples, 0.11%)</title><rect x="949.5" y="885" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="952.45" y="895.5" ></text>
</g>
<g >
<title>proc_reg_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1413" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="67.39" y="1423.5" ></text>
</g>
<g >
<title>ip_queue_xmit (5,487,412,479 samples, 11.80%)</title><rect x="864.1" y="1285" width="139.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="867.07" y="1295.5" >ip_queue_xmit</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1429" width="6.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="42.14" y="1439.5" ></text>
</g>
<g >
<title>tcp_push (7,139,954,262 samples, 15.36%)</title><rect x="844.0" y="1349" width="181.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="847.00" y="1359.5" >tcp_push</text>
</g>
<g >
<title>perf_event_mmap (7,404,265 samples, 0.02%)</title><rect x="46.5" y="1349" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="49.46" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1493" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1503.5" ></text>
</g>
<g >
<title>process_measurement (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1269" width="6.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="49.92" y="1279.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1445" width="17.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="24.77" y="1455.5" ></text>
</g>
<g >
<title>__alloc_pages (13,736,676 samples, 0.03%)</title><rect x="56.5" y="1269" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="59.46" y="1279.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (129,022,068 samples, 0.28%)</title><rect x="835.5" y="1317" width="3.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="838.52" y="1327.5" ></text>
</g>
<g >
<title>[perf-390.map] (197,855,305 samples, 0.43%)</title><rect x="56.0" y="1589" width="5.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="58.98" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (377,507,533 samples, 0.81%)</title><rect x="108.9" y="1509" width="9.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="111.93" y="1519.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,154,726,163 samples, 2.48%)</title><rect x="1160.1" y="1557" width="29.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1163.10" y="1567.5" >cp..</text>
</g>
<g >
<title>import_single_range (102,382,850 samples, 0.22%)</title><rect x="670.7" y="1365" width="2.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="673.68" y="1375.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1477" width="8.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="715.91" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1493" width="4.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="69.71" y="1503.5" ></text>
</g>
<g >
<title>psi_task_switch (307,270,290 samples, 0.66%)</title><rect x="1141.8" y="1429" width="7.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1144.82" y="1439.5" ></text>
</g>
<g >
<title>main (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1541" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1104.94" y="1551.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1285" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="74.54" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="67.39" y="1503.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (570,905,841 samples, 1.23%)</title><rect x="23.4" y="1365" width="14.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="26.38" y="1375.5" ></text>
</g>
<g >
<title>__tcp_select_window (102,008,341 samples, 0.22%)</title><rect x="782.1" y="1285" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="785.07" y="1295.5" ></text>
</g>
<g >
<title>sccp (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1589" width="5.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="341" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="351.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (5,333,520,253 samples, 11.47%)</title><rect x="865.4" y="1269" width="135.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="868.37" y="1279.5" >__ip_queue_xmit</text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1461" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="63.03" y="1471.5" ></text>
</g>
<g >
<title>tcp_current_mss (153,558,495 samples, 0.33%)</title><rect x="1027.8" y="1333" width="3.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1030.80" y="1343.5" ></text>
</g>
<g >
<title>minmax_running_min (51,252,668 samples, 0.11%)</title><rect x="939.1" y="869" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="942.08" y="879.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1509" width="3.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="59.41" y="1519.5" ></text>
</g>
<g >
<title>rb_erase (50,894,434 samples, 0.11%)</title><rect x="935.2" y="885" width="1.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="938.20" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1253" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,644,030,789 samples, 22.90%)</title><rect x="813.5" y="1461" width="270.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="816.47" y="1471.5" >do_syscall_64</text>
</g>
<g >
<title>vfs_read (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1397" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="49.73" y="1407.5" ></text>
</g>
<g >
<title>handle_mm_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1301" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.99" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (261,529,211 samples, 0.56%)</title><rect x="1172.3" y="1413" width="6.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1175.30" y="1423.5" ></text>
</g>
<g >
<title>event_function (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="74.38" y="1327.5" ></text>
</g>
<g >
<title>__tcp_select_window (102,245,899 samples, 0.22%)</title><rect x="647.4" y="1253" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="650.44" y="1263.5" ></text>
</g>
<g >
<title>cpptools_context::handle_create_decl_def_scan (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1525" width="17.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="24.77" y="1535.5" ></text>
</g>
<g >
<title>parse_and_execute (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1119.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1301" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1311.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (153,749,713 samples, 0.33%)</title><rect x="937.8" y="885" width="3.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="940.78" y="895.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1461" width="2.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="732.56" y="1471.5" ></text>
</g>
<g >
<title>inet_recvmsg (4,447,062,451 samples, 9.57%)</title><rect x="542.3" y="1333" width="112.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="545.34" y="1343.5" >inet_recvmsg</text>
</g>
<g >
<title>tcp_check_space (102,051,434 samples, 0.22%)</title><rect x="1012.4" y="1301" width="2.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1015.41" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1573" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1109" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1119.5" ></text>
</g>
<g >
<title>tcp_chrono_start (50,523,600 samples, 0.11%)</title><rect x="1037.1" y="1333" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1040.08" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (50,770,687 samples, 0.11%)</title><rect x="79.2" y="1573" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="82.22" y="1583.5" ></text>
</g>
<g >
<title>menu_select (4,207,845 samples, 0.01%)</title><rect x="1172.2" y="1493" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1175.19" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (55,110,157 samples, 0.12%)</title><rect x="990.3" y="1061" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="993.27" y="1071.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (102,651,452 samples, 0.22%)</title><rect x="785.9" y="1301" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="788.95" y="1311.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1285" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="49.73" y="1295.5" ></text>
</g>
<g >
<title>update_curr (51,296,721 samples, 0.11%)</title><rect x="199.2" y="1349" width="1.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="202.17" y="1359.5" ></text>
</g>
<g >
<title>__do_sys_clone (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1413" width="3.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="59.41" y="1423.5" ></text>
</g>
<g >
<title>perf_ioctl (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1445" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="74.38" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1493" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1119.36" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1557" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.41" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_enter (476,247,075 samples, 1.02%)</title><rect x="1160.1" y="1493" width="12.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1163.10" y="1503.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (225,393,009 samples, 0.48%)</title><rect x="1160.1" y="1445" width="5.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1163.10" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (131,069,835 samples, 0.28%)</title><rect x="61.0" y="1589" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="64.02" y="1599.5" ></text>
</g>
<g >
<title>ipv4_mtu (50,410,457 samples, 0.11%)</title><rect x="1026.5" y="1333" width="1.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1029.52" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,442,361 samples, 0.33%)</title><rect x="507.3" y="1413" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="510.29" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1573" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1120.03" y="1583.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (51,340,638 samples, 0.11%)</title><rect x="725.7" y="1509" width="1.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="728.66" y="1519.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,024,642,534 samples, 2.20%)</title><rect x="611.1" y="1269" width="26.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="614.06" y="1279.5" >_..</text>
</g>
<g >
<title>release_sock (51,502,199 samples, 0.11%)</title><rect x="742.5" y="1349" width="1.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="745.47" y="1359.5" ></text>
</g>
<g >
<title>sqlite3_step (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1397" width="17.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="24.77" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1461" width="2.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="67.67" y="1471.5" ></text>
</g>
<g >
<title>pcache1Fetch (103,289,523 samples, 0.22%)</title><rect x="24.7" y="1301" width="2.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="27.67" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,713,251,170 samples, 5.84%)</title><rect x="139.3" y="1445" width="68.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="142.34" y="1455.5" >do_sysc..</text>
</g>
<g >
<title>tcp_sendmsg_locked (9,981,107,553 samples, 21.47%)</title><rect x="818.6" y="1365" width="253.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="821.62" y="1375.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>exit_to_user_mode_prepare (304,701,007 samples, 0.66%)</title><rect x="473.7" y="1349" width="7.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="476.65" y="1359.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (50,266,048 samples, 0.11%)</title><rect x="203.1" y="1381" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="206.07" y="1391.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (51,276,712 samples, 0.11%)</title><rect x="724.4" y="1541" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="727.36" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (17,410,595 samples, 0.04%)</title><rect x="54.1" y="1573" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="57.14" y="1583.5" ></text>
</g>
<g >
<title>[grep] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1525" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.73" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (152,776,851 samples, 0.33%)</title><rect x="1096.8" y="1573" width="3.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1099.78" y="1583.5" ></text>
</g>
<g >
<title>copy_p4d_range (136,086,261 samples, 0.29%)</title><rect x="56.5" y="1317" width="3.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="59.46" y="1327.5" ></text>
</g>
<g >
<title>mas_wr_bnode (8,213,076 samples, 0.02%)</title><rect x="46.2" y="1301" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="49.25" y="1311.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (476,247,075 samples, 1.02%)</title><rect x="1160.1" y="1477" width="12.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1163.10" y="1487.5" ></text>
</g>
<g >
<title>intel_idle (6,780,555 samples, 0.01%)</title><rect x="1189.5" y="1397" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.48" y="1407.5" ></text>
</g>
<g >
<title>__pmd_alloc (70,909,541 samples, 0.15%)</title><rect x="56.5" y="1301" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="59.46" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (51,290,035 samples, 0.11%)</title><rect x="125.1" y="1493" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="128.11" y="1503.5" ></text>
</g>
<g >
<title>record__mmap_read_all (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1557" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="74.52" y="1567.5" ></text>
</g>
<g >
<title>_IO_getline_info (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1445" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="56.86" y="1455.5" ></text>
</g>
<g >
<title>record__write (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1493" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="74.52" y="1503.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (2,785,693,019 samples, 5.99%)</title><rect x="724.4" y="1557" width="70.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="727.36" y="1567.5" >NaClSys..</text>
</g>
<g >
<title>bprm_execve (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1365" width="6.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="49.92" y="1375.5" ></text>
</g>
<g >
<title>_start (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1589" width="6.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="49.92" y="1599.5" ></text>
</g>
<g >
<title>[perf-49031.map] (714,683,469 samples, 1.54%)</title><rect x="80.5" y="1589" width="18.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="83.51" y="1599.5" ></text>
</g>
<g >
<title>copy_process (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1381" width="3.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="59.41" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (316,648,112 samples, 0.68%)</title><rect x="1141.8" y="1573" width="8.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1144.79" y="1583.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (102,528,701 samples, 0.22%)</title><rect x="1017.6" y="1301" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1020.60" y="1311.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1269" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="67.67" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,274,102 samples, 0.11%)</title><rect x="884.8" y="1093" width="1.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="887.81" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="69" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="917" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="927.5" ></text>
</g>
<g >
<title>unmap_single_vma (37,924,214 samples, 0.08%)</title><rect x="65.7" y="1349" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="68.74" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (2,480,019,124 samples, 5.33%)</title><rect x="732.1" y="1509" width="63.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="735.12" y="1519.5" >rustpo..</text>
</g>
<g >
<title>do_syscall_64 (2,123,172,004 samples, 4.57%)</title><rect x="741.2" y="1429" width="53.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="744.17" y="1439.5" >do_sy..</text>
</g>
<g >
<title>thread_pool::do_work (932,404,739 samples, 2.01%)</title><rect x="21.8" y="1557" width="23.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="24.77" y="1567.5" >t..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1397" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1119.67" y="1407.5" ></text>
</g>
<g >
<title>charge_memcg (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1221" width="1.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="22.99" y="1231.5" ></text>
</g>
<g >
<title>seq_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1397" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="67.39" y="1407.5" ></text>
</g>
<g >
<title>[bash] (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1477" width="6.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="49.92" y="1487.5" ></text>
</g>
<g >
<title>__rcu_read_lock (50,060,421 samples, 0.11%)</title><rect x="436.3" y="1333" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="439.26" y="1343.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,763,882,764 samples, 3.79%)</title><rect x="743.8" y="1349" width="44.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="746.78" y="1359.5" >tcp_..</text>
</g>
<g >
<title>filemap_read (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1413" width="5.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="19.58" y="1423.5" ></text>
</g>
<g >
<title>start_kernel (23,169,078 samples, 0.05%)</title><rect x="1189.4" y="1541" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.41" y="1551.5" ></text>
</g>
<g >
<title>sendto (10,908,276,067 samples, 23.46%)</title><rect x="806.8" y="1493" width="276.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="809.76" y="1503.5" >sendto</text>
</g>
<g >
<title>ct_idle_exit (7,729,187 samples, 0.02%)</title><rect x="1165.8" y="1461" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1168.82" y="1471.5" ></text>
</g>
<g >
<title>[bash] (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1333" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.36" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,725,743 samples, 0.02%)</title><rect x="64.3" y="1573" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.34" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_execve (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1397" width="6.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.92" y="1407.5" ></text>
</g>
<g >
<title>lock_sock_nested (51,118,772 samples, 0.11%)</title><rect x="544.9" y="1317" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="547.94" y="1327.5" ></text>
</g>
<g >
<title>_start (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1589" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1119.36" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,826,376 samples, 0.01%)</title><rect x="53.5" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1439.5" ></text>
</g>
<g >
<title>execute_command_internal (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1317" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1119.41" y="1327.5" ></text>
</g>
<g >
<title>_Fork (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1477" width="3.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="59.41" y="1487.5" ></text>
</g>
<g >
<title>[bash] (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1269" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.41" y="1279.5" ></text>
</g>
<g >
<title>uv__stream_io (6,290,352 samples, 0.01%)</title><rect x="64.2" y="1557" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="67.18" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (561,582,097 samples, 1.21%)</title><rect x="511.2" y="1413" width="14.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="514.18" y="1423.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1269" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="49.73" y="1279.5" ></text>
</g>
<g >
<title>lind_poll (23,868,494,045 samples, 51.34%)</title><rect x="118.5" y="1525" width="605.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="121.51" y="1535.5" >lind_poll</text>
</g>
<g >
<title>[libc.so.6] (8,417,694 samples, 0.02%)</title><rect x="63.4" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="66.39" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,020,782 samples, 0.03%)</title><rect x="53.5" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1471.5" ></text>
</g>
<g >
<title>free_pud_range (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1317" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="67.67" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_write (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1413" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="57.69" y="1423.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (50,514,492 samples, 0.11%)</title><rect x="793.8" y="1413" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="796.78" y="1423.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (52,799,832 samples, 0.11%)</title><rect x="789.9" y="1365" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="792.85" y="1375.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,866,528,599 samples, 4.02%)</title><rect x="742.5" y="1365" width="47.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="745.47" y="1375.5" >inet..</text>
</g>
<g >
<title>enqueue_to_backlog (207,563,064 samples, 0.45%)</title><rect x="986.4" y="1077" width="5.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="989.40" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (102,271,634 samples, 0.22%)</title><rect x="721.8" y="1477" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="724.76" y="1487.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (50,769,688 samples, 0.11%)</title><rect x="1005.9" y="1301" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1008.94" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common_inner (2,327,897,549 samples, 5.01%)</title><rect x="736.0" y="1493" width="59.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="738.98" y="1503.5" >rustpo..</text>
</g>
<g >
<title>__errno_location (51,189,274 samples, 0.11%)</title><rect x="340.5" y="1445" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="343.51" y="1455.5" ></text>
</g>
<g >
<title>ip_finish_output2 (51,052,051 samples, 0.11%)</title><rect x="998.2" y="1205" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1001.17" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1093" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (51,349,863 samples, 0.11%)</title><rect x="812.2" y="1477" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="815.16" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (51,254,954 samples, 0.11%)</title><rect x="749.7" y="1317" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="752.66" y="1327.5" ></text>
</g>
<g >
<title>do_exit (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1525" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1119.67" y="1535.5" ></text>
</g>
<g >
<title>sqlite3VdbeRecordCompareWithSkip (105,937,814 samples, 0.23%)</title><rect x="10.0" y="1573" width="2.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,644,030,789 samples, 22.90%)</title><rect x="813.5" y="1477" width="270.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="816.47" y="1487.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>mas_wr_modify (8,213,076 samples, 0.02%)</title><rect x="46.2" y="1317" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="49.25" y="1327.5" ></text>
</g>
<g >
<title>sock_recvmsg (4,750,927,295 samples, 10.22%)</title><rect x="541.0" y="1349" width="120.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="544.04" y="1359.5" >sock_recvmsg</text>
</g>
<g >
<title>__cgroup_account_cputime (101,164,902 samples, 0.22%)</title><rect x="196.6" y="1317" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="199.60" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (408,848,061 samples, 0.88%)</title><rect x="564.4" y="1301" width="10.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="567.38" y="1311.5" ></text>
</g>
<g >
<title>__fget_light (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1365" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="57.69" y="1375.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (1,323,858,184 samples, 2.85%)</title><rect x="1038.4" y="1349" width="33.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1041.37" y="1359.5" >tc..</text>
</g>
<g >
<title>_raw_spin_lock (102,472,905 samples, 0.22%)</title><rect x="900.4" y="949" width="2.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="903.37" y="959.5" ></text>
</g>
<g >
<title>[bash] (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1477" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.36" y="1487.5" ></text>
</g>
<g >
<title>recvfrom (2,174,442,463 samples, 4.68%)</title><rect x="739.9" y="1461" width="55.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="742.87" y="1471.5" >recvf..</text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom (2,174,442,463 samples, 4.68%)</title><rect x="739.9" y="1477" width="55.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="742.87" y="1487.5" >rustp..</text>
</g>
<g >
<title>psi_task_switch (281,105,044 samples, 0.60%)</title><rect x="1182.2" y="1493" width="7.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1185.24" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,085,429 samples, 0.02%)</title><rect x="45.7" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.74" y="1423.5" ></text>
</g>
<g >
<title>__sched_yield (102,516,306 samples, 0.22%)</title><rect x="1089.0" y="1573" width="2.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1092.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="693" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (2,683,075,669 samples, 5.77%)</title><rect x="727.0" y="1525" width="68.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="729.96" y="1535.5" >rustpos..</text>
</g>
<g >
<title>established_get_first (7,190,809 samples, 0.02%)</title><rect x="64.4" y="1333" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="67.41" y="1343.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4,924,392,660 samples, 10.59%)</title><rect x="873.2" y="1189" width="125.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="876.17" y="1199.5" >ip_finish_output2</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::overflowing_add (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1333" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="709.42" y="1343.5" ></text>
</g>
<g >
<title>tcp_release_cb (6,660,077 samples, 0.01%)</title><rect x="595.4" y="1285" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="598.35" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,071,244 samples, 0.01%)</title><rect x="53.2" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.19" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (355,087,946 samples, 0.76%)</title><rect x="472.4" y="1365" width="9.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="475.37" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (51,342,942 samples, 0.11%)</title><rect x="136.7" y="1461" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="139.73" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="133" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1205" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1120.86" y="1215.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1445" width="5.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="19.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1413" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1423.5" ></text>
</g>
<g >
<title>__sys_sendto (10,541,531,836 samples, 22.68%)</title><rect x="813.5" y="1429" width="267.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="816.47" y="1439.5" >__sys_sendto</text>
</g>
<g >
<title>__x64_sys_read (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="67.23" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1509" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1519.5" ></text>
</g>
<g >
<title>__fget_light (51,180,721 samples, 0.11%)</title><rect x="791.2" y="1349" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="794.19" y="1359.5" ></text>
</g>
<g >
<title>igc_watchdog_task (283,456,542 samples, 0.61%)</title><rect x="1152.9" y="1509" width="7.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1155.90" y="1519.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (204,487,292 samples, 0.44%)</title><rect x="208.2" y="1445" width="5.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="211.21" y="1455.5" ></text>
</g>
<g >
<title>[bash] (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1525" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.36" y="1535.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1541" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="74.52" y="1551.5" ></text>
</g>
<g >
<title>read_tsc (102,651,452 samples, 0.22%)</title><rect x="785.9" y="1285" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="788.95" y="1295.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,202,224,178 samples, 4.74%)</title><rect x="900.4" y="965" width="55.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="903.37" y="975.5" >ip_pr..</text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1445" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="63.03" y="1455.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1189" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="74.59" y="1199.5" ></text>
</g>
<g >
<title>search_binary_handler (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1317" width="6.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="49.92" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1557" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.92" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1413" width="6.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.92" y="1423.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (6,656,456 samples, 0.01%)</title><rect x="71.6" y="1205" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="74.56" y="1215.5" ></text>
</g>
<g >
<title>tcp_skb_entail (262,620,191 samples, 0.56%)</title><rect x="1031.7" y="1349" width="6.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1034.70" y="1359.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (510,858,238 samples, 1.10%)</title><rect x="637.1" y="1285" width="12.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="640.07" y="1295.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (662,520,664 samples, 1.43%)</title><rect x="689.6" y="1461" width="16.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="692.60" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="277" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="287.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1493" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="42.14" y="1503.5" ></text>
</g>
<g >
<title>start (932,404,739 samples, 2.01%)</title><rect x="21.8" y="1589" width="23.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="24.77" y="1599.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1509" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1519.5" ></text>
</g>
<g >
<title>copy_pte_range (65,176,720 samples, 0.14%)</title><rect x="58.3" y="1301" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="61.26" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (2,072,657,512 samples, 4.46%)</title><rect x="741.2" y="1413" width="52.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="744.17" y="1423.5" >__x64..</text>
</g>
<g >
<title>tcp_rate_skb_delivered (51,213,394 samples, 0.11%)</title><rect x="940.4" y="869" width="1.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="943.38" y="879.5" ></text>
</g>
<g >
<title>__check_object_size (51,221,861 samples, 0.11%)</title><rect x="770.4" y="1269" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="773.39" y="1279.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1541" width="3.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1152.86" y="1551.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1349" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1152.69" y="1359.5" ></text>
</g>
<g >
<title>__cmd_record (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1573" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="69.71" y="1583.5" ></text>
</g>
<g >
<title>__schedule (408,844,183 samples, 0.88%)</title><rect x="1179.0" y="1509" width="10.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1181.99" y="1519.5" ></text>
</g>
<g >
<title>mmput (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1429" width="4.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="69.71" y="1439.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (38,805,954,783 samples, 83.47%)</title><rect x="98.6" y="1573" width="985.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="101.65" y="1583.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>generic_write_end (7,177,211 samples, 0.02%)</title><rect x="71.5" y="1237" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="74.55" y="1247.5" ></text>
</g>
<g >
<title>expand_string_assignment (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1253" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1119.41" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="853" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1445" width="8.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="715.91" y="1455.5" ></text>
</g>
<g >
<title>__fget_light (51,334,477 samples, 0.11%)</title><rect x="1078.4" y="1381" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1081.43" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1573" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="48.69" y="1583.5" ></text>
</g>
<g >
<title>execve (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1445" width="6.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="49.92" y="1455.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (50,251,347 samples, 0.11%)</title><rect x="769.1" y="1269" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="772.11" y="1279.5" ></text>
</g>
<g >
<title>__skb_clone (101,849,844 samples, 0.22%)</title><rect x="1003.4" y="1269" width="2.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1006.36" y="1279.5" ></text>
</g>
<g >
<title>do_idle (1,153,125,141 samples, 2.48%)</title><rect x="1160.1" y="1541" width="29.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1163.10" y="1551.5" >do..</text>
</g>
<g >
<title>ima_bprm_check (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1285" width="6.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="49.92" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.73" y="1567.5" ></text>
</g>
<g >
<title>skb_network_protocol (51,143,835 samples, 0.11%)</title><rect x="996.9" y="1125" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="999.87" y="1135.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.86" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (51,297,960 samples, 0.11%)</title><rect x="582.4" y="1285" width="1.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="585.40" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1429" width="6.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.92" y="1439.5" ></text>
</g>
<g >
<title>exec_mmap (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1429" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="67.67" y="1439.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (102,008,341 samples, 0.22%)</title><rect x="782.1" y="1317" width="2.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="785.07" y="1327.5" ></text>
</g>
<g >
<title>path_lookupat (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1397" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="56.29" y="1407.5" ></text>
</g>
<g >
<title>generic_exec_single (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1349" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="74.38" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (19,679,223,788 samples, 42.33%)</title><rect x="213.4" y="1477" width="499.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="216.40" y="1487.5" >rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposi..</text>
</g>
<g >
<title>v8::internal::Factory::NewFillerObject (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1525" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="63.03" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (102,188,688 samples, 0.22%)</title><rect x="960.1" y="1045" width="2.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="963.05" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1301" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="49.73" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1461" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="965" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="975.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (51,245,391 samples, 0.11%)</title><rect x="844.0" y="1317" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="847.00" y="1327.5" ></text>
</g>
<g >
<title>worker_thread (283,734,694 samples, 0.61%)</title><rect x="1152.9" y="1541" width="7.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1155.90" y="1551.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,919,328,431 samples, 4.13%)</title><rect x="742.5" y="1381" width="48.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="745.47" y="1391.5" >sock..</text>
</g>
<g >
<title>setfl (96,906,169 samples, 0.21%)</title><rect x="460.9" y="1349" width="2.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="463.86" y="1359.5" ></text>
</g>
<g >
<title>fput (51,292,436 samples, 0.11%)</title><rect x="1081.0" y="1429" width="1.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1084.04" y="1439.5" ></text>
</g>
<g >
<title>[bash] (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1429" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.36" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (101,580,693 samples, 0.22%)</title><rect x="816.0" y="1365" width="2.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="819.04" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (356,530,191 samples, 0.77%)</title><rect x="1106.0" y="1589" width="9.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1109.01" y="1599.5" ></text>
</g>
<g >
<title>tcp_data_ready (203,773,152 samples, 0.44%)</title><rect x="943.0" y="901" width="5.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="945.98" y="911.5" ></text>
</g>
<g >
<title>uv__fs_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1525" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="67.39" y="1535.5" ></text>
</g>
<g >
<title>__kfree_skb (51,243,338 samples, 0.11%)</title><rect x="592.7" y="1205" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="595.75" y="1215.5" ></text>
</g>
<g >
<title>igc_rd32 (283,456,542 samples, 0.61%)</title><rect x="1152.9" y="1477" width="7.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1155.90" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::Runtime::DeleteObjectProperty (7,577,592 samples, 0.02%)</title><rect x="55.8" y="1541" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="58.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1157" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1167.5" ></text>
</g>
<g >
<title>process_backlog (2,605,929,249 samples, 5.61%)</title><rect x="896.5" y="1061" width="66.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="899.50" y="1071.5" >process..</text>
</g>
<g >
<title>[bash] (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1301" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.41" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (153,253,589 samples, 0.33%)</title><rect x="1102.1" y="1589" width="3.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1105.12" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_clone (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1429" width="3.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="59.41" y="1439.5" ></text>
</g>
<g >
<title>free@plt (89,418,409 samples, 0.19%)</title><rect x="61.1" y="37" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="64.10" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,985,659,516 samples, 6.42%)</title><rect x="405.6" y="1381" width="75.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="408.60" y="1391.5" >do_sysca..</text>
</g>
<g >
<title>_copy_to_iter (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1349" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="49.73" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="725" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="735.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1413" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="49.25" y="1423.5" ></text>
</g>
<g >
<title>tcp_ack (152,316,898 samples, 0.33%)</title><rect x="590.2" y="1237" width="3.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="593.18" y="1247.5" ></text>
</g>
<g >
<title>vfs_iter_write (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1349" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="74.54" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1477" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,201,530 samples, 0.05%)</title><rect x="1117.0" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1445" width="2.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="732.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1173" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1183.5" ></text>
</g>
<g >
<title>pick_next_task (1,255,732,002 samples, 2.70%)</title><rect x="168.6" y="1365" width="31.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="171.60" y="1375.5" >pi..</text>
</g>
<g >
<title>execute_command_internal (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1445" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1119.36" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="773" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="783.5" ></text>
</g>
<g >
<title>lind (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1605" width="6.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="49.92" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (13,750,302 samples, 0.03%)</title><rect x="71.4" y="1589" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="74.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="709" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="719.5" ></text>
</g>
<g >
<title>exec_binprm (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1493" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="67.67" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (309,527,261 samples, 0.67%)</title><rect x="1141.8" y="1557" width="7.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1144.79" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (6,428,367 samples, 0.01%)</title><rect x="1102.0" y="1493" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1104.95" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (4,819,795 samples, 0.01%)</title><rect x="1189.9" y="1461" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1192.86" y="1471.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (152,967,096 samples, 0.33%)</title><rect x="657.7" y="1317" width="3.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="660.74" y="1327.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1349" width="1.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="22.99" y="1359.5" ></text>
</g>
<g >
<title>[anon] (243,540,988 samples, 0.52%)</title><rect x="74.3" y="1589" width="6.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="77.32" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (50,893,045 samples, 0.11%)</title><rect x="792.5" y="1365" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="795.49" y="1375.5" ></text>
</g>
<g >
<title>free_pgd_range (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1349" width="1.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="67.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="597" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="607.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (51,327,650 samples, 0.11%)</title><rect x="948.2" y="901" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="951.15" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,202,224,178 samples, 4.74%)</title><rect x="900.4" y="981" width="55.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="903.37" y="991.5" >ip_lo..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,884,532 samples, 0.03%)</title><rect x="1116.6" y="1589" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1119.59" y="1599.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,229,656 samples, 0.22%)</title><rect x="774.3" y="1269" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="777.29" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="67.39" y="1487.5" ></text>
</g>
<g >
<title>__schedule (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1509" width="3.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1152.86" y="1519.5" ></text>
</g>
<g >
<title>call_cpuidle (9,648,951 samples, 0.02%)</title><rect x="1189.4" y="1445" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.41" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (6,226,424,991 samples, 13.39%)</title><rect x="847.9" y="1301" width="158.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="850.90" y="1311.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>std::time::Instant::elapsed (255,652,382 samples, 0.55%)</title><rect x="706.4" y="1461" width="6.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="709.42" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::now (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1461" width="8.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="715.91" y="1471.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (7,139,954,262 samples, 15.36%)</title><rect x="844.0" y="1333" width="181.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="847.00" y="1343.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>read (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="67.23" y="1535.5" ></text>
</g>
<g >
<title>kernel_clone (137,885,765 samples, 0.30%)</title><rect x="56.4" y="1397" width="3.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="59.41" y="1407.5" ></text>
</g>
<g >
<title>__do_softirq (50,297,971 samples, 0.11%)</title><rect x="810.9" y="1477" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="813.89" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1429" width="8.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="715.91" y="1439.5" ></text>
</g>
<g >
<title>_compound_head (5,064,107 samples, 0.01%)</title><rect x="59.1" y="1285" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="62.10" y="1295.5" ></text>
</g>
<g >
<title>__fget_light (409,902,506 samples, 0.88%)</title><rect x="425.9" y="1333" width="10.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="428.86" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1429" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1439.5" ></text>
</g>
<g >
<title>__perf_event_enable (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1301" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="74.38" y="1311.5" ></text>
</g>
<g >
<title>clock_gettime (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1413" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="715.91" y="1423.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (51,317,861 samples, 0.11%)</title><rect x="146.2" y="1397" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="149.20" y="1407.5" ></text>
</g>
<g >
<title>ip_rcv (2,351,729,941 samples, 5.06%)</title><rect x="899.1" y="1013" width="59.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="902.07" y="1023.5" >ip_rcv</text>
</g>
<g >
<title>[libc.so.6] (21,805,033 samples, 0.05%)</title><rect x="45.7" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::recv_common (51,170,344 samples, 0.11%)</title><rect x="73.0" y="1573" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="76.03" y="1583.5" ></text>
</g>
<g >
<title>dispatcher (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1509" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="732.56" y="1519.5" ></text>
</g>
<g >
<title>tcp_sendmsg (10,082,688,246 samples, 21.69%)</title><rect x="816.0" y="1381" width="256.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="819.04" y="1391.5" >tcp_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (89,418,409 samples, 0.19%)</title><rect x="61.1" y="53" width="2.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="64.10" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="213" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="223.5" ></text>
</g>
<g >
<title>mmput (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1493" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1119.67" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1237" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1247.5" ></text>
</g>
<g >
<title>[[heap]] (10,133,877 samples, 0.02%)</title><rect x="45.4" y="1589" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="48.44" y="1599.5" ></text>
</g>
<g >
<title>validate_xmit_skb (153,434,903 samples, 0.33%)</title><rect x="994.3" y="1141" width="3.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="997.27" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1445" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.25" y="1455.5" ></text>
</g>
<g >
<title>handle_pte_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1285" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1120.86" y="1295.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,069,200 samples, 0.11%)</title><rect x="1068.1" y="1269" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1071.09" y="1279.5" ></text>
</g>
<g >
<title>__sched_yield (3,172,565,899 samples, 6.82%)</title><rect x="132.9" y="1477" width="80.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="135.87" y="1487.5" >__sched_y..</text>
</g>
<g >
<title>sched_clock (51,144,788 samples, 0.11%)</title><rect x="200.5" y="1333" width="1.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="203.47" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1397" width="4.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="69.71" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (51,144,788 samples, 0.11%)</title><rect x="200.5" y="1317" width="1.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="203.47" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="117" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1557" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1567.5" ></text>
</g>
<g >
<title>aa_sk_perm (51,242,652 samples, 0.11%)</title><rect x="656.4" y="1317" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="659.44" y="1327.5" ></text>
</g>
<g >
<title>[ls] (29,151,708 samples, 0.06%)</title><rect x="53.3" y="1541" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="56.29" y="1551.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (203,906,307 samples, 0.44%)</title><rect x="774.3" y="1285" width="5.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="777.29" y="1295.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1381" width="0.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1152.69" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (932,404,739 samples, 2.01%)</title><rect x="21.8" y="1541" width="23.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="24.77" y="1551.5" >s..</text>
</g>
<g >
<title>execve (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1525" width="4.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="69.71" y="1535.5" ></text>
</g>
<g >
<title>__ip_local_out (102,685,263 samples, 0.22%)</title><rect x="868.0" y="1237" width="2.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="870.97" y="1247.5" ></text>
</g>
<g >
<title>HandleStackContext (251,762,910 samples, 0.54%)</title><rect x="101.3" y="1557" width="6.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="104.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1141" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1151.5" ></text>
</g>
<g >
<title>mtree_range_walk (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1221" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="49.73" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::now (204,458,456 samples, 0.44%)</title><rect x="707.7" y="1429" width="5.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="710.72" y="1439.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4,293,528,515 samples, 9.24%)</title><rect x="546.2" y="1317" width="109.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="549.24" y="1327.5" >tcp_recvmsg</text>
</g>
<g >
<title>kmalloc_reserve (153,021,392 samples, 0.33%)</title><rect x="1059.1" y="1317" width="3.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1062.08" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (51,308,041 samples, 0.11%)</title><rect x="135.4" y="1461" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="138.43" y="1471.5" ></text>
</g>
<g >
<title>zap_pte_range (5,442,288 samples, 0.01%)</title><rect x="1116.8" y="1381" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1119.83" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_execve (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1477" width="4.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="69.71" y="1487.5" ></text>
</g>
<g >
<title>NaClSysRead (2,734,416,307 samples, 5.88%)</title><rect x="725.7" y="1541" width="69.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="728.66" y="1551.5" >NaClSys..</text>
</g>
<g >
<title>copyout (102,488,021 samples, 0.22%)</title><rect x="771.7" y="1253" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="774.69" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,258,453 samples, 0.11%)</title><rect x="967.8" y="1045" width="1.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="970.81" y="1055.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (37,924,214 samples, 0.08%)</title><rect x="65.7" y="1317" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="68.74" y="1327.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (255,243,405 samples, 0.55%)</title><rect x="767.8" y="1317" width="6.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="770.81" y="1327.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (263,826,038 samples, 0.57%)</title><rect x="1172.3" y="1509" width="6.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1175.30" y="1519.5" ></text>
</g>
<g >
<title>__libc_start_main (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1573" width="6.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="49.92" y="1583.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (101,771,281 samples, 0.22%)</title><rect x="1074.6" y="1381" width="2.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1077.55" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_timer (220,933,306 samples, 0.48%)</title><rect x="1160.1" y="1381" width="5.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1163.13" y="1391.5" ></text>
</g>
<g >
<title>CompareAndSwap (50,785,568 samples, 0.11%)</title><rect x="107.6" y="1541" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="110.64" y="1551.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (203,210,832 samples, 0.44%)</title><rect x="476.2" y="1333" width="5.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="479.23" y="1343.5" ></text>
</g>
<g >
<title>Builtins_CreateTypedArray (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1573" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="63.03" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1477" width="3.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1152.86" y="1487.5" ></text>
</g>
<g >
<title>free_unref_page_list (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1317" width="4.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="69.71" y="1327.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (51,209,310 samples, 0.11%)</title><rect x="74.3" y="1573" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="77.32" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_se (127,739,139 samples, 0.27%)</title><rect x="1179.0" y="1429" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1181.99" y="1439.5" ></text>
</g>
<g >
<title>schedule (2,239,610,993 samples, 4.82%)</title><rect x="147.5" y="1397" width="56.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="150.50" y="1407.5" >schedule</text>
</g>
<g >
<title>generic_perform_write (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1269" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="74.54" y="1279.5" ></text>
</g>
<g >
<title>kthread (404,288,630 samples, 0.87%)</title><rect x="1149.8" y="1557" width="10.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1152.84" y="1567.5" ></text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (932,404,739 samples, 2.01%)</title><rect x="21.8" y="1573" width="23.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="24.77" y="1583.5" >m..</text>
</g>
<g >
<title>free_pgtables (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1365" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="67.67" y="1375.5" ></text>
</g>
<g >
<title>unmap_single_vma (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1429" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1119.67" y="1439.5" ></text>
</g>
<g >
<title>do_mmap (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1381" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="49.25" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1509" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="67.67" y="1519.5" ></text>
</g>
<g >
<title>perf_ctx_enable (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1269" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="74.38" y="1279.5" ></text>
</g>
<g >
<title>getPageNormal (103,289,523 samples, 0.22%)</title><rect x="24.7" y="1317" width="2.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="27.67" y="1327.5" ></text>
</g>
<g >
<title>expr (50,719,286 samples, 0.11%)</title><rect x="45.4" y="1605" width="1.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="48.44" y="1615.5" ></text>
</g>
<g >
<title>tid_fd_update_inode (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1333" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="56.29" y="1343.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (306,435,754 samples, 0.66%)</title><rect x="774.3" y="1301" width="7.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="777.29" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,884,532 samples, 0.03%)</title><rect x="1116.6" y="1573" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1119.59" y="1583.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (50,788,903 samples, 0.11%)</title><rect x="999.5" y="1205" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1002.46" y="1215.5" ></text>
</g>
<g >
<title>__fget_light (102,588,514 samples, 0.22%)</title><rect x="438.8" y="1349" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="441.82" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,071,244 samples, 0.01%)</title><rect x="53.2" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.19" y="1551.5" ></text>
</g>
<g >
<title>seq_read_iter (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1381" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="67.39" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (11,164,778,220 samples, 24.02%)</title><rect x="800.2" y="1525" width="283.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="803.25" y="1535.5" >rustposix::safeposix::syscalls::fs_cal..</text>
</g>
<g >
<title>tcp_mstamp_refresh (153,039,078 samples, 0.33%)</title><rect x="651.3" y="1269" width="3.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="654.33" y="1279.5" ></text>
</g>
<g >
<title>[sel_ldr] (714,683,469 samples, 1.54%)</title><rect x="80.5" y="1573" width="18.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="83.51" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime (50,582,862 samples, 0.11%)</title><rect x="1091.6" y="1573" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1094.60" y="1583.5" ></text>
</g>
<g >
<title>__mmput (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1477" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1119.67" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (51,216,025 samples, 0.11%)</title><rect x="481.4" y="1397" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="484.38" y="1407.5" ></text>
</g>
<g >
<title>_perf_ioctl (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1429" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="74.38" y="1439.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (101,083,957 samples, 0.22%)</title><rect x="482.7" y="1397" width="2.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="485.68" y="1407.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1269" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="56.86" y="1279.5" ></text>
</g>
<g >
<title>command_substitute (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1221" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1119.41" y="1231.5" ></text>
</g>
<g >
<title>grep (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1605" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="49.73" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1413" width="6.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="42.14" y="1423.5" ></text>
</g>
<g >
<title>ip_send_check (102,685,263 samples, 0.22%)</title><rect x="868.0" y="1221" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="870.97" y="1231.5" ></text>
</g>
<g >
<title>ip_local_out (5,282,880,344 samples, 11.36%)</title><rect x="866.7" y="1253" width="134.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="869.66" y="1263.5" >ip_local_out</text>
</g>
<g >
<title>exit_mmap (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1461" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1119.67" y="1471.5" ></text>
</g>
<g >
<title>do_user_addr_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1317" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="22.99" y="1327.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (2,351,951,626 samples, 5.06%)</title><rect x="595.5" y="1301" width="59.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="598.52" y="1311.5" >tcp_re..</text>
</g>
<g >
<title>[[heap]] (51,170,344 samples, 0.11%)</title><rect x="73.0" y="1589" width="1.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="76.03" y="1599.5" ></text>
</g>
<g >
<title>[anon] (105,937,814 samples, 0.23%)</title><rect x="10.0" y="1589" width="2.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,312,231,928 samples, 13.58%)</title><rect x="526.7" y="1397" width="160.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="529.74" y="1407.5" >do_syscall_64</text>
</g>
<g >
<title>_copy_to_iter (102,488,021 samples, 0.22%)</title><rect x="771.7" y="1269" width="2.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="774.69" y="1279.5" ></text>
</g>
<g >
<title>memcg_stat_format.constprop.0 (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1413" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1152.69" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (2,560,311,284 samples, 5.51%)</title><rect x="140.6" y="1429" width="65.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="143.64" y="1439.5" >__x64_s..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (6,428,367 samples, 0.01%)</title><rect x="1102.0" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="645" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="655.5" ></text>
</g>
<g >
<title>execute_command (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1365" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1119.36" y="1375.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (51,340,638 samples, 0.11%)</title><rect x="725.7" y="1525" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="728.66" y="1535.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (50,785,568 samples, 0.11%)</title><rect x="107.6" y="1557" width="1.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="110.64" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1541" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.71" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1573" width="3.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="59.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1061" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1071.5" ></text>
</g>
<g >
<title>mas_store_prealloc (8,213,076 samples, 0.02%)</title><rect x="46.2" y="1349" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="49.25" y="1359.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1477" width="17.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="24.77" y="1487.5" ></text>
</g>
<g >
<title>sendto (102,271,634 samples, 0.22%)</title><rect x="721.8" y="1493" width="2.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="724.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1461" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1471.5" ></text>
</g>
<g >
<title>skb_push (102,586,988 samples, 0.22%)</title><rect x="1000.8" y="1269" width="2.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1003.75" y="1279.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1221" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="56.86" y="1231.5" ></text>
</g>
<g >
<title>sock_rfree (50,951,532 samples, 0.11%)</title><rect x="751.0" y="1333" width="1.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="753.96" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Instant::checked_sub_instant (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1397" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="709.42" y="1407.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (102,412,252 samples, 0.22%)</title><rect x="1015.0" y="1301" width="2.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1018.00" y="1311.5" ></text>
</g>
<g >
<title>_IO_default_uflow (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1429" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="56.86" y="1439.5" ></text>
</g>
<g >
<title>user_path_at_empty (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1429" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="56.29" y="1439.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (102,008,341 samples, 0.22%)</title><rect x="782.1" y="1301" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="785.07" y="1311.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1333" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="56.86" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1429" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="261" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1445" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="49.73" y="1455.5" ></text>
</g>
<g >
<title>mmput (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1413" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="67.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="869" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (5,824,603,162 samples, 12.53%)</title><rect x="526.7" y="1381" width="147.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="529.74" y="1391.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>do_user_addr_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1301" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="56.86" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="469" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="479.5" ></text>
</g>
<g >
<title>execute_command (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1413" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1119.36" y="1423.5" ></text>
</g>
<g >
<title>__fdget (51,334,477 samples, 0.11%)</title><rect x="1078.4" y="1397" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1081.43" y="1407.5" ></text>
</g>
<g >
<title>__handle_mm_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1285" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="22.99" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1445" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1455.5" ></text>
</g>
<g >
<title>__cmd_record (13,750,302 samples, 0.03%)</title><rect x="71.4" y="1573" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="74.38" y="1583.5" ></text>
</g>
<g >
<title>_IO_file_underflow (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1413" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="56.86" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1445" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="709.42" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (51,293,606 samples, 0.11%)</title><rect x="1115.1" y="1589" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1118.06" y="1599.5" ></text>
</g>
<g >
<title>schedule (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1525" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1152.86" y="1535.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1557" width="4.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="69.71" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (720,850,815 samples, 1.55%)</title><rect x="1083.6" y="1589" width="18.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1086.64" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="325" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1349" width="4.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="69.71" y="1359.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (417,084,018 samples, 0.90%)</title><rect x="27.3" y="1333" width="10.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.29" y="1343.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1365" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1120.86" y="1375.5" ></text>
</g>
<g >
<title>__libc_start_main (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1104.94" y="1583.5" ></text>
</g>
<g >
<title>lindrustfinalize (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1509" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1104.94" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,414,585,411 samples, 13.80%)</title><rect x="525.4" y="1413" width="162.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="528.44" y="1423.5" >entry_SYSCALL_64_aft..</text>
</g>
<g >
<title>[grep] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1541" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.73" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="629" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1349" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.86" y="1359.5" ></text>
</g>
<g >
<title>_copy_to_iter (51,299,143 samples, 0.11%)</title><rect x="621.5" y="1253" width="1.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="624.45" y="1263.5" ></text>
</g>
<g >
<title>exc_page_fault (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1349" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1120.86" y="1359.5" ></text>
</g>
<g >
<title>CompareAndSwap (51,159,822 samples, 0.11%)</title><rect x="1083.6" y="1573" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1086.64" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.94" y="1567.5" ></text>
</g>
<g >
<title>__mmput (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1413" width="4.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="69.71" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (203,576,582 samples, 0.44%)</title><rect x="163.4" y="1365" width="5.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="166.43" y="1375.5" ></text>
</g>
<g >
<title>vfs_iter_read (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1493" width="5.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="19.58" y="1503.5" ></text>
</g>
<g >
<title>_IO_file_doallocate (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1381" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="56.86" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="74.52" y="1455.5" ></text>
</g>
<g >
<title>netif_skb_features (50,979,610 samples, 0.11%)</title><rect x="995.6" y="1125" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="998.57" y="1135.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,452,395,428 samples, 5.28%)</title><rect x="897.8" y="1029" width="62.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="900.81" y="1039.5" >__neti..</text>
</g>
<g >
<title>__napi_poll (2,605,929,249 samples, 5.61%)</title><rect x="896.5" y="1077" width="66.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="899.50" y="1087.5" >__napi_..</text>
</g>
<g >
<title>cpptools_context::handle_parse_file (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1525" width="6.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="42.14" y="1535.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (51,120,206 samples, 0.11%)</title><rect x="705.1" y="1429" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="708.12" y="1439.5" ></text>
</g>
<g >
<title>lookup_fast (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1365" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="56.29" y="1375.5" ></text>
</g>
<g >
<title>__calc_delta (83,455,037 samples, 0.18%)</title><rect x="194.5" y="1317" width="2.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="197.48" y="1327.5" ></text>
</g>
<g >
<title>bprm_execve (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1525" width="2.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="67.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="165" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="175.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1509" width="6.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="42.14" y="1519.5" ></text>
</g>
<g >
<title>read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1509" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="67.39" y="1519.5" ></text>
</g>
<g >
<title>tid_fd_revalidate (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1349" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="56.29" y="1359.5" ></text>
</g>
<g >
<title>__tcp_select_window (203,245,162 samples, 0.44%)</title><rect x="855.8" y="1285" width="5.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="858.85" y="1295.5" ></text>
</g>
<g >
<title>tcp_wfree (51,301,928 samples, 0.11%)</title><rect x="991.7" y="1109" width="1.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="994.67" y="1119.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (510,858,238 samples, 1.10%)</title><rect x="637.1" y="1269" width="12.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="640.07" y="1279.5" ></text>
</g>
<g >
<title>tcp_check_space (351,892,976 samples, 0.76%)</title><rect x="917.2" y="917" width="8.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="920.21" y="927.5" ></text>
</g>
<g >
<title>aa_sk_perm (52,799,832 samples, 0.11%)</title><rect x="789.9" y="1333" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="792.85" y="1343.5" ></text>
</g>
<g >
<title>worker (9,725,743 samples, 0.02%)</title><rect x="64.3" y="1557" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="67.34" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (261,529,211 samples, 0.56%)</title><rect x="1172.3" y="1397" width="6.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.30" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,383,563 samples, 0.02%)</title><rect x="46.0" y="1397" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.00" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1461" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.73" y="1471.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (50,367,216 samples, 0.11%)</title><rect x="862.8" y="1285" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="865.79" y="1295.5" ></text>
</g>
<g >
<title>enqueue_entity (261,529,211 samples, 0.56%)</title><rect x="1172.3" y="1429" width="6.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1175.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="101" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="111.5" ></text>
</g>
<g >
<title>cache_from_obj (51,258,453 samples, 0.11%)</title><rect x="967.8" y="1029" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="970.81" y="1039.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (7,134,367 samples, 0.02%)</title><rect x="1101.9" y="1525" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1104.94" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (307,050,337 samples, 0.66%)</title><rect x="442.7" y="1333" width="7.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="445.71" y="1343.5" ></text>
</g>
<g >
<title>vma_alloc_folio (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1253" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1120.86" y="1263.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::send_syscall (11,062,184,828 samples, 23.80%)</title><rect x="802.9" y="1509" width="280.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="805.85" y="1519.5" >rustposix::safeposix::syscalls::net_c..</text>
</g>
<g >
<title>update_curr (490,019,257 samples, 1.05%)</title><rect x="186.7" y="1333" width="12.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="189.73" y="1343.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1125" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="74.59" y="1135.5" ></text>
</g>
<g >
<title>reader_loop (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1525" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="49.92" y="1535.5" ></text>
</g>
<g >
<title>__mmap (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1477" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="49.25" y="1487.5" ></text>
</g>
<g >
<title>NaClLog (50,967,597 samples, 0.11%)</title><rect x="71.7" y="1589" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="74.73" y="1599.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (51,243,262 samples, 0.11%)</title><rect x="201.8" y="1381" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="204.77" y="1391.5" ></text>
</g>
<g >
<title>swapper (2,833,776,395 samples, 6.10%)</title><rect x="1118.1" y="1605" width="71.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1121.07" y="1615.5" >swapper</text>
</g>
<g >
<title>[libc.so.6] (29,151,708 samples, 0.06%)</title><rect x="53.3" y="1557" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.29" y="1567.5" ></text>
</g>
<g >
<title>copy_present_pte (26,917,517 samples, 0.06%)</title><rect x="59.2" y="1285" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="62.23" y="1295.5" ></text>
</g>
<g >
<title>ksys_read (7,743,871 samples, 0.02%)</title><rect x="64.4" y="1445" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.39" y="1455.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (385,086,759 samples, 0.83%)</title><rect x="677.2" y="1365" width="9.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="680.18" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1013" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1023.5" ></text>
</g>
<g >
<title>execute_command_internal (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1493" width="6.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.92" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="949" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="959.5" ></text>
</g>
<g >
<title>sh (24,112,201 samples, 0.05%)</title><rect x="1116.4" y="1605" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1119.36" y="1615.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (255,586,978 samples, 0.55%)</title><rect x="761.3" y="1317" width="6.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="764.32" y="1327.5" ></text>
</g>
<g >
<title>__sys_recvfrom (5,670,990,634 samples, 12.20%)</title><rect x="526.7" y="1365" width="144.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="529.74" y="1375.5" >__sys_recvfrom</text>
</g>
<g >
<title>ksys_read (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1461" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="67.23" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1573" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.58" y="1583.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1413" width="17.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="24.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="901" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="911.5" ></text>
</g>
<g >
<title>do_fcntl (102,613,479 samples, 0.22%)</title><rect x="463.3" y="1365" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="466.32" y="1375.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1557" width="3.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="59.41" y="1567.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (101,996,506 samples, 0.22%)</title><rect x="591.5" y="1221" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="594.46" y="1231.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (57,172,865 samples, 0.12%)</title><rect x="56.8" y="1269" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="59.81" y="1279.5" ></text>
</g>
<g >
<title>filename_lookup (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1413" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="56.29" y="1423.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (263,826,038 samples, 0.57%)</title><rect x="1172.3" y="1525" width="6.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1175.30" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv_core (50,750,267 samples, 0.11%)</title><rect x="958.8" y="1013" width="1.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="961.77" y="1023.5" ></text>
</g>
<g >
<title>perf_mmap__push (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1525" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="74.52" y="1535.5" ></text>
</g>
<g >
<title>node::task_queue::RunMicrotasks (17,410,595 samples, 0.04%)</title><rect x="54.1" y="1557" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="57.14" y="1567.5" ></text>
</g>
<g >
<title>[sel_ldr] (38,805,954,783 samples, 83.47%)</title><rect x="98.6" y="1589" width="985.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="101.65" y="1599.5" >[sel_ldr]</text>
</g>
<g >
<title>mmap_region (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1365" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="49.25" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1461" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="49.25" y="1471.5" ></text>
</g>
<g >
<title>std::time::Instant::now (204,458,456 samples, 0.44%)</title><rect x="707.7" y="1445" width="5.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="710.72" y="1455.5" ></text>
</g>
<g >
<title>exit_mm (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1509" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1119.67" y="1519.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (252,533,425 samples, 0.54%)</title><rect x="655.2" y="1333" width="6.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="658.22" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="437" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="447.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (50,386,385 samples, 0.11%)</title><rect x="1100.7" y="1557" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1103.66" y="1567.5" ></text>
</g>
<g >
<title>uv__async_io (21,963,173 samples, 0.05%)</title><rect x="63.6" y="1557" width="0.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="66.63" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (5,355,751 samples, 0.01%)</title><rect x="1149.7" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1152.69" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,969,032,501 samples, 6.39%)</title><rect x="138.0" y="1461" width="75.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="141.04" y="1471.5" >entry_SY..</text>
</g>
<g >
<title>ktime_get (51,185,094 samples, 0.11%)</title><rect x="652.7" y="1253" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="655.65" y="1263.5" ></text>
</g>
<g >
<title>ion (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1477" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="74.52" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (49,915,220 samples, 0.11%)</title><rect x="897.8" y="1013" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="900.81" y="1023.5" ></text>
</g>
<g >
<title>unmap_vmas (37,924,214 samples, 0.08%)</title><rect x="65.7" y="1365" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="68.74" y="1375.5" ></text>
</g>
<g >
<title>[[vdso]] (204,458,456 samples, 0.44%)</title><rect x="707.7" y="1381" width="5.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="710.72" y="1391.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (15,617,341 samples, 0.03%)</title><rect x="46.2" y="1397" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="49.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1573" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1583.5" ></text>
</g>
<g >
<title>glob_matcher::match (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1461" width="6.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="42.14" y="1471.5" ></text>
</g>
<g >
<title>do_group_exit (12,018,815 samples, 0.03%)</title><rect x="1116.7" y="1541" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1119.67" y="1551.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4,873,554,973 samples, 10.48%)</title><rect x="874.5" y="1157" width="123.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="877.46" y="1167.5" >__dev_queue_xmit</text>
</g>
<g >
<title>__rcu_read_lock (13,736,676 samples, 0.03%)</title><rect x="56.5" y="1237" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="59.46" y="1247.5" ></text>
</g>
<g >
<title>ima_match_policy (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1237" width="6.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="49.92" y="1247.5" ></text>
</g>
<g >
<title>skb_free_head (103,066,112 samples, 0.22%)</title><rect x="975.9" y="1045" width="2.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="978.87" y="1055.5" ></text>
</g>
<g >
<title>[sleep] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1589" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1120.03" y="1599.5" ></text>
</g>
<g >
<title>__update_blocked_fair (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1429" width="3.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1152.86" y="1439.5" ></text>
</g>
<g >
<title>__fdget (254,549,430 samples, 0.55%)</title><rect x="662.9" y="1333" width="6.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="665.92" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="741" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="751.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (101,779,432 samples, 0.22%)</title><rect x="205.6" y="1413" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="208.62" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (153,021,392 samples, 0.33%)</title><rect x="1059.1" y="1301" width="3.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1062.08" y="1311.5" ></text>
</g>
<g >
<title>ip_queue_xmit (101,349,725 samples, 0.22%)</title><rect x="1007.2" y="1301" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1010.23" y="1311.5" ></text>
</g>
<g >
<title>intel_idle (135,718,801 samples, 0.29%)</title><rect x="1166.0" y="1461" width="3.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1169.02" y="1471.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1237" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="22.99" y="1247.5" ></text>
</g>
<g >
<title>schedule (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1461" width="7.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1144.79" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_DeleteProperty (7,577,592 samples, 0.02%)</title><rect x="55.8" y="1557" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="58.77" y="1567.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::code_items_set&gt;::move_next (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1429" width="17.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="24.77" y="1439.5" ></text>
</g>
<g >
<title>read@plt (21,963,173 samples, 0.05%)</title><rect x="63.6" y="1541" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="66.63" y="1551.5" ></text>
</g>
<g >
<title>tcp_seq_next (7,190,809 samples, 0.02%)</title><rect x="64.4" y="1365" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="67.41" y="1375.5" ></text>
</g>
<g >
<title>uv_spawn (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1541" width="3.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="59.41" y="1551.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (255,243,405 samples, 0.55%)</title><rect x="767.8" y="1301" width="6.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="770.81" y="1311.5" ></text>
</g>
<g >
<title>sock_def_readable (51,233,989 samples, 0.11%)</title><rect x="931.3" y="901" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="934.31" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="485" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="495.5" ></text>
</g>
<g >
<title>ktime_get (50,854,080 samples, 0.11%)</title><rect x="784.7" y="1301" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="787.66" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="181" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1333" width="1.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="22.99" y="1343.5" ></text>
</g>
<g >
<title>aa_sk_perm (152,967,096 samples, 0.33%)</title><rect x="657.7" y="1301" width="3.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="660.74" y="1311.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (203,961,229 samples, 0.44%)</title><rect x="769.1" y="1285" width="5.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="772.11" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="517" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="527.5" ></text>
</g>
<g >
<title>readlink (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1509" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="56.29" y="1519.5" ></text>
</g>
<g >
<title>epoll_wait (9,241,139 samples, 0.02%)</title><rect x="63.4" y="1557" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="66.39" y="1567.5" ></text>
</g>
<g >
<title>__wake_up (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1141" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="74.59" y="1151.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1461" width="5.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="19.58" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (201,342,190 samples, 0.43%)</title><rect x="335.4" y="1445" width="5.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="338.40" y="1455.5" ></text>
</g>
<g >
<title>moveToChild (153,821,823 samples, 0.33%)</title><rect x="23.4" y="1333" width="3.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="26.38" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_select (4,207,845 samples, 0.01%)</title><rect x="1172.2" y="1509" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1175.19" y="1519.5" ></text>
</g>
<g >
<title>handle_pte_fault (70,143,767 samples, 0.15%)</title><rect x="20.0" y="1269" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="22.99" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1445" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="57.69" y="1455.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (51,297,960 samples, 0.11%)</title><rect x="582.4" y="1269" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="585.40" y="1279.5" ></text>
</g>
<g >
<title>[[vdso]] (348,873,576 samples, 0.75%)</title><rect x="712.9" y="1397" width="8.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="715.91" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1077" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1087.5" ></text>
</g>
<g >
<title>record__pushfn (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1509" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="74.52" y="1519.5" ></text>
</g>
<g >
<title>smp_call_function_single (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1365" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="74.38" y="1375.5" ></text>
</g>
<g >
<title>node (495,124,164 samples, 1.07%)</title><rect x="54.1" y="1605" width="12.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="57.14" y="1615.5" ></text>
</g>
<g >
<title>exec_binprm (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1333" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="49.92" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="245" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="255.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (11,369,042,974 samples, 24.46%)</title><rect x="795.1" y="1557" width="288.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="798.06" y="1567.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__alloc_pages (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1221" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1120.86" y="1231.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,202,224,178 samples, 4.74%)</title><rect x="900.4" y="997" width="55.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="903.37" y="1007.5" >ip_lo..</text>
</g>
<g >
<title>[bash] (5,943,071 samples, 0.01%)</title><rect x="1116.4" y="1237" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.41" y="1247.5" ></text>
</g>
<g >
<title>skb_clone (101,849,844 samples, 0.22%)</title><rect x="1003.4" y="1285" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1006.36" y="1295.5" ></text>
</g>
<g >
<title>ret_from_fork (404,288,630 samples, 0.87%)</title><rect x="1149.8" y="1573" width="10.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1152.84" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (2,069,596,957 samples, 4.45%)</title><rect x="410.8" y="1365" width="52.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="413.78" y="1375.5" >__x64..</text>
</g>
<g >
<title>execute_command (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1509" width="6.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="49.92" y="1519.5" ></text>
</g>
<g >
<title>security_bprm_check (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1301" width="6.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="49.92" y="1311.5" ></text>
</g>
<g >
<title>ovl_read_iter (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1509" width="5.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="19.58" y="1519.5" ></text>
</g>
<g >
<title>dup_mmap (136,086,261 samples, 0.29%)</title><rect x="56.5" y="1349" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="59.46" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,071,244 samples, 0.01%)</title><rect x="53.2" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.19" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (308,112,432 samples, 0.66%)</title><rect x="622.8" y="1221" width="7.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="625.75" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (51,270,459 samples, 0.11%)</title><rect x="739.9" y="1445" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="742.87" y="1455.5" ></text>
</g>
<g >
<title>copy_page_to_iter (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1397" width="5.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="19.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="565" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="575.5" ></text>
</g>
<g >
<title>[[vdso]] (611,400,458 samples, 1.32%)</title><rect x="689.6" y="1429" width="15.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="692.60" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1365" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1375.5" ></text>
</g>
<g >
<title>sock_rfree (306,435,754 samples, 0.66%)</title><rect x="774.3" y="1317" width="7.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="777.29" y="1327.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1557" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="63.03" y="1567.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (263,826,038 samples, 0.57%)</title><rect x="1172.3" y="1493" width="6.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1175.30" y="1503.5" ></text>
</g>
<g >
<title>sock_def_readable (101,742,019 samples, 0.22%)</title><rect x="945.6" y="885" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="948.57" y="895.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::recvfrom_nonblocking (101,511,071 samples, 0.22%)</title><rect x="1098.1" y="1541" width="2.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1101.08" y="1551.5" ></text>
</g>
<g >
<title>poll_idle (107,406,078 samples, 0.23%)</title><rect x="1169.5" y="1461" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1172.46" y="1471.5" ></text>
</g>
<g >
<title>check_heap_object (256,943,240 samples, 0.55%)</title><rect x="624.1" y="1205" width="6.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="627.05" y="1215.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,177,895,241 samples, 2.53%)</title><rect x="1160.1" y="1589" width="29.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1163.10" y="1599.5" >se..</text>
</g>
<g >
<title>psi_group_change (281,105,044 samples, 0.60%)</title><rect x="1182.2" y="1477" width="7.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1185.24" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,770,449 samples, 0.04%)</title><rect x="53.5" y="1493" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1461" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="56.29" y="1471.5" ></text>
</g>
<g >
<title>dispatcher (51,276,965 samples, 0.11%)</title><rect x="75.6" y="1573" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="78.62" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,395,325,374 samples, 11.61%)</title><rect x="348.3" y="1413" width="137.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.30" y="1423.5" >[libc.so.6]</text>
</g>
<g >
<title>[libc.so.6] (19,345,073 samples, 0.04%)</title><rect x="45.7" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (10,592,824,272 samples, 22.79%)</title><rect x="813.5" y="1445" width="268.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="816.47" y="1455.5" >__x64_sys_sendto</text>
</g>
<g >
<title>_copy_to_iter (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1381" width="5.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="19.58" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_state (102,529,447 samples, 0.22%)</title><rect x="779.5" y="1285" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="782.46" y="1295.5" ></text>
</g>
<g >
<title>release_pages (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1333" width="4.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="69.71" y="1343.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1461" width="4.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="69.71" y="1471.5" ></text>
</g>
<g >
<title>__clone (9,725,743 samples, 0.02%)</title><rect x="64.3" y="1589" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="67.34" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1557" width="5.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.58" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (51,282,176 samples, 0.11%)</title><rect x="767.8" y="1285" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="770.81" y="1295.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1573" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="57.69" y="1583.5" ></text>
</g>
<g >
<title>free_bprm (184,179,707 samples, 0.40%)</title><rect x="66.7" y="1445" width="4.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="69.71" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1109" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="74.59" y="1119.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (222,110,870 samples, 0.48%)</title><rect x="1160.1" y="1429" width="5.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1163.10" y="1439.5" ></text>
</g>
<g >
<title>_copy_from_iter (204,803,995 samples, 0.44%)</title><rect x="838.8" y="1333" width="5.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="841.80" y="1343.5" ></text>
</g>
<g >
<title>uv__io_poll (38,362,643 samples, 0.08%)</title><rect x="63.4" y="1573" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="66.37" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,291,893,130 samples, 7.08%)</title><rect x="397.8" y="1397" width="83.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="400.83" y="1407.5" >entry_SYS..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1269" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1279.5" ></text>
</g>
<g >
<title>free_p4d_range (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1333" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="67.67" y="1343.5" ></text>
</g>
<g >
<title>loopback_xmit (469,278,014 samples, 1.01%)</title><rect x="981.1" y="1125" width="11.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="984.06" y="1135.5" ></text>
</g>
<g >
<title>stop_this_handle (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1157" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="74.59" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="581" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="591.5" ></text>
</g>
<g >
<title>copyout (256,018,411 samples, 0.55%)</title><rect x="630.6" y="1221" width="6.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="633.57" y="1231.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (51,221,861 samples, 0.11%)</title><rect x="770.4" y="1253" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="773.39" y="1263.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_duration_since (50,386,385 samples, 0.11%)</title><rect x="1100.7" y="1525" width="1.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1103.66" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,123,840 samples, 0.02%)</title><rect x="810.7" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="813.66" y="1487.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (50,386,385 samples, 0.11%)</title><rect x="1100.7" y="1573" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1103.66" y="1583.5" ></text>
</g>
<g >
<title>malloc (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1397" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1120.86" y="1407.5" ></text>
</g>
<g >
<title>exc_page_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1317" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="56.86" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1525" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1535.5" ></text>
</g>
<g >
<title>ep_poll (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1509" width="7.8" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1144.79" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1493" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1503.5" ></text>
</g>
<g >
<title>copyout (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1333" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="49.73" y="1343.5" ></text>
</g>
<g >
<title>all (46,488,661,885 samples, 100%)</title><rect x="10.0" y="1621" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>enqueue_task_fair (261,529,211 samples, 0.56%)</title><rect x="1172.3" y="1445" width="6.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1175.30" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,194,406 samples, 0.02%)</title><rect x="53.7" y="1413" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.68" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="789" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="405" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1493" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="56.29" y="1503.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (377,507,533 samples, 0.81%)</title><rect x="108.9" y="1525" width="9.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="111.93" y="1535.5" ></text>
</g>
<g >
<title>start_secondary (1,154,726,163 samples, 2.48%)</title><rect x="1160.1" y="1573" width="29.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1163.10" y="1583.5" >st..</text>
</g>
<g >
<title>tcp_rcv_established (253,963,939 samples, 0.55%)</title><rect x="587.6" y="1253" width="6.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="590.60" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1189" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1199.5" ></text>
</g>
<g >
<title>begin_new_exec (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1445" width="2.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="67.67" y="1455.5" ></text>
</g>
<g >
<title>rmqueue (8,204,264 samples, 0.02%)</title><rect x="1117.9" y="1189" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1120.86" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (248,119,660 samples, 0.53%)</title><rect x="39.1" y="1397" width="6.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="42.14" y="1407.5" ></text>
</g>
<g >
<title>sock_sendmsg (10,286,147,421 samples, 22.13%)</title><rect x="816.0" y="1413" width="261.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="819.04" y="1423.5" >sock_sendmsg</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="981" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (50,514,492 samples, 0.11%)</title><rect x="793.8" y="1397" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="796.78" y="1407.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (13,736,676 samples, 0.03%)</title><rect x="56.5" y="1253" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="59.46" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1045" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="64.10" y="1055.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (52,799,832 samples, 0.11%)</title><rect x="789.9" y="1349" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="792.85" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1285" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1295.5" ></text>
</g>
<g >
<title>main (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1541" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1119.36" y="1551.5" ></text>
</g>
<g >
<title>setlocale (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1525" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="48.69" y="1535.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1,024,642,534 samples, 2.20%)</title><rect x="611.1" y="1285" width="26.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="614.06" y="1295.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (25,201,530 samples, 0.05%)</title><rect x="1117.0" y="1397" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1493" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="63.03" y="1503.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3,842,719,116 samples, 8.27%)</title><rect x="882.2" y="1141" width="97.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="885.23" y="1151.5" >__local_bh_..</text>
</g>
<g >
<title>clock_gettime (662,520,664 samples, 1.43%)</title><rect x="689.6" y="1445" width="16.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="692.60" y="1455.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (5,657,414 samples, 0.01%)</title><rect x="71.6" y="1093" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="74.59" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1221" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1231.5" ></text>
</g>
<g >
<title>tick_sched_handle (220,933,306 samples, 0.48%)</title><rect x="1160.1" y="1365" width="5.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1163.13" y="1375.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (50,314,152 samples, 0.11%)</title><rect x="1020.2" y="1301" width="1.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1023.20" y="1311.5" ></text>
</g>
<g >
<title>ip_output (5,128,419,081 samples, 11.03%)</title><rect x="870.6" y="1237" width="130.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="873.58" y="1247.5" >ip_output</text>
</g>
<g >
<title>__fdget_raw (664,018,730 samples, 1.43%)</title><rect x="422.0" y="1349" width="16.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="424.97" y="1359.5" ></text>
</g>
<g >
<title>__sys_recvfrom (2,072,657,512 samples, 4.46%)</title><rect x="741.2" y="1397" width="52.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="744.17" y="1407.5" >__sys..</text>
</g>
<g >
<title>native_write_msr (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1221" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="74.38" y="1231.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (51,335,535 samples, 0.11%)</title><rect x="594.0" y="1269" width="1.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="597.05" y="1279.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (152,736,856 samples, 0.33%)</title><rect x="1068.1" y="1333" width="3.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1071.09" y="1343.5" ></text>
</g>
<g >
<title>igc_update_stats (283,456,542 samples, 0.61%)</title><rect x="1152.9" y="1493" width="7.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1155.90" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1029" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1039.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1477" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="63.03" y="1487.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (8,213,076 samples, 0.02%)</title><rect x="46.2" y="1333" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="49.25" y="1343.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (564,130,843 samples, 1.21%)</title><rect x="622.8" y="1253" width="14.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="625.75" y="1263.5" ></text>
</g>
<g >
<title>newidle_balance (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1461" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1152.86" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1429" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="49.73" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="56.29" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (168,011,120 samples, 0.36%)</title><rect x="141.9" y="1397" width="4.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="144.93" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::select_syscall (100,625,058 samples, 0.22%)</title><rect x="729.6" y="1477" width="2.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="732.56" y="1487.5" ></text>
</g>
<g >
<title>refill_stock (101,676,651 samples, 0.22%)</title><rect x="776.9" y="1269" width="2.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="779.88" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,770,449 samples, 0.04%)</title><rect x="53.5" y="1477" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1487.5" ></text>
</g>
<g >
<title>sock_put (152,892,905 samples, 0.33%)</title><rect x="912.0" y="933" width="3.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="915.03" y="943.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::now (204,458,456 samples, 0.44%)</title><rect x="707.7" y="1413" width="5.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="710.72" y="1423.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (51,193,926 samples, 0.11%)</title><rect x="706.4" y="1429" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="709.42" y="1439.5" ></text>
</g>
<g >
<title>__check_object_size (129,022,068 samples, 0.28%)</title><rect x="835.5" y="1333" width="3.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="838.52" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="74.38" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,511,071 samples, 0.22%)</title><rect x="1098.1" y="1509" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1101.08" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (103,066,112 samples, 0.22%)</title><rect x="975.9" y="1029" width="2.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="978.87" y="1039.5" ></text>
</g>
<g >
<title>[expr] (37,422,374 samples, 0.08%)</title><rect x="45.7" y="1589" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="48.69" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (153,505,532 samples, 0.33%)</title><rect x="784.7" y="1317" width="3.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="787.66" y="1327.5" ></text>
</g>
<g >
<title>__tsearch (7,383,563 samples, 0.02%)</title><rect x="46.0" y="1413" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="49.00" y="1423.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1381" width="17.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="24.77" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51,311,251 samples, 0.11%)</title><rect x="985.1" y="1077" width="1.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="988.10" y="1087.5" ></text>
</g>
<g >
<title>vfs_read (204,654,453 samples, 0.44%)</title><rect x="16.6" y="1525" width="5.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="19.58" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (51,246,405 samples, 0.11%)</title><rect x="955.0" y="933" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="957.97" y="943.5" ></text>
</g>
<g >
<title>copy_page_to_iter (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1365" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="49.73" y="1375.5" ></text>
</g>
<g >
<title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1509" width="1.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="57.69" y="1519.5" ></text>
</g>
<g >
<title>lock_sock_nested (51,254,954 samples, 0.11%)</title><rect x="749.7" y="1333" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="752.66" y="1343.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (301,182,170 samples, 0.65%)</title><rect x="574.8" y="1269" width="7.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="577.75" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,805,033 samples, 0.05%)</title><rect x="45.7" y="1477" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.69" y="1487.5" ></text>
</g>
<g >
<title>mt_find (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1237" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="49.73" y="1247.5" ></text>
</g>
<g >
<title>ipv4_mtu (102,258,083 samples, 0.22%)</title><rect x="1029.1" y="1317" width="2.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1032.10" y="1327.5" ></text>
</g>
<g >
<title>execute_command_internal (8,136,547 samples, 0.02%)</title><rect x="1116.4" y="1349" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1119.36" y="1359.5" ></text>
</g>
<g >
<title>ctx_resched (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1285" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="74.38" y="1295.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (356,664,150 samples, 0.77%)</title><rect x="661.6" y="1349" width="9.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="664.63" y="1359.5" ></text>
</g>
<g >
<title>vfs_write (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1381" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="74.52" y="1391.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (140,841,622 samples, 0.30%)</title><rect x="56.4" y="1525" width="3.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="59.41" y="1535.5" ></text>
</g>
<g >
<title>do_epoll_wait (308,316,785 samples, 0.66%)</title><rect x="1141.8" y="1525" width="7.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1144.79" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,538,804,768 samples, 3.31%)</title><rect x="915.9" y="933" width="39.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="918.91" y="943.5" >tcp..</text>
</g>
<g >
<title>[ls] (29,151,708 samples, 0.06%)</title><rect x="53.3" y="1589" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="56.29" y="1599.5" ></text>
</g>
<g >
<title>read_tsc (49,853,388 samples, 0.11%)</title><rect x="654.0" y="1253" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="656.95" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,770,449 samples, 0.04%)</title><rect x="53.5" y="1509" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.50" y="1519.5" ></text>
</g>
<g >
<title>uv__writev (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1477" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="57.69" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1573" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="49.73" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1557" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.03" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,071,244 samples, 0.01%)</title><rect x="53.2" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.19" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (885,957,124 samples, 1.91%)</title><rect x="375.3" y="1397" width="22.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="378.34" y="1407.5" >e..</text>
</g>
<g >
<title>__alloc_skb (1,120,027,462 samples, 2.41%)</title><rect x="1039.7" y="1333" width="28.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1042.66" y="1343.5" >__..</text>
</g>
<g >
<title>kfree_skbmem (153,186,546 samples, 0.33%)</title><rect x="965.2" y="1061" width="3.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="968.22" y="1071.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (57,172,865 samples, 0.12%)</title><rect x="56.8" y="1285" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="59.81" y="1295.5" ></text>
</g>
<g >
<title>ksys_write (8,293,566 samples, 0.02%)</title><rect x="71.5" y="1397" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="74.52" y="1407.5" ></text>
</g>
<g >
<title>___pte_free_tlb (42,481,865 samples, 0.09%)</title><rect x="64.7" y="1301" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="67.67" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,456,736 samples, 0.01%)</title><rect x="71.4" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="74.38" y="1487.5" ></text>
</g>
<g >
<title>memory_stat_show (4,546,239 samples, 0.01%)</title><rect x="1149.7" y="1445" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1152.69" y="1455.5" ></text>
</g>
<g >
<title>refactoring::get_counterparts (684,285,079 samples, 1.47%)</title><rect x="21.8" y="1509" width="17.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="24.77" y="1519.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (570,905,841 samples, 1.23%)</title><rect x="23.4" y="1349" width="14.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="26.38" y="1359.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (50,740,333 samples, 0.11%)</title><rect x="437.5" y="1333" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="440.53" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="373" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,406,079 samples, 0.17%)</title><rect x="64.7" y="1589" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="67.67" y="1599.5" ></text>
</g>
<g >
<title>[grep] (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1509" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="49.73" y="1519.5" ></text>
</g>
<g >
<title>node::StreamBase::Write (42,588,474 samples, 0.09%)</title><rect x="54.7" y="1525" width="1.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="57.69" y="1535.5" ></text>
</g>
<g >
<title>should_failslab (49,110,724 samples, 0.11%)</title><rect x="1066.8" y="1301" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1069.85" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,381,259 samples, 0.02%)</title><rect x="53.3" y="1477" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="56.29" y="1487.5" ></text>
</g>
<g >
<title>[sleep] (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1541" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1120.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="805" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="815.5" ></text>
</g>
<g >
<title>vfs_read (4,263,794 samples, 0.01%)</title><rect x="64.2" y="1445" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="67.23" y="1455.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (7,701,187 samples, 0.02%)</title><rect x="71.5" y="1317" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="74.54" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1477" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1487.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (404,288,630 samples, 0.87%)</title><rect x="1149.8" y="1589" width="10.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1152.84" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (5,026,233,614 samples, 10.81%)</title><rect x="873.2" y="1221" width="127.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="876.17" y="1231.5" >ip_finish_output</text>
</g>
<g >
<title>setlocale (41,073,961 samples, 0.09%)</title><rect x="1117.0" y="1525" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1120.03" y="1535.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (70,369,840 samples, 0.15%)</title><rect x="861.0" y="1285" width="1.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="864.01" y="1295.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,749,667 samples, 0.01%)</title><rect x="53.9" y="1285" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="56.86" y="1295.5" ></text>
</g>
<g >
<title>unmap_page_range (37,924,214 samples, 0.08%)</title><rect x="65.7" y="1333" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="68.74" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="1333" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1343.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (204,025,047 samples, 0.44%)</title><rect x="650.0" y="1285" width="5.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="653.04" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (307,270,290 samples, 0.66%)</title><rect x="1141.8" y="1413" width="7.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1144.82" y="1423.5" ></text>
</g>
<g >
<title>aa_sk_perm (51,272,483 samples, 0.11%)</title><rect x="1073.2" y="1381" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1076.25" y="1391.5" ></text>
</g>
<g >
<title>__fdget (51,180,721 samples, 0.11%)</title><rect x="791.2" y="1365" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="794.19" y="1375.5" ></text>
</g>
<g >
<title>copyout (120,533,236 samples, 0.26%)</title><rect x="18.7" y="1365" width="3.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="21.71" y="1375.5" ></text>
</g>
<g >
<title>process_one_work (283,595,618 samples, 0.61%)</title><rect x="1152.9" y="1525" width="7.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1155.90" y="1535.5" ></text>
</g>
<g >
<title>rb_first (50,749,829 samples, 0.11%)</title><rect x="936.5" y="885" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="939.49" y="895.5" ></text>
</g>
<g >
<title>security_file_fcntl (101,504,807 samples, 0.22%)</title><rect x="458.3" y="1349" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="461.28" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,071,244 samples, 0.01%)</title><rect x="53.2" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="421" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="389" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="399.5" ></text>
</g>
<g >
<title>execute_command (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1461" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1119.36" y="1471.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (102,073,766 samples, 0.22%)</title><rect x="791.2" y="1381" width="2.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="794.19" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (201,955,161 samples, 0.43%)</title><rect x="1063.0" y="1317" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1065.97" y="1327.5" ></text>
</g>
<g >
<title>pipe_read (7,652,158 samples, 0.02%)</title><rect x="46.7" y="1381" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="49.73" y="1391.5" ></text>
</g>
<g >
<title>copyin (153,831,790 samples, 0.33%)</title><rect x="840.1" y="1317" width="3.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="843.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,418,409 samples, 0.19%)</title><rect x="61.1" y="997" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="64.10" y="1007.5" ></text>
</g>
<g >
<title>enqueue_task (261,529,211 samples, 0.56%)</title><rect x="1172.3" y="1461" width="6.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1175.30" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task (119,730,491 samples, 0.26%)</title><rect x="1149.9" y="1493" width="3.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.86" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (51,335,535 samples, 0.11%)</title><rect x="594.0" y="1285" width="1.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="597.05" y="1295.5" ></text>
</g>
<g >
<title>clock_gettime (204,458,456 samples, 0.44%)</title><rect x="707.7" y="1397" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="710.72" y="1407.5" ></text>
</g>
<g >
<title>shell_execve (244,682,172 samples, 0.53%)</title><rect x="46.9" y="1461" width="6.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="49.92" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (38,286,323 samples, 0.08%)</title><rect x="60.0" y="1429" width="1.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="63.03" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,826,350 samples, 0.02%)</title><rect x="1116.4" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1119.36" y="1567.5" ></text>
</g>
</g>
</svg>
