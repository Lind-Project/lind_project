<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>readlink (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="19.98" y="1535.5" ></text>
</g>
<g >
<title>__alloc_pages (34,056,632 samples, 0.06%)</title><rect x="19.2" y="1285" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="22.25" y="1295.5" ></text>
</g>
<g >
<title>__open64_nocancel (6,931,088 samples, 0.01%)</title><rect x="17.8" y="1493" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="20.77" y="1503.5" ></text>
</g>
<g >
<title>vm_normal_page (11,440,304 samples, 0.02%)</title><rect x="21.0" y="1301" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.00" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (366,203,197 samples, 0.69%)</title><rect x="1159.2" y="1493" width="8.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1162.16" y="1503.5" ></text>
</g>
<g >
<title>native_sched_clock (69,722,995 samples, 0.13%)</title><rect x="699.4" y="1461" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="702.39" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1557" width="5.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.66" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (106,424,036 samples, 0.20%)</title><rect x="1179.8" y="1541" width="2.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1182.84" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1509" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="32.08" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock (100,044,102 samples, 0.19%)</title><rect x="1079.0" y="1477" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1082.01" y="1487.5" ></text>
</g>
<g >
<title>__get_user_8 (103,065,153 samples, 0.20%)</title><rect x="203.0" y="1413" width="2.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="206.00" y="1423.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1477" width="5.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="35.66" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1477" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="597.87" y="1487.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (248,565,996 samples, 0.47%)</title><rect x="201.9" y="1429" width="5.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="204.85" y="1439.5" ></text>
</g>
<g >
<title>update_load_avg (51,702,630 samples, 0.10%)</title><rect x="125.1" y="1333" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="128.12" y="1343.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3,769,315,601 samples, 7.13%)</title><rect x="408.5" y="965" width="84.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="411.47" y="975.5" >tcp_v4_do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1429" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.77" y="1439.5" ></text>
</g>
<g >
<title>neigh_hh_output (7,223,840,341 samples, 13.67%)</title><rect x="363.9" y="1205" width="161.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="366.86" y="1215.5" >neigh_hh_output</text>
</g>
<g >
<title>_dl_catch_exception (8,512,810 samples, 0.02%)</title><rect x="594.6" y="1525" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="597.61" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,242,710 samples, 0.08%)</title><rect x="17.0" y="1573" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.98" y="1583.5" ></text>
</g>
<g >
<title>wake_affine (51,717,054 samples, 0.10%)</title><rect x="479.2" y="789" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="482.21" y="799.5" ></text>
</g>
<g >
<title>affinity__set (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1541" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="40.92" y="1551.5" ></text>
</g>
<g >
<title>[grep] (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1557" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.06" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (52,078,038 samples, 0.10%)</title><rect x="75.1" y="1461" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="78.06" y="1471.5" ></text>
</g>
<g >
<title>__napi_poll (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1381" width="6.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="664.04" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1583.5" ></text>
</g>
<g >
<title>__update_load_avg_se (103,470,615 samples, 0.20%)</title><rect x="1154.6" y="1445" width="2.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1157.55" y="1455.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (146,300,750 samples, 0.28%)</title><rect x="341.9" y="1349" width="3.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="344.91" y="1359.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (141,319,132 samples, 0.27%)</title><rect x="307.1" y="1493" width="3.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="310.12" y="1503.5" ></text>
</g>
<g >
<title>igc_rd32 (244,521,515 samples, 0.46%)</title><rect x="634.2" y="1493" width="5.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="637.17" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1493" width="5.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="35.66" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (706,724,478 samples, 1.34%)</title><rect x="1060.9" y="1493" width="15.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1063.90" y="1503.5" ></text>
</g>
<g >
<title>__alloc_skb (1,122,999,059 samples, 2.12%)</title><rect x="557.6" y="1365" width="25.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="560.58" y="1375.5" >_..</text>
</g>
<g >
<title>write (12,666,667,233 samples, 23.97%)</title><rect x="310.3" y="1541" width="282.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="313.28" y="1551.5" >write</text>
</g>
<g >
<title>prepare_task_switch (52,138,729 samples, 0.10%)</title><rect x="140.4" y="1381" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="143.40" y="1391.5" ></text>
</g>
<g >
<title>ls (161,319,048 samples, 0.31%)</title><rect x="14.3" y="1621" width="3.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="17.32" y="1631.5" ></text>
</g>
<g >
<title>pick_next_task_fair (405,262,902 samples, 0.77%)</title><rect x="1147.8" y="1493" width="9.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1150.82" y="1503.5" ></text>
</g>
<g >
<title>_compound_head (147,805,131 samples, 0.28%)</title><rect x="29.4" y="1317" width="3.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="32.36" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1141" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1151.5" ></text>
</g>
<g >
<title>__pmd_alloc (34,056,632 samples, 0.06%)</title><rect x="19.2" y="1317" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="22.25" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1445" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="17.10" y="1455.5" ></text>
</g>
<g >
<title>read_tsc (52,336,330 samples, 0.10%)</title><rect x="490.3" y="917" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="493.29" y="927.5" ></text>
</g>
<g >
<title>search_binary_handler (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1493" width="3.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="32.08" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (6,565,474 samples, 0.01%)</title><rect x="28.1" y="1525" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="31.09" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (118,004,821 samples, 0.22%)</title><rect x="14.3" y="1605" width="2.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.34" y="1615.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (51,445,228 samples, 0.10%)</title><rect x="534.0" y="1333" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="537.01" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1413" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="597.65" y="1423.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (24,651,530,621 samples, 46.64%)</title><rect x="639.6" y="1605" width="550.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="642.63" y="1615.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>uv_spawn (111,671,400 samples, 0.21%)</title><rect x="18.8" y="1557" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.82" y="1567.5" ></text>
</g>
<g >
<title>process_one_work (244,521,515 samples, 0.46%)</title><rect x="634.2" y="1541" width="5.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="637.17" y="1551.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (102,371,138 samples, 0.19%)</title><rect x="674.3" y="1461" width="2.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="677.35" y="1471.5" ></text>
</g>
<g >
<title>ktime_get (154,142,946 samples, 0.29%)</title><rect x="535.2" y="1333" width="3.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="538.16" y="1343.5" ></text>
</g>
<g >
<title>check_stack_object (52,078,038 samples, 0.10%)</title><rect x="75.1" y="1445" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="78.06" y="1455.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (2,248,862,033 samples, 4.25%)</title><rect x="253.5" y="1381" width="50.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="256.45" y="1391.5" >tcp_r..</text>
</g>
<g >
<title>exit_mmap (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1477" width="6.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="598.00" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1397" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="14.77" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1157" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1167.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (1,300,767,559 samples, 2.46%)</title><rect x="557.1" y="1381" width="29.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="560.05" y="1391.5" >tc..</text>
</g>
<g >
<title>vm_munmap (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1429" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="14.92" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,286,835 samples, 0.01%)</title><rect x="17.4" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.36" y="1439.5" ></text>
</g>
<g >
<title>__libc_fork (111,671,400 samples, 0.21%)</title><rect x="18.8" y="1509" width="2.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="21.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="709" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="719.5" ></text>
</g>
<g >
<title>sock_def_readable (1,583,006,633 samples, 3.00%)</title><rect x="451.7" y="917" width="35.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="454.65" y="927.5" >so..</text>
</g>
<g >
<title>__mmap (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1493" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="17.10" y="1503.5" ></text>
</g>
<g >
<title>vm_area_dup (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1285" width="2.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="17.53" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_execve (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1573" width="3.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="32.08" y="1583.5" ></text>
</g>
<g >
<title>[expr] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1605" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.01" y="1615.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1557" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="41.17" y="1567.5" ></text>
</g>
<g >
<title>exec_mmap (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1445" width="3.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="32.08" y="1455.5" ></text>
</g>
<g >
<title>ct_kernel_exit.constprop.0 (49,314,267 samples, 0.09%)</title><rect x="676.6" y="1477" width="1.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="679.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="965" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,689,035,051 samples, 6.98%)</title><rect x="227.9" y="1509" width="82.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="230.92" y="1519.5" >do_syscal..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="805" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.92" y="1503.5" ></text>
</g>
<g >
<title>sched_clock (51,298,177 samples, 0.10%)</title><rect x="1127.9" y="1461" width="1.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1130.89" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="901" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="911.5" ></text>
</g>
<g >
<title>sock_rfree (153,238,065 samples, 0.29%)</title><rect x="293.6" y="1365" width="3.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="296.61" y="1375.5" ></text>
</g>
<g >
<title>__poll (7,694,567,133 samples, 14.56%)</title><rect x="49.8" y="1541" width="171.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.79" y="1551.5" >__poll</text>
</g>
<g >
<title>enqueue_to_backlog (206,839,382 samples, 0.39%)</title><rect x="513.6" y="1109" width="4.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="516.59" y="1119.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (51,309,711 samples, 0.10%)</title><rect x="340.8" y="1365" width="1.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="343.76" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1221" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="725" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="735.5" ></text>
</g>
<g >
<title>ip_list_rcv (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1301" width="6.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="664.04" y="1311.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,253,749 samples, 0.10%)</title><rect x="1063.2" y="1461" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1066.20" y="1471.5" ></text>
</g>
<g >
<title>sock_read_iter (3,037,953,935 samples, 5.75%)</title><rect x="238.1" y="1445" width="67.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="241.13" y="1455.5" >sock_re..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="581" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (103,107,593 samples, 0.20%)</title><rect x="1060.9" y="1461" width="2.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1063.90" y="1471.5" ></text>
</g>
<g >
<title>tcp_get_idx (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1365" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="31.53" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (250,510,899 samples, 0.47%)</title><rect x="634.0" y="1589" width="5.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="637.04" y="1599.5" ></text>
</g>
<g >
<title>do_epoll_wait (6,565,474 samples, 0.01%)</title><rect x="28.1" y="1509" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="31.09" y="1519.5" ></text>
</g>
<g >
<title>ovl_permission (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1333" width="5.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="35.66" y="1343.5" ></text>
</g>
<g >
<title>psi_group_change (51,819,012 samples, 0.10%)</title><rect x="1156.9" y="1509" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1159.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1477" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1487.5" ></text>
</g>
<g >
<title>raw_v4_input (41,302,842 samples, 0.08%)</title><rect x="389.3" y="981" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="392.34" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="885" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="895.5" ></text>
</g>
<g >
<title>exec_binprm (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1429" width="5.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.66" y="1439.5" ></text>
</g>
<g >
<title>exit_mmap (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1397" width="3.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="32.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1413" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1365" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="597.87" y="1375.5" ></text>
</g>
<g >
<title>read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1525" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="31.53" y="1535.5" ></text>
</g>
<g >
<title>aa_sk_perm (52,277,927 samples, 0.10%)</title><rect x="588.4" y="1397" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="591.40" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1493" width="3.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="49.13" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="869" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_clone (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1445" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="437" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1477" width="3.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="49.13" y="1487.5" ></text>
</g>
<g >
<title>path_openat (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1397" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="597.87" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,889,132 samples, 0.02%)</title><rect x="594.6" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.60" y="1567.5" ></text>
</g>
<g >
<title>update_load_avg (40,518,859 samples, 0.08%)</title><rect x="1189.0" y="1365" width="0.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.98" y="1375.5" ></text>
</g>
<g >
<title>kthread (250,510,899 samples, 0.47%)</title><rect x="634.0" y="1573" width="5.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="637.04" y="1583.5" ></text>
</g>
<g >
<title>start_secondary (24,450,486,432 samples, 46.26%)</title><rect x="639.6" y="1589" width="545.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="642.63" y="1599.5" >start_secondary</text>
</g>
<g >
<title>update_curr (252,539,847 samples, 0.48%)</title><rect x="119.5" y="1333" width="5.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="122.48" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1381" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1391.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1381" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="14.92" y="1391.5" ></text>
</g>
<g >
<title>__split_vma (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1301" width="2.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="17.53" y="1311.5" ></text>
</g>
<g >
<title>__do_softirq (48,785,723 samples, 0.09%)</title><rect x="312.6" y="1525" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="315.60" y="1535.5" ></text>
</g>
<g >
<title>os_xsave (242,411,492 samples, 0.46%)</title><rect x="213.9" y="1525" width="5.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="216.87" y="1535.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1333" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="32.08" y="1343.5" ></text>
</g>
<g >
<title>handle_pte_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1397" width="3.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="49.13" y="1407.5" ></text>
</g>
<g >
<title>setlocale (33,471,244 samples, 0.06%)</title><rect x="17.2" y="1541" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="20.17" y="1551.5" ></text>
</g>
<g >
<title>__calc_delta (102,378,532 samples, 0.19%)</title><rect x="121.8" y="1317" width="2.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="124.79" y="1327.5" ></text>
</g>
<g >
<title>igc_update_stats (244,521,515 samples, 0.46%)</title><rect x="634.2" y="1509" width="5.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="637.17" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,622,963,538 samples, 12.53%)</title><rect x="64.9" y="1525" width="147.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="67.87" y="1535.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>[libc.so.6] (25,112,057 samples, 0.05%)</title><rect x="28.5" y="1589" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="31.51" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (207,643,311 samples, 0.39%)</title><rect x="313.7" y="1525" width="4.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="316.69" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1509" width="4.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.51" y="1519.5" ></text>
</g>
<g >
<title>copyout (473,573,846 samples, 0.90%)</title><rect x="283.0" y="1301" width="10.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="286.04" y="1311.5" ></text>
</g>
<g >
<title>generic_permission (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1301" width="5.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="35.66" y="1311.5" ></text>
</g>
<g >
<title>kmem_cache_free (121,567,267 samples, 0.23%)</title><rect x="509.7" y="1061" width="2.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="512.73" y="1071.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (764,677,144 samples, 1.45%)</title><rect x="195.7" y="1493" width="17.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="198.66" y="1503.5" ></text>
</g>
<g >
<title>copyin (102,540,753 samples, 0.19%)</title><rect x="345.2" y="1349" width="2.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="348.18" y="1359.5" ></text>
</g>
<g >
<title>pick_next_task_fair (102,788,992 samples, 0.19%)</title><rect x="135.0" y="1365" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="137.98" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1509" width="5.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.66" y="1519.5" ></text>
</g>
<g >
<title>poll_freewait (51,725,917 samples, 0.10%)</title><rect x="192.3" y="1477" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="195.32" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_free (97,303,816 samples, 0.18%)</title><rect x="504.1" y="1077" width="2.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="507.09" y="1087.5" ></text>
</g>
<g >
<title>mod_memcg_state (51,349,284 samples, 0.10%)</title><rect x="584.9" y="1333" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="587.95" y="1343.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (52,159,726 samples, 0.10%)</title><rect x="1064.3" y="1445" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1067.35" y="1455.5" ></text>
</g>
<g >
<title>__fget_light (50,052,092 samples, 0.09%)</title><rect x="229.1" y="1445" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="232.08" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1445" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="309" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="661" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,540,156 samples, 0.05%)</title><rect x="17.2" y="1493" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.17" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (52,099,476 samples, 0.10%)</title><rect x="591.9" y="1477" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="594.91" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1477" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1487.5" ></text>
</g>
<g >
<title>_dl_catch_exception (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1525" width="2.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.49" y="1535.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (51,273,220 samples, 0.10%)</title><rect x="470.5" y="789" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="473.47" y="799.5" ></text>
</g>
<g >
<title>wake_affine (52,300,879 samples, 0.10%)</title><rect x="483.6" y="805" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="486.55" y="815.5" ></text>
</g>
<g >
<title>record_times (52,146,837 samples, 0.10%)</title><rect x="1167.3" y="1493" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1170.34" y="1503.5" ></text>
</g>
<g >
<title>exit_mm (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1525" width="6.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="598.00" y="1535.5" ></text>
</g>
<g >
<title>tcp_poll (407,287,113 samples, 0.77%)</title><rect x="168.5" y="1429" width="9.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="171.52" y="1439.5" ></text>
</g>
<g >
<title>_start (24,798,194,500 samples, 46.92%)</title><rect x="39.4" y="1605" width="553.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="42.43" y="1615.5" >_start</text>
</g>
<g >
<title>read_tsc (194,306,518 samples, 0.37%)</title><rect x="299.3" y="1333" width="4.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="302.32" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,710,224 samples, 0.02%)</title><rect x="594.4" y="1589" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.36" y="1599.5" ></text>
</g>
<g >
<title>enqueue_entity (52,329,986 samples, 0.10%)</title><rect x="1088.2" y="1461" width="1.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1091.16" y="1471.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (51,352,107 samples, 0.10%)</title><rect x="407.3" y="933" width="1.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="410.33" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (149,909,738 samples, 0.28%)</title><rect x="61.5" y="1525" width="3.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="64.52" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,565,474 samples, 0.01%)</title><rect x="28.1" y="1557" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.09" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1477" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.82" y="1487.5" ></text>
</g>
<g >
<title>ip_local_out (45,164,504 samples, 0.09%)</title><rect x="527.4" y="1301" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="530.38" y="1311.5" ></text>
</g>
<g >
<title>established_get_next (7,181,009 samples, 0.01%)</title><rect x="28.9" y="1349" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="31.90" y="1359.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (102,633,587 samples, 0.19%)</title><rect x="297.0" y="1365" width="2.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="300.03" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1013" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1023.5" ></text>
</g>
<g >
<title>sk_free (49,894,094 samples, 0.09%)</title><rect x="519.4" y="1141" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="522.38" y="1151.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1269" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="41.17" y="1279.5" ></text>
</g>
<g >
<title>tcp_wfree (52,318,494 samples, 0.10%)</title><rect x="520.5" y="1141" width="1.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="523.49" y="1151.5" ></text>
</g>
<g >
<title>_copy_from_user (70,095,257 samples, 0.13%)</title><rect x="68.1" y="1477" width="1.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="71.10" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="341" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (57,946,040 samples, 0.11%)</title><rect x="1051.5" y="1509" width="1.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1054.55" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (51,176,107 samples, 0.10%)</title><rect x="495.0" y="1045" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="497.95" y="1055.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (103,519,132 samples, 0.20%)</title><rect x="530.6" y="1317" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="533.56" y="1327.5" ></text>
</g>
<g >
<title>__clone (25,112,057 samples, 0.05%)</title><rect x="28.5" y="1605" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.51" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.83" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (153,238,065 samples, 0.29%)</title><rect x="293.6" y="1333" width="3.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="296.61" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="181" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="191.5" ></text>
</g>
<g >
<title>put_prev_task_fair (51,786,120 samples, 0.10%)</title><rect x="160.6" y="1381" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="163.59" y="1391.5" ></text>
</g>
<g >
<title>__update_load_avg_se (51,443,336 samples, 0.10%)</title><rect x="1119.0" y="1413" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1122.04" y="1423.5" ></text>
</g>
<g >
<title>Builtins_CallFunction_ReceiverIsNotNullOrUndefined (7,504,569 samples, 0.01%)</title><rect x="21.5" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="24.52" y="1599.5" ></text>
</g>
<g >
<title>dequeue_task_fair (51,274,008 samples, 0.10%)</title><rect x="131.8" y="1381" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="134.80" y="1391.5" ></text>
</g>
<g >
<title>expr (181,602,046 samples, 0.34%)</title><rect x="10.0" y="1621" width="4.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.01" y="1631.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1397" width="2.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="17.53" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,740,376,470 samples, 7.08%)</title><rect x="226.8" y="1525" width="83.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="229.77" y="1535.5" >entry_SYS..</text>
</g>
<g >
<title>netif_rx_internal (206,839,382 samples, 0.39%)</title><rect x="513.6" y="1125" width="4.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="516.59" y="1135.5" ></text>
</g>
<g >
<title>__kfree_skb (245,408,609 samples, 0.46%)</title><rect x="436.1" y="901" width="5.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="439.08" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1461" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1471.5" ></text>
</g>
<g >
<title>sock_write_iter (51,338,872 samples, 0.10%)</title><rect x="318.3" y="1461" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="321.33" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1557" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1567.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (51,939,934 samples, 0.10%)</title><rect x="450.5" y="917" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="453.49" y="927.5" ></text>
</g>
<g >
<title>update_load_avg (248,951,041 samples, 0.47%)</title><rect x="1114.6" y="1429" width="5.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1117.63" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (96,388,941 samples, 0.18%)</title><rect x="11.9" y="1605" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.91" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1461" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.10" y="1471.5" ></text>
</g>
<g >
<title>tcp_rate_gen (108,158,224 samples, 0.20%)</title><rect x="446.9" y="917" width="2.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="449.94" y="927.5" ></text>
</g>
<g >
<title>established_get_first (7,181,009 samples, 0.01%)</title><rect x="28.9" y="1333" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="31.90" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="405" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="415.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (52,299,788 samples, 0.10%)</title><rect x="1081.2" y="1477" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1084.24" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="41.17" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1125" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1135.5" ></text>
</g>
<g >
<title>__mod_memcg_state (51,349,284 samples, 0.10%)</title><rect x="584.9" y="1317" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="587.95" y="1327.5" ></text>
</g>
<g >
<title>amd_clear_divider (52,245,672 samples, 0.10%)</title><rect x="306.0" y="1493" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="308.96" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (295,154,057 samples, 0.56%)</title><rect x="183.4" y="1429" width="6.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="186.40" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,321,386 samples, 0.10%)</title><rect x="1066.6" y="1461" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1069.63" y="1471.5" ></text>
</g>
<g >
<title>__update_blocked_fair (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1349" width="4.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="670.14" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1605" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="32.08" y="1615.5" ></text>
</g>
<g >
<title>do_user_addr_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1445" width="3.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="49.13" y="1455.5" ></text>
</g>
<g >
<title>select_task_rq_fair (341,172,635 samples, 0.65%)</title><rect x="472.7" y="805" width="7.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="475.74" y="815.5" ></text>
</g>
<g >
<title>__check_object_size (146,300,750 samples, 0.28%)</title><rect x="341.9" y="1365" width="3.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="344.91" y="1375.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (295,154,057 samples, 0.56%)</title><rect x="183.4" y="1413" width="6.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="186.40" y="1423.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (52,121,855 samples, 0.10%)</title><rect x="586.1" y="1397" width="1.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="589.09" y="1407.5" ></text>
</g>
<g >
<title>menu_select (1,067,742,076 samples, 2.02%)</title><rect x="1052.8" y="1509" width="23.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1055.84" y="1519.5" >m..</text>
</g>
<g >
<title>_raw_spin_lock_bh (145,183,656 samples, 0.27%)</title><rect x="328.4" y="1397" width="3.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="331.41" y="1407.5" ></text>
</g>
<g >
<title>put_prev_task_fair (51,524,756 samples, 0.10%)</title><rect x="138.1" y="1365" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="141.09" y="1375.5" ></text>
</g>
<g >
<title>__put_user_8 (52,371,242 samples, 0.10%)</title><rect x="200.7" y="1429" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="203.69" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,267,112 samples, 0.10%)</title><rect x="593.1" y="1605" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="596.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1189" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="325" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="335.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,019,906,875 samples, 1.93%)</title><rect x="270.8" y="1349" width="22.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="273.84" y="1359.5" >_..</text>
</g>
<g >
<title>cache_from_obj (51,705,011 samples, 0.10%)</title><rect x="508.6" y="1061" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="511.58" y="1071.5" ></text>
</g>
<g >
<title>put_prev_entity (36,426,582 samples, 0.07%)</title><rect x="137.3" y="1365" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="140.27" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1461" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1471.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (50,881,647 samples, 0.10%)</title><rect x="449.4" y="917" width="1.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="452.35" y="927.5" ></text>
</g>
<g >
<title>release_sock (51,343,714 samples, 0.10%)</title><rect x="331.7" y="1397" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="334.65" y="1407.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1,479,657,606 samples, 2.80%)</title><rect x="454.0" y="901" width="33.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="456.96" y="911.5" >__..</text>
</g>
<g >
<title>process_backlog (5,121,174,261 samples, 9.69%)</title><rect x="382.9" y="1093" width="114.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="385.90" y="1103.5" >process_backlog</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1365" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1375.5" ></text>
</g>
<g >
<title>__inet_lookup_established (357,808,761 samples, 0.68%)</title><rect x="396.0" y="965" width="8.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="399.03" y="975.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (8,904,614,742 samples, 16.85%)</title><rect x="348.6" y="1365" width="198.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="351.63" y="1375.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>cpuidle_enter_state (17,454,902,841 samples, 33.03%)</title><rect x="658.7" y="1493" width="389.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="661.72" y="1503.5" >cpuidle_enter_state</text>
</g>
<g >
<title>tlb_finish_mmu (270,071,647 samples, 0.51%)</title><rect x="595.0" y="1461" width="6.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="598.01" y="1471.5" ></text>
</g>
<g >
<title>copy_p4d_range (89,724,967 samples, 0.17%)</title><rect x="19.2" y="1333" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="22.25" y="1343.5" ></text>
</g>
<g >
<title>tick_nohz_stop_idle (54,098,406 samples, 0.10%)</title><rect x="1181.0" y="1525" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1184.00" y="1535.5" ></text>
</g>
<g >
<title>select_idle_sibling (50,679,747 samples, 0.10%)</title><rect x="471.6" y="805" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="474.61" y="815.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (152,163,182 samples, 0.29%)</title><rect x="1073.3" y="1413" width="3.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1076.28" y="1423.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (100,345,552 samples, 0.19%)</title><rect x="646.1" y="1525" width="2.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="649.11" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1541" width="3.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="49.13" y="1551.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (47,929,254 samples, 0.09%)</title><rect x="355.4" y="1317" width="1.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="358.44" y="1327.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1557" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="637.04" y="1567.5" ></text>
</g>
<g >
<title>do_exit (89,828,044 samples, 0.17%)</title><rect x="12.1" y="1541" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="15.05" y="1551.5" ></text>
</g>
<g >
<title>native_load_tls (51,289,977 samples, 0.10%)</title><rect x="212.7" y="1525" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="215.73" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (64,595,446 samples, 0.12%)</title><rect x="632.6" y="1589" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="635.59" y="1599.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (42,696,636 samples, 0.08%)</title><rect x="1188.9" y="1461" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.93" y="1471.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3,463,068,866 samples, 6.55%)</title><rect x="415.3" y="949" width="77.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="418.31" y="959.5" >tcp_rcv_..</text>
</g>
<g >
<title>user_path_at_empty (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1445" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.98" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (50,775,719 samples, 0.10%)</title><rect x="382.9" y="1061" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="385.90" y="1071.5" ></text>
</g>
<g >
<title>cpus_share_cache (32,169,991 samples, 0.06%)</title><rect x="478.5" y="773" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="481.49" y="783.5" ></text>
</g>
<g >
<title>call_cpuidle (17,879,288,572 samples, 33.83%)</title><rect x="652.4" y="1525" width="399.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="655.37" y="1535.5" >call_cpuidle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1493" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1589" width="3.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="32.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1573" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,306,159,415 samples, 23.28%)</title><rect x="318.3" y="1509" width="274.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="321.33" y="1519.5" >do_syscall_64</text>
</g>
<g >
<title>ip_finish_output2 (7,365,690,949 samples, 13.94%)</title><rect x="360.7" y="1221" width="164.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="363.69" y="1231.5" >ip_finish_output2</text>
</g>
<g >
<title>sk_page_frag_refill (51,309,711 samples, 0.10%)</title><rect x="340.8" y="1381" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="343.76" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,594,168 samples, 0.03%)</title><rect x="11.4" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.39" y="1423.5" ></text>
</g>
<g >
<title>poll_idle (21,239,397 samples, 0.04%)</title><rect x="1185.8" y="1413" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.83" y="1423.5" ></text>
</g>
<g >
<title>__netif_rx (258,160,926 samples, 0.49%)</title><rect x="512.4" y="1141" width="5.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="515.44" y="1151.5" ></text>
</g>
<g >
<title>__mmput (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1413" width="3.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="32.08" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (152,163,182 samples, 0.29%)</title><rect x="1073.3" y="1445" width="3.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1076.28" y="1455.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1429" width="4.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="670.14" y="1439.5" ></text>
</g>
<g >
<title>mmput (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1509" width="6.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="598.00" y="1519.5" ></text>
</g>
<g >
<title>put_prev_task_fair (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1397" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="40.92" y="1407.5" ></text>
</g>
<g >
<title>common_interrupt (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1461" width="6.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="664.04" y="1471.5" ></text>
</g>
<g >
<title>read_tsc (257,436,947 samples, 0.49%)</title><rect x="1173.1" y="1525" width="5.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1176.09" y="1535.5" ></text>
</g>
<g >
<title>tcp_tso_segs (141,395,281 samples, 0.27%)</title><rect x="544.3" y="1333" width="3.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="547.28" y="1343.5" ></text>
</g>
<g >
<title>do_readlinkat (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1461" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="19.98" y="1471.5" ></text>
</g>
<g >
<title>_copy_to_iter (574,830,574 samples, 1.09%)</title><rect x="280.8" y="1317" width="12.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="283.78" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="645" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="655.5" ></text>
</g>
<g >
<title>folio_test_hugetlb (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1349" width="3.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="49.13" y="1359.5" ></text>
</g>
<g >
<title>__update_load_avg_se (40,518,859 samples, 0.08%)</title><rect x="1189.0" y="1349" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.98" y="1359.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (51,142,176 samples, 0.10%)</title><rect x="524.0" y="1173" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="526.99" y="1183.5" ></text>
</g>
<g >
<title>do_idle (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1493" width="4.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.51" y="1503.5" ></text>
</g>
<g >
<title>load_elf_binary (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1397" width="5.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="35.66" y="1407.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (50,890,497 samples, 0.10%)</title><rect x="348.6" y="1349" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="351.63" y="1359.5" ></text>
</g>
<g >
<title>do_sys_poll (5,493,629,922 samples, 10.39%)</title><rect x="69.7" y="1477" width="122.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="72.67" y="1487.5" >do_sys_poll</text>
</g>
<g >
<title>available_idle_cpu (102,549,688 samples, 0.19%)</title><rect x="476.2" y="773" width="2.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="479.20" y="783.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (39,654,584 samples, 0.08%)</title><rect x="52.1" y="1525" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="55.10" y="1535.5" ></text>
</g>
<g >
<title>exec_binprm (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1509" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.91" y="1519.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (270,071,647 samples, 0.51%)</title><rect x="595.0" y="1445" width="6.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="598.01" y="1455.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1541" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="41.17" y="1551.5" ></text>
</g>
<g >
<title>__handle_mm_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1413" width="3.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="49.13" y="1423.5" ></text>
</g>
<g >
<title>worker (25,112,057 samples, 0.05%)</title><rect x="28.5" y="1573" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="31.51" y="1583.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.0 (48,628,321 samples, 0.09%)</title><rect x="404.0" y="965" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="407.02" y="975.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (48,793,415 samples, 0.09%)</title><rect x="525.1" y="1221" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="528.14" y="1231.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1519.5" ></text>
</g>
<g >
<title>tcp_ack (1,023,784,612 samples, 1.94%)</title><rect x="428.8" y="933" width="22.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="431.79" y="943.5" >t..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (52,323,003 samples, 0.10%)</title><rect x="250.0" y="1365" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="253.00" y="1375.5" ></text>
</g>
<g >
<title>rb_next (51,027,462 samples, 0.10%)</title><rect x="1149.0" y="1477" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1151.97" y="1487.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (54,098,406 samples, 0.10%)</title><rect x="1181.0" y="1509" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1184.00" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (109,628,213 samples, 0.21%)</title><rect x="14.5" y="1445" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.53" y="1455.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (97,940,067 samples, 0.19%)</title><rect x="193.5" y="1493" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="196.47" y="1503.5" ></text>
</g>
<g >
<title>default_wake_function (994,855,636 samples, 1.88%)</title><rect x="462.5" y="837" width="22.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="465.51" y="847.5" >d..</text>
</g>
<g >
<title>kmem_cache_alloc_node (51,903,682 samples, 0.10%)</title><rect x="574.9" y="1333" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="577.88" y="1343.5" ></text>
</g>
<g >
<title>perf (16,442,479 samples, 0.03%)</title><rect x="37.9" y="1621" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="40.92" y="1631.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1541" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1551.5" ></text>
</g>
<g >
<title>call_function_single_prep_ipi (91,550,774 samples, 0.17%)</title><rect x="480.4" y="773" width="2.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="483.36" y="783.5" ></text>
</g>
<g >
<title>__secure_computing (63,832,371 samples, 0.12%)</title><rect x="632.6" y="1541" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="635.61" y="1551.5" ></text>
</g>
<g >
<title>operator new (284,651,084 samples, 0.54%)</title><rect x="21.7" y="53" width="6.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="24.73" y="63.5" ></text>
</g>
<g >
<title>kfree_skbmem (154,136,182 samples, 0.29%)</title><rect x="438.1" y="885" width="3.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="441.12" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1077" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1087.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (398,757,111 samples, 0.75%)</title><rect x="1067.8" y="1461" width="8.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1070.78" y="1471.5" ></text>
</g>
<g >
<title>[perf-707.map] (9,330,873 samples, 0.02%)</title><rect x="21.5" y="1605" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="24.50" y="1615.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1429" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="17.10" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (41,422,878 samples, 0.08%)</title><rect x="1189.0" y="1413" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1191.96" y="1423.5" ></text>
</g>
<g >
<title>sock_poll (553,591,994 samples, 1.05%)</title><rect x="166.3" y="1445" width="12.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="169.31" y="1455.5" ></text>
</g>
<g >
<title>__get_task_ioprio (50,895,358 samples, 0.10%)</title><rect x="233.6" y="1445" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="236.64" y="1455.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (51,321,544 samples, 0.10%)</title><rect x="512.4" y="1125" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="515.44" y="1135.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (176,264,394 samples, 0.33%)</title><rect x="57.6" y="1525" width="3.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="60.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1589" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1599.5" ></text>
</g>
<g >
<title>loopback_xmit (412,642,118 samples, 0.78%)</title><rect x="512.4" y="1157" width="9.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="515.44" y="1167.5" ></text>
</g>
<g >
<title>sock_write_iter (11,787,630,078 samples, 22.30%)</title><rect x="326.4" y="1445" width="263.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="329.40" y="1455.5" >sock_write_iter</text>
</g>
<g >
<title>dup_mmap (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1365" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="21.82" y="1375.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (101,644,635 samples, 0.19%)</title><rect x="175.3" y="1365" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="178.34" y="1375.5" ></text>
</g>
<g >
<title>_dl_catch_exception (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1525" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.77" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1269" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1279.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (152,064,247 samples, 0.29%)</title><rect x="488.1" y="933" width="3.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="491.06" y="943.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (50,856,800 samples, 0.10%)</title><rect x="1084.7" y="1493" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1087.70" y="1503.5" ></text>
</g>
<g >
<title>do_group_exit (89,828,044 samples, 0.17%)</title><rect x="12.1" y="1557" width="2.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="15.05" y="1567.5" ></text>
</g>
<g >
<title>native_sched_clock (51,298,177 samples, 0.10%)</title><rect x="1127.9" y="1429" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1130.89" y="1439.5" ></text>
</g>
<g >
<title>napi_complete_done (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1349" width="6.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="664.04" y="1359.5" ></text>
</g>
<g >
<title>__schedule (2,710,269,443 samples, 5.13%)</title><rect x="102.4" y="1397" width="60.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="105.37" y="1407.5" >__sche..</text>
</g>
<g >
<title>native_sched_clock (111,696,618 samples, 0.21%)</title><rect x="1045.9" y="1429" width="2.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1048.93" y="1439.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (113,026,930 samples, 0.21%)</title><rect x="18.8" y="1589" width="2.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="21.82" y="1599.5" ></text>
</g>
<g >
<title>place_entity (103,254,924 samples, 0.20%)</title><rect x="1104.2" y="1429" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1107.25" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1525" width="3.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="49.13" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (5,069,863,327 samples, 9.59%)</title><rect x="382.9" y="1077" width="113.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="385.90" y="1087.5" >__netif_recei..</text>
</g>
<g >
<title>sched_setaffinity (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1525" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="40.92" y="1535.5" ></text>
</g>
<g >
<title>sched_clock_cpu (49,458,098 samples, 0.09%)</title><rect x="1168.5" y="1509" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1171.50" y="1519.5" ></text>
</g>
<g >
<title>__cmd_record (16,442,479 samples, 0.03%)</title><rect x="37.9" y="1589" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="40.92" y="1599.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1,019,906,875 samples, 1.93%)</title><rect x="270.8" y="1365" width="22.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="273.84" y="1375.5" >s..</text>
</g>
<g >
<title>tcp_recvmsg (2,628,113,547 samples, 4.97%)</title><rect x="245.0" y="1397" width="58.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="247.99" y="1407.5" >tcp_re..</text>
</g>
<g >
<title>alloc_empty_file (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1381" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="597.87" y="1391.5" ></text>
</g>
<g >
<title>do_vmi_munmap (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1397" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.92" y="1407.5" ></text>
</g>
<g >
<title>tcp_check_space (256,117,839 samples, 0.48%)</title><rect x="409.6" y="949" width="5.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="412.59" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (6,491,237,190 samples, 12.28%)</title><rect x="367.5" y="1173" width="144.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="370.52" y="1183.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>security_file_alloc (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1301" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="14.77" y="1311.5" ></text>
</g>
<g >
<title>worker_thread (244,521,515 samples, 0.46%)</title><rect x="634.2" y="1557" width="5.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="637.17" y="1567.5" ></text>
</g>
<g >
<title>_copy_from_user (104,290,837 samples, 0.20%)</title><rect x="76.2" y="1461" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="79.23" y="1471.5" ></text>
</g>
<g >
<title>tcp_sendmsg (11,593,978,723 samples, 21.94%)</title><rect x="328.4" y="1413" width="258.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="331.41" y="1423.5" >tcp_sendmsg</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (49,596,974 samples, 0.09%)</title><rect x="484.7" y="869" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="487.72" y="879.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_bulk (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1317" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="17.10" y="1327.5" ></text>
</g>
<g >
<title>start_kernel (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1557" width="4.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1188.51" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (52,159,726 samples, 0.10%)</title><rect x="1064.3" y="1461" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1067.35" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1397" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="597.65" y="1407.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (42,696,636 samples, 0.08%)</title><rect x="1188.9" y="1445" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1191.93" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (34,599,982 samples, 0.07%)</title><rect x="1185.5" y="1429" width="0.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1188.53" y="1439.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4,484,148,835 samples, 8.48%)</title><rect x="78.6" y="1461" width="100.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="81.55" y="1471.5" >do_poll.cons..</text>
</g>
<g >
<title>__x64_sys_exit_group (89,828,044 samples, 0.17%)</title><rect x="12.1" y="1573" width="2.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.05" y="1583.5" ></text>
</g>
<g >
<title>read (3,973,103,646 samples, 7.52%)</title><rect x="221.6" y="1541" width="88.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="224.57" y="1551.5" >read</text>
</g>
<g >
<title>native_write_msr (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1237" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="41.17" y="1247.5" ></text>
</g>
<g >
<title>rest_init (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1525" width="4.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1188.51" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_parent (89,828,044 samples, 0.17%)</title><rect x="12.1" y="1525" width="2.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="15.05" y="1535.5" ></text>
</g>
<g >
<title>do_mmap (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1397" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="17.10" y="1407.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1605" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_bulk (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1333" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="17.10" y="1343.5" ></text>
</g>
<g >
<title>tcp_send_mss (305,016,144 samples, 0.58%)</title><rect x="548.6" y="1381" width="6.8" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="551.60" y="1391.5" ></text>
</g>
<g >
<title>nf_conntrack_in (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1221" width="6.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="664.04" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1477" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="31.53" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_select (113,605,349 samples, 0.21%)</title><rect x="1186.3" y="1461" width="2.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1189.33" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,611,054 samples, 0.02%)</title><rect x="594.6" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.60" y="1615.5" ></text>
</g>
<g >
<title>cpuidle_reflect (57,946,040 samples, 0.11%)</title><rect x="1051.5" y="1525" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1054.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="597" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="607.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (686,109,129 samples, 1.30%)</title><rect x="196.3" y="1477" width="15.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="199.31" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1445" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="773" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="783.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1429" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="41.17" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="821" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="831.5" ></text>
</g>
<g >
<title>clear_buddies (51,510,478 samples, 0.10%)</title><rect x="110.3" y="1349" width="1.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="113.32" y="1359.5" ></text>
</g>
<g >
<title>search_binary_handler (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1493" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="14.91" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1509" width="3.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="49.13" y="1519.5" ></text>
</g>
<g >
<title>seq_read_iter (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1397" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="31.53" y="1407.5" ></text>
</g>
<g >
<title>enqueue_entity (40,976,035 samples, 0.08%)</title><rect x="1189.0" y="1381" width="0.9" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1191.97" y="1391.5" ></text>
</g>
<g >
<title>dequeue_task (1,065,204,739 samples, 2.02%)</title><rect x="108.0" y="1381" width="23.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="111.02" y="1391.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="933" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="943.5" ></text>
</g>
<g >
<title>sock_recvmsg (2,782,125,035 samples, 5.26%)</title><rect x="243.8" y="1429" width="62.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="246.84" y="1439.5" >sock_r..</text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (712,551,847 samples, 1.35%)</title><rect x="431.0" y="917" width="15.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="434.03" y="927.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (150,919,540 samples, 0.29%)</title><rect x="1185.5" y="1477" width="3.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1188.53" y="1487.5" ></text>
</g>
<g >
<title>igc_watchdog_task (244,521,515 samples, 0.46%)</title><rect x="634.2" y="1525" width="5.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="637.17" y="1535.5" ></text>
</g>
<g >
<title>__switch_to (102,881,045 samples, 0.19%)</title><rect x="104.6" y="1381" width="2.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="107.59" y="1391.5" ></text>
</g>
<g >
<title>native_sched_clock (51,412,692 samples, 0.10%)</title><rect x="1123.3" y="1397" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1126.35" y="1407.5" ></text>
</g>
<g >
<title>begin_new_exec (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1381" width="5.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="35.66" y="1391.5" ></text>
</g>
<g >
<title>_Fork (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1493" width="2.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="21.82" y="1503.5" ></text>
</g>
<g >
<title>ep_send_events (6,344,505 samples, 0.01%)</title><rect x="28.1" y="1477" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="31.09" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,512,810 samples, 0.02%)</title><rect x="594.6" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.61" y="1503.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (189,399,755 samples, 0.36%)</title><rect x="207.4" y="1429" width="4.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="210.40" y="1439.5" ></text>
</g>
<g >
<title>__do_sys_clone (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1429" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="21.82" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1589" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="17.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="853" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="863.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (91,550,774 samples, 0.17%)</title><rect x="480.4" y="789" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="483.36" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.98" y="1519.5" ></text>
</g>
<g >
<title>__evlist__enable (16,442,479 samples, 0.03%)</title><rect x="37.9" y="1573" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="40.92" y="1583.5" ></text>
</g>
<g >
<title>do_filp_open (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1413" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="597.87" y="1423.5" ></text>
</g>
<g >
<title>mas_preallocate (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1365" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="17.10" y="1375.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (51,310,934 samples, 0.10%)</title><rect x="496.1" y="1077" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="499.09" y="1087.5" ></text>
</g>
<g >
<title>sched_setaffinity (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1461" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="40.92" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.06" y="1583.5" ></text>
</g>
<g >
<title>try_to_wake_up (994,855,636 samples, 1.88%)</title><rect x="462.5" y="821" width="22.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="465.51" y="831.5" >t..</text>
</g>
<g >
<title>llist_reverse_order (51,855,787 samples, 0.10%)</title><rect x="1129.0" y="1525" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1132.04" y="1535.5" ></text>
</g>
<g >
<title>check_heap_object (146,300,750 samples, 0.28%)</title><rect x="341.9" y="1333" width="3.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="344.91" y="1343.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (7,172,959,273 samples, 13.57%)</title><rect x="365.0" y="1189" width="160.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="367.99" y="1199.5" >__dev_queue_xmit</text>
</g>
<g >
<title>tcp_v4_fill_cb (53,231,794 samples, 0.10%)</title><rect x="492.6" y="965" width="1.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="495.63" y="975.5" ></text>
</g>
<g >
<title>raw_local_deliver (52,199,941 samples, 0.10%)</title><rect x="388.2" y="981" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="391.17" y="991.5" ></text>
</g>
<g >
<title>psi_group_change (610,199,449 samples, 1.15%)</title><rect x="143.9" y="1365" width="13.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="146.88" y="1375.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (153,238,065 samples, 0.29%)</title><rect x="293.6" y="1349" width="3.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="296.61" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1237" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1461" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="597.87" y="1471.5" ></text>
</g>
<g >
<title>__tsearch (9,861,950 samples, 0.02%)</title><rect x="17.5" y="1445" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="20.55" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (101,644,635 samples, 0.19%)</title><rect x="175.3" y="1381" width="2.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="178.34" y="1391.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (102,677,831 samples, 0.19%)</title><rect x="583.8" y="1365" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="586.80" y="1375.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1397" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="19.98" y="1407.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (103,071,838 samples, 0.20%)</title><rect x="1116.7" y="1413" width="2.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1119.73" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.53" y="1503.5" ></text>
</g>
<g >
<title>update_load_avg (198,946,671 samples, 0.38%)</title><rect x="1152.4" y="1461" width="4.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1155.42" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1253" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1263.5" ></text>
</g>
<g >
<title>write (51,334,527 samples, 0.10%)</title><rect x="38.3" y="1589" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="41.28" y="1599.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (2,345,081,028 samples, 4.44%)</title><rect x="1076.7" y="1525" width="52.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1079.68" y="1535.5" >__flu..</text>
</g>
<g >
<title>sched_clock_cpu (86,954,241 samples, 0.16%)</title><rect x="158.7" y="1365" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="161.65" y="1375.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (708,622,300 samples, 1.34%)</title><rect x="277.8" y="1333" width="15.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="280.79" y="1343.5" ></text>
</g>
<g >
<title>pick_next_task (190,740,330 samples, 0.36%)</title><rect x="135.0" y="1381" width="4.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="137.98" y="1391.5" ></text>
</g>
<g >
<title>sched_clock (86,954,241 samples, 0.16%)</title><rect x="158.7" y="1349" width="1.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="161.65" y="1359.5" ></text>
</g>
<g >
<title>tcp_rack_advance (52,295,044 samples, 0.10%)</title><rect x="445.8" y="901" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="448.77" y="911.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (51,349,284 samples, 0.10%)</title><rect x="584.9" y="1301" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="587.95" y="1311.5" ></text>
</g>
<g >
<title>check_heap_object (133,791,726 samples, 0.25%)</title><rect x="277.8" y="1285" width="3.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="280.79" y="1295.5" ></text>
</g>
<g >
<title>evlist_cpu_iterator__next (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1557" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="40.92" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1599.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1589" width="4.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.51" y="1599.5" ></text>
</g>
<g >
<title>poll_idle (15,407,203,487 samples, 29.15%)</title><rect x="704.4" y="1477" width="344.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="707.44" y="1487.5" >poll_idle</text>
</g>
<g >
<title>security_file_permission (150,467,520 samples, 0.28%)</title><rect x="234.8" y="1429" width="3.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="237.77" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (103,573,220 samples, 0.20%)</title><rect x="515.9" y="1093" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="518.90" y="1103.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (50,167,778 samples, 0.09%)</title><rect x="359.6" y="1221" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="362.57" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1413" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="549" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="559.5" ></text>
</g>
<g >
<title>sleep (300,658,426 samples, 0.57%)</title><rect x="594.4" y="1621" width="6.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="597.36" y="1631.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (52,277,927 samples, 0.10%)</title><rect x="588.4" y="1413" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="591.40" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (51,298,177 samples, 0.10%)</title><rect x="1127.9" y="1445" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1130.89" y="1455.5" ></text>
</g>
<g >
<title>psi_group_change (41,132,794 samples, 0.08%)</title><rect x="1122.4" y="1445" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1125.43" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (51,580,768 samples, 0.10%)</title><rect x="526.2" y="1301" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="529.23" y="1311.5" ></text>
</g>
<g >
<title>llist_add_batch (51,312,312 samples, 0.10%)</title><rect x="482.4" y="789" width="1.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="485.40" y="799.5" ></text>
</g>
<g >
<title>epoll_wait (8,609,556 samples, 0.02%)</title><rect x="28.1" y="1573" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="31.09" y="1583.5" ></text>
</g>
<g >
<title>do_vmi_munmap (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1333" width="2.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.53" y="1343.5" ></text>
</g>
<g >
<title>_perf_event_enable (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1413" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="41.17" y="1423.5" ></text>
</g>
<g >
<title>alloc_pages (34,056,632 samples, 0.06%)</title><rect x="19.2" y="1301" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="22.25" y="1311.5" ></text>
</g>
<g >
<title>ip_rcv (4,915,001,351 samples, 9.30%)</title><rect x="385.2" y="1045" width="109.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="388.22" y="1055.5" >ip_rcv</text>
</g>
<g >
<title>__pollwait (101,644,635 samples, 0.19%)</title><rect x="175.3" y="1413" width="2.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="178.34" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1573" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="1583.5" ></text>
</g>
<g >
<title>kernel_clone (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1413" width="2.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="21.82" y="1423.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (51,439,137 samples, 0.10%)</title><rect x="582.7" y="1365" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="585.65" y="1375.5" ></text>
</g>
<g >
<title>tcp_filter (51,352,107 samples, 0.10%)</title><rect x="407.3" y="965" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="410.33" y="975.5" ></text>
</g>
<g >
<title>do_read_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1365" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.13" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="629" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="639.5" ></text>
</g>
<g >
<title>_compound_head (32,787,727 samples, 0.06%)</title><rect x="20.0" y="1301" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="23.01" y="1311.5" ></text>
</g>
<g >
<title>pick_next_entity (51,346,481 samples, 0.10%)</title><rect x="1146.7" y="1493" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1149.67" y="1503.5" ></text>
</g>
<g >
<title>__libc_start_main (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1589" width="1.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.01" y="1599.5" ></text>
</g>
<g >
<title>mmap_region (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1381" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="17.10" y="1391.5" ></text>
</g>
<g >
<title>local_clock_noinstr (51,343,069 samples, 0.10%)</title><rect x="1048.4" y="1493" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1051.42" y="1503.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (138,127,242 samples, 0.26%)</title><rect x="645.3" y="1541" width="3.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="648.27" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1333" width="6.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="664.04" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1301" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1311.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (47,794,949 samples, 0.09%)</title><rect x="487.0" y="933" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="489.99" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (52,271,299 samples, 0.10%)</title><rect x="485.8" y="869" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="488.83" y="879.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (319,818,300 samples, 0.61%)</title><rect x="263.7" y="1365" width="7.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="266.70" y="1375.5" ></text>
</g>
<g >
<title>schedule (2,915,137,234 samples, 5.52%)</title><rect x="101.2" y="1413" width="65.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="104.22" y="1423.5" >schedule</text>
</g>
<g >
<title>switch_mm_irqs_off (52,342,265 samples, 0.10%)</title><rect x="1169.6" y="1509" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1172.60" y="1519.5" ></text>
</g>
<g >
<title>__switch_to (155,669,366 samples, 0.29%)</title><rect x="1138.3" y="1509" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1141.31" y="1519.5" ></text>
</g>
<g >
<title>call_cpuidle (35,758,335 samples, 0.07%)</title><rect x="1185.5" y="1461" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1188.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="85" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,565,474 samples, 0.01%)</title><rect x="28.1" y="1541" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.09" y="1551.5" ></text>
</g>
<g >
<title>__switch_to (243,486,549 samples, 0.46%)</title><rect x="621.4" y="1605" width="5.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="624.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="677" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="687.5" ></text>
</g>
<g >
<title>update_rq_clock (203,370,978 samples, 0.38%)</title><rect x="1124.5" y="1493" width="4.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1127.50" y="1503.5" ></text>
</g>
<g >
<title>[ls] (42,242,710 samples, 0.08%)</title><rect x="17.0" y="1557" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.98" y="1567.5" ></text>
</g>
<g >
<title>do_idle (24,249,276,948 samples, 45.88%)</title><rect x="640.8" y="1557" width="541.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="643.82" y="1567.5" >do_idle</text>
</g>
<g >
<title>[libc.so.6] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1493" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="1503.5" ></text>
</g>
<g >
<title>sched_clock (44,675,562 samples, 0.08%)</title><rect x="1178.8" y="1509" width="1.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1181.84" y="1519.5" ></text>
</g>
<g >
<title>do_sys_openat2 (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1429" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="597.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="501" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="511.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1381" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.53" y="1391.5" ></text>
</g>
<g >
<title>skb_clone (96,968,207 samples, 0.18%)</title><rect x="528.4" y="1317" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="531.39" y="1327.5" ></text>
</g>
<g >
<title>__cond_resched (43,238,170 samples, 0.08%)</title><rect x="246.1" y="1381" width="1.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="249.15" y="1391.5" ></text>
</g>
<g >
<title>enqueue_task (1,679,401,732 samples, 3.18%)</title><rect x="1087.0" y="1477" width="37.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1090.00" y="1487.5" >enq..</text>
</g>
<g >
<title>ksys_write (12,149,196,580 samples, 22.99%)</title><rect x="318.3" y="1477" width="271.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="321.33" y="1487.5" >ksys_write</text>
</g>
<g >
<title>ct_idle_exit (153,652,576 samples, 0.29%)</title><rect x="673.2" y="1477" width="3.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="676.20" y="1487.5" ></text>
</g>
<g >
<title>__fdget_pos (50,052,092 samples, 0.09%)</title><rect x="229.1" y="1461" width="1.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="232.08" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,345,081 samples, 0.10%)</title><rect x="369.5" y="1125" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="372.50" y="1135.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1237" width="6.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="664.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1109" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1119.5" ></text>
</g>
<g >
<title>all (52,853,098,834 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1605" width="6.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="598.00" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1605" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="35.66" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (51,334,527 samples, 0.10%)</title><rect x="38.3" y="1605" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="41.28" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1573" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1573" width="6.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="598.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="133" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1477" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="1487.5" ></text>
</g>
<g >
<title>handle_mm_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1429" width="3.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="49.13" y="1439.5" ></text>
</g>
<g >
<title>__schedule (1,543,975,313 samples, 2.92%)</title><rect x="1136.3" y="1525" width="34.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1139.30" y="1535.5" >__..</text>
</g>
<g >
<title>kmem_cache_alloc_node (296,105,569 samples, 0.56%)</title><rect x="576.0" y="1349" width="6.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="579.04" y="1359.5" ></text>
</g>
<g >
<title>kmalloc_reserve (250,691,529 samples, 0.47%)</title><rect x="570.4" y="1349" width="5.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="573.44" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1285" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1295.5" ></text>
</g>
<g >
<title>enqueue_task_fair (40,976,035 samples, 0.08%)</title><rect x="1189.0" y="1397" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1191.97" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1477" width="0.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="41.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="917" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (109,628,213 samples, 0.21%)</title><rect x="14.5" y="1429" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="485" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1381" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="597.65" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="293" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1557" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1567.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (450,078,497 samples, 0.85%)</title><rect x="1066.6" y="1477" width="10.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1069.63" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1477" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="40.92" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="981" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="991.5" ></text>
</g>
<g >
<title>do_sys_openat2 (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1381" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="14.77" y="1391.5" ></text>
</g>
<g >
<title>rw_verify_area (91,168,344 samples, 0.17%)</title><rect x="324.4" y="1445" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="327.36" y="1455.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (94,267,473 samples, 0.18%)</title><rect x="205.3" y="1413" width="2.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="208.30" y="1423.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (31,077,908 samples, 0.06%)</title><rect x="541.3" y="1333" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="544.27" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter (35,758,335 samples, 0.07%)</title><rect x="1185.5" y="1445" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.53" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (1,067,742,076 samples, 2.02%)</title><rect x="1052.8" y="1525" width="23.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1055.84" y="1535.5" >c..</text>
</g>
<g >
<title>entry_SYSCALL_64 (176,159,403 samples, 0.33%)</title><rect x="222.8" y="1525" width="4.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="225.84" y="1535.5" ></text>
</g>
<g >
<title>tcp_rtt_estimator (100,018,107 samples, 0.19%)</title><rect x="443.5" y="885" width="2.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="446.54" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (6,453,976,206 samples, 12.21%)</title><rect x="368.4" y="1141" width="144.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="371.35" y="1151.5" >__do_softirq</text>
</g>
<g >
<title>ep_poll (6,565,474 samples, 0.01%)</title><rect x="28.1" y="1493" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="31.09" y="1503.5" ></text>
</g>
<g >
<title>irq_exit_rcu (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1445" width="4.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="670.14" y="1455.5" ></text>
</g>
<g >
<title>uv__fs_work (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1557" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="31.53" y="1567.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (102,677,831 samples, 0.19%)</title><rect x="583.8" y="1349" width="2.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="586.80" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (585,157,643 samples, 1.11%)</title><rect x="198.6" y="1461" width="13.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="201.57" y="1471.5" ></text>
</g>
<g >
<title>fput (110,299,012 samples, 0.21%)</title><rect x="178.7" y="1461" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="181.67" y="1471.5" ></text>
</g>
<g >
<title>do_wp_page (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1365" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="597.65" y="1375.5" ></text>
</g>
<g >
<title>__do_softirq (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1525" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="637.04" y="1535.5" ></text>
</g>
<g >
<title>ip_send_check (52,149,099 samples, 0.10%)</title><rect x="356.5" y="1253" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="359.51" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1173" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1183.5" ></text>
</g>
<g >
<title>intel_idle (969,917,570 samples, 1.84%)</title><rect x="677.7" y="1477" width="21.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="680.73" y="1487.5" >i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1349" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1359.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,731,651,673 samples, 3.28%)</title><rect x="1085.8" y="1493" width="38.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1088.84" y="1503.5" >ttw..</text>
</g>
<g >
<title>do_syscall_64 (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1589" width="6.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="598.00" y="1599.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (11,345,329,498 samples, 21.47%)</title><rect x="332.8" y="1397" width="253.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="335.80" y="1407.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>ip_local_deliver_finish (4,864,176,582 samples, 9.20%)</title><rect x="385.2" y="1013" width="108.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="388.22" y="1023.5" >ip_local_deli..</text>
</g>
<g >
<title>__open64_nocancel (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1493" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="597.87" y="1503.5" ></text>
</g>
<g >
<title>main (24,798,194,500 samples, 46.92%)</title><rect x="39.4" y="1557" width="553.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="42.43" y="1567.5" >main</text>
</g>
<g >
<title>sched_clock_noinstr (86,954,241 samples, 0.16%)</title><rect x="158.7" y="1333" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="161.65" y="1343.5" ></text>
</g>
<g >
<title>mmap_region (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1349" width="2.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="17.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="421" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="431.5" ></text>
</g>
<g >
<title>[perf-390.map] (145,948,954 samples, 0.28%)</title><rect x="18.2" y="1605" width="3.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="21.24" y="1615.5" ></text>
</g>
<g >
<title>local_clock_noinstr (111,696,618 samples, 0.21%)</title><rect x="1045.9" y="1461" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1048.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1333" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (256,645,981 samples, 0.49%)</title><rect x="1060.9" y="1477" width="5.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1063.90" y="1487.5" ></text>
</g>
<g >
<title>proc_reg_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1429" width="0.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="31.53" y="1439.5" ></text>
</g>
<g >
<title>schedule_idle (1,822,899,799 samples, 3.45%)</title><rect x="1132.4" y="1541" width="40.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1135.39" y="1551.5" >sch..</text>
</g>
<g >
<title>[grep] (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1605" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.06" y="1615.5" ></text>
</g>
<g >
<title>dequeue_entity (815,055,811 samples, 1.54%)</title><rect x="111.5" y="1349" width="18.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="114.47" y="1359.5" ></text>
</g>
<g >
<title>__mmput (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1493" width="6.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="598.00" y="1503.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1381" width="4.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="670.14" y="1391.5" ></text>
</g>
<g >
<title>sched_clock_cpu (51,298,177 samples, 0.10%)</title><rect x="1127.9" y="1477" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1130.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="245" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="453" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="463.5" ></text>
</g>
<g >
<title>reweight_entity (52,198,766 samples, 0.10%)</title><rect x="1106.6" y="1429" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1109.55" y="1439.5" ></text>
</g>
<g >
<title>event_function (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1333" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="41.17" y="1343.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (51,003,327 samples, 0.10%)</title><rect x="1103.1" y="1429" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1106.11" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="213" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="223.5" ></text>
</g>
<g >
<title>elf_map (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1445" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.91" y="1455.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (152,116,792 samples, 0.29%)</title><rect x="618.1" y="1605" width="3.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="621.05" y="1615.5" ></text>
</g>
<g >
<title>kfree_skbmem (36,367,824 samples, 0.07%)</title><rect x="441.6" y="901" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="444.56" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (96,388,941 samples, 0.18%)</title><rect x="11.9" y="1589" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.91" y="1599.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (111,671,400 samples, 0.21%)</title><rect x="18.8" y="1541" width="2.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="21.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1429" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1439.5" ></text>
</g>
<g >
<title>[[heap]] (10,710,224 samples, 0.02%)</title><rect x="594.4" y="1605" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="597.36" y="1615.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (102,084,542 samples, 0.19%)</title><rect x="630.3" y="1605" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="633.31" y="1615.5" ></text>
</g>
<g >
<title>record_times (51,201,086 samples, 0.10%)</title><rect x="157.5" y="1365" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="160.51" y="1375.5" ></text>
</g>
<g >
<title>ipv4_dst_check (50,128,896 samples, 0.09%)</title><rect x="408.5" y="949" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="411.47" y="959.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (270,071,647 samples, 0.51%)</title><rect x="595.0" y="1413" width="6.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="598.01" y="1423.5" ></text>
</g>
<g >
<title>psi_task_switch (852,373,189 samples, 1.61%)</title><rect x="141.6" y="1381" width="19.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="144.56" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (19,185,178,087 samples, 36.30%)</title><rect x="648.4" y="1541" width="428.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="651.35" y="1551.5" >cpuidle_idle_call</text>
</g>
<g >
<title>evlist__prepare_workload (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1573" width="5.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="35.66" y="1583.5" ></text>
</g>
<g >
<title>ktime_get (99,727,917 samples, 0.19%)</title><rect x="488.1" y="917" width="2.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="491.06" y="927.5" ></text>
</g>
<g >
<title>tcp_skb_entail (73,728,619 samples, 0.14%)</title><rect x="555.4" y="1381" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="558.41" y="1391.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1429" width="6.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="664.04" y="1439.5" ></text>
</g>
<g >
<title>do_group_exit (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1557" width="6.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="598.00" y="1567.5" ></text>
</g>
<g >
<title>uv__io_poll (15,134,845 samples, 0.03%)</title><rect x="28.1" y="1589" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="31.09" y="1599.5" ></text>
</g>
<g >
<title>__fdget (48,099,081 samples, 0.09%)</title><rect x="94.5" y="1445" width="1.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="97.46" y="1455.5" ></text>
</g>
<g >
<title>__vm_munmap (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1413" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="14.92" y="1423.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (51,316,967 samples, 0.10%)</title><rect x="581.5" y="1333" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="584.51" y="1343.5" ></text>
</g>
<g >
<title>[expr] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1557" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="13.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="997" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1007.5" ></text>
</g>
<g >
<title>nf_hook_slow (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1253" width="6.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="664.04" y="1263.5" ></text>
</g>
<g >
<title>unmap_single_vma (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1365" width="3.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="32.08" y="1375.5" ></text>
</g>
<g >
<title>run_rebalance_domains (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1397" width="4.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="670.14" y="1407.5" ></text>
</g>
<g >
<title>mas_alloc_nodes (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1349" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="17.10" y="1359.5" ></text>
</g>
<g >
<title>sched_idle_set_state (88,525,516 samples, 0.17%)</title><rect x="1049.6" y="1493" width="1.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1052.57" y="1503.5" ></text>
</g>
<g >
<title>update_min_vruntime (151,811,804 samples, 0.29%)</title><rect x="126.3" y="1333" width="3.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="129.28" y="1343.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (44,675,562 samples, 0.08%)</title><rect x="1178.8" y="1525" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1181.84" y="1535.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1525" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="14.91" y="1535.5" ></text>
</g>
<g >
<title>load_elf_binary (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1477" width="3.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="32.08" y="1487.5" ></text>
</g>
<g >
<title>rw_verify_area (50,696,207 samples, 0.10%)</title><rect x="230.2" y="1461" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="233.20" y="1471.5" ></text>
</g>
<g >
<title>perf_ioctl (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1461" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="41.17" y="1471.5" ></text>
</g>
<g >
<title>grep (11,638,132 samples, 0.02%)</title><rect x="14.1" y="1621" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="17.06" y="1631.5" ></text>
</g>
<g >
<title>__memset (51,021,787 samples, 0.10%)</title><rect x="573.7" y="1333" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="576.74" y="1343.5" ></text>
</g>
<g >
<title>rb_erase (51,201,830 samples, 0.10%)</title><rect x="1147.8" y="1477" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1150.83" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="165" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="175.5" ></text>
</g>
<g >
<title>check_preempt_curr (52,018,116 samples, 0.10%)</title><rect x="1083.5" y="1493" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1086.54" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task_fair (51,994,433 samples, 0.10%)</title><rect x="139.2" y="1381" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="142.24" y="1391.5" ></text>
</g>
<g >
<title>[ls] (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1541" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.98" y="1551.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (52,623,754 samples, 0.10%)</title><rect x="589.6" y="1493" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="592.57" y="1503.5" ></text>
</g>
<g >
<title>rb_insert_color (51,284,645 samples, 0.10%)</title><rect x="1120.2" y="1445" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1123.18" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (104,303,391 samples, 0.20%)</title><rect x="190.0" y="1429" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="192.99" y="1439.5" ></text>
</g>
<g >
<title>_copy_from_iter (102,540,753 samples, 0.19%)</title><rect x="345.2" y="1365" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="348.18" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1205" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1215.5" ></text>
</g>
<g >
<title>ipv4_mtu (48,022,704 samples, 0.09%)</title><rect x="554.3" y="1349" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="557.33" y="1359.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (51,973,985 samples, 0.10%)</title><rect x="304.8" y="1413" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="307.80" y="1423.5" ></text>
</g>
<g >
<title>tcp_seq_start (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1381" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="31.53" y="1391.5" ></text>
</g>
<g >
<title>__tcp_select_window (51,275,288 samples, 0.10%)</title><rect x="354.3" y="1317" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="357.29" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (29,014,793 samples, 0.05%)</title><rect x="357.7" y="1269" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="360.67" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="357" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="367.5" ></text>
</g>
<g >
<title>skb_release_data (52,273,079 samples, 0.10%)</title><rect x="442.4" y="901" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="445.37" y="911.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,512,810 samples, 0.02%)</title><rect x="594.6" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.61" y="1519.5" ></text>
</g>
<g >
<title>__check_object_size (133,791,726 samples, 0.25%)</title><rect x="277.8" y="1317" width="3.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="280.79" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22,132,589 samples, 0.04%)</title><rect x="1141.8" y="1509" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1144.78" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,286,835 samples, 0.01%)</title><rect x="17.4" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.36" y="1423.5" ></text>
</g>
<g >
<title>eth_type_trans (52,268,604 samples, 0.10%)</title><rect x="518.2" y="1141" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="521.21" y="1151.5" ></text>
</g>
<g >
<title>ksys_read (3,495,470,247 samples, 6.61%)</title><rect x="227.9" y="1477" width="78.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="230.92" y="1487.5" >ksys_read</text>
</g>
<g >
<title>native_sched_clock (50,663,722 samples, 0.10%)</title><rect x="161.7" y="1317" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="164.75" y="1327.5" ></text>
</g>
<g >
<title>update_curr (44,722,559 samples, 0.08%)</title><rect x="130.8" y="1349" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="133.81" y="1359.5" ></text>
</g>
<g >
<title>__update_blocked_fair (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1477" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="637.04" y="1487.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (490,336,993 samples, 0.93%)</title><rect x="200.7" y="1445" width="10.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="203.69" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (508,113,268 samples, 0.96%)</title><rect x="1145.5" y="1509" width="11.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1148.52" y="1519.5" ></text>
</g>
<g >
<title>path_lookupat (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1413" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="19.98" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (51,412,692 samples, 0.10%)</title><rect x="1123.3" y="1413" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1126.35" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (129,166,627 samples, 0.24%)</title><rect x="247.1" y="1381" width="2.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="250.11" y="1391.5" ></text>
</g>
<g >
<title>established_get_first (16,791,120 samples, 0.03%)</title><rect x="28.5" y="1349" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="31.53" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (152,343,890 samples, 0.29%)</title><rect x="1079.0" y="1493" width="3.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1082.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="949" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.06" y="1535.5" ></text>
</g>
<g >
<title>copy_pte_range (55,668,335 samples, 0.11%)</title><rect x="20.0" y="1317" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="23.01" y="1327.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (100,295,124 samples, 0.19%)</title><rect x="308.0" y="1477" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="311.04" y="1487.5" ></text>
</g>
<g >
<title>sched_clock (51,412,692 samples, 0.10%)</title><rect x="1123.3" y="1429" width="1.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1126.35" y="1439.5" ></text>
</g>
<g >
<title>copy_page_range (89,724,967 samples, 0.17%)</title><rect x="19.2" y="1349" width="2.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="22.25" y="1359.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (104,339,081 samples, 0.20%)</title><rect x="590.7" y="1493" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="593.74" y="1503.5" ></text>
</g>
<g >
<title>__cmd_record (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1589" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="35.66" y="1599.5" ></text>
</g>
<g >
<title>bprm_execve (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1541" width="3.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="32.08" y="1551.5" ></text>
</g>
<g >
<title>sh (5,268,730 samples, 0.01%)</title><rect x="594.2" y="1621" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="597.24" y="1631.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (111,671,400 samples, 0.21%)</title><rect x="18.8" y="1525" width="2.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="21.82" y="1535.5" ></text>
</g>
<g >
<title>update_cfs_group (49,334,715 samples, 0.09%)</title><rect x="1121.3" y="1445" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1124.33" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_poll_time (51,995,617 samples, 0.10%)</title><rect x="672.0" y="1477" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="675.04" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1525" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.66" y="1535.5" ></text>
</g>
<g >
<title>__switch_to_asm (105,137,945 samples, 0.20%)</title><rect x="55.2" y="1525" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="58.24" y="1535.5" ></text>
</g>
<g >
<title>select_idle_sibling (134,719,679 samples, 0.25%)</title><rect x="476.2" y="789" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="479.20" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_read (3,495,470,247 samples, 6.61%)</title><rect x="227.9" y="1493" width="78.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="230.92" y="1503.5" >__x64_sys..</text>
</g>
<g >
<title>[perf-293.map] (8,823,416 samples, 0.02%)</title><rect x="18.0" y="1605" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="21.04" y="1615.5" ></text>
</g>
<g >
<title>setlocale (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1541" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.01" y="1551.5" ></text>
</g>
<g >
<title>run_ksoftirqd (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1541" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="637.04" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1397" width="6.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="664.04" y="1407.5" ></text>
</g>
<g >
<title>generic_exec_single (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1365" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="41.17" y="1375.5" ></text>
</g>
<g >
<title>reweight_entity (104,979,772 samples, 0.20%)</title><rect x="117.1" y="1317" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="120.14" y="1327.5" ></text>
</g>
<g >
<title>arch_call_rest_init (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1541" width="4.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1188.51" y="1551.5" ></text>
</g>
<g >
<title>[sleep] (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1557" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="597.83" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1445" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="31.53" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1551.5" ></text>
</g>
<g >
<title>copy_present_pte (11,440,304 samples, 0.02%)</title><rect x="20.7" y="1301" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="23.74" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,471,244 samples, 0.06%)</title><rect x="17.2" y="1509" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.17" y="1519.5" ></text>
</g>
<g >
<title>get_page_from_freelist (34,056,632 samples, 0.06%)</title><rect x="19.2" y="1269" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="22.25" y="1279.5" ></text>
</g>
<g >
<title>do_exit (271,735,387 samples, 0.51%)</title><rect x="595.0" y="1541" width="6.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="598.00" y="1551.5" ></text>
</g>
<g >
<title>set_next_entity (302,591,035 samples, 0.57%)</title><rect x="1150.1" y="1477" width="6.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1153.11" y="1487.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (248,841,503 samples, 0.47%)</title><rect x="341.9" y="1381" width="5.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="344.91" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="389" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (50,663,722 samples, 0.10%)</title><rect x="161.7" y="1365" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.75" y="1375.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (51,045,014 samples, 0.10%)</title><rect x="165.2" y="1397" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="168.17" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,540,156 samples, 0.05%)</title><rect x="17.2" y="1477" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.17" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1493" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1503.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (47,393,011 samples, 0.09%)</title><rect x="177.6" y="1429" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="180.61" y="1439.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (52,183,894 samples, 0.10%)</title><rect x="1170.8" y="1525" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.77" y="1535.5" ></text>
</g>
<g >
<title>unmap_vmas (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1381" width="3.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="32.08" y="1391.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (104,566,544 samples, 0.20%)</title><rect x="521.7" y="1157" width="2.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="524.66" y="1167.5" ></text>
</g>
<g >
<title>setlocale (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="17.06" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1525" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="1535.5" ></text>
</g>
<g >
<title>tcp_current_mss (253,839,871 samples, 0.48%)</title><rect x="549.7" y="1365" width="5.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="552.74" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="837" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1477" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="19.98" y="1487.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1413" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="40.92" y="1423.5" ></text>
</g>
<g >
<title>cpu_util (51,087,976 samples, 0.10%)</title><rect x="1093.9" y="1445" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1096.90" y="1455.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1349" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="597.87" y="1359.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (194,306,518 samples, 0.37%)</title><rect x="299.3" y="1365" width="4.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="302.32" y="1375.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4,817,811,350 samples, 9.12%)</title><rect x="386.3" y="997" width="107.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="389.25" y="1007.5" >ip_protocol_d..</text>
</g>
<g >
<title>__cond_resched (52,482,624 samples, 0.10%)</title><rect x="572.6" y="1333" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="575.57" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="565" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1413" width="2.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="17.53" y="1423.5" ></text>
</g>
<g >
<title>anon_vma_fork (19,003,996 samples, 0.04%)</title><rect x="18.8" y="1349" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="21.82" y="1359.5" ></text>
</g>
<g >
<title>ip_local_out (7,601,930,609 samples, 14.38%)</title><rect x="356.5" y="1285" width="169.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="359.51" y="1295.5" >ip_local_out</text>
</g>
<g >
<title>finish_task_switch.isra.0 (51,301,136 samples, 0.10%)</title><rect x="164.0" y="1397" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="167.02" y="1407.5" ></text>
</g>
<g >
<title>__perf_event_enable (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1317" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="41.17" y="1327.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (50,124,913 samples, 0.09%)</title><rect x="1065.5" y="1461" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1068.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="101" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="111.5" ></text>
</g>
<g >
<title>ip_output (7,520,766,717 samples, 14.23%)</title><rect x="358.3" y="1269" width="167.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="361.32" y="1279.5" >ip_output</text>
</g>
<g >
<title>clear_page_erms (34,056,632 samples, 0.06%)</title><rect x="19.2" y="1253" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="22.25" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,520,740 samples, 0.03%)</title><rect x="11.4" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.39" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (153,363,472 samples, 0.29%)</title><rect x="260.3" y="1365" width="3.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="263.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="277" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="287.5" ></text>
</g>
<g >
<title>napi_consume_skb (681,118,958 samples, 1.29%)</title><rect x="497.2" y="1109" width="15.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="500.24" y="1119.5" ></text>
</g>
<g >
<title>seq_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1413" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="31.53" y="1423.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (52,343,419 samples, 0.10%)</title><rect x="543.1" y="1333" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="546.11" y="1343.5" ></text>
</g>
<g >
<title>sock_put (99,416,734 samples, 0.19%)</title><rect x="405.1" y="965" width="2.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="408.11" y="975.5" ></text>
</g>
<g >
<title>read_tsc (103,027,935 samples, 0.19%)</title><rect x="538.6" y="1333" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="541.60" y="1343.5" ></text>
</g>
<g >
<title>__ip_finish_output (7,464,652,142 samples, 14.12%)</title><rect x="359.6" y="1237" width="166.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="362.57" y="1247.5" >__ip_finish_output</text>
</g>
<g >
<title>mas_next_slot (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1349" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="14.92" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (24,798,194,500 samples, 46.92%)</title><rect x="39.4" y="1589" width="553.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="42.43" y="1599.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="149" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="159.5" ></text>
</g>
<g >
<title>ctx_resched (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1301" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.17" y="1311.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (517,208,662 samples, 0.98%)</title><rect x="512.4" y="1173" width="11.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="515.44" y="1183.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,013,250,997 samples, 1.92%)</title><rect x="109.2" y="1365" width="22.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="112.18" y="1375.5" >d..</text>
</g>
<g >
<title>[sleep] (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1605" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="597.83" y="1615.5" ></text>
</g>
<g >
<title>__memset (51,206,415 samples, 0.10%)</title><rect x="569.3" y="1349" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="572.30" y="1359.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1557" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.91" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (133,791,726 samples, 0.25%)</title><rect x="277.8" y="1301" width="3.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="280.79" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64,595,446 samples, 0.12%)</title><rect x="632.6" y="1605" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="635.59" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,611,054 samples, 0.02%)</title><rect x="594.6" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.60" y="1583.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1189" width="6.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="664.04" y="1199.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1317" width="6.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="664.04" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="197" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="207.5" ></text>
</g>
<g >
<title>pollwake (1,123,906,253 samples, 2.13%)</title><rect x="459.6" y="853" width="25.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="462.63" y="863.5" >p..</text>
</g>
<g >
<title>__fget_light (48,099,081 samples, 0.09%)</title><rect x="94.5" y="1429" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="97.46" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (24,450,486,432 samples, 46.26%)</title><rect x="639.6" y="1573" width="545.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="642.63" y="1583.5" >cpu_startup_entry</text>
</g>
<g >
<title>tcp_mstamp_refresh (194,306,518 samples, 0.37%)</title><rect x="299.3" y="1349" width="4.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="302.32" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_poll (5,667,546,333 samples, 10.72%)</title><rect x="66.9" y="1493" width="126.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="69.94" y="1503.5" >__x64_sys_poll</text>
</g>
<g >
<title>tcp_ack_update_rtt (100,018,107 samples, 0.19%)</title><rect x="443.5" y="901" width="2.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="446.54" y="911.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (16,600,591 samples, 0.03%)</title><rect x="540.9" y="1333" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="543.90" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1509" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1519.5" ></text>
</g>
<g >
<title>malloc (284,651,084 samples, 0.54%)</title><rect x="21.7" y="37" width="6.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.73" y="47.5" ></text>
</g>
<g >
<title>filename_lookup (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1429" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.98" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_lock (51,278,603 samples, 0.10%)</title><rect x="237.0" y="1397" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="239.99" y="1407.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (51,281,438 samples, 0.10%)</title><rect x="673.2" y="1461" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="676.20" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51,273,220 samples, 0.10%)</title><rect x="470.5" y="805" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="473.47" y="815.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1429" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="40.92" y="1439.5" ></text>
</g>
<g >
<title>update_cfs_group (104,979,772 samples, 0.20%)</title><rect x="117.1" y="1333" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="120.14" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (304,709,753 samples, 0.58%)</title><rect x="21.7" y="1605" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="24.70" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.77" y="1471.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (3,170,039,429 samples, 6.00%)</title><rect x="95.5" y="1445" width="70.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="98.53" y="1455.5" >schedul..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="789" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="533" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="543.5" ></text>
</g>
<g >
<title>dequeue_entity (51,953,742 samples, 0.10%)</title><rect x="108.0" y="1365" width="1.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="111.02" y="1375.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (98,473,361 samples, 0.19%)</title><rect x="1130.2" y="1541" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1133.19" y="1551.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (201,044,189 samples, 0.38%)</title><rect x="1185.5" y="1573" width="4.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.51" y="1583.5" ></text>
</g>
<g >
<title>uv__fs_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1541" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="31.53" y="1551.5" ></text>
</g>
<g >
<title>apparmor_file_permission (51,304,166 samples, 0.10%)</title><rect x="324.4" y="1429" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="327.36" y="1439.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (102,455,941 samples, 0.19%)</title><rect x="219.3" y="1525" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="222.29" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,770,242 samples, 0.02%)</title><rect x="14.1" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.06" y="1519.5" ></text>
</g>
<g >
<title>ksys_read (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1461" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="31.53" y="1471.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (50,775,240 samples, 0.10%)</title><rect x="303.7" y="1397" width="1.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="306.66" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (250,510,899 samples, 0.47%)</title><rect x="634.0" y="1605" width="5.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="637.04" y="1615.5" ></text>
</g>
<g >
<title>dst_release (103,425,462 samples, 0.20%)</title><rect x="426.5" y="933" width="2.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="429.48" y="943.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (147,777,507 samples, 0.28%)</title><rect x="1182.2" y="1557" width="3.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1185.21" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2,396,936,815 samples, 4.54%)</title><rect x="1076.7" y="1541" width="53.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1079.68" y="1551.5" >flush..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (49,596,974 samples, 0.09%)</title><rect x="484.7" y="853" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="487.72" y="863.5" ></text>
</g>
<g >
<title>ioctl (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1525" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="41.17" y="1535.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (111,696,618 samples, 0.21%)</title><rect x="1045.9" y="1445" width="2.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1048.93" y="1455.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (142,863,086 samples, 0.27%)</title><rect x="480.4" y="805" width="3.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="483.36" y="815.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1525" width="3.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="32.08" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.83" y="1519.5" ></text>
</g>
<g >
<title>inode_permission (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1317" width="5.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="35.66" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23,972,129 samples, 0.05%)</title><rect x="28.5" y="1509" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.53" y="1519.5" ></text>
</g>
<g >
<title>setlocale (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="597.83" y="1551.5" ></text>
</g>
<g >
<title>__do_softirq (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1413" width="4.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="670.14" y="1423.5" ></text>
</g>
<g >
<title>native_sched_clock (156,612,026 samples, 0.30%)</title><rect x="700.9" y="1445" width="3.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="703.94" y="1455.5" ></text>
</g>
<g >
<title>__calc_delta (52,336,700 samples, 0.10%)</title><rect x="116.0" y="1333" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="118.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1061" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1071.5" ></text>
</g>
<g >
<title>swapper (26,378,561,351 samples, 49.91%)</title><rect x="601.1" y="1621" width="588.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="604.07" y="1631.5" >swapper</text>
</g>
<g >
<title>switch_fpu_return (49,131,328 samples, 0.09%)</title><rect x="211.6" y="1477" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="214.63" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (33,471,244 samples, 0.06%)</title><rect x="17.2" y="1525" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.17" y="1535.5" ></text>
</g>
<g >
<title>execve (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1541" width="5.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="35.66" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_openat (5,879,839 samples, 0.01%)</title><rect x="594.9" y="1445" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="597.87" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (5,019,087,608 samples, 9.50%)</title><rect x="384.0" y="1061" width="112.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="387.04" y="1071.5" >__netif_recei..</text>
</g>
<g >
<title>__ip_queue_xmit (7,601,930,609 samples, 14.38%)</title><rect x="356.5" y="1301" width="169.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="359.51" y="1311.5" >__ip_queue_xmit</text>
</g>
<g >
<title>tick_nohz_idle_enter (302,112,509 samples, 0.57%)</title><rect x="1173.1" y="1541" width="6.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1176.09" y="1551.5" ></text>
</g>
<g >
<title>inet_sendmsg (11,593,978,723 samples, 21.94%)</title><rect x="328.4" y="1429" width="258.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="331.41" y="1439.5" >inet_sendmsg</text>
</g>
<g >
<title>alloc_empty_file (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1333" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="14.77" y="1343.5" ></text>
</g>
<g >
<title>__sched_setaffinity (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1445" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="40.92" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (51,350,743 samples, 0.10%)</title><rect x="532.9" y="1317" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="535.87" y="1327.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,240,802,188 samples, 4.24%)</title><rect x="1079.0" y="1509" width="50.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1082.01" y="1519.5" >sched..</text>
</g>
<g >
<title>local_clock_noinstr (226,335,021 samples, 0.43%)</title><rect x="699.4" y="1477" width="5.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="702.39" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1589" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="597.83" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (78,950,068 samples, 0.15%)</title><rect x="10.0" y="1509" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="1519.5" ></text>
</g>
<g >
<title>[ls] (42,242,710 samples, 0.08%)</title><rect x="17.0" y="1605" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.98" y="1615.5" ></text>
</g>
<g >
<title>tcp_push (8,956,426,413 samples, 16.95%)</title><rect x="348.6" y="1381" width="200.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="351.63" y="1391.5" >tcp_push</text>
</g>
<g >
<title>load_elf_interp.constprop.0 (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1461" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="14.91" y="1471.5" ></text>
</g>
<g >
<title>ip_finish_output (7,470,911,970 samples, 14.14%)</title><rect x="359.4" y="1253" width="166.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="362.43" y="1263.5" >ip_finish_output</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="229" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (24,798,194,500 samples, 46.92%)</title><rect x="39.4" y="1573" width="553.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="42.43" y="1583.5" >[libc.so.6]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="261" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (26,540,156 samples, 0.05%)</title><rect x="17.2" y="1461" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.17" y="1471.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (52,518,002 samples, 0.10%)</title><rect x="491.5" y="933" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="494.45" y="943.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1381" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="21.82" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1445" width="5.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="35.66" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_common (1,225,401,824 samples, 2.32%)</title><rect x="457.4" y="869" width="27.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="460.36" y="879.5" >_..</text>
</g>
<g >
<title>__switch_to (100,958,414 samples, 0.19%)</title><rect x="53.0" y="1525" width="2.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="55.98" y="1535.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (8,150,800,335 samples, 15.42%)</title><rect x="352.0" y="1333" width="182.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="355.04" y="1343.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1509" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1519.5" ></text>
</g>
<g >
<title>update_blocked_averages (219,502,046 samples, 0.42%)</title><rect x="667.1" y="1365" width="4.9" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="670.14" y="1375.5" ></text>
</g>
<g >
<title>unmap_page_range (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1349" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="32.08" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,601,761 samples, 0.01%)</title><rect x="594.8" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.83" y="1535.5" ></text>
</g>
<g >
<title>do_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1381" width="3.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="49.13" y="1391.5" ></text>
</g>
<g >
<title>__seccomp_filter (63,832,371 samples, 0.12%)</title><rect x="632.6" y="1525" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="635.61" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (16,442,479 samples, 0.03%)</title><rect x="37.9" y="1605" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="40.92" y="1615.5" ></text>
</g>
<g >
<title>mmput (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1429" width="3.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="32.08" y="1439.5" ></text>
</g>
<g >
<title>perf_ctx_enable (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1285" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="41.17" y="1295.5" ></text>
</g>
<g >
<title>update_cfs_group (258,023,310 samples, 0.49%)</title><rect x="1107.7" y="1429" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1110.72" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="373" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="383.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,482,460,762 samples, 2.80%)</title><rect x="1089.3" y="1461" width="33.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1092.33" y="1471.5" >en..</text>
</g>
<g >
<title>make_vfsuid (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1285" width="5.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="35.66" y="1295.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1461" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="597.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="613" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="623.5" ></text>
</g>
<g >
<title>inode_permission (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1349" width="5.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="35.66" y="1359.5" ></text>
</g>
<g >
<title>sock_rfree (102,570,555 samples, 0.19%)</title><rect x="251.2" y="1381" width="2.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="254.16" y="1391.5" ></text>
</g>
<g >
<title>tcp_inbound_md5_hash (51,090,928 samples, 0.10%)</title><rect x="390.3" y="981" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="393.26" y="991.5" ></text>
</g>
<g >
<title>enqueue_entity (1,125,977,646 samples, 2.13%)</title><rect x="1095.0" y="1445" width="25.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1098.05" y="1455.5" >e..</text>
</g>
<g >
<title>ip_local_deliver (4,864,176,582 samples, 9.20%)</title><rect x="385.2" y="1029" width="108.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="388.22" y="1039.5" >ip_local_deli..</text>
</g>
<g >
<title>apparmor_file_permission (39,864,178 samples, 0.08%)</title><rect x="325.5" y="1413" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="328.51" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (52,910,150 samples, 0.10%)</title><rect x="384.0" y="1045" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="387.04" y="1055.5" ></text>
</g>
<g >
<title>cpuacct_charge (46,739,592 samples, 0.09%)</title><rect x="124.1" y="1317" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="127.08" y="1327.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1317" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="17.53" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,306,159,415 samples, 23.28%)</title><rect x="318.3" y="1525" width="274.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="321.33" y="1535.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>vfs_read (3,342,606,824 samples, 6.32%)</title><rect x="231.3" y="1461" width="74.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="234.33" y="1471.5" >vfs_read</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (63,832,371 samples, 0.12%)</title><rect x="632.6" y="1557" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="635.61" y="1567.5" ></text>
</g>
<g >
<title>node (659,982,276 samples, 1.25%)</title><rect x="17.9" y="1621" width="14.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="20.92" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.91" y="1583.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (102,633,587 samples, 0.19%)</title><rect x="297.0" y="1349" width="2.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="300.03" y="1359.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1509" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="637.04" y="1519.5" ></text>
</g>
<g >
<title>do_mmap (108,773,781 samples, 0.21%)</title><rect x="14.5" y="1365" width="2.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="17.53" y="1375.5" ></text>
</g>
<g >
<title>exc_page_fault (163,674,377 samples, 0.31%)</title><rect x="46.1" y="1461" width="3.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="49.13" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,611,054 samples, 0.02%)</title><rect x="594.6" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="469" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1317" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="1327.5" ></text>
</g>
<g >
<title>intel_idle (9,387,694 samples, 0.02%)</title><rect x="1185.6" y="1413" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1188.62" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,509,665 samples, 0.02%)</title><rect x="37.9" y="1509" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.92" y="1519.5" ></text>
</g>
<g >
<title>ip_queue_xmit (7,698,675,881 samples, 14.57%)</title><rect x="356.5" y="1317" width="171.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="359.51" y="1327.5" >ip_queue_xmit</text>
</g>
<g >
<title>poll_freewait (501,013,469 samples, 0.95%)</title><rect x="181.1" y="1461" width="11.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="184.13" y="1471.5" ></text>
</g>
<g >
<title>rw_verify_area (150,467,520 samples, 0.28%)</title><rect x="234.8" y="1445" width="3.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="237.77" y="1455.5" ></text>
</g>
<g >
<title>_perf_ioctl (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1445" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="41.17" y="1455.5" ></text>
</g>
<g >
<title>apparmor_file_permission (51,278,603 samples, 0.10%)</title><rect x="237.0" y="1413" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="239.99" y="1423.5" ></text>
</g>
<g >
<title>tcp_write_xmit (51,811,671 samples, 0.10%)</title><rect x="547.4" y="1365" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="550.44" y="1375.5" ></text>
</g>
<g >
<title>migrate_enable (63,832,371 samples, 0.12%)</title><rect x="632.6" y="1509" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="635.61" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1477" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.10" y="1487.5" ></text>
</g>
<g >
<title>__switch_to_asm (153,744,518 samples, 0.29%)</title><rect x="626.9" y="1605" width="3.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="629.88" y="1615.5" ></text>
</g>
<g >
<title>prepare_task_switch (51,630,747 samples, 0.10%)</title><rect x="1171.9" y="1525" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1174.94" y="1535.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1285" width="6.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="664.04" y="1295.5" ></text>
</g>
<g >
<title>[[stack]] (5,329,099 samples, 0.01%)</title><rect x="17.9" y="1605" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="20.92" y="1615.5" ></text>
</g>
<g >
<title>igc_poll (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1365" width="6.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="664.04" y="1375.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1269" width="6.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="664.04" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (41,422,878 samples, 0.08%)</title><rect x="1189.0" y="1429" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1191.96" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (50,560,731 samples, 0.10%)</title><rect x="1082.4" y="1493" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1085.41" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1461" width="5.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="35.66" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (17,647,214,679 samples, 33.39%)</title><rect x="657.6" y="1509" width="393.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="660.55" y="1519.5" >cpuidle_enter</text>
</g>
<g >
<title>security_socket_sendmsg (103,620,023 samples, 0.20%)</title><rect x="587.3" y="1429" width="2.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="590.26" y="1439.5" ></text>
</g>
<g >
<title>skb_release_data (276,790,859 samples, 0.52%)</title><rect x="506.3" y="1093" width="6.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="509.27" y="1103.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (51,344,302 samples, 0.10%)</title><rect x="1151.3" y="1461" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1154.28" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (111,390,522 samples, 0.21%)</title><rect x="14.5" y="1589" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="17.49" y="1599.5" ></text>
</g>
<g >
<title>path_openat (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1349" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="14.77" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1349" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="597.65" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_write (12,149,196,580 samples, 22.99%)</title><rect x="318.3" y="1493" width="271.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="321.33" y="1503.5" >__x64_sys_write</text>
</g>
<g >
<title>add_wait_queue (101,644,635 samples, 0.19%)</title><rect x="175.3" y="1397" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="178.34" y="1407.5" ></text>
</g>
<g >
<title>search_binary_handler (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1413" width="5.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="35.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1029" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1039.5" ></text>
</g>
<g >
<title>__do_softirq (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1413" width="6.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="664.04" y="1423.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (52,323,003 samples, 0.10%)</title><rect x="250.0" y="1349" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="253.00" y="1359.5" ></text>
</g>
<g >
<title>copy_process (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1397" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.82" y="1407.5" ></text>
</g>
<g >
<title>tcp_chrono_start (52,337,966 samples, 0.10%)</title><rect x="347.5" y="1381" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="350.47" y="1391.5" ></text>
</g>
<g >
<title>release_sock (52,323,003 samples, 0.10%)</title><rect x="250.0" y="1381" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="253.00" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1525" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1535.5" ></text>
</g>
<g >
<title>__libc_start_main (42,242,710 samples, 0.08%)</title><rect x="17.0" y="1589" width="0.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="19.98" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="41.17" y="1503.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (51,341,076 samples, 0.10%)</title><rect x="1059.8" y="1493" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1062.75" y="1503.5" ></text>
</g>
<g >
<title>sched_clock (50,663,722 samples, 0.10%)</title><rect x="161.7" y="1349" width="1.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="164.75" y="1359.5" ></text>
</g>
<g >
<title>irq_exit_rcu (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1445" width="6.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="664.04" y="1455.5" ></text>
</g>
<g >
<title>__memset (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1285" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="14.77" y="1295.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (6,344,505 samples, 0.01%)</title><rect x="28.1" y="1461" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="31.09" y="1471.5" ></text>
</g>
<g >
<title>sched_clock_cpu (51,412,692 samples, 0.10%)</title><rect x="1123.3" y="1445" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1126.35" y="1455.5" ></text>
</g>
<g >
<title>psi_task_change (92,545,486 samples, 0.18%)</title><rect x="1122.4" y="1461" width="2.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1125.43" y="1471.5" ></text>
</g>
<g >
<title>__tcp_select_window (102,633,587 samples, 0.19%)</title><rect x="297.0" y="1333" width="2.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="300.03" y="1343.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1,428,916,491 samples, 2.70%)</title><rect x="455.1" y="885" width="31.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="458.09" y="895.5" >__..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (90,919,240 samples, 0.17%)</title><rect x="132.9" y="1381" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="135.95" y="1391.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (111,671,400 samples, 0.21%)</title><rect x="18.8" y="1573" width="2.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="21.82" y="1583.5" ></text>
</g>
<g >
<title>reweight_entity (206,718,070 samples, 0.39%)</title><rect x="1108.9" y="1413" width="4.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1111.86" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="517" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="527.5" ></text>
</g>
<g >
<title>begin_new_exec (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1461" width="3.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="32.08" y="1471.5" ></text>
</g>
<g >
<title>smp_call_function_single (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1381" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="41.17" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,512,810 samples, 0.02%)</title><rect x="594.6" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.61" y="1487.5" ></text>
</g>
<g >
<title>__virt_addr_valid (102,186,643 samples, 0.19%)</title><rect x="342.9" y="1317" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="345.90" y="1327.5" ></text>
</g>
<g >
<title>vfs_write (12,097,857,708 samples, 22.89%)</title><rect x="319.5" y="1461" width="270.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="322.47" y="1471.5" >vfs_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="757" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (98,734,909 samples, 0.19%)</title><rect x="1142.3" y="1509" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.27" y="1519.5" ></text>
</g>
<g >
<title>asm_common_interrupt (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1477" width="6.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="664.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (284,651,084 samples, 0.54%)</title><rect x="21.7" y="69" width="6.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="24.73" y="79.5" ></text>
</g>
<g >
<title>menu_select (113,605,349 samples, 0.21%)</title><rect x="1186.3" y="1445" width="2.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1189.33" y="1455.5" ></text>
</g>
<g >
<title>remove_wait_queue (399,457,448 samples, 0.76%)</title><rect x="183.4" y="1445" width="8.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="186.40" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1093" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1103.5" ></text>
</g>
<g >
<title>bprm_execve (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1541" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.91" y="1551.5" ></text>
</g>
<g >
<title>resolve_normal_ct (273,013,946 samples, 0.52%)</title><rect x="661.0" y="1205" width="6.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="664.04" y="1215.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (3,170,039,429 samples, 6.00%)</title><rect x="95.5" y="1429" width="70.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="98.53" y="1439.5" >schedul..</text>
</g>
<g >
<title>skb_free_head (173,272,278 samples, 0.33%)</title><rect x="508.6" y="1077" width="3.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="511.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1397" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1407.5" ></text>
</g>
<g >
<title>do_filp_open (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1365" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="14.77" y="1375.5" ></text>
</g>
<g >
<title>event_function_call (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1397" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="41.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1045" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1055.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (219,653,731 samples, 0.42%)</title><rect x="667.1" y="1461" width="4.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="670.14" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,889,132 samples, 0.02%)</title><rect x="594.6" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="597.60" y="1551.5" ></text>
</g>
<g >
<title>would_dump (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1365" width="5.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="35.66" y="1375.5" ></text>
</g>
<g >
<title>tcp_data_ready (1,583,006,633 samples, 3.00%)</title><rect x="451.7" y="933" width="35.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="454.65" y="943.5" >tc..</text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (50,824,769 samples, 0.10%)</title><rect x="493.8" y="1029" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="496.82" y="1039.5" ></text>
</g>
<g >
<title>update_curr (51,346,516 samples, 0.10%)</title><rect x="1113.5" y="1429" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1116.48" y="1439.5" ></text>
</g>
<g >
<title>security_file_permission (39,864,178 samples, 0.08%)</title><rect x="325.5" y="1429" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="328.51" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,572,498,995 samples, 12.44%)</title><rect x="66.0" y="1509" width="146.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="68.99" y="1519.5" >do_syscall_64</text>
</g>
<g >
<title>poll_inet_tcp (24,901,796,139 samples, 47.12%)</title><rect x="38.3" y="1621" width="555.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="41.28" y="1631.5" >poll_inet_tcp</text>
</g>
<g >
<title>[libc.so.6] (14,594,168 samples, 0.03%)</title><rect x="11.4" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.39" y="1439.5" ></text>
</g>
<g >
<title>__switch_to (51,215,476 samples, 0.10%)</title><rect x="162.9" y="1397" width="1.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="165.88" y="1407.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (50,663,722 samples, 0.10%)</title><rect x="161.7" y="1333" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="164.75" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (53,283,308 samples, 0.10%)</title><rect x="387.0" y="981" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="389.98" y="991.5" ></text>
</g>
<g >
<title>tcp_write_xmit (8,853,724,245 samples, 16.75%)</title><rect x="349.8" y="1349" width="197.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="352.77" y="1359.5" >tcp_write_xmit</text>
</g>
<g >
<title>flush_smp_call_function_queue (42,696,636 samples, 0.08%)</title><rect x="1188.9" y="1477" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1191.93" y="1487.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (160,104,916 samples, 0.30%)</title><rect x="29.1" y="1557" width="3.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="32.08" y="1567.5" ></text>
</g>
<g >
<title>exc_page_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1445" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="597.65" y="1455.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (7,902,352 samples, 0.01%)</title><rect x="14.1" y="1413" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.10" y="1423.5" ></text>
</g>
<g >
<title>tcp_options_write (51,348,468 samples, 0.10%)</title><rect x="542.0" y="1333" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="544.97" y="1343.5" ></text>
</g>
<g >
<title>update_cfs_group (51,030,432 samples, 0.10%)</title><rect x="129.7" y="1349" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="132.67" y="1359.5" ></text>
</g>
<g >
<title>mas_find (6,258,474 samples, 0.01%)</title><rect x="11.9" y="1365" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="14.92" y="1375.5" ></text>
</g>
<g >
<title>flush_tlb_func (270,071,647 samples, 0.51%)</title><rect x="595.0" y="1429" width="6.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="598.01" y="1439.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (63,832,371 samples, 0.12%)</title><rect x="632.6" y="1573" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="635.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="1541" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="1551.5" ></text>
</g>
<g >
<title>psi_task_switch (469,421,609 samples, 0.89%)</title><rect x="1158.0" y="1509" width="10.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1161.02" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4,587,174,741 samples, 8.68%)</title><rect x="391.4" y="981" width="102.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="394.40" y="991.5" >tcp_v4_rcv</text>
</g>
<g >
<title>remote_function (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1349" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="41.17" y="1359.5" ></text>
</g>
<g >
<title>mm_cid_get (46,577,537 samples, 0.09%)</title><rect x="1144.5" y="1509" width="1.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1147.48" y="1519.5" ></text>
</g>
<g >
<title>native_sched_clock (86,954,241 samples, 0.16%)</title><rect x="158.7" y="1317" width="1.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="161.65" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (152,163,182 samples, 0.29%)</title><rect x="1073.3" y="1429" width="3.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1076.28" y="1439.5" ></text>
</g>
<g >
<title>update_blocked_averages (5,697,565 samples, 0.01%)</title><rect x="634.0" y="1493" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="637.04" y="1503.5" ></text>
</g>
<g >
<title>inet_recvmsg (2,678,888,787 samples, 5.07%)</title><rect x="245.0" y="1413" width="59.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="247.99" y="1423.5" >inet_r..</text>
</g>
<g >
<title>[libc.so.6] (78,023,496 samples, 0.15%)</title><rect x="10.0" y="1461" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.03" y="1471.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (219,653,731 samples, 0.42%)</title><rect x="667.1" y="1477" width="4.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="670.14" y="1487.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4,932,814 samples, 0.01%)</title><rect x="38.2" y="1253" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="41.17" y="1263.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6,931,088 samples, 0.01%)</title><rect x="17.8" y="1477" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="20.77" y="1487.5" ></text>
</g>
<g >
<title>anon_vma_clone (19,003,996 samples, 0.04%)</title><rect x="18.8" y="1333" width="0.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="21.82" y="1343.5" ></text>
</g>
<g >
<title>kfree_skbmem (199,825,006 samples, 0.38%)</title><rect x="501.8" y="1093" width="4.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="504.80" y="1103.5" ></text>
</g>
<g >
<title>__skb_clone (51,879,544 samples, 0.10%)</title><rect x="529.4" y="1301" width="1.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="532.40" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,771,466 samples, 0.02%)</title><rect x="17.0" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.98" y="1503.5" ></text>
</g>
<g >
<title>__ip_local_out (52,149,099 samples, 0.10%)</title><rect x="356.5" y="1269" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="359.51" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,420,545 samples, 0.03%)</title><rect x="17.2" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="20.20" y="1455.5" ></text>
</g>
<g >
<title>refill_stock (53,055,961 samples, 0.10%)</title><rect x="295.8" y="1317" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="298.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="117" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (284,651,084 samples, 0.54%)</title><rect x="21.7" y="741" width="6.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.73" y="751.5" ></text>
</g>
<g >
<title>perf-exec (235,570,327 samples, 0.45%)</title><rect x="32.7" y="1621" width="5.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="35.66" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,092,449 samples, 0.10%)</title><rect x="106.9" y="1381" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="109.88" y="1391.5" ></text>
</g>
<g >
<title>mod_memcg_state (100,182,104 samples, 0.19%)</title><rect x="293.6" y="1317" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="296.61" y="1327.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (6,491,237,190 samples, 12.28%)</title><rect x="367.5" y="1157" width="144.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="370.52" y="1167.5" >do_softirq.part.0</text>
</g>
<g >
<title>sk_filter_trim_cap (51,352,107 samples, 0.10%)</title><rect x="407.3" y="949" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="410.33" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (284,651,084 samples, 0.54%)</title><rect x="21.7" y="693" width="6.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.73" y="703.5" ></text>
</g>
<g >
<title>load_elf_binary (6,560,897 samples, 0.01%)</title><rect x="11.9" y="1477" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="14.91" y="1487.5" ></text>
</g>
<g >
<title>newidle_balance (102,788,992 samples, 0.19%)</title><rect x="135.0" y="1349" width="2.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="137.98" y="1359.5" ></text>
</g>
<g >
<title>__napi_poll (5,162,394,657 samples, 9.77%)</title><rect x="382.0" y="1109" width="115.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="384.98" y="1119.5" >__napi_poll</text>
</g>
<g >
<title>net_rx_action (6,351,314,464 samples, 12.02%)</title><rect x="370.6" y="1125" width="141.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="373.65" y="1135.5" >net_rx_action</text>
</g>
<g >
<title>do_syscall_64 (108,728,963 samples, 0.21%)</title><rect x="18.8" y="1461" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.82" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (39,864,178 samples, 0.08%)</title><rect x="325.5" y="1397" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="328.51" y="1407.5" ></text>
</g>
<g >
<title>update_rq_clock (50,663,722 samples, 0.10%)</title><rect x="161.7" y="1381" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="164.75" y="1391.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,476,324 samples, 0.01%)</title><rect x="594.7" y="1429" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="597.65" y="1439.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (156,612,026 samples, 0.30%)</title><rect x="700.9" y="1461" width="3.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="703.94" y="1471.5" ></text>
</g>
<g >
<title>init_file (6,263,037 samples, 0.01%)</title><rect x="11.8" y="1317" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="14.77" y="1327.5" ></text>
</g>
</g>
</svg>
