<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1654.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1637" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1637" > </text>
<g id="frames">
<g >
<title>execute_command (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1397" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="718.59" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="677" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="687.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="293" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="389" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="399.5" >std::__..</text>
</g>
<g >
<title>__libc_start_main (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1557" width="9.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="70.35" y="1567.5" ></text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1413" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (10,374,183 samples, 0.13%)</title><rect x="76.7" y="1573" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="79.73" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1077" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1087.5" >std::__..</text>
</g>
<g >
<title>ext4_claim_free_clusters (103,581,027 samples, 1.34%)</title><rect x="589.8" y="1237" width="15.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="592.78" y="1247.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1461" width="38.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="751.92" y="1471.5" >asm..</text>
</g>
<g >
<title>cpu_startup_entry (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1541" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="719.76" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1493" width="41.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1151.79" y="1503.5" >cpu..</text>
</g>
<g >
<title>exc_page_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1461" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="69.37" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1445" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1455.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1397" width="175.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="474.11" y="1407.5" >__handle_mm_fault</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="805" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="815.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1365" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="68.74" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1541" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.35" y="1551.5" ></text>
</g>
<g >
<title>sh (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1589" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="718.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1253" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1263.5" ></text>
</g>
<g >
<title>free_unref_page_list (103,903,438 samples, 1.34%)</title><rect x="407.9" y="1125" width="15.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="410.93" y="1135.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1477" width="55.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="410.93" y="1487.5" >rustp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="581" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="325" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1013" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="718.59" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="677" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="863.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1333" width="15.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="347.69" y="1343.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (53,010,297 samples, 0.69%)</title><rect x="597.5" y="1221" width="8.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="600.50" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="325" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="335.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (101,268,187 samples, 1.31%)</title><rect x="471.1" y="1285" width="15.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="474.11" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="565" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1189" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1199.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1301" width="55.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="410.93" y="1311.5" >ovl_d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1349" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1359.5" ></text>
</g>
<g >
<title>clear_page_erms (53,830,579 samples, 0.70%)</title><rect x="518.1" y="1173" width="8.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="521.07" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="805" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="815.5" >std::__..</text>
</g>
<g >
<title>newidle_balance (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1397" width="41.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1151.79" y="1407.5" >new..</text>
</g>
<g >
<title>cpuidle_idle_call (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="719.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1365" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1477" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (310,574,592 samples, 4.02%)</title><rect x="360.5" y="1509" width="47.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="363.54" y="1519.5" >rust..</text>
</g>
<g >
<title>arch_call_rest_init (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1525" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="719.99" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1557" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1567.5" ></text>
</g>
<g >
<title>node (481,173,303 samples, 6.22%)</title><rect x="78.4" y="1589" width="73.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="81.44" y="1599.5" >node</text>
</g>
<g >
<title>ext4_file_read_iter (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1429" width="55.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >ext4_..</text>
</g>
<g >
<title>update_process_times (989,675 samples, 0.01%)</title><rect x="717.0" y="1301" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="719.99" y="1311.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (114,206,599 samples, 1.48%)</title><rect x="613.5" y="1269" width="17.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="616.51" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="565" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="773" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="165" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="175.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1349" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="83.94" y="1359.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (11,847,788 samples, 0.15%)</title><rect x="78.6" y="1509" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="81.65" y="1519.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (11,847,788 samples, 0.15%)</title><rect x="78.6" y="1525" width="1.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="81.65" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="629" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="639.5" ></text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1269" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1279.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1173" width="7.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="513.34" y="1183.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (428,313,907 samples, 5.54%)</title><rect x="1002.1" y="1493" width="65.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1005.05" y="1503.5" >finish_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1109" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1119.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (955,461,010 samples, 12.35%)</title><rect x="856.3" y="1461" width="145.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="859.27" y="1471.5" >mwait_idle_with_hi..</text>
</g>
<g >
<title>handle_mm_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1413" width="175.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="474.11" y="1423.5" >handle_mm_fault</text>
</g>
<g >
<title>malloc (2,879,585 samples, 0.04%)</title><rect x="80.0" y="1429" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="83.02" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1349" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1359.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="117" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="127.5" ></text>
</g>
<g >
<title>search_binary_handler (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1381" width="105.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="154.86" y="1391.5" >search_binar..</text>
</g>
<g >
<title>do_iter_read (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1461" width="55.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >do_it..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1301" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="133" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="143.5" ></text>
</g>
<g >
<title>page_cache_async_ra (524,801,599 samples, 6.79%)</title><rect x="486.6" y="1317" width="80.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.56" y="1327.5" >page_cach..</text>
</g>
<g >
<title>[unknown] (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1573" width="105.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="154.86" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1141" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1151.5" >std::__..</text>
</g>
<g >
<title>ext4_release_folio (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1093" width="7.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="458.47" y="1103.5" ></text>
</g>
<g >
<title>__bitmap_and (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1349" width="38.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="751.92" y="1359.5" >__b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="453" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="847.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1173" width="8.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="505.01" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="293" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="303.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="549" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="559.5" >std::__..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1573" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1381" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1391.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (52,114,062 samples, 0.67%)</title><rect x="415.8" y="1061" width="8.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="418.83" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="805" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1493" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="789" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="799.5" >std::__..</text>
</g>
<g >
<title>update_sg_lb_stats (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1333" width="41.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1151.79" y="1343.5" >upd..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1413" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1423.5" >std::__..</text>
</g>
<g >
<title>ext4_da_reserve_space (103,581,027 samples, 1.34%)</title><rect x="589.8" y="1253" width="15.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="592.78" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="885" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="405" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (455,086,055 samples, 5.88%)</title><rect x="81.9" y="85" width="69.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="84.88" y="95.5" >std::__..</text>
</g>
<g >
<title>start_secondary (851,240 samples, 0.01%)</title><rect x="78.3" y="1557" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="81.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1077" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1087.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,200,787,245 samples, 15.53%)</title><rect x="463.3" y="1541" width="183.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="466.35" y="1551.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>handle_pte_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1381" width="175.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="474.11" y="1391.5" >handle_pte_fault</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="85" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="95.5" ></text>
</g>
<g >
<title>execve (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1509" width="105.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="154.86" y="1519.5" >execve</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1557" width="55.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >entry..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1477" width="9.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="70.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1125" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1135.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1445" width="15.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="347.69" y="1455.5" ></text>
</g>
<g >
<title>folio_alloc (104,942,485 samples, 1.36%)</title><rect x="518.1" y="1237" width="16.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="521.07" y="1247.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1525" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="83.46" y="1535.5" ></text>
</g>
<g >
<title>task_work_run (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1493" width="21.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="697.04" y="1503.5" >t..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="901" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="325" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="335.5" >std::__..</text>
</g>
<g >
<title>sleep (9,636,998 samples, 0.12%)</title><rect x="715.8" y="1589" width="1.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="718.77" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1557" width="21.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="697.04" y="1567.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1445" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1189" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1199.5" ></text>
</g>
<g >
<title>perf-exec (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1589" width="105.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="154.86" y="1599.5" >perf-exec</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1109" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,088,855 samples, 0.08%)</title><rect x="78.6" y="949" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1445" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1045" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="357" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="437" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1429" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="437" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1381" width="55.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="410.93" y="1391.5" >__x64..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,847,009 samples, 0.04%)</title><rect x="78.6" y="757" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1397" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="68.74" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1381" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1391.5" ></text>
</g>
<g >
<title>NaClSysClose (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1525" width="15.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="347.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="805" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="815.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (851,240 samples, 0.01%)</title><rect x="78.3" y="1573" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="81.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="671.5" ></text>
</g>
<g >
<title>__filemap_add_folio (50,896,885 samples, 0.66%)</title><rect x="471.1" y="1253" width="7.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="474.11" y="1263.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1445" width="105.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="154.86" y="1455.5" >do_execveat_..</text>
</g>
<g >
<title>NaClSysRead (310,574,592 samples, 4.02%)</title><rect x="360.5" y="1525" width="47.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="363.54" y="1535.5" >NaCl..</text>
</g>
<g >
<title>std::sys::unix::fs::unlink (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1445" width="55.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="410.93" y="1455.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="517" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="341" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="351.5" >std::__..</text>
</g>
<g >
<title>xas_clear_mark (51,913,108 samples, 0.67%)</title><rect x="431.7" y="1125" width="7.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="434.72" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="917" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="261" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="271.5" ></text>
</g>
<g >
<title>___slab_alloc (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1157" width="8.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="505.01" y="1167.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (851,240 samples, 0.01%)</title><rect x="78.3" y="1461" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="81.31" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="853" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1509" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1519.5" ></text>
</g>
<g >
<title>setlocale (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1509" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="67.97" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="357" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="367.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1429" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="213" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="223.5" >std::__..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1493" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1503.5" ></text>
</g>
<g >
<title>unmap_region (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1317" width="15.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="347.69" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1029" width="7.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="458.47" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1125" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1135.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,200,787,245 samples, 15.53%)</title><rect x="463.3" y="1493" width="183.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="466.35" y="1503.5" >rustposix::interface::f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="159.5" ></text>
</g>
<g >
<title>expand_string_assignment (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1237" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="718.59" y="1247.5" ></text>
</g>
<g >
<title>free_buffer_head (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1045" width="7.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="458.47" y="1055.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1541" width="105.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="154.86" y="1551.5" >evlist__prep..</text>
</g>
<g >
<title>read_pages (50,371,302 samples, 0.65%)</title><rect x="478.9" y="1269" width="7.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="481.88" y="1279.5" ></text>
</g>
<g >
<title>charge_memcg (50,896,885 samples, 0.66%)</title><rect x="471.1" y="1221" width="7.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="474.11" y="1231.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1493" width="0.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="83.46" y="1503.5" ></text>
</g>
<g >
<title>[ls] (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1525" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="70.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1413" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1423.5" ></text>
</g>
<g >
<title>[ls] (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1573" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="70.35" y="1583.5" ></text>
</g>
<g >
<title>do_mas_munmap (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1349" width="15.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="347.69" y="1359.5" ></text>
</g>
<g >
<title>switch_mm (453,564,079 samples, 5.86%)</title><rect x="787.1" y="1445" width="69.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="790.07" y="1455.5" >switch_mm</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="421" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="431.5" >std::__..</text>
</g>
<g >
<title>filemap_free_folio (52,058,147 samples, 0.67%)</title><rect x="423.8" y="1141" width="7.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="426.78" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1157" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1445" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1173" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,847,009 samples, 0.04%)</title><rect x="78.6" y="629" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1141" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1151.5" ></text>
</g>
<g >
<title>shmem_evict_inode (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1365" width="21.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="697.04" y="1375.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="389" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="399.5" ></text>
</g>
<g >
<title>sync_regs (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1477" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="718.77" y="1487.5" ></text>
</g>
<g >
<title>cpptools (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1589" width="55.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >cppto..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1301" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1311.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1509" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1519.5" >std::__..</text>
</g>
<g >
<title>rmqueue (51,111,906 samples, 0.66%)</title><rect x="526.3" y="1173" width="7.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="529.28" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1557" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (458,102,272 samples, 5.92%)</title><rect x="81.4" y="1557" width="69.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1567.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="181" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="191.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1189" width="7.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="513.34" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1333" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1525" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1301" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1311.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1477" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1541" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="453" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="463.5" >std::__..</text>
</g>
<g >
<title>do_group_exit (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1525" width="21.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="697.04" y="1535.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="837" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="847.5" ></text>
</g>
<g >
<title>cpuidle_enter (851,240 samples, 0.01%)</title><rect x="78.3" y="1493" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="81.31" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="789" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1573" width="21.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="697.04" y="1583.5" >e..</text>
</g>
<g >
<title>pick_next_task_fair (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1413" width="41.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1151.79" y="1423.5" >pic..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1013" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1023.5" ></text>
</g>
<g >
<title>page_remove_rmap (52,006,692 samples, 0.67%)</title><rect x="352.6" y="1205" width="7.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="355.61" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="485" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1061" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="757" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1509" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_cancel (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1477" width="81.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1070.40" y="1487.5" >hrtimer_c..</text>
</g>
<g >
<title>zero_user_segments.constprop.0 (59,156,435 samples, 0.76%)</title><rect x="557.6" y="1205" width="9.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="560.61" y="1215.5" ></text>
</g>
<g >
<title>run_rebalance_domains (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1381" width="38.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="751.92" y="1391.5" >run..</text>
</g>
<g >
<title>filemap_release_folio (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1109" width="7.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="458.47" y="1119.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (101,268,187 samples, 1.31%)</title><rect x="471.1" y="1317" width="15.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="474.11" y="1327.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1445" width="38.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="751.92" y="1455.5" >sys..</text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1157" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1167.5" ></text>
</g>
<g >
<title>____fput (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1477" width="21.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="697.04" y="1487.5" >_..</text>
</g>
<g >
<title>tick_nohz_idle_exit (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1509" width="81.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1070.40" y="1519.5" >tick_nohz..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (310,574,592 samples, 4.02%)</title><rect x="360.5" y="1493" width="47.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="363.54" y="1503.5" >rust..</text>
</g>
<g >
<title>get_partial_node.part.0 (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1141" width="8.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="505.01" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="933" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="943.5" ></text>
</g>
<g >
<title>cfree (3,241,846 samples, 0.04%)</title><rect x="79.1" y="837" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="82.08" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="661" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1317" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1093" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1103.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1045" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1055.5" >std::__..</text>
</g>
<g >
<title>asm_exc_page_fault (254,955,998 samples, 3.30%)</title><rect x="655.1" y="1573" width="38.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="658.14" y="1583.5" >asm..</text>
</g>
<g >
<title>Watcher::notify (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1541" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="83.46" y="1551.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1237" width="21.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="697.04" y="1247.5" >_..</text>
</g>
<g >
<title>[libc.so.6] (310,574,592 samples, 4.02%)</title><rect x="360.5" y="1477" width="47.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="363.54" y="1487.5" >[lib..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="341" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="149" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="159.5" ></text>
</g>
<g >
<title>NaClSysBrk (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1525" width="71.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="276.13" y="1535.5" >NaClSysBrk</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="277" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="197" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="207.5" ></text>
</g>
<g >
<title>page_cache_ra_order (524,801,599 samples, 6.79%)</title><rect x="486.6" y="1285" width="80.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="489.56" y="1295.5" >page_cach..</text>
</g>
<g >
<title>rustposix::interface::file::removefile (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1461" width="55.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="410.93" y="1471.5" >rustp..</text>
</g>
<g >
<title>block_page_mkwrite (421,404,034 samples, 5.45%)</title><rect x="566.6" y="1317" width="64.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="569.63" y="1327.5" >block_p..</text>
</g>
<g >
<title>ext4_da_get_block_prep (155,478,020 samples, 2.01%)</title><rect x="589.8" y="1285" width="23.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="592.78" y="1295.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="901" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="911.5" ></text>
</g>
<g >
<title>lind_unlink (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1509" width="55.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="410.93" y="1519.5" >lind_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="757" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="767.5" ></text>
</g>
<g >
<title>alloc_pages (104,942,485 samples, 1.36%)</title><rect x="518.1" y="1221" width="16.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="521.07" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1397" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="645" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="655.5" >std::__..</text>
</g>
<g >
<title>ext4_mpage_readpages (50,371,302 samples, 0.65%)</title><rect x="478.9" y="1237" width="7.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="481.88" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1493" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1503.5" ></text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1285" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1429" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="83.94" y="1439.5" ></text>
</g>
<g >
<title>create_page_buffers (51,061,874 samples, 0.66%)</title><rect x="582.0" y="1285" width="7.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="584.99" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="981" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="991.5" ></text>
</g>
<g >
<title>unmap_page_range (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1269" width="15.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="347.69" y="1279.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1413" width="21.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="697.04" y="1423.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1445" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="83.46" y="1455.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (989,675 samples, 0.01%)</title><rect x="717.0" y="1349" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="719.99" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="245" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1429" width="38.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="751.92" y="1439.5" >irq..</text>
</g>
<g >
<title>readlink (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1493" width="9.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="70.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1061" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1071.5" >std::__..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,200,787,245 samples, 15.53%)</title><rect x="463.3" y="1509" width="183.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="466.35" y="1519.5" >rustposix::safeposix::s..</text>
</g>
<g >
<title>__pagevec_release (103,903,438 samples, 1.34%)</title><rect x="407.9" y="1157" width="15.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="410.93" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (1,261,956 samples, 0.02%)</title><rect x="66.2" y="1573" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="69.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="965" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="975.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1317" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="69.37" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1157" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1167.5" ></text>
</g>
<g >
<title>page_cache_ra_order (101,268,187 samples, 1.31%)</title><rect x="471.1" y="1301" width="15.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="474.11" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1013" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1461" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="83.46" y="1471.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,549,464,446 samples, 32.97%)</title><rect x="257.6" y="1557" width="389.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="260.57" y="1567.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>evict (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1221" width="55.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="410.93" y="1231.5" >evict</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="821" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="831.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1349" width="41.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.79" y="1359.5" >upd..</text>
</g>
<g >
<title>__free_one_page (52,114,062 samples, 0.67%)</title><rect x="415.8" y="1077" width="8.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="418.83" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="981" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="997" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,285,901 samples, 0.03%)</title><rect x="151.3" y="37" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="154.31" y="47.5" ></text>
</g>
<g >
<title>lru_add_fn (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1205" width="7.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="513.34" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1573" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1583.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1541" width="15.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="347.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="501" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="511.5" ></text>
</g>
<g >
<title>qsort_r (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1477" width="71.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="276.13" y="1487.5" >qsort_r</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="789" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="117" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="127.5" >std::__..</text>
</g>
<g >
<title>ext4_mpage_readpages (213,349,621 samples, 2.76%)</title><rect x="534.1" y="1221" width="32.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="537.08" y="1231.5" >ex..</text>
</g>
<g >
<title>__x64_sys_pread64 (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1525" width="55.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >__x64..</text>
</g>
<g >
<title>pthread_cond_broadcast (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1477" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="83.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1525" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="309" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="319.5" >std::__..</text>
</g>
<g >
<title>atime_needs_update (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1397" width="9.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="70.35" y="1407.5" ></text>
</g>
<g >
<title>set_page_dirty (114,206,599 samples, 1.48%)</title><rect x="613.5" y="1301" width="17.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="616.51" y="1311.5" ></text>
</g>
<g >
<title>xas_store (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1221" width="8.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="505.01" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="869" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="565" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="575.5" >std::__..</text>
</g>
<g >
<title>free_unref_page_commit (103,903,438 samples, 1.34%)</title><rect x="407.9" y="1109" width="15.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="410.93" y="1119.5" ></text>
</g>
<g >
<title>do_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1365" width="175.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="474.11" y="1375.5" >do_fault</text>
</g>
<g >
<title>x86_64_start_kernel (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1557" width="41.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1151.79" y="1567.5" >x86..</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1461" width="81.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1070.40" y="1471.5" >hrtimer_t..</text>
</g>
<g >
<title>fault_dirty_shared_page (51,044,452 samples, 0.66%)</title><rect x="638.8" y="1349" width="7.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="641.77" y="1359.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (101,232,941 samples, 1.31%)</title><rect x="486.6" y="1221" width="15.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="489.56" y="1231.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1317" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="83.94" y="1327.5" ></text>
</g>
<g >
<title>filemap_add_folio (206,509,493 samples, 2.67%)</title><rect x="486.6" y="1253" width="31.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="489.56" y="1263.5" >fi..</text>
</g>
<g >
<title>std::__condvar::notify_all (6,275,677 samples, 0.08%)</title><rect x="80.5" y="1509" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="83.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1189" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1199.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="229" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="373" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="645" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="655.5" ></text>
</g>
<g >
<title>start_kernel (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1541" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="719.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1349" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1359.5" ></text>
</g>
<g >
<title>unmap_vmas (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1301" width="15.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="347.69" y="1311.5" ></text>
</g>
<g >
<title>rebalance_domains (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1365" width="38.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="751.92" y="1375.5" >reb..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1445" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="197" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="207.5" >std::__..</text>
</g>
<g >
<title>copy_page_to_iter (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1381" width="55.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >copy_..</text>
</g>
<g >
<title>ext4_invalidate_folio (103,436,530 samples, 1.34%)</title><rect x="447.6" y="1141" width="15.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="450.56" y="1151.5" ></text>
</g>
<g >
<title>find_lock_entries (51,900,983 samples, 0.67%)</title><rect x="439.6" y="1157" width="8.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="442.65" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,241,846 samples, 0.04%)</title><rect x="79.1" y="853" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="82.08" y="863.5" ></text>
</g>
<g >
<title>operator new (2,879,585 samples, 0.04%)</title><rect x="80.0" y="1445" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.02" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1477" width="105.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="154.86" y="1487.5" >do_syscall_64</text>
</g>
<g >
<title>NaClVmmapFindPageIter (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1509" width="71.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="276.13" y="1519.5" >NaClVmma..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1237" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1247.5" >std::__..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (11,847,788 samples, 0.15%)</title><rect x="78.6" y="1541" width="1.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="81.65" y="1551.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1173" width="55.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="410.93" y="1183.5" >trunc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1493" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1503.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1413" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1423.5" ></text>
</g>
<g >
<title>do_idle (2,828,370,032 samples, 36.57%)</title><rect x="717.2" y="1525" width="431.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="720.24" y="1535.5" >do_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="431.5" ></text>
</g>
<g >
<title>___slab_alloc (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1173" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="68.74" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="933" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="943.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1477" width="15.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="347.69" y="1487.5" ></text>
</g>
<g >
<title>tlb_flush_rmaps (52,006,692 samples, 0.67%)</title><rect x="352.6" y="1221" width="7.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="355.61" y="1231.5" ></text>
</g>
<g >
<title>vfs_iter_read (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1477" width="55.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >vfs_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="69" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="79.5" >std::__..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1429" width="81.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1070.40" y="1439.5" >__raw_spi..</text>
</g>
<g >
<title>execute_command (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1445" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="718.59" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (56,249,693 samples, 0.73%)</title><rect x="646.6" y="1573" width="8.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="649.56" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1381" width="15.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="347.69" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_bulk (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1205" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="68.74" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1397" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1173" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="837" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="847.5" ></text>
</g>
<g >
<title>vfs_read (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1509" width="55.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >vfs_r..</text>
</g>
<g >
<title>get_page_from_freelist (104,942,485 samples, 1.36%)</title><rect x="518.1" y="1189" width="16.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="521.07" y="1199.5" ></text>
</g>
<g >
<title>start_kernel (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1541" width="41.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1151.79" y="1551.5" >sta..</text>
</g>
<g >
<title>do_syscall_64 (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1397" width="55.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="410.93" y="1407.5" >do_sy..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1557" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="154.31" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1461" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="741" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="469" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="479.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="869" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="879.5" ></text>
</g>
<g >
<title>ext4_evict_inode (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1205" width="55.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="410.93" y="1215.5" >ext4_..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (851,240 samples, 0.01%)</title><rect x="78.4" y="1557" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="81.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,847,009 samples, 0.04%)</title><rect x="78.6" y="597" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="81.65" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="405" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1557" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="719.99" y="1567.5" ></text>
</g>
<g >
<title>zap_pte_range (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1237" width="15.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="347.69" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="469" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="479.5" ></text>
</g>
<g >
<title>exec_binprm (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1397" width="105.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="154.86" y="1407.5" >exec_binprm</text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1125" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1135.5" ></text>
</g>
<g >
<title>HandleStackContext (102,016,064 samples, 1.32%)</title><rect x="257.6" y="1541" width="15.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="260.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1093" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1103.5" ></text>
</g>
<g >
<title>all (7,733,782,744 samples, 100%)</title><rect x="10.0" y="1605" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>pick_next_task (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1429" width="41.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1151.79" y="1439.5" >pic..</text>
</g>
<g >
<title>__vma_adjust (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1253" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="68.74" y="1263.5" ></text>
</g>
<g >
<title>__dentry_kill (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1429" width="21.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="697.04" y="1439.5" >_..</text>
</g>
<g >
<title>do_idle (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1477" width="41.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1151.79" y="1487.5" >do_..</text>
</g>
<g >
<title>unmap_single_vma (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1285" width="15.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="347.69" y="1295.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1525" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1535.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (50,455,000 samples, 0.65%)</title><rect x="574.3" y="1285" width="7.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="577.29" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1029" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="949" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="959.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,130,792 samples, 0.01%)</title><rect x="151.7" y="1573" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="154.69" y="1583.5" ></text>
</g>
<g >
<title>generic_file_read_iter (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1413" width="55.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >gener..</text>
</g>
<g >
<title>__kernel_read (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1365" width="105.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="154.86" y="1375.5" >__kernel_read</text>
</g>
<g >
<title>__dentry_kill (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1269" width="55.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="410.93" y="1279.5" >__den..</text>
</g>
<g >
<title>charge_memcg (50,231,786 samples, 0.65%)</title><rect x="494.3" y="1205" width="7.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="497.34" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1493" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="965" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="975.5" >std::__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1413" width="55.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="410.93" y="1423.5" >entry..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1397" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1407.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="693" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="703.5" >std::__..</text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1221" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1231.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1333" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="69.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="197" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="207.5" ></text>
</g>
<g >
<title>unlink (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1429" width="55.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="410.93" y="1439.5" >unlink</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="677" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="687.5" ></text>
</g>
<g >
<title>mas_alloc_nodes (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1221" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="68.74" y="1231.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1445" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="69.37" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="597" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1429" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="69.37" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1461" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1541" width="21.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="697.04" y="1551.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="37" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="47.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="181" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="191.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="901" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1541" width="55.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >do_sy..</text>
</g>
<g >
<title>ext4_map_blocks (50,814,202 samples, 0.66%)</title><rect x="549.9" y="1205" width="7.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="552.86" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="533" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="725" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,016,217 samples, 0.04%)</title><rect x="81.4" y="69" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="84.42" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="773" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="783.5" >std::__..</text>
</g>
<g >
<title>cgroup_rstat_updated (50,231,786 samples, 0.65%)</title><rect x="494.3" y="1189" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="497.34" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,061,874 samples, 0.66%)</title><rect x="582.0" y="1269" width="7.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="584.99" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1157" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1167.5" >std::__..</text>
</g>
<g >
<title>main (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1525" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="718.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1397" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="725" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="869" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="879.5" ></text>
</g>
<g >
<title>load_balance (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1381" width="41.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1151.79" y="1391.5" >loa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="783.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (989,675 samples, 0.01%)</title><rect x="717.0" y="1397" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="719.99" y="1407.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1077" width="7.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="458.47" y="1087.5" ></text>
</g>
<g >
<title>filemap_add_folio (50,896,885 samples, 0.66%)</title><rect x="471.1" y="1269" width="7.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="474.11" y="1279.5" ></text>
</g>
<g >
<title>lind_close (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1509" width="15.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="347.69" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="53" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="63.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1333" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="83.94" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="677" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="613" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="623.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,549,464,446 samples, 32.97%)</title><rect x="257.6" y="1573" width="389.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="260.57" y="1583.5" >[sel_ldr]</text>
</g>
<g >
<title>mnt_user_ns (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1381" width="9.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="70.35" y="1391.5" ></text>
</g>
<g >
<title>dput (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1285" width="55.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="410.93" y="1295.5" >dput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="885" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="895.5" >std::__..</text>
</g>
<g >
<title>dput (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1445" width="21.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="697.04" y="1455.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="597" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="607.5" ></text>
</g>
<g >
<title>filemap_fault (626,069,786 samples, 8.10%)</title><rect x="471.1" y="1333" width="95.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="474.11" y="1343.5" >filemap_fault</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="597" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="607.5" >std::__..</text>
</g>
<g >
<title>sccp (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1573" width="55.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >sccp</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1285" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1295.5" >std::__..</text>
</g>
<g >
<title>do_readlinkat (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1429" width="9.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="70.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="373" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="383.5" >std::__..</text>
</g>
<g >
<title>menu_select (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1477" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="719.76" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1413" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1365" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1375.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (524,801,599 samples, 6.79%)</title><rect x="486.6" y="1269" width="80.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="489.56" y="1279.5" >page_cach..</text>
</g>
<g >
<title>refill_obj_stock (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1013" width="7.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="458.47" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1477" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="725" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="735.5" >std::__..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1461" width="15.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="347.69" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1381" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1125" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1135.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="101" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1461" width="175.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="474.11" y="1471.5" >asm_exc_page_fault</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1141" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1151.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (453,564,079 samples, 5.86%)</title><rect x="787.1" y="1413" width="69.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="790.07" y="1423.5" >load_ne..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1061" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="661" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="671.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1413" width="38.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="751.92" y="1423.5" >__i..</text>
</g>
<g >
<title>block_dirty_folio (50,714,891 samples, 0.66%)</title><rect x="613.5" y="1253" width="7.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="616.51" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1349" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1253" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1263.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="533" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="543.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,847,009 samples, 0.04%)</title><rect x="78.6" y="693" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="703.5" ></text>
</g>
<g >
<title>read_pages (213,349,621 samples, 2.76%)</title><rect x="534.1" y="1253" width="32.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="537.08" y="1263.5" >re..</text>
</g>
<g >
<title>leave_mm (453,564,079 samples, 5.86%)</title><rect x="787.1" y="1461" width="69.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="790.07" y="1471.5" >leave_mm</text>
</g>
<g >
<title>__libc_start_main (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1557" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="718.59" y="1567.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1413" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="69.37" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (11,847,788 samples, 0.15%)</title><rect x="78.6" y="1477" width="1.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="81.65" y="1487.5" ></text>
</g>
<g >
<title>ext4_readahead (50,371,302 samples, 0.65%)</title><rect x="478.9" y="1253" width="7.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="481.88" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="261" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="271.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="885" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="895.5" ></text>
</g>
<g >
<title>_raw_read_lock (50,814,202 samples, 0.66%)</title><rect x="549.9" y="1189" width="7.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="552.86" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,088,855 samples, 0.08%)</title><rect x="78.6" y="885" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="53" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="63.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1221" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1231.5" >std::__..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1541" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1525" width="105.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="154.86" y="1535.5" >[libc.so.6]</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (155,478,020 samples, 2.01%)</title><rect x="589.8" y="1269" width="23.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="592.78" y="1279.5" >e..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1541" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1551.5" ></text>
</g>
<g >
<title>mmap_region (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1317" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="68.74" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1125" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1029" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1039.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="965" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="975.5" ></text>
</g>
<g >
<title>iput (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1237" width="55.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="410.93" y="1247.5" >iput</text>
</g>
<g >
<title>iput (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1397" width="21.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="697.04" y="1407.5" >i..</text>
</g>
<g >
<title>cpuidle_enter_state (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1429" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="719.99" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="613" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="623.5" >std::__..</text>
</g>
<g >
<title>release_pages (103,903,438 samples, 1.34%)</title><rect x="407.9" y="1141" width="15.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="410.93" y="1151.5" ></text>
</g>
<g >
<title>swapper (3,098,480,268 samples, 40.06%)</title><rect x="717.2" y="1589" width="472.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="720.24" y="1599.5" >swapper</text>
</g>
<g >
<title>[expr] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1573" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="67.97" y="1583.5" ></text>
</g>
<g >
<title>_dl_catch_exception (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1493" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="68.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="133" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="143.5" >std::__..</text>
</g>
<g >
<title>truncate_cleanup_folio (103,436,530 samples, 1.34%)</title><rect x="447.6" y="1157" width="15.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="450.56" y="1167.5" ></text>
</g>
<g >
<title>bprm_execve (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1429" width="105.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="154.86" y="1439.5" >bprm_execve</text>
</g>
<g >
<title>do_unlinkat (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1365" width="55.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="410.93" y="1375.5" >do_un..</text>
</g>
<g >
<title>grep (1,261,956 samples, 0.02%)</title><rect x="66.2" y="1589" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="69.17" y="1599.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1301" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="165" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="175.5" >std::__..</text>
</g>
<g >
<title>__cmd_record (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1557" width="105.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="154.86" y="1567.5" >__cmd_record</text>
</g>
<g >
<title>NaClSysUnlinkDecoder (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1541" width="55.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="410.93" y="1551.5" >NaClS..</text>
</g>
<g >
<title>NaClSysBrkDecoder (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1541" width="71.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="276.13" y="1551.5" >NaClSysB..</text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1317" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="821" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="831.5" ></text>
</g>
<g >
<title>ext4_readahead (213,349,621 samples, 2.76%)</title><rect x="534.1" y="1237" width="32.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="537.08" y="1247.5" >ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1205" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1215.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1397" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="69.37" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="517" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="527.5" ></text>
</g>
<g >
<title>xas_store (51,913,108 samples, 0.67%)</title><rect x="431.7" y="1141" width="7.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="434.72" y="1151.5" ></text>
</g>
<g >
<title>[ls] (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1509" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="70.35" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1445" width="9.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="70.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1477" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1461" width="9.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="70.35" y="1471.5" ></text>
</g>
<g >
<title>touch_atime (61,460,287 samples, 0.79%)</title><rect x="67.4" y="1413" width="9.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="70.35" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1461" width="71.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="276.13" y="1471.5" >[libc.so..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,098,480,268 samples, 40.06%)</title><rect x="717.2" y="1573" width="472.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="720.24" y="1583.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="773" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="37" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1205" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1215.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1301" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1311.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (51,896,993 samples, 0.67%)</title><rect x="605.6" y="1237" width="7.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="608.59" y="1247.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1253" width="15.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="347.69" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1461" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1471.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="613" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="623.5" ></text>
</g>
<g >
<title>schedule_idle (428,313,907 samples, 5.54%)</title><rect x="1002.1" y="1509" width="65.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1005.05" y="1519.5" >schedul..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="389" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="245" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="255.5" >std::__..</text>
</g>
<g >
<title>cpuidle_idle_call (851,240 samples, 0.01%)</title><rect x="78.3" y="1509" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="81.31" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1093" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="485" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="495.5" >std::__..</text>
</g>
<g >
<title>execute_command (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1141" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="718.59" y="1151.5" ></text>
</g>
<g >
<title>__filemap_add_folio (155,836,693 samples, 2.02%)</title><rect x="486.6" y="1237" width="23.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="489.56" y="1247.5" >_..</text>
</g>
<g >
<title>task_tick_idle (989,675 samples, 0.01%)</title><rect x="717.0" y="1285" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="719.99" y="1295.5" ></text>
</g>
<g >
<title>filemap_read (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1397" width="55.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >filem..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="101" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1461" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="117" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (989,675 samples, 0.01%)</title><rect x="717.0" y="1333" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="719.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="917" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="927.5" >std::__..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1525" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="149" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="159.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="709" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="981" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="991.5" ></text>
</g>
<g >
<title>arch_call_rest_init (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1525" width="41.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1151.79" y="1535.5" >arc..</text>
</g>
<g >
<title>cpu_startup_entry (2,828,370,032 samples, 36.57%)</title><rect x="717.2" y="1541" width="431.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="720.24" y="1551.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1157" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1167.5" ></text>
</g>
<g >
<title>try_to_free_buffers (51,631,922 samples, 0.67%)</title><rect x="455.5" y="1061" width="7.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="458.47" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,241,846 samples, 0.04%)</title><rect x="79.1" y="821" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.08" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="501" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="821" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="831.5" >std::__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1413" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="68.74" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1269" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1279.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="981" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="991.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="133" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="143.5" ></text>
</g>
<g >
<title>evict (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1333" width="55.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="410.93" y="1343.5" >evict</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="949" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="959.5" >std::__..</text>
</g>
<g >
<title>[libc.so.6] (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1445" width="71.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="276.13" y="1455.5" >[libc.so..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="933" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="943.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1317" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,866,653,798 samples, 24.14%)</title><rect x="717.2" y="1493" width="284.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="720.24" y="1503.5" >cpuidle_enter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="373" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1205" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="421" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="357" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="367.5" >std::__..</text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1509" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1013" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1023.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1077" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1087.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1573" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1285" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1295.5" ></text>
</g>
<g >
<title>do_page_mkwrite (472,786,544 samples, 6.11%)</title><rect x="566.6" y="1349" width="72.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="569.63" y="1359.5" >do_page_..</text>
</g>
<g >
<title>execute_command (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1349" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="718.59" y="1359.5" ></text>
</g>
<g >
<title>__fput (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1461" width="21.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="697.04" y="1471.5" >_..</text>
</g>
<g >
<title>exc_page_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1445" width="175.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="474.11" y="1455.5" >exc_page_fault</text>
</g>
<g >
<title>command_substitute (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1205" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="718.59" y="1215.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,139,009 samples, 0.04%)</title><rect x="716.8" y="1573" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="719.76" y="1583.5" ></text>
</g>
<g >
<title>parse_and_execute (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.59" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1429" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1029" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1039.5" ></text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1461" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1493" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (458,102,272 samples, 5.92%)</title><rect x="81.4" y="1541" width="69.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1551.5" >std::__..</text>
</g>
<g >
<title>__anon_vma_prepare (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1365" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="69.37" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="997" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="469" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1461" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="719.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="1173" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="837" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="847.5" >std::__..</text>
</g>
<g >
<title>do_syscall_64 (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1397" width="15.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="347.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1029" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="437" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="447.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="69" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,847,009 samples, 0.04%)</title><rect x="78.6" y="821" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="101" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="111.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1237" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1285" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1477" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1397" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1429" width="71.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="276.13" y="1439.5" >[libc.so..</text>
</g>
<g >
<title>ext4_es_lookup_extent (51,896,993 samples, 0.67%)</title><rect x="605.6" y="1253" width="7.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="608.59" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1269" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="81.65" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="261" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1493" width="105.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="154.86" y="1503.5" >entry_SYSCAL..</text>
</g>
<g >
<title>InotifyBackend::handleEvents (18,123,465 samples, 0.23%)</title><rect x="78.6" y="1557" width="2.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="81.65" y="1567.5" ></text>
</g>
<g >
<title>block_invalidate_folio (103,436,530 samples, 1.34%)</title><rect x="447.6" y="1125" width="15.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="450.56" y="1135.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1477" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="69.37" y="1487.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1445" width="55.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >do_it..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1365" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1375.5" >std::__..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (667,954 samples, 0.01%)</title><rect x="717.1" y="1413" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="720.14" y="1423.5" ></text>
</g>
<g >
<title>xas_create (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1205" width="8.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="505.01" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1429" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1439.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (103,971,255 samples, 1.34%)</title><rect x="423.8" y="1157" width="15.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="426.78" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1109" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1119.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1509" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1519.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (453,564,079 samples, 5.86%)</title><rect x="787.1" y="1429" width="69.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="790.07" y="1439.5" >switch_..</text>
</g>
<g >
<title>__do_fault (626,069,786 samples, 8.10%)</title><rect x="471.1" y="1349" width="95.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="474.11" y="1359.5" >__do_fault</text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (56,249,693 samples, 0.73%)</title><rect x="646.6" y="1557" width="8.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="649.56" y="1567.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (310,574,592 samples, 4.02%)</title><rect x="360.5" y="1541" width="47.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="363.54" y="1551.5" >NaCl..</text>
</g>
<g >
<title>xas_alloc (54,603,752 samples, 0.71%)</title><rect x="502.0" y="1189" width="8.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="505.01" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_execve (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1461" width="105.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="154.86" y="1471.5" >__x64_sys_ex..</text>
</g>
<g >
<title>cpu_startup_entry (851,240 samples, 0.01%)</title><rect x="78.3" y="1541" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="81.31" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1525" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1535.5" >std::__..</text>
</g>
<g >
<title>cpuidle_enter_state (1,866,653,798 samples, 24.14%)</title><rect x="717.2" y="1477" width="284.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="720.24" y="1487.5" >cpuidle_enter_state</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1333" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1541" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,879,348 samples, 0.04%)</title><rect x="79.6" y="1173" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="82.58" y="1183.5" ></text>
</g>
<g >
<title>iput (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1349" width="55.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="410.93" y="1359.5" >iput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="277" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="287.5" ></text>
</g>
<g >
<title>xas_find (51,900,983 samples, 0.67%)</title><rect x="439.6" y="1141" width="8.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="442.65" y="1151.5" ></text>
</g>
<g >
<title>dispatcher (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1493" width="15.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="347.69" y="1503.5" ></text>
</g>
<g >
<title>_start (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1573" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="718.59" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1253" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1263.5" ></text>
</g>
<g >
<title>destroy_inode (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1317" width="55.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="410.93" y="1327.5" >destr..</text>
</g>
<g >
<title>__count_memcg_events (50,896,885 samples, 0.66%)</title><rect x="471.1" y="1205" width="7.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="474.11" y="1215.5" ></text>
</g>
<g >
<title>__vm_munmap (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1365" width="15.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="347.69" y="1375.5" ></text>
</g>
<g >
<title>do_futex (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1413" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="83.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="853" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="863.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1093" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="549" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="85" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="95.5" ></text>
</g>
<g >
<title>shmem_undo_range (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1349" width="21.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="697.04" y="1359.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1429" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1439.5" >std::__..</text>
</g>
<g >
<title>do_mmap (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1333" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="68.74" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1381" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1391.5" ></text>
</g>
<g >
<title>__filemap_remove_folio (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1301" width="21.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="697.04" y="1311.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1173" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="645" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="655.5" ></text>
</g>
<g >
<title>schedule_idle (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1461" width="41.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1151.79" y="1471.5" >sch..</text>
</g>
<g >
<title>cpu_startup_entry (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1493" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="719.99" y="1503.5" ></text>
</g>
<g >
<title>sel_ldr (3,002,082,421 samples, 38.82%)</title><rect x="257.5" y="1589" width="458.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="260.54" y="1599.5" >sel_ldr</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="693" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="703.5" ></text>
</g>
<g >
<title>__munmap (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1429" width="15.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="347.69" y="1439.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (468,952,296 samples, 6.06%)</title><rect x="273.1" y="1493" width="71.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="276.13" y="1503.5" >NaClVmma..</text>
</g>
<g >
<title>rmqueue_bulk (51,111,906 samples, 0.66%)</title><rect x="526.3" y="1157" width="7.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="529.28" y="1167.5" ></text>
</g>
<g >
<title>mas_preallocate (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1237" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="68.74" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1477" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1487.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="629" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="639.5" >std::__..</text>
</g>
<g >
<title>NaClSysUnlink (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1525" width="55.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="410.93" y="1535.5" >NaClS..</text>
</g>
<g >
<title>[unknown] (478,511,638 samples, 6.19%)</title><rect x="78.6" y="1573" width="73.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.65" y="1583.5" >[unknown]</text>
</g>
<g >
<title>tick_sched_handle (989,675 samples, 0.01%)</title><rect x="717.0" y="1317" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="719.99" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1429" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1439.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,149,900,782 samples, 14.87%)</title><rect x="471.1" y="1429" width="175.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="474.11" y="1439.5" >do_user_addr_fault</text>
</g>
<g >
<title>filemap_remove_folio (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1317" width="21.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="697.04" y="1327.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1109" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1461" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="245" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="255.5" ></text>
</g>
<g >
<title>ondemand_readahead (524,801,599 samples, 6.79%)</title><rect x="486.6" y="1301" width="80.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="489.56" y="1311.5" >ondemand_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="309" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="319.5" ></text>
</g>
<g >
<title>xas_move_index (51,900,983 samples, 0.67%)</title><rect x="439.6" y="1125" width="8.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="442.65" y="1135.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1365" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="83.94" y="1375.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (692,656,268 samples, 8.96%)</title><rect x="151.9" y="1413" width="105.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="154.86" y="1423.5" >bprm_execve...</text>
</g>
<g >
<title>vm_mmap_pgoff (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1349" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="68.74" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (103,922,043 samples, 1.34%)</title><rect x="344.7" y="1413" width="15.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="347.69" y="1423.5" ></text>
</g>
<g >
<title>folio_mark_dirty (114,206,599 samples, 1.48%)</title><rect x="613.5" y="1285" width="17.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="616.51" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1333" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="1343.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1205" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1381" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1365" width="55.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >copy_..</text>
</g>
<g >
<title>free_pcppages_bulk (103,903,438 samples, 1.34%)</title><rect x="407.9" y="1093" width="15.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="410.93" y="1103.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1253" width="21.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="697.04" y="1263.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="997" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1007.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,200,787,245 samples, 15.53%)</title><rect x="463.3" y="1525" width="183.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="466.35" y="1535.5" >NaClSysWrite</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,497,989 samples, 0.08%)</title><rect x="715.8" y="1509" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.77" y="1519.5" ></text>
</g>
<g >
<title>inode_needs_update_time.part.0 (51,382,510 samples, 0.66%)</title><rect x="630.9" y="1317" width="7.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="633.93" y="1327.5" ></text>
</g>
<g >
<title>find_busiest_group (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1365" width="41.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1151.79" y="1375.5" >fin..</text>
</g>
<g >
<title>expr (7,892,659 samples, 0.10%)</title><rect x="65.0" y="1589" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="67.97" y="1599.5" ></text>
</g>
<g >
<title>dispatcher (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1493" width="55.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="410.93" y="1503.5" >dispa..</text>
</g>
<g >
<title>[anon] (851,240 samples, 0.01%)</title><rect x="78.4" y="1573" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="81.44" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1285" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1221" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1231.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (50,455,000 samples, 0.65%)</title><rect x="574.3" y="1301" width="7.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="577.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1045" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1055.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1157" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="68.74" y="1167.5" ></text>
</g>
<g >
<title>do_idle (851,240 samples, 0.01%)</title><rect x="78.3" y="1525" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="81.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1429" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1439.5" ></text>
</g>
<g >
<title>folio_mapping (51,044,452 samples, 0.66%)</title><rect x="638.8" y="1317" width="7.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="641.77" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (2,879,585 samples, 0.04%)</title><rect x="80.0" y="1461" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="83.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1541" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="277" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="287.5" >std::__..</text>
</g>
<g >
<title>tick_nohz_restart (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1493" width="81.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1070.40" y="1503.5" >tick_nohz..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="53" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1317" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1253" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1263.5" ></text>
</g>
<g >
<title>do_mas_munmap (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1301" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="68.74" y="1311.5" ></text>
</g>
<g >
<title>__schedule (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1445" width="41.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1151.79" y="1455.5" >__s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="933" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1173" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1183.5" >std::__..</text>
</g>
<g >
<title>do_idle (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1477" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="719.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1413" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1423.5" ></text>
</g>
<g >
<title>folio_memcg_lock (63,491,708 samples, 0.82%)</title><rect x="621.2" y="1253" width="9.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="624.24" y="1263.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1221" width="21.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="697.04" y="1231.5" >c..</text>
</g>
<g >
<title>ext4_page_mkwrite (472,786,544 samples, 6.11%)</title><rect x="566.6" y="1333" width="72.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="569.63" y="1343.5" >ext4_pag..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1525" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="581" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="629" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1461" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.97" y="1471.5" ></text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1253" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1445" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1455.5" >std::__..</text>
</g>
<g >
<title>futex_wake (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1397" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="83.94" y="1407.5" ></text>
</g>
<g >
<title>[expr] (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1525" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="67.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1221" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1231.5" ></text>
</g>
<g >
<title>wake_up_q (3,144,008 samples, 0.04%)</title><rect x="80.9" y="1381" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="83.94" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1445" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="719.99" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="997" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1007.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="901" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="911.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,847,009 samples, 0.04%)</title><rect x="78.6" y="741" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="751.5" ></text>
</g>
<g >
<title>__alloc_pages (104,942,485 samples, 1.36%)</title><rect x="518.1" y="1205" width="16.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="521.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1381" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1391.5" >std::__..</text>
</g>
<g >
<title>evict (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1381" width="21.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="697.04" y="1391.5" >e..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (989,675 samples, 0.01%)</title><rect x="717.0" y="1381" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="719.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="229" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="239.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="709" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="453" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="463.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (104,942,485 samples, 1.36%)</title><rect x="518.1" y="1253" width="16.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="521.07" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_select (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1493" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="719.76" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (851,240 samples, 0.01%)</title><rect x="78.3" y="1477" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="81.31" y="1487.5" ></text>
</g>
<g >
<title>filemap_unaccount_folio (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1285" width="21.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="697.04" y="1295.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="693" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="613" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1077" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="213" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="309" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_bulk (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1189" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="68.74" y="1199.5" ></text>
</g>
<g >
<title>__split_vma (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1269" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="68.74" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="501" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="511.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,088,855 samples, 0.08%)</title><rect x="78.6" y="917" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="927.5" ></text>
</g>
<g >
<title>start_secondary (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1557" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="719.76" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1237" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1247.5" ></text>
</g>
<g >
<title>start_secondary (2,828,370,032 samples, 36.57%)</title><rect x="717.2" y="1557" width="431.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="720.24" y="1567.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="949" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="959.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (50,896,885 samples, 0.66%)</title><rect x="471.1" y="1237" width="7.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="474.11" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="165" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1381" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="69.37" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="853" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="863.5" ></text>
</g>
<g >
<title>truncate_inode_folio (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1333" width="21.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="697.04" y="1343.5" >t..</text>
</g>
<g >
<title>__do_softirq (249,993,544 samples, 3.23%)</title><rect x="748.9" y="1397" width="38.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="751.92" y="1407.5" >__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="661" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="671.5" >std::__..</text>
</g>
<g >
<title>hrtimer_interrupt (989,675 samples, 0.01%)</title><rect x="717.0" y="1365" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="719.99" y="1375.5" ></text>
</g>
<g >
<title>set_page_dirty (51,044,452 samples, 0.66%)</title><rect x="638.8" y="1333" width="7.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="641.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1333" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1343.5" ></text>
</g>
<g >
<title>ls (79,154,515 samples, 1.02%)</title><rect x="66.4" y="1589" width="12.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="69.37" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1045" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="213" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="293" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="517" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="527.5" >std::__..</text>
</g>
<g >
<title>rest_init (1,657,629 samples, 0.02%)</title><rect x="717.0" y="1509" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="719.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1141" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1151.5" ></text>
</g>
<g >
<title>rest_init (270,110,236 samples, 3.49%)</title><rect x="1148.8" y="1509" width="41.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1151.79" y="1519.5" >res..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="549" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="559.5" ></text>
</g>
<g >
<title>execute_command_internal (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1333" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="718.59" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1557" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.37" y="1567.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1189" width="55.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="410.93" y="1199.5" >trunc..</text>
</g>
<g >
<title>do_exit (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1509" width="21.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="697.04" y="1519.5" >d..</text>
</g>
<g >
<title>folio_batch_move_lru (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1221" width="7.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="513.34" y="1231.5" ></text>
</g>
<g >
<title>Glob::isIgnored (11,847,788 samples, 0.15%)</title><rect x="78.6" y="1493" width="1.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="81.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="709" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="719.5" >std::__..</text>
</g>
<g >
<title>do_idle (1,481,380 samples, 0.02%)</title><rect x="716.8" y="1525" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="719.76" y="1535.5" ></text>
</g>
<g >
<title>ovl_read_iter (360,267,272 samples, 4.66%)</title><rect x="10.0" y="1493" width="55.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >ovl_r..</text>
</g>
<g >
<title>kmem_cache_alloc (6,468,805 samples, 0.08%)</title><rect x="66.4" y="1349" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="69.37" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="1317" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="1327.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="965" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="975.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (533,402,327 samples, 6.90%)</title><rect x="1067.4" y="1445" width="81.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1070.40" y="1455.5" >_raw_spin..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="405" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="415.5" >std::__..</text>
</g>
<g >
<title>dentry_unlink_inode (363,212,206 samples, 4.70%)</title><rect x="407.9" y="1253" width="55.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="410.93" y="1263.5" >dentr..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="741" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="751.5" >std::__..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (989,675 samples, 0.01%)</title><rect x="717.0" y="1413" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="719.99" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="581" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="591.5" >std::__..</text>
</g>
<g >
<title>set_page_dirty (51,915,351 samples, 0.67%)</title><rect x="344.7" y="1221" width="7.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="347.69" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1221" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="154.31" y="1231.5" ></text>
</g>
<g >
<title>folio_add_lru (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1237" width="7.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="513.34" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="1269" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="1279.5" ></text>
</g>
<g >
<title>__block_write_begin_int (206,539,894 samples, 2.67%)</title><rect x="582.0" y="1301" width="31.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="584.99" y="1311.5" >__..</text>
</g>
<g >
<title>cpuidle_idle_call (1,866,653,798 samples, 24.14%)</title><rect x="717.2" y="1509" width="284.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="720.24" y="1519.5" >cpuidle_idle_call</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1189" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1509" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.74" y="1519.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (51,915,351 samples, 0.67%)</title><rect x="344.7" y="1205" width="7.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="347.69" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,200,787,245 samples, 15.53%)</title><rect x="463.3" y="1477" width="183.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="466.35" y="1487.5" >[libc.so.6]</text>
</g>
<g >
<title>[bash] (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1365" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="718.59" y="1375.5" ></text>
</g>
<g >
<title>parse_and_execute (1,177,068 samples, 0.02%)</title><rect x="715.6" y="1189" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="718.59" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,016,217 samples, 0.04%)</title><rect x="81.4" y="1269" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.42" y="1279.5" ></text>
</g>
<g >
<title>__libc_start_main (5,045,650 samples, 0.07%)</title><rect x="65.0" y="1557" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="67.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,285,901 samples, 0.03%)</title><rect x="151.3" y="181" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="154.31" y="191.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1285" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="68.74" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (455,086,055 samples, 5.88%)</title><rect x="81.9" y="757" width="69.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.88" y="767.5" >std::__..</text>
</g>
<g >
<title>__mod_lruvec_page_state (141,240,115 samples, 1.83%)</title><rect x="694.0" y="1269" width="21.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="697.04" y="1279.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,016,217 samples, 0.04%)</title><rect x="81.4" y="741" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="84.42" y="751.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (50,672,800 samples, 0.66%)</title><rect x="510.3" y="1157" width="7.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="513.34" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (455,086,055 samples, 5.88%)</title><rect x="81.9" y="869" width="69.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.88" y="879.5" >std::__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,968,203 samples, 0.12%)</title><rect x="78.6" y="1365" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.65" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2,847,009 samples, 0.04%)</title><rect x="65.7" y="1381" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="68.74" y="1391.5" ></text>
</g>
</g>
</svg>
