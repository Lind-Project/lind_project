<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1702.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1685" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1685" > </text>
<g id="frames">
<g >
<title>mmput (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1445" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="400.01" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1461" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="403.72" y="1471.5" ></text>
</g>
<g >
<title>_Fork (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1477" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="497.39" y="1487.5" ></text>
</g>
<g >
<title>zap_pte_range (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1333" width="8.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1093.53" y="1343.5" ></text>
</g>
<g >
<title>dget_parent (94,778,487 samples, 0.13%)</title><rect x="75.9" y="1397" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="78.90" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="661" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="671.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (44,789,090 samples, 0.06%)</title><rect x="419.6" y="1509" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="422.62" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_socket (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1349" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1139.28" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="533" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="543.5" ></text>
</g>
<g >
<title>unmap_single_vma (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1381" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="416.60" y="1391.5" ></text>
</g>
<g >
<title>__libc_start_main (1,484,592,234 samples, 2.08%)</title><rect x="1136.3" y="1605" width="24.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1139.28" y="1615.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="565" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51,556,946 samples, 0.07%)</title><rect x="383.3" y="1621" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="386.30" y="1631.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1557" width="2.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1136.76" y="1567.5" ></text>
</g>
<g >
<title>begin_new_exec (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1477" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="416.60" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="789" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="799.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1605" width="14.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1077.48" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (450,618,562 samples, 0.63%)</title><rect x="1082.0" y="149" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1084.97" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1253" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1333" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="965" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1461" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,370,538 samples, 0.02%)</title><rect x="1110.9" y="1621" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1113.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1493" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="949" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="629" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (204,211,527 samples, 0.29%)</title><rect x="1111.1" y="1589" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1114.07" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,381,957 samples, 0.07%)</title><rect x="610.2" y="741" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.17" y="751.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1557" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="497.39" y="1567.5" ></text>
</g>
<g >
<title>do_mmap (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1381" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="403.72" y="1391.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (704,465,788 samples, 0.99%)</title><rect x="170.9" y="1349" width="11.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="173.93" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,138,201,682 samples, 12.83%)</title><rect x="519.7" y="1285" width="151.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="522.75" y="1295.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>fsnotify (5,586,870,561 samples, 7.85%)</title><rect x="120.1" y="1445" width="92.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="123.13" y="1455.5" >fsnotify</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="277" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="287.5" ></text>
</g>
<g >
<title>from_kgid (53,455,364 samples, 0.08%)</title><rect x="347.1" y="1221" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="350.14" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1461" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1349" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,334,114 samples, 0.07%)</title><rect x="689.6" y="1509" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="692.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,278,481,542 samples, 10.22%)</title><rect x="522.3" y="1045" width="120.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1055.5" >std::__detail::..</text>
</g>
<g >
<title>free_unref_page_commit (52,263,723 samples, 0.07%)</title><rect x="86.0" y="1237" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="88.97" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1605" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1615.5" ></text>
</g>
<g >
<title>execute_command_internal (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1349" width="13.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.52" y="1359.5" ></text>
</g>
<g >
<title>unmap_vmas (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1397" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1126.35" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,216,290,154 samples, 14.35%)</title><rect x="516.1" y="1413" width="169.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="519.10" y="1423.5" >std::__detail::_Execu..</text>
</g>
<g >
<title>__x64_sys_execve (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1589" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1121.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1557" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,042,939 samples, 0.14%)</title><rect x="758.1" y="101" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="761.12" y="111.5" ></text>
</g>
<g >
<title>operator new (100,732,184 samples, 0.14%)</title><rect x="862.3" y="85" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="865.33" y="95.5" ></text>
</g>
<g >
<title>malloc (50,386,386 samples, 0.07%)</title><rect x="537.3" y="165" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="540.26" y="175.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1205" width="2.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="91.57" y="1215.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (156,323,185 samples, 0.22%)</title><rect x="41.6" y="1429" width="2.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="44.60" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="293" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="303.5" ></text>
</g>
<g >
<title>__entry_text_start (57,450,741 samples, 0.08%)</title><rect x="692.1" y="1541" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="695.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="261" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="271.5" ></text>
</g>
<g >
<title>start_secondary (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1605" width="8.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1181.64" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="357" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="367.5" ></text>
</g>
<g >
<title>[perf-3932779.map] (98,894,072 samples, 0.14%)</title><rect x="494.3" y="1621" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="497.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="885" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="421" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="431.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="933" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="943.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1541" width="10.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="388.45" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,350,478 samples, 0.07%)</title><rect x="684.6" y="1333" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="687.55" y="1343.5" ></text>
</g>
<g >
<title>__mmput (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1429" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="416.60" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,374,283 samples, 0.07%)</title><rect x="596.8" y="597" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.82" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="661" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (792,390,891 samples, 1.11%)</title><rect x="759.8" y="101" width="13.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1365" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1375.5" ></text>
</g>
<g >
<title>psi_group_change (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1461" width="10.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="388.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1125" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1135.5" ></text>
</g>
<g >
<title>__fsnotify_parent (51,392,720 samples, 0.07%)</title><rect x="25.4" y="1477" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="28.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,553,585 samples, 0.71%)</title><rect x="865.7" y="133" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (39,840,999 samples, 0.06%)</title><rect x="1133.1" y="1605" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.10" y="1615.5" ></text>
</g>
<g >
<title>copy_page_to_iter (415,054,243 samples, 0.58%)</title><rect x="50.2" y="1349" width="6.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="53.21" y="1359.5" ></text>
</g>
<g >
<title>ovl_real_fdget (255,773,548 samples, 0.36%)</title><rect x="40.0" y="1445" width="4.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="42.96" y="1455.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1509" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1126.23" y="1519.5" ></text>
</g>
<g >
<title>release_pages (6,403,845 samples, 0.01%)</title><rect x="1160.9" y="1349" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1163.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="533" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="543.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="917" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="389" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="693" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="703.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1317" width="6.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="88.11" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="581" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="869" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="879.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1541" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="373" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="383.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="389" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="581" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1189" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1199.5" ></text>
</g>
<g >
<title>__cond_resched (50,357,588 samples, 0.07%)</title><rect x="236.1" y="1365" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="239.09" y="1375.5" ></text>
</g>
<g >
<title>__rcu_read_lock (50,287,123 samples, 0.07%)</title><rect x="170.1" y="1333" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="173.10" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="533" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="549" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="869" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="879.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="165" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="175.5" ></text>
</g>
<g >
<title>_dl_catch_exception (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1541" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1136.00" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (52,266,431 samples, 0.07%)</title><rect x="66.5" y="1429" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="69.49" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (117,708,575 samples, 0.17%)</title><rect x="411.2" y="1605" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="414.19" y="1615.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,086,410,922 samples, 1.53%)</title><rect x="44.2" y="1381" width="18.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="47.19" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="853" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="863.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (50,367,730 samples, 0.07%)</title><rect x="278.6" y="1285" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="281.57" y="1295.5" ></text>
</g>
<g >
<title>copy_p4d_range (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1461" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1120.40" y="1471.5" ></text>
</g>
<g >
<title>proc_single_show (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1493" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1114.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="581" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="341" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="351.5" ></text>
</g>
<g >
<title>proactive_compact_node (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1573" width="4.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="417.65" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1317" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1327.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1605" width="7.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="724.37" y="1615.5" ></text>
</g>
<g >
<title>do_filp_open (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1541" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1114.22" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1525" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1163.89" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="485" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1269" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1279.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="341" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="351.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (100,682,626 samples, 0.14%)</title><rect x="237.7" y="1365" width="1.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="240.75" y="1375.5" ></text>
</g>
<g >
<title>m_show (47,886,477 samples, 0.07%)</title><rect x="1123.7" y="1525" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1126.71" y="1535.5" ></text>
</g>
<g >
<title>cfree (50,332,442 samples, 0.07%)</title><rect x="686.2" y="1397" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="689.22" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="149" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="885" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="895.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="917" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,568,097,348 samples, 14.84%)</title><rect x="513.6" y="1461" width="175.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="516.60" y="1471.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="885" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="895.5" ></text>
</g>
<g >
<title>generic_write_end (690,556,594 samples, 0.97%)</title><rect x="1099.4" y="1269" width="11.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1102.35" y="1279.5" ></text>
</g>
<g >
<title>malloc (50,384,094 samples, 0.07%)</title><rect x="653.7" y="1045" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="656.69" y="1055.5" ></text>
</g>
<g >
<title>bprm_execve (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1557" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="400.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="309" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (204,211,527 samples, 0.29%)</title><rect x="1111.1" y="1605" width="3.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1114.07" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1461" width="11.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1102.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,724,546,035 samples, 9.44%)</title><rect x="522.3" y="949" width="111.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="959.5" >std::__detail..</text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="261" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="271.5" ></text>
</g>
<g >
<title>vfs_write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1413" width="11.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1102.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="837" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="847.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>copy_pmd_range (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1445" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1120.40" y="1455.5" ></text>
</g>
<g >
<title>rmqueue (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1205" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="271.59" y="1215.5" ></text>
</g>
<g >
<title>folio_alloc (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1269" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="271.59" y="1279.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1573" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="416.60" y="1583.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1413" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="404.36" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,346,630 samples, 0.07%)</title><rect x="1062.0" y="149" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1064.97" y="159.5" ></text>
</g>
<g >
<title>[ls] (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1541" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="404.36" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="197" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="207.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1589" width="7.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="724.37" y="1599.5" ></text>
</g>
<g >
<title>_copy_to_iter (52,128,231 samples, 0.07%)</title><rect x="50.2" y="1333" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="53.21" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1509" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1519.5" ></text>
</g>
<g >
<title>__slab_free (50,377,568 samples, 0.07%)</title><rect x="720.5" y="1413" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="723.53" y="1423.5" ></text>
</g>
<g >
<title>ext4_release_folio (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1221" width="2.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="91.57" y="1231.5" ></text>
</g>
<g >
<title>search_binary_handler (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1509" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1126.35" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (200,778,912 samples, 0.28%)</title><rect x="81.8" y="1509" width="3.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="84.78" y="1519.5" ></text>
</g>
<g >
<title>futex_wake (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1557" width="8.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1127.90" y="1567.5" ></text>
</g>
<g >
<title>filemap_unaccount_folio (52,260,012 samples, 0.07%)</title><rect x="86.8" y="1269" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="89.84" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="821" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="517" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1535.5" ></text>
</g>
<g >
<title>mas_store_prealloc (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1269" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1136.00" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="453" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="463.5" ></text>
</g>
<g >
<title>do_mas_munmap (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1461" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="399.32" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="213" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="725" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="735.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="901" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="133" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="549" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="405" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1093" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1103.5" ></text>
</g>
<g >
<title>alloc_pages (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1253" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="271.59" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,348,526 samples, 0.07%)</title><rect x="496.1" y="133" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="499.09" y="143.5" ></text>
</g>
<g >
<title>Glob::isIgnored (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1573" width="7.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="724.37" y="1583.5" ></text>
</g>
<g >
<title>buffer_read_wri (22,625,150,326 samples, 31.77%)</title><rect x="10.1" y="1637" width="374.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.07" y="1647.5" >buffer_read_wri</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="917" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="927.5" >std::__detai..</text>
</g>
<g >
<title>mod_objcg_state (201,143,481 samples, 0.28%)</title><rect x="179.3" y="1333" width="3.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="182.27" y="1343.5" ></text>
</g>
<g >
<title>__fsnotify_parent (51,669,689 samples, 0.07%)</title><rect x="70.8" y="1429" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="73.77" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1092.84" y="1519.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1349" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1121.12" y="1359.5" ></text>
</g>
<g >
<title>cfree (50,378,699 samples, 0.07%)</title><rect x="542.3" y="245" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="545.27" y="255.5" ></text>
</g>
<g >
<title>copy_page_range (15,019,738 samples, 0.02%)</title><rect x="494.4" y="1333" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="497.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,585,935,419 samples, 12.06%)</title><rect x="520.6" y="1205" width="142.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="523.58" y="1215.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>[libc.so.6] (150,238,750 samples, 0.21%)</title><rect x="657.0" y="1125" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="660.03" y="1135.5" ></text>
</g>
<g >
<title>touch_atime (362,944,208 samples, 0.51%)</title><rect x="32.2" y="1429" width="6.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="35.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="917" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="927.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (302,011,031 samples, 0.42%)</title><rect x="882.3" y="53" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1029" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1039.5" ></text>
</g>
<g >
<title>begin_new_exec (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1477" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1163.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1509" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="741" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="751.5" ></text>
</g>
<g >
<title>ovl_permission (100,310,098 samples, 0.14%)</title><rect x="700.5" y="1381" width="1.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="703.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1205" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1215.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1221" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1139.28" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector@plt (50,346,797 samples, 0.07%)</title><rect x="677.9" y="1269" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="680.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1093" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1061" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1071.5" ></text>
</g>
<g >
<title>getname (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1541" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1114.35" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (51,263,699 samples, 0.07%)</title><rect x="401.4" y="1589" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.36" y="1599.5" ></text>
</g>
<g >
<title>pipe_write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1413" width="7.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="466.80" y="1423.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (300,802,225 samples, 0.42%)</title><rect x="274.4" y="1317" width="5.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="277.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="293" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="303.5" >std::__detai..</text>
</g>
<g >
<title>__radix_tree_lookup (50,326,997 samples, 0.07%)</title><rect x="246.1" y="1301" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="249.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="741" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="661" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1445" width="11.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.25" y="1455.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (4,541,014,814 samples, 6.38%)</title><rect x="284.4" y="1301" width="75.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="287.39" y="1311.5" >ext4_dir..</text>
</g>
<g >
<title>vfs_write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1429" width="7.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="466.80" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (154,212,817 samples, 0.22%)</title><rect x="397.9" y="1605" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="400.95" y="1615.5" ></text>
</g>
<g >
<title>map_id_up (49,571,825 samples, 0.07%)</title><rect x="349.7" y="1205" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="352.68" y="1215.5" ></text>
</g>
<g >
<title>cfree (2,269,776,320 samples, 3.19%)</title><rect x="772.9" y="101" width="37.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="775.91" y="111.5" >cfree</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1269" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="981" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="991.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="965" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="469" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="479.5" >std::__detai..</text>
</g>
<g >
<title>fsnotify_destroy_event (150,642,744 samples, 0.21%)</title><rect x="718.9" y="1477" width="2.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="721.87" y="1487.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1445" width="10.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1170.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="389" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,289,680,558 samples, 8.83%)</title><rect x="759.8" y="149" width="104.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="159.5" >std::__detai..</text>
</g>
<g >
<title>command_substitute (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1349" width="10.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1152.98" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="421" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="431.5" ></text>
</g>
<g >
<title>consume_stock (50,371,428 samples, 0.07%)</title><rect x="267.8" y="1205" width="0.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="270.75" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (792,390,891 samples, 1.11%)</title><rect x="759.8" y="117" width="13.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="127.5" ></text>
</g>
<g >
<title>seq_read (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1509" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1121.00" y="1519.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (100,692,699 samples, 0.14%)</title><rect x="245.3" y="1333" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="248.25" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1429" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="533" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="543.5" >std::__detai..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (150,209,694 samples, 0.21%)</title><rect x="716.4" y="1461" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="719.38" y="1471.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1541" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1126.35" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (8,409,210 samples, 0.01%)</title><rect x="1124.6" y="1589" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1127.55" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="725" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1413" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1423.5" ></text>
</g>
<g >
<title>new_inode_pseudo (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1285" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1139.28" y="1295.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1525" width="10.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="388.45" y="1535.5" ></text>
</g>
<g >
<title>parse_and_execute (1,450,427,703 samples, 2.04%)</title><rect x="1136.4" y="1541" width="24.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1139.38" y="1551.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1189" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1199.5" >std::__detai..</text>
</g>
<g >
<title>load_elf_binary (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1493" width="1.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="416.60" y="1503.5" ></text>
</g>
<g >
<title>mmput (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1445" width="8.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1093.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="357" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1269" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1279.5" ></text>
</g>
<g >
<title>dup_mmap (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1493" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="414.19" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1445" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1455.5" ></text>
</g>
<g >
<title>__mmput (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1429" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="400.01" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="341" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="351.5" ></text>
</g>
<g >
<title>task_seccomp (59,143,935 samples, 0.08%)</title><rect x="1112.3" y="1461" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1115.26" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="997" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1007.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>filemap_read (982,691,616 samples, 1.38%)</title><rect x="45.9" y="1365" width="16.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="48.91" y="1375.5" ></text>
</g>
<g >
<title>copy_pte_range (15,019,738 samples, 0.02%)</title><rect x="494.4" y="1285" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="497.39" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="933" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="943.5" >std::__detai..</text>
</g>
<g >
<title>__rcu_read_lock (6,799,010 samples, 0.01%)</title><rect x="414.5" y="1301" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="417.52" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1525" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="741" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="751.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1349" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1359.5" ></text>
</g>
<g >
<title>show_mountinfo (47,886,477 samples, 0.07%)</title><rect x="1123.7" y="1509" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1126.71" y="1519.5" ></text>
</g>
<g >
<title>operator new (50,366,175 samples, 0.07%)</title><rect x="611.8" y="757" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="614.84" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="357" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="367.5" >std::__detai..</text>
</g>
<g >
<title>__mem_cgroup_charge (100,578,598 samples, 0.14%)</title><rect x="266.9" y="1253" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="269.92" y="1263.5" ></text>
</g>
<g >
<title>inotify_merge (50,347,230 samples, 0.07%)</title><rect x="211.0" y="1381" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="214.04" y="1391.5" ></text>
</g>
<g >
<title>refill_obj_stock (100,685,435 samples, 0.14%)</title><rect x="203.5" y="1301" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="206.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1413" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1423.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>cpuidle_enter_state (6,172,131 samples, 0.01%)</title><rect x="1120.9" y="1477" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1123.91" y="1487.5" ></text>
</g>
<g >
<title>mas_destroy (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1317" width="0.2" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="403.72" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="837" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="847.5" ></text>
</g>
<g >
<title>lookup_bh_lru (100,206,638 samples, 0.14%)</title><rect x="357.1" y="1189" width="1.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="360.15" y="1199.5" ></text>
</g>
<g >
<title>__filemap_add_folio (150,953,377 samples, 0.21%)</title><rect x="266.1" y="1269" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="269.09" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1381" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1391.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (52,260,012 samples, 0.07%)</title><rect x="86.8" y="1205" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="89.84" y="1215.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1493" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1122.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="933" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="943.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,345,696 samples, 0.07%)</title><rect x="661.2" y="1125" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="664.19" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1205" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="229" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="277" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="287.5" ></text>
</g>
<g >
<title>vsnprintf (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1429" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1114.76" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1525" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="997" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1007.5" ></text>
</g>
<g >
<title>copy_process (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1525" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1120.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="853" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1397" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1407.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,383,375 samples, 0.07%)</title><rect x="496.9" y="149" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,605,327 samples, 0.02%)</title><rect x="1089.8" y="1605" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1092.75" y="1615.5" ></text>
</g>
<g >
<title>cfree (150,238,750 samples, 0.21%)</title><rect x="657.0" y="1141" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="660.03" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1605" width="10.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1170.84" y="1615.5" ></text>
</g>
<g >
<title>ksys_write (16,571,754,253 samples, 23.27%)</title><rect x="102.0" y="1493" width="274.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="105.02" y="1503.5" >ksys_write</text>
</g>
<g >
<title>ovl_file_accessed.part.0 (362,944,208 samples, 0.51%)</title><rect x="32.2" y="1445" width="6.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="35.22" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1413" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,334,801 samples, 0.07%)</title><rect x="668.7" y="1205" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="671.69" y="1215.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (151,003,609 samples, 0.21%)</title><rect x="249.4" y="1349" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="252.41" y="1359.5" ></text>
</g>
<g >
<title>__alloc_pages (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1397" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="414.19" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="645" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="655.5" ></text>
</g>
<g >
<title>vfs_read (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1541" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1114.76" y="1551.5" ></text>
</g>
<g >
<title>ksys_read (3,506,257,817 samples, 4.92%)</title><rect x="22.8" y="1493" width="58.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="25.81" y="1503.5" >ksys_r..</text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1,861,619,305 samples, 2.61%)</title><rect x="319.7" y="1253" width="30.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="322.66" y="1263.5" >ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="709" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="341" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="351.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>vfs_iter_read (1,397,593,871 samples, 1.96%)</title><rect x="44.2" y="1445" width="23.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="47.19" y="1455.5" >v..</text>
</g>
<g >
<title>[libc.so.6] (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1589" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (100,712,351 samples, 0.14%)</title><rect x="135.9" y="1429" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="138.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1109" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="581" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="591.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>InotifyBackend::handleEvents (13,192,628,748 samples, 18.53%)</title><rect x="502.8" y="1605" width="218.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="505.75" y="1615.5" >InotifyBackend::handleEvents</text>
</g>
<g >
<title>[unknown] (35,825,821,587 samples, 50.31%)</title><rect x="496.1" y="1621" width="593.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="499.09" y="1631.5" >[unknown]</text>
</g>
<g >
<title>[libc.so.6] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="549" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1445" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1136.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1429" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1439.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (308,418,112 samples, 0.43%)</title><rect x="57.1" y="1333" width="5.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="60.09" y="1343.5" ></text>
</g>
<g >
<title>rest_init (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1557" width="2.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1190.38" y="1567.5" ></text>
</g>
<g >
<title>__switch_to (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1525" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1135.87" y="1535.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (50,373,560 samples, 0.07%)</title><rect x="256.9" y="1285" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="259.91" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="181" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,083,141,448 samples, 11.35%)</title><rect x="521.4" y="1141" width="134.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="524.42" y="1151.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1301" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1311.5" ></text>
</g>
<g >
<title>ovl_path_realdata (99,450,363 samples, 0.14%)</title><rect x="40.0" y="1429" width="1.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="42.96" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (1,005,158,410 samples, 1.41%)</title><rect x="190.2" y="1381" width="16.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="193.22" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_clone (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1573" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1120.40" y="1583.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (50,377,568 samples, 0.07%)</title><rect x="720.5" y="1397" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="723.53" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="901" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="911.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,759,638 samples, 0.14%)</title><rect x="635.4" y="933" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="638.35" y="943.5" ></text>
</g>
<g >
<title>command_substitute (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1253" width="13.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1139.52" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="949" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="959.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineOwnProperty (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1557" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="498.27" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1253" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1263.5" >std::__detai..</text>
</g>
<g >
<title>schedule_hrtimeout_range (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1525" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="414.93" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1173" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1183.5" ></text>
</g>
<g >
<title>vfs_open (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1493" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1114.22" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1301" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="403.72" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (510,247,075 samples, 0.72%)</title><rect x="485.8" y="1589" width="8.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="488.83" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="597" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="165" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="645" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_free (151,029,900 samples, 0.21%)</title><rect x="303.8" y="1253" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="306.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1205" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="981" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="991.5" ></text>
</g>
<g >
<title>poll_idle (112,946,378 samples, 0.16%)</title><rect x="420.4" y="1509" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="423.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1125" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1013" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_clone (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1573" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="414.19" y="1583.5" ></text>
</g>
<g >
<title>[bash] (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1397" width="10.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1152.98" y="1407.5" ></text>
</g>
<g >
<title>try_to_free_buffers (104,549,824 samples, 0.15%)</title><rect x="89.4" y="1189" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="92.44" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1285" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1295.5" ></text>
</g>
<g >
<title>exec_mmap (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1461" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1163.89" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,346,630 samples, 0.07%)</title><rect x="1062.0" y="101" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1064.97" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,596 samples, 0.14%)</title><rect x="864.0" y="133" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.00" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1493" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1126.35" y="1503.5" ></text>
</g>
<g >
<title>malloc (49,960,560 samples, 0.07%)</title><rect x="559.3" y="357" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="562.28" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="293" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,593,548,616 samples, 13.47%)</title><rect x="519.7" y="1301" width="159.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="522.75" y="1311.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="357" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,129,446 samples, 0.21%)</title><rect x="499.4" y="165" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="502.43" y="175.5" ></text>
</g>
<g >
<title>rest_init (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1557" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="425.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="373" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (251,829,704 samples, 0.35%)</title><rect x="887.3" y="53" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="890.32" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="725" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="735.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1605" width="7.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="466.80" y="1615.5" ></text>
</g>
<g >
<title>exec_binprm (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1525" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1121.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1429" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1439.5" ></text>
</g>
<g >
<title>malloc (99,796,556 samples, 0.14%)</title><rect x="581.8" y="469" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="584.82" y="479.5" ></text>
</g>
<g >
<title>write (52,320,337 samples, 0.07%)</title><rect x="10.1" y="1605" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.07" y="1615.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (151,043,783 samples, 0.21%)</title><rect x="133.4" y="1429" width="2.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="136.42" y="1439.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (52,263,723 samples, 0.07%)</title><rect x="86.0" y="1221" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="88.97" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="405" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="415.5" ></text>
</g>
<g >
<title>start_secondary (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1605" width="10.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="388.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="677" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,449,746,499 samples, 6.25%)</title><rect x="526.4" y="677" width="73.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="529.42" y="687.5" >std::__d..</text>
</g>
<g >
<title>grep (87,204,363 samples, 0.12%)</title><rect x="396.5" y="1637" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="399.50" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="677" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1509" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1519.5" >std::__detai..</text>
</g>
<g >
<title>__rcu_read_unlock (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1381" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="414.19" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (1,006,114,095 samples, 1.41%)</title><rect x="693.8" y="1509" width="16.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="696.83" y="1519.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1189" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1139.28" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,053,391,843 samples, 7.10%)</title><rect x="525.6" y="725" width="83.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="735.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="645" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1317" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1327.5" ></text>
</g>
<g >
<title>string_escape_mem (22,768,049 samples, 0.03%)</title><rect x="1123.7" y="1461" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1126.71" y="1471.5" ></text>
</g>
<g >
<title>__fdget_pos (52,265,107 samples, 0.07%)</title><rect x="21.9" y="1493" width="0.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="24.95" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="517" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="357" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1493" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1503.5" >std::__detai..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,581,226 samples, 0.04%)</title><rect x="400.9" y="1605" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="403.91" y="1615.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (50,375,570 samples, 0.07%)</title><rect x="257.7" y="1333" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="260.74" y="1343.5" ></text>
</g>
<g >
<title>do_task_stat (37,356,275 samples, 0.05%)</title><rect x="1113.2" y="1461" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1116.24" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1573" width="10.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.84" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,278,481,542 samples, 10.22%)</title><rect x="522.3" y="1061" width="120.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="525.25" y="1071.5" >std::__detail::..</text>
</g>
<g >
<title>cpuidle_enter (26,639,953 samples, 0.04%)</title><rect x="422.3" y="1493" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="425.31" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="309" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="319.5" ></text>
</g>
<g >
<title>uv__async_io (9,682,184 samples, 0.01%)</title><rect x="1089.5" y="1589" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1092.50" y="1599.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1413" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1136.00" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="373" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="383.5" ></text>
</g>
<g >
<title>mmput (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1445" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1121.12" y="1455.5" ></text>
</g>
<g >
<title>proc_root_readdir (9,225,757 samples, 0.01%)</title><rect x="1111.1" y="1541" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1114.07" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1365" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="917" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1269" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (301,709,660 samples, 0.42%)</title><rect x="550.9" y="325" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="553.92" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1557" width="7.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="724.37" y="1567.5" ></text>
</g>
<g >
<title>iput (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1365" width="6.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="88.11" y="1375.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1573" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="498.27" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (201,425,111 samples, 0.28%)</title><rect x="571.8" y="485" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="574.77" y="495.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (100,715,572 samples, 0.14%)</title><rect x="708.8" y="1445" width="1.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="711.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,133,441 samples, 0.07%)</title><rect x="1073.6" y="69" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1076.65" y="79.5" ></text>
</g>
<g >
<title>malloc (200,279,906 samples, 0.28%)</title><rect x="741.4" y="1605" width="3.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="744.44" y="1615.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (99,996,271 samples, 0.14%)</title><rect x="290.2" y="1253" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="293.23" y="1263.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1317" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="497.64" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,845,461,409 samples, 5.40%)</title><rect x="526.4" y="645" width="63.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="529.42" y="655.5" >std::__..</text>
</g>
<g >
<title>do_open (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1509" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1114.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="213" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1477" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="437" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="447.5" ></text>
</g>
<g >
<title>__mmput (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1429" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1121.12" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="501" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1573" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1583.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (362,926,012 samples, 0.51%)</title><rect x="51.1" y="1333" width="6.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="54.07" y="1343.5" ></text>
</g>
<g >
<title>user_path_at_empty (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1557" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1126.23" y="1567.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1557" width="10.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="388.45" y="1567.5" ></text>
</g>
<g >
<title>ksys_read (603,427,637 samples, 0.85%)</title><rect x="711.4" y="1525" width="10.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="714.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1381" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="565" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (50,383,375 samples, 0.07%)</title><rect x="496.9" y="133" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="499.93" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="613" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,467,923,792 samples, 14.70%)</title><rect x="515.3" y="1445" width="173.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="518.26" y="1455.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>kmem_cache_free (50,330,610 samples, 0.07%)</title><rect x="311.3" y="1269" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="314.34" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,795,192,255 samples, 5.33%)</title><rect x="527.3" y="597" width="62.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="530.26" y="607.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,371,917 samples, 0.07%)</title><rect x="1088.6" y="101" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1091.61" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1541" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1551.5" ></text>
</g>
<g >
<title>ovl_dentry_upper (100,480,226 samples, 0.14%)</title><rect x="240.2" y="1317" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="243.25" y="1327.5" ></text>
</g>
<g >
<title>expr (17,548,124 samples, 0.02%)</title><rect x="396.2" y="1637" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="399.21" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1189" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,366,175 samples, 0.07%)</title><rect x="611.8" y="725" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="614.84" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1077" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="293" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="303.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1269" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1141" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1151.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>unmap_page_range (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1365" width="8.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1093.53" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="261" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="677" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1205" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,532,924 samples, 0.14%)</title><rect x="566.8" y="437" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.77" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="901" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1301" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (52,320,337 samples, 0.07%)</title><rect x="10.1" y="1621" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.07" y="1631.5" ></text>
</g>
<g >
<title>__getblk_gfp (100,206,638 samples, 0.14%)</title><rect x="357.1" y="1221" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="360.15" y="1231.5" ></text>
</g>
<g >
<title>vfs_iter_write (8,430,431,153 samples, 11.84%)</title><rect x="231.1" y="1445" width="139.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="234.09" y="1455.5" >vfs_iter_write</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1381" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1139.28" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="549" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="197" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,383,375 samples, 0.07%)</title><rect x="496.9" y="165" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,596 samples, 0.14%)</title><rect x="864.0" y="149" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.00" y="159.5" ></text>
</g>
<g >
<title>vfs_statx (804,649,802 samples, 1.13%)</title><rect x="697.2" y="1461" width="13.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="700.17" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1205" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1215.5" >std::__detai..</text>
</g>
<g >
<title>copy_p4d_range (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1461" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="414.19" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1285" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1295.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (100,312,385 samples, 0.14%)</title><rect x="704.7" y="1365" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="707.67" y="1375.5" ></text>
</g>
<g >
<title>docker (677,047,268 samples, 0.95%)</title><rect x="385.0" y="1637" width="11.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="387.99" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1413" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1423.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (355,721,223 samples, 0.50%)</title><rect x="721.4" y="181" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (33,274,135 samples, 0.05%)</title><rect x="1113.9" y="1445" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1116.90" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1519.5" ></text>
</g>
<g >
<title>__fget_light (50,312,241 samples, 0.07%)</title><rect x="711.4" y="1509" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="714.37" y="1519.5" ></text>
</g>
<g >
<title>[bash] (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1429" width="10.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1152.98" y="1439.5" ></text>
</g>
<g >
<title>mnt_user_ns (50,380,479 samples, 0.07%)</title><rect x="226.1" y="1429" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="229.08" y="1439.5" ></text>
</g>
<g >
<title>do_dentry_open (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1477" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1114.22" y="1487.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (50,374,084 samples, 0.07%)</title><rect x="209.4" y="1349" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="212.37" y="1359.5" ></text>
</g>
<g >
<title>exit_mmap (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1413" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1126.35" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (99,787,462 samples, 0.14%)</title><rect x="808.9" y="69" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="811.87" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="405" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="415.5" ></text>
</g>
<g >
<title>ovl_real_fdget (50,377,305 samples, 0.07%)</title><rect x="229.4" y="1445" width="0.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="232.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,364,385 samples, 0.07%)</title><rect x="627.0" y="885" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="630.03" y="895.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1349" width="8.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1093.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="469" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="479.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="837" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="847.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1173" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1183.5" ></text>
</g>
<g >
<title>uv_cond_wait (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1573" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1092.84" y="1583.5" ></text>
</g>
<g >
<title>do_group_exit (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1509" width="10.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1170.84" y="1519.5" ></text>
</g>
<g >
<title>find_busiest_group (13,595,464 samples, 0.02%)</title><rect x="1119.9" y="1381" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1122.87" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock (100,677,194 samples, 0.14%)</title><rect x="698.0" y="1365" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="701.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="773" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="133" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1477" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1487.5" ></text>
</g>
<g >
<title>down_write (50,359,827 samples, 0.07%)</title><rect x="233.6" y="1381" width="0.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="236.59" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1333" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1343.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull_width (59,143,935 samples, 0.08%)</title><rect x="1112.3" y="1429" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1115.26" y="1439.5" ></text>
</g>
<g >
<title>[bash] (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1333" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.52" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,385,088 samples, 0.07%)</title><rect x="662.0" y="1141" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="665.03" y="1151.5" ></text>
</g>
<g >
<title>ksys_read (52,214,060 samples, 0.07%)</title><rect x="1123.6" y="1573" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1126.64" y="1583.5" ></text>
</g>
<g >
<title>Glob::isIgnored (11,122,121,992 samples, 15.62%)</title><rect x="506.1" y="1541" width="184.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="509.09" y="1551.5" >Glob::isIgnored</text>
</g>
<g >
<title>Builtins_LoadIC (456,233,649 samples, 0.64%)</title><rect x="471.1" y="1605" width="7.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="474.15" y="1615.5" ></text>
</g>
<g >
<title>malloc (101,556,896 samples, 0.14%)</title><rect x="510.3" y="1493" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="513.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="645" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="805" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="815.5" ></text>
</g>
<g >
<title>operator new (100,742,383 samples, 0.14%)</title><rect x="674.5" y="1269" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="677.51" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1045" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1055.5" ></text>
</g>
<g >
<title>mas_push_data (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1237" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="497.64" y="1247.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (50,386,491 samples, 0.07%)</title><rect x="450.3" y="1605" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="453.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="757" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="767.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (150,890,204 samples, 0.21%)</title><rect x="871.5" y="37" width="2.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="874.50" y="47.5" ></text>
</g>
<g >
<title>execute_command (1,444,999,997 samples, 2.03%)</title><rect x="1136.5" y="1493" width="23.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1139.47" y="1503.5" >e..</text>
</g>
<g >
<title>security_inode_getattr (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1429" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="404.36" y="1439.5" ></text>
</g>
<g >
<title>start_kernel (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1589" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1123.91" y="1599.5" ></text>
</g>
<g >
<title>exec_mmap (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1461" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="400.01" y="1471.5" ></text>
</g>
<g >
<title>unmap_and_move (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1525" width="4.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="417.65" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="469" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="479.5" ></text>
</g>
<g >
<title>proc_fill_cache (9,225,757 samples, 0.01%)</title><rect x="1111.1" y="1509" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1114.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="533" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="709" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="719.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="277" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="287.5" >std::__detai..</text>
</g>
<g >
<title>dput (52,013,482 samples, 0.07%)</title><rect x="77.5" y="1397" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="80.47" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="885" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="895.5" ></text>
</g>
<g >
<title>vfs_read (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1541" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1121.00" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1317" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,715,887 samples, 0.01%)</title><rect x="1160.4" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1237" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1247.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1509" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="414.93" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,585,935,419 samples, 12.06%)</title><rect x="520.6" y="1221" width="142.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="523.58" y="1231.5" >std::__detail::_Ex..</text>
</g>
<g >
<title>cpuidle_enter_state (158,439,417 samples, 0.22%)</title><rect x="419.6" y="1525" width="2.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="422.61" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="725" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="837" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="821" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="831.5" >std::__detai..</text>
</g>
<g >
<title>operator new (50,364,458 samples, 0.07%)</title><rect x="654.5" y="1061" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="657.53" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (452,442,498 samples, 0.64%)</title><rect x="655.4" y="1157" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="658.36" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (553,840,735 samples, 0.78%)</title><rect x="882.3" y="69" width="9.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="757" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="597" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1509" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1122.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1093" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1381" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1477" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1122.87" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="949" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="959.5" >std::__detai..</text>
</g>
<g >
<title>Glob::isIgnored (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1557" width="5.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="499.93" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="933" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1013" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1023.5" ></text>
</g>
<g >
<title>iput (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1477" width="6.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="88.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,346,630 samples, 0.07%)</title><rect x="1062.0" y="85" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1064.97" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="373" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="383.5" ></text>
</g>
<g >
<title>__mmput (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1429" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1126.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="325" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (9,225,757 samples, 0.01%)</title><rect x="1111.1" y="1573" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1114.07" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1045" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1055.5" >std::__detai..</text>
</g>
<g >
<title>wp_page_copy (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1125" width="10.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1153.03" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="165" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="661" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1125" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1445" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1573" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="400.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="709" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="789" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="799.5" ></text>
</g>
<g >
<title>do_user_addr_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1205" width="10.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1153.03" y="1215.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (50,354,105 samples, 0.07%)</title><rect x="313.8" y="1269" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="316.84" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="165" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="175.5" ></text>
</g>
<g >
<title>schedule_idle (10,367,463 samples, 0.01%)</title><rect x="1120.7" y="1557" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1123.74" y="1567.5" ></text>
</g>
<g >
<title>exit_mmap (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1413" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1163.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1589" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1599.5" ></text>
</g>
<g >
<title>do_idle (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1525" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1123.91" y="1535.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (100,629,784 samples, 0.14%)</title><rect x="256.1" y="1301" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="259.08" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (151,090,994 samples, 0.21%)</title><rect x="535.6" y="197" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="538.59" y="207.5" ></text>
</g>
<g >
<title>malloc (604,213,362 samples, 0.85%)</title><rect x="852.3" y="69" width="10.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="855.32" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1109" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1119.5" ></text>
</g>
<g >
<title>copy_pmd_range (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1445" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="414.19" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (50,367,303 samples, 0.07%)</title><rect x="382.5" y="1541" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="385.46" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,053,391,843 samples, 7.10%)</title><rect x="525.6" y="741" width="83.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="528.59" y="751.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,026,655,425 samples, 9.87%)</title><rect x="522.3" y="1013" width="116.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1023.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="853" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="863.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="373" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="383.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1189" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1141" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1151.5" ></text>
</g>
<g >
<title>malloc@plt (50,362,395 samples, 0.07%)</title><rect x="589.3" y="533" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="592.31" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1573" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1583.5" ></text>
</g>
<g >
<title>exit_mmap (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1413" width="0.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="400.01" y="1423.5" ></text>
</g>
<g >
<title>copy_process (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1525" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="414.19" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (26,639,953 samples, 0.04%)</title><rect x="422.3" y="1477" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="425.31" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1077" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,372,026 samples, 0.07%)</title><rect x="1066.1" y="37" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1069.15" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="965" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="997" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="517" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,409,543 samples, 0.03%)</title><rect x="1160.5" y="1413" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.53" y="1423.5" ></text>
</g>
<g >
<title>malloc (50,357,067 samples, 0.07%)</title><rect x="631.2" y="869" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="634.18" y="879.5" ></text>
</g>
<g >
<title>worker (11,669,984 samples, 0.02%)</title><rect x="1089.8" y="1589" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1092.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (355,721,223 samples, 0.50%)</title><rect x="721.4" y="165" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="724.37" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="277" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="287.5" ></text>
</g>
<g >
<title>__srcu_read_lock (50,359,611 samples, 0.07%)</title><rect x="132.6" y="1429" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="135.58" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter (6,172,131 samples, 0.01%)</title><rect x="1120.9" y="1493" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1123.91" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,380,260 samples, 0.07%)</title><rect x="642.0" y="1013" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="645.03" y="1023.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (510,247,075 samples, 0.72%)</title><rect x="485.8" y="1605" width="8.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="488.83" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="661" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,008,168 samples, 0.35%)</title><rect x="1062.8" y="101" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="293" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="501" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="511.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="405" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="415.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="709" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1493" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1503.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,384,388,861 samples, 3.35%)</title><rect x="529.8" y="517" width="39.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="532.76" y="527.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="501" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_read (52,214,060 samples, 0.07%)</title><rect x="1123.6" y="1589" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1126.64" y="1599.5" ></text>
</g>
<g >
<title>ext4_inode_csum (100,648,503 samples, 0.14%)</title><rect x="330.5" y="1221" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="333.48" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector@plt (100,727,842 samples, 0.14%)</title><rect x="1059.5" y="69" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1062.47" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,347,542 samples, 0.07%)</title><rect x="632.0" y="885" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="635.02" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="597" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1589" width="10.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1170.84" y="1599.5" ></text>
</g>
<g >
<title>fault_in_readable (100,601,236 samples, 0.14%)</title><rect x="364.1" y="1349" width="1.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="367.12" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1557" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="405" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="261" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,026,655,425 samples, 9.87%)</title><rect x="522.3" y="981" width="116.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="991.5" >std::__detail:..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (193,602,200 samples, 0.27%)</title><rect x="419.6" y="1621" width="3.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="422.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1237" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1247.5" ></text>
</g>
<g >
<title>setlocale (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1557" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="403.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="533" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="543.5" ></text>
</g>
<g >
<title>exec_mmap (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1461" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1126.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,354,051 samples, 0.07%)</title><rect x="728.9" y="117" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,278,481,542 samples, 10.22%)</title><rect x="522.3" y="1077" width="120.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1087.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,841,712,790 samples, 15.23%)</title><rect x="882.3" y="117" width="179.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="127.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>execute_command_internal (812,995,093 samples, 1.14%)</title><rect x="1136.5" y="1381" width="13.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.47" y="1391.5" ></text>
</g>
<g >
<title>start_kernel (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1589" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="425.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1445" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,385,971 samples, 0.07%)</title><rect x="501.9" y="181" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="504.92" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (200,508,171 samples, 0.28%)</title><rect x="1082.0" y="117" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1084.97" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,045,742 samples, 0.07%)</title><rect x="726.4" y="149" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.43" y="159.5" ></text>
</g>
<g >
<title>parse_and_execute (626,723,070 samples, 0.88%)</title><rect x="1150.0" y="1333" width="10.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1153.03" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1541" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1163.89" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,333,393 samples, 0.07%)</title><rect x="1072.8" y="69" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1075.81" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1349" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1359.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>delete_from_page_cache_batch (104,534,325 samples, 0.15%)</title><rect x="86.8" y="1285" width="1.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="89.84" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1551.5" ></text>
</g>
<g >
<title>start_kernel (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1589" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,384,388,861 samples, 3.35%)</title><rect x="529.8" y="469" width="39.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="532.76" y="479.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (452,445,049 samples, 0.64%)</title><rect x="1074.5" y="117" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="127.5" ></text>
</g>
<g >
<title>[bash] (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1269" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.52" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (158,439,417 samples, 0.22%)</title><rect x="419.6" y="1541" width="2.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="422.61" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="917" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1365" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79,995,761 samples, 0.11%)</title><rect x="1123.2" y="1621" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1126.23" y="1631.5" ></text>
</g>
<g >
<title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1557" width="7.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="466.80" y="1567.5" ></text>
</g>
<g >
<title>_compound_head (17,086,006 samples, 0.02%)</title><rect x="1117.7" y="1413" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1120.72" y="1423.5" ></text>
</g>
<g >
<title>record__write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1525" width="11.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1102.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="517" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1365" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1375.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (6,403,845 samples, 0.01%)</title><rect x="1160.9" y="1381" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1163.89" y="1391.5" ></text>
</g>
<g >
<title>mmput (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1445" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="416.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,573,341,405 samples, 9.23%)</title><rect x="524.8" y="917" width="108.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="527.76" y="927.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1173" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1397" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1407.5" ></text>
</g>
<g >
<title>cpuset_task_status_allowed (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1461" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1114.76" y="1471.5" ></text>
</g>
<g >
<title>free@plt (201,439,820 samples, 0.28%)</title><rect x="1014.4" y="69" width="3.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1017.44" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="629" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,289,680,558 samples, 8.83%)</title><rect x="759.8" y="165" width="104.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="175.5" >std::__detai..</text>
</g>
<g >
<title>node::StreamBase::WriteBuffer (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1573" width="7.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="466.80" y="1583.5" ></text>
</g>
<g >
<title>__libc_start_main (51,263,699 samples, 0.07%)</title><rect x="401.4" y="1605" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="404.36" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="949" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="853" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1349" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="661" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,450,491 samples, 0.14%)</title><rect x="575.9" y="485" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="578.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,445,049 samples, 0.64%)</title><rect x="1074.5" y="149" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1589" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1599.5" ></text>
</g>
<g >
<title>unmap_vmas (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1397" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="400.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="821" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="693" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1093" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1487.5" ></text>
</g>
<g >
<title>schedule (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1493" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="414.93" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,596 samples, 0.14%)</title><rect x="864.0" y="101" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.00" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (49,967,202 samples, 0.07%)</title><rect x="546.8" y="213" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="549.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1237" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1157" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1167.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>cfree (50,379,358 samples, 0.07%)</title><rect x="536.4" y="181" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="539.43" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1493" width="7.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="466.80" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,340,217 samples, 0.07%)</title><rect x="558.4" y="357" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="561.45" y="367.5" ></text>
</g>
<g >
<title>operator new (50,361,624 samples, 0.07%)</title><rect x="575.1" y="501" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="578.11" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="453" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="463.5" ></text>
</g>
<g >
<title>ovl_override_creds (103,894,650 samples, 0.15%)</title><rect x="38.2" y="1445" width="1.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="41.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="565" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,697,240 samples, 0.14%)</title><rect x="621.8" y="821" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="624.85" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="981" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="991.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1045" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1055.5" ></text>
</g>
<g >
<title>malloc (100,042,939 samples, 0.14%)</title><rect x="758.1" y="69" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="761.12" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="709" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="719.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="309" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="319.5" ></text>
</g>
<g >
<title>unmap_vmas (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1397" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="416.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1461" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,862,580,479 samples, 5.42%)</title><rect x="21.1" y="1525" width="64.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.10" y="1535.5" >do_sysc..</text>
</g>
<g >
<title>fsnotify_insert_event (251,302,808 samples, 0.35%)</title><rect x="206.9" y="1381" width="4.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="209.87" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,494,972,683 samples, 10.53%)</title><rect x="758.1" y="1589" width="124.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1599.5" >std::__detail::..</text>
</g>
<g >
<title>bprm_execve (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1557" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1163.89" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,075,317,768 samples, 23.98%)</title><rect x="99.5" y="1541" width="283.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="102.51" y="1551.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__libc_fork (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1493" width="0.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="497.39" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1157" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="773" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="783.5" ></text>
</g>
<g >
<title>cfree (100,735,822 samples, 0.14%)</title><rect x="604.3" y="693" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="607.33" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="693" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="821" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,032,188,286 samples, 2.85%)</title><rect x="529.8" y="453" width="33.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="532.76" y="463.5" >st..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1621" width="10.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="388.45" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,588,393 samples, 0.14%)</title><rect x="687.1" y="1397" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="690.06" y="1407.5" ></text>
</g>
<g >
<title>lru_add_fn (52,051,282 samples, 0.07%)</title><rect x="414.7" y="1461" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="417.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="149" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (403,396,909 samples, 0.57%)</title><rect x="556.8" y="389" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="559.75" y="399.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (685,322,543 samples, 0.96%)</title><rect x="1178.6" y="1621" width="11.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1181.64" y="1631.5" ></text>
</g>
<g >
<title>unmap_page_range (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1365" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1121.12" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="805" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="815.5" ></text>
</g>
<g >
<title>do_idle (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1525" width="2.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.38" y="1535.5" ></text>
</g>
<g >
<title>file_modified_flags (150,834,499 samples, 0.21%)</title><rect x="239.4" y="1349" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="242.41" y="1359.5" ></text>
</g>
<g >
<title>block_invalidate_folio (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1253" width="2.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="91.57" y="1263.5" ></text>
</g>
<g >
<title>charge_memcg (100,578,598 samples, 0.14%)</title><rect x="266.9" y="1237" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="269.92" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="613" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="623.5" ></text>
</g>
<g >
<title>record__pushfn (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1541" width="11.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1102.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="229" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="239.5" ></text>
</g>
<g >
<title>revert_creds (151,061,641 samples, 0.21%)</title><rect x="370.8" y="1461" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="373.79" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1285" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,662,996,178 samples, 13.57%)</title><rect x="518.6" y="1349" width="160.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="521.60" y="1359.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>cpu_startup_entry (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1541" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.38" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,415,961,103 samples, 1.99%)</title><rect x="810.5" y="69" width="23.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="813.52" y="79.5" >[..</text>
</g>
<g >
<title>operator delete (251,825,081 samples, 0.35%)</title><rect x="1017.8" y="69" width="4.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1020.78" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1253" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (27,581,226 samples, 0.04%)</title><rect x="400.9" y="1589" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="403.91" y="1599.5" ></text>
</g>
<g >
<title>lockref_put_return (51,659,703 samples, 0.07%)</title><rect x="212.7" y="1445" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="215.71" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="693" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="703.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>exec_binprm (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1525" width="8.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1093.53" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_lock (50,140,518 samples, 0.07%)</title><rect x="373.3" y="1413" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="376.29" y="1423.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (49,692,434 samples, 0.07%)</title><rect x="149.3" y="1397" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="152.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1413" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1317" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (402,293,370 samples, 0.56%)</title><rect x="678.7" y="1349" width="6.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="681.72" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1333" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1343.5" ></text>
</g>
<g >
<title>unmap_vmas (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1397" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1121.12" y="1407.5" ></text>
</g>
<g >
<title>security_inode_getattr (50,159,572 samples, 0.07%)</title><rect x="708.0" y="1445" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="711.01" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead@plt (50,372,036 samples, 0.07%)</title><rect x="555.9" y="325" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="558.92" y="335.5" ></text>
</g>
<g >
<title>security_file_permission (50,343,679 samples, 0.07%)</title><rect x="369.1" y="1397" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="372.12" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43,443,594 samples, 0.06%)</title><rect x="1117.4" y="1605" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1120.40" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1189" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1199.5" ></text>
</g>
<g >
<title>generic_perform_write (695,913,360 samples, 0.98%)</title><rect x="1099.3" y="1301" width="11.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1102.27" y="1311.5" ></text>
</g>
<g >
<title>cfree (50,341,250 samples, 0.07%)</title><rect x="586.0" y="565" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="588.98" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1461" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1471.5" >std::__detai..</text>
</g>
<g >
<title>operator new (50,348,526 samples, 0.07%)</title><rect x="496.1" y="101" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="499.09" y="111.5" ></text>
</g>
<g >
<title>[ls] (51,263,699 samples, 0.07%)</title><rect x="401.4" y="1573" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="404.36" y="1583.5" ></text>
</g>
<g >
<title>apparmor_file_permission (201,168,246 samples, 0.28%)</title><rect x="373.3" y="1429" width="3.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="376.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="597" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="607.5" ></text>
</g>
<g >
<title>__schedule (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1541" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1135.87" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (200,545,771 samples, 0.28%)</title><rect x="580.1" y="501" width="3.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="583.15" y="511.5" ></text>
</g>
<g >
<title>release_pages (104,549,042 samples, 0.15%)</title><rect x="85.1" y="1269" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="88.11" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (301,363,195 samples, 0.42%)</title><rect x="1077.0" y="85" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1079.98" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="693" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="703.5" ></text>
</g>
<g >
<title>operator new (100,716,564 samples, 0.14%)</title><rect x="561.8" y="357" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="564.77" y="367.5" ></text>
</g>
<g >
<title>mas_commit_b_node.isra.0 (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1269" width="0.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="497.64" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_read (3,558,522,924 samples, 5.00%)</title><rect x="21.9" y="1509" width="59.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="24.95" y="1519.5" >__x64_..</text>
</g>
<g >
<title>statx (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1525" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="404.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1109" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1119.5" >std::__detai..</text>
</g>
<g >
<title>__vm_munmap (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1477" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="399.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="933" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="805" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="869" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="879.5" ></text>
</g>
<g >
<title>malloc (50,045,742 samples, 0.07%)</title><rect x="726.4" y="117" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="729.43" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,981,847,646 samples, 2.78%)</title><rect x="530.6" y="437" width="32.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.60" y="447.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="757" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,350,478 samples, 0.07%)</title><rect x="684.6" y="1317" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="687.55" y="1327.5" ></text>
</g>
<g >
<title>mmput (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1445" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1163.89" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1429" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="403.72" y="1439.5" ></text>
</g>
<g >
<title>operator new@plt (49,464,899 samples, 0.07%)</title><rect x="1036.1" y="69" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1039.14" y="79.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1525" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1114.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1029" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1039.5" >std::__detai..</text>
</g>
<g >
<title>copy_process (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1381" width="0.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="497.39" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,289,680,558 samples, 8.83%)</title><rect x="759.8" y="181" width="104.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="191.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1509" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,346,499 samples, 0.07%)</title><rect x="549.2" y="245" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="552.25" y="255.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (137,547,952 samples, 0.19%)</title><rect x="117.0" y="1429" width="2.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="120.01" y="1439.5" ></text>
</g>
<g >
<title>security_file_permission (662,712,358 samples, 0.93%)</title><rect x="69.9" y="1445" width="11.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="72.93" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,384,388,861 samples, 3.35%)</title><rect x="529.8" y="501" width="39.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="532.76" y="511.5" >std..</text>
</g>
<g >
<title>v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1493" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="498.27" y="1503.5" ></text>
</g>
<g >
<title>seq_read_iter (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1509" width="2.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1114.76" y="1519.5" ></text>
</g>
<g >
<title>generic_write_end (5,413,094,490 samples, 7.60%)</title><rect x="271.9" y="1333" width="89.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="274.92" y="1343.5" >generic_wr..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="405" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="469" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1365" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,363,213 samples, 0.07%)</title><rect x="688.7" y="1461" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="691.72" y="1471.5" ></text>
</g>
<g >
<title>[perf-3933356.map] (9,137,726 samples, 0.01%)</title><rect x="495.9" y="1621" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="498.94" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (501,670,948 samples, 0.70%)</title><rect x="422.8" y="1605" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="425.83" y="1615.5" ></text>
</g>
<g >
<title>do_user_addr_fault (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1573" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1136.76" y="1583.5" ></text>
</g>
<g >
<title>unlink (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1557" width="6.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="88.11" y="1567.5" ></text>
</g>
<g >
<title>__schedule (10,367,463 samples, 0.01%)</title><rect x="1120.7" y="1541" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1123.74" y="1551.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (401,987,650 samples, 0.56%)</title><rect x="699.7" y="1413" width="6.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="702.68" y="1423.5" ></text>
</g>
<g >
<title>rebalance_domains (13,595,464 samples, 0.02%)</title><rect x="1119.9" y="1413" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1122.87" y="1423.5" ></text>
</g>
<g >
<title>__free_one_page (52,263,723 samples, 0.07%)</title><rect x="86.0" y="1205" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="88.97" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="981" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="991.5" ></text>
</g>
<g >
<title>folio_memcg_lock.part.0 (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1301" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1163.99" y="1311.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (659,568,513 samples, 0.93%)</title><rect x="301.2" y="1285" width="11.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="304.25" y="1295.5" ></text>
</g>
<g >
<title>rw_verify_area (52,246,578 samples, 0.07%)</title><rect x="26.2" y="1477" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="29.20" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1301" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1311.5" ></text>
</g>
<g >
<title>malloc (50,386,314 samples, 0.07%)</title><rect x="606.0" y="677" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="609.00" y="687.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (151,027,728 samples, 0.21%)</title><rect x="374.1" y="1413" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="377.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="325" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="335.5" ></text>
</g>
<g >
<title>operator new (50,385,088 samples, 0.07%)</title><rect x="662.0" y="1125" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="665.03" y="1135.5" ></text>
</g>
<g >
<title>__fsnotify_parent (259,609,623 samples, 0.36%)</title><rect x="27.1" y="1461" width="4.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="30.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="325" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="335.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (151,103,815 samples, 0.21%)</title><rect x="694.7" y="1445" width="2.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="697.67" y="1455.5" ></text>
</g>
<g >
<title>operator new@plt (50,380,473 samples, 0.07%)</title><rect x="625.4" y="805" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="628.36" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_read (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1573" width="2.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1114.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="565" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="229" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="239.5" >std::__detai..</text>
</g>
<g >
<title>bprm_execve (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1557" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="416.60" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_openat (32,219,295 samples, 0.05%)</title><rect x="1111.2" y="1573" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1114.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1525" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1381" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1493" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1503.5" ></text>
</g>
<g >
<title>__mmput (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1429" width="8.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1093.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,053,391,843 samples, 7.10%)</title><rect x="525.6" y="773" width="83.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="783.5" >std::__de..</text>
</g>
<g >
<title>__dentry_kill (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1397" width="6.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="88.11" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (351,142,438 samples, 0.49%)</title><rect x="627.9" y="901" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="630.87" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="357" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="367.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="437" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="181" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="191.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="773" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1269" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1279.5" ></text>
</g>
<g >
<title>walk_component (150,686,265 samples, 0.21%)</title><rect x="703.8" y="1397" width="2.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="706.84" y="1407.5" ></text>
</g>
<g >
<title>__fdget_pos (101,995,902 samples, 0.14%)</title><rect x="23.7" y="1477" width="1.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="26.66" y="1487.5" ></text>
</g>
<g >
<title>copy_present_pte (12,203,646 samples, 0.02%)</title><rect x="494.4" y="1269" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="497.44" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1333" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1343.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>start_secondary (163,141,905 samples, 0.23%)</title><rect x="419.6" y="1605" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="422.61" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="581" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="591.5" >std::__detai..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,086,330 samples, 0.01%)</title><rect x="1099.0" y="1557" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1102.02" y="1567.5" ></text>
</g>
<g >
<title>psi_task_change (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1477" width="10.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="388.45" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="965" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1461" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1471.5" ></text>
</g>
<g >
<title>cfree (50,366,454 samples, 0.07%)</title><rect x="690.4" y="1541" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="693.39" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_openat (9,876,364 samples, 0.01%)</title><rect x="396.8" y="1573" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="399.84" y="1583.5" ></text>
</g>
<g >
<title>plist_del (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1525" width="8.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1127.90" y="1535.5" ></text>
</g>
<g >
<title>compact_zone (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1557" width="4.9" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="417.65" y="1567.5" ></text>
</g>
<g >
<title>node::StreamBase::JSMethod&lt;&amp;node::StreamBase::WriteBuffer&gt; (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1589" width="7.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="466.80" y="1599.5" ></text>
</g>
<g >
<title>buffer_migrate_folio (202,365,815 samples, 0.28%)</title><rect x="415.5" y="1477" width="3.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="418.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,593,548,616 samples, 13.47%)</title><rect x="519.7" y="1333" width="159.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="522.75" y="1343.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>exec_binprm (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1525" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="400.01" y="1535.5" ></text>
</g>
<g >
<title>operator new (50,381,750 samples, 0.07%)</title><rect x="565.9" y="437" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="568.94" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1557" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1567.5" >std::__detai..</text>
</g>
<g >
<title>zap_pte_range (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1333" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="400.01" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1093" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1103.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,497,289,667 samples, 7.72%)</title><rect x="772.9" y="117" width="91.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="775.91" y="127.5" >std::__det..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="613" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,354,051 samples, 0.07%)</title><rect x="728.9" y="85" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="325" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="335.5" ></text>
</g>
<g >
<title>ls (1,500,497,233 samples, 2.11%)</title><rect x="397.9" y="1637" width="24.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="400.95" y="1647.5" >ls</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1509" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (455,346,934 samples, 0.64%)</title><rect x="671.2" y="1285" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="674.18" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="757" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="767.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1349" width="11.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1102.25" y="1359.5" ></text>
</g>
<g >
<title>cfree (150,930,864 samples, 0.21%)</title><rect x="617.7" y="821" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="620.68" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1509" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1573" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1583.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>[libc.so.6] (200,699,890 samples, 0.28%)</title><rect x="506.9" y="1493" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="509.92" y="1503.5" ></text>
</g>
<g >
<title>do_idle (62,751,032 samples, 0.09%)</title><rect x="1119.9" y="1573" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1122.87" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1125" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1135.5" >std::__detai..</text>
</g>
<g >
<title>vfs_fstatat (955,753,617 samples, 1.34%)</title><rect x="694.7" y="1477" width="15.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="697.67" y="1487.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (201,378,876 samples, 0.28%)</title><rect x="254.4" y="1333" width="3.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="257.41" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (50,374,084 samples, 0.07%)</title><rect x="209.4" y="1365" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="212.37" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,364,562 samples, 0.07%)</title><rect x="772.1" y="53" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="775.07" y="63.5" ></text>
</g>
<g >
<title>[bash] (812,995,093 samples, 1.14%)</title><rect x="1136.5" y="1365" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.47" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,373,301 samples, 0.07%)</title><rect x="538.1" y="261" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="541.10" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1605" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="399.50" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (13,624,486 samples, 0.02%)</title><rect x="385.2" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="388.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="181" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="191.5" ></text>
</g>
<g >
<title>start_secondary (8,409,210 samples, 0.01%)</title><rect x="1124.6" y="1605" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1127.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,490,468,093 samples, 9.11%)</title><rect x="758.1" y="1573" width="107.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1583.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1381" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,121,452,629 samples, 8.60%)</title><rect x="525.6" y="853" width="101.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="863.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (352,200,575 samples, 0.49%)</title><rect x="563.4" y="453" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="566.44" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="309" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="389" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,157,516 samples, 0.42%)</title><rect x="1069.5" y="85" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1072.49" y="95.5" ></text>
</g>
<g >
<title>__get_task_ioprio (50,336,580 samples, 0.07%)</title><rect x="231.1" y="1413" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="234.09" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (50,197,250 samples, 0.07%)</title><rect x="1119.9" y="1525" width="0.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1122.87" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1605" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1615.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (401,029,618 samples, 0.56%)</title><rect x="353.0" y="1253" width="6.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="356.00" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (806,649,894 samples, 1.13%)</title><rect x="570.1" y="517" width="13.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="573.11" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="901" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="911.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,312 samples, 0.14%)</title><rect x="637.0" y="949" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="640.02" y="959.5" ></text>
</g>
<g >
<title>common_perm_cond (50,159,572 samples, 0.07%)</title><rect x="708.0" y="1413" width="0.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="711.01" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (452,138,320 samples, 0.63%)</title><rect x="1067.0" y="101" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1069.98" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,556,896 samples, 0.14%)</title><rect x="510.3" y="1477" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="513.25" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1381" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="400.01" y="1391.5" ></text>
</g>
<g >
<title>__get_task_ioprio (50,323,856 samples, 0.07%)</title><rect x="214.4" y="1461" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="217.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1301" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (684,480,676 samples, 0.96%)</title><rect x="402.2" y="1621" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="405.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1141" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1151.5" >std::__detai..</text>
</g>
<g >
<title>do_syscall_64 (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1605" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="416.60" y="1615.5" ></text>
</g>
<g >
<title>consume_obj_stock (100,742,221 samples, 0.14%)</title><rect x="182.6" y="1333" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="185.60" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1493" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,278,481,542 samples, 10.22%)</title><rect x="522.3" y="1093" width="120.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1103.5" >std::__detail::..</text>
</g>
<g >
<title>run_rebalance_domains (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1429" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1122.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="549" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1461" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1136.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,841,712,790 samples, 15.23%)</title><rect x="882.3" y="133" width="179.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="143.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,668,805,980 samples, 14.98%)</title><rect x="512.8" y="1493" width="176.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="515.77" y="1503.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (451,931,053 samples, 0.63%)</title><rect x="1037.0" y="69" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1039.96" y="79.5" ></text>
</g>
<g >
<title>lockref_put_return (51,760,976 samples, 0.07%)</title><rect x="80.1" y="1397" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="83.06" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (43,443,594 samples, 0.06%)</title><rect x="1117.4" y="1589" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1120.40" y="1599.5" ></text>
</g>
<g >
<title>__cond_resched (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1445" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1126.23" y="1455.5" ></text>
</g>
<g >
<title>generic_write_check_limits (50,329,314 samples, 0.07%)</title><rect x="238.6" y="1349" width="0.8" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="241.58" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1589" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1461" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1605" width="2.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1190.38" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,048,370 samples, 0.21%)</title><rect x="831.5" y="53" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="834.50" y="63.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1461" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1122.87" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="399.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="517" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="527.5" ></text>
</g>
<g >
<title>malloc (100,746,815 samples, 0.14%)</title><rect x="659.5" y="1125" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="662.52" y="1135.5" ></text>
</g>
<g >
<title>revert_creds (155,575,632 samples, 0.22%)</title><rect x="67.4" y="1461" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="70.35" y="1471.5" ></text>
</g>
<g >
<title>__libc_start_main (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1605" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1164.12" y="1615.5" ></text>
</g>
<g >
<title>xas_clear_mark (52,274,313 samples, 0.07%)</title><rect x="87.7" y="1253" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="90.70" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="165" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1365" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1375.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>alloc_pages (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1413" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="414.19" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (161,871,959 samples, 0.23%)</title><rect x="623.5" y="821" width="2.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="626.52" y="831.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (100,629,784 samples, 0.14%)</title><rect x="256.1" y="1317" width="1.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="259.08" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1509" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1519.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>override_creds (100,716,240 samples, 0.14%)</title><rect x="227.7" y="1429" width="1.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="230.75" y="1439.5" ></text>
</g>
<g >
<title>ksys_write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1445" width="7.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="466.80" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1541" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1126.23" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_execve (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1589" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1126.35" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (33,975,798 samples, 0.05%)</title><rect x="412.6" y="1525" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="415.58" y="1535.5" ></text>
</g>
<g >
<title>cfree (100,744,687 samples, 0.14%)</title><rect x="554.2" y="309" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="557.25" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="789" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="799.5" ></text>
</g>
<g >
<title>[ls] (51,263,699 samples, 0.07%)</title><rect x="401.4" y="1621" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="404.36" y="1631.5" ></text>
</g>
<g >
<title>do_faccessat (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1573" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1126.23" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (117,708,575 samples, 0.17%)</title><rect x="411.2" y="1589" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="414.19" y="1599.5" ></text>
</g>
<g >
<title>complete_walk (100,677,194 samples, 0.14%)</title><rect x="698.0" y="1413" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="701.01" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1237" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,716,564 samples, 0.14%)</title><rect x="561.8" y="373" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="564.77" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,346,630 samples, 0.07%)</title><rect x="1062.0" y="117" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1064.97" y="127.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (11,222,820,645 samples, 15.76%)</title><rect x="505.3" y="1557" width="185.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="508.26" y="1567.5" >Watcher::isIgnored</text>
</g>
<g >
<title>uv__spawn_and_init_child (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1525" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="497.39" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1237" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1247.5" >std::__detai..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (201,420,730 samples, 0.28%)</title><rect x="752.3" y="1605" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="755.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1525" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1535.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,026,655,425 samples, 9.87%)</title><rect x="522.3" y="997" width="116.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="525.25" y="1007.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="709" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="719.5" ></text>
</g>
<g >
<title>bitmap_string.constprop.0 (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1397" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1114.76" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="949" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="959.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1301" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="645" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="655.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,353,670 samples, 0.07%)</title><rect x="612.7" y="757" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="615.67" y="767.5" ></text>
</g>
<g >
<title>copy_page (151,900,423 samples, 0.21%)</title><rect x="415.5" y="1445" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="418.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="981" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="469" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="645" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="655.5" >std::__detai..</text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="917" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_execve (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1589" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1163.89" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1237" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="271.59" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1621" width="8.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1093.53" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="517" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="527.5" ></text>
</g>
<g >
<title>cfree (151,038,491 samples, 0.21%)</title><rect x="666.2" y="1205" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="669.19" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1461" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,528,112,013 samples, 2.15%)</title><rect x="531.4" y="373" width="25.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="534.43" y="383.5" >s..</text>
</g>
<g >
<title>Builtins_LdaImmutableCurrentContextSlotHandler (11,665,413 samples, 0.02%)</title><rect x="470.9" y="1605" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="473.85" y="1615.5" ></text>
</g>
<g >
<title>evict (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1461" width="6.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="88.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="613" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="885" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1045" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="645" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="277" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (301,279,036 samples, 0.42%)</title><rect x="497.8" y="213" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="500.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,138,201,682 samples, 12.83%)</title><rect x="519.7" y="1269" width="151.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="522.75" y="1279.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>zap_pte_range (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1333" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1126.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,165,914,408 samples, 14.28%)</title><rect x="516.9" y="1397" width="168.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="519.93" y="1407.5" >std::__detail::_Execu..</text>
</g>
<g >
<title>operator new (50,382,874 samples, 0.07%)</title><rect x="670.3" y="1189" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="673.34" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="245" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="255.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>malloc (405,269,165 samples, 0.57%)</title><rect x="439.5" y="1605" width="6.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="442.48" y="1615.5" ></text>
</g>
<g >
<title>create_empty_buffers (50,372,997 samples, 0.07%)</title><rect x="255.2" y="1317" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="258.24" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,732,184 samples, 0.14%)</title><rect x="862.3" y="101" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="865.33" y="111.5" ></text>
</g>
<g >
<title>do_futex (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1573" width="8.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1127.90" y="1583.5" ></text>
</g>
<g >
<title>exc_page_fault (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1589" width="2.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1136.76" y="1599.5" ></text>
</g>
<g >
<title>dput (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1413" width="6.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="88.11" y="1423.5" ></text>
</g>
<g >
<title>__mmput (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1429" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1163.89" y="1439.5" ></text>
</g>
<g >
<title>ovl_write_iter (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1397" width="11.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1102.25" y="1407.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (12,487,033,064 samples, 17.54%)</title><rect x="504.4" y="1573" width="206.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="507.42" y="1583.5" >InotifyBackend::handleSubsc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,746,418 samples, 0.14%)</title><rect x="727.3" y="213" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="730.26" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="837" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,724,546,035 samples, 9.44%)</title><rect x="522.3" y="965" width="111.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="975.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,981,847,646 samples, 2.78%)</title><rect x="530.6" y="421" width="32.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.60" y="431.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1605" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="400.01" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="677" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="805" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="815.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="277" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (355,721,223 samples, 0.50%)</title><rect x="721.4" y="229" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_access (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1589" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1126.23" y="1599.5" ></text>
</g>
<g >
<title>do_wp_page (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1141" width="10.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1153.03" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1333" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1253" width="10.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.03" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (161,233,459 samples, 0.23%)</title><rect x="419.6" y="1557" width="2.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="422.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1253" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1263.5" ></text>
</g>
<g >
<title>inotify_free_event (955,069,166 samples, 1.34%)</title><rect x="191.0" y="1365" width="15.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="194.05" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1493" width="1.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1121.12" y="1503.5" ></text>
</g>
<g >
<title>malloc (50,385,088 samples, 0.07%)</title><rect x="662.0" y="1109" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="665.03" y="1119.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (3,728,650,156 samples, 5.24%)</title><rect x="150.1" y="1397" width="61.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="153.09" y="1407.5" >inotif..</text>
</g>
<g >
<title>do_mas_munmap (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1349" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1136.00" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1493" width="10.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="388.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1381" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="869" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="879.5" ></text>
</g>
<g >
<title>[bash] (808,037,807 samples, 1.13%)</title><rect x="1136.5" y="1189" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.53" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1092.84" y="1551.5" ></text>
</g>
<g >
<title>parse_and_execute (809,434,006 samples, 1.14%)</title><rect x="1136.5" y="1237" width="13.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1139.53" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="485" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="495.5" ></text>
</g>
<g >
<title>__brelse (99,895,301 samples, 0.14%)</title><rect x="317.2" y="1253" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="320.17" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,305,231,904 samples, 7.45%)</title><rect x="525.6" y="821" width="87.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="831.5" >std::__det..</text>
</g>
<g >
<title>free@plt (50,355,363 samples, 0.07%)</title><rect x="1081.1" y="69" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1084.14" y="79.5" ></text>
</g>
<g >
<title>do_unlinkat (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1493" width="6.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="88.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1013" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="629" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="639.5" ></text>
</g>
<g >
<title>[unknown] (192,052,143 samples, 0.27%)</title><rect x="1133.1" y="1621" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1136.10" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (754,295,520 samples, 1.06%)</title><rect x="642.9" y="1093" width="12.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="645.86" y="1103.5" ></text>
</g>
<g >
<title>current_time (103,980,246 samples, 0.15%)</title><rect x="35.7" y="1397" width="1.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="38.65" y="1407.5" ></text>
</g>
<g >
<title>page_remove_rmap (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1163.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="613" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="623.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1237" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,346,630 samples, 0.07%)</title><rect x="1062.0" y="133" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1064.97" y="143.5" ></text>
</g>
<g >
<title>malloc (100,742,383 samples, 0.14%)</title><rect x="674.5" y="1253" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="677.51" y="1263.5" ></text>
</g>
<g >
<title>swapper (1,719,407,944 samples, 2.41%)</title><rect x="1161.5" y="1637" width="28.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1164.51" y="1647.5" >sw..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,710,093 samples, 0.14%)</title><rect x="676.2" y="1269" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="679.22" y="1279.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (37,356,275 samples, 0.05%)</title><rect x="1113.2" y="1445" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1116.24" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="965" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="975.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (50,365,955 samples, 0.07%)</title><rect x="1075.3" y="69" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1078.31" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="837" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1077" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1087.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1541" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (50,379,381 samples, 0.07%)</title><rect x="714.7" y="1461" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="717.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,623,621,800 samples, 9.30%)</title><rect x="523.9" y="933" width="109.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="526.93" y="943.5" >std::__detail..</text>
</g>
<g >
<title>take_dentry_name_snapshot (50,357,397 samples, 0.07%)</title><rect x="213.6" y="1445" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="216.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="325" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="725" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1525" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1477" width="2.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1190.38" y="1487.5" ></text>
</g>
<g >
<title>up_write (50,379,752 samples, 0.07%)</title><rect x="230.3" y="1445" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="233.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="501" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1397" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="469" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="341" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="351.5" ></text>
</g>
<g >
<title>search_binary_handler (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1509" width="8.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1093.53" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="581" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="591.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1621" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="117" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="127.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (216,039,453 samples, 0.30%)</title><rect x="1121.2" y="1637" width="3.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1124.21" y="1647.5" ></text>
</g>
<g >
<title>tcp_seq_next (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1477" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1121.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="549" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="559.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (27,018,274 samples, 0.04%)</title><rect x="422.3" y="1509" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="425.31" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="373" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1077" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,384,388,861 samples, 3.35%)</title><rect x="529.8" y="485" width="39.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="532.76" y="495.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1221" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1231.5" ></text>
</g>
<g >
<title>operator new (50,380,356 samples, 0.07%)</title><rect x="710.5" y="1525" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="713.51" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1525" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="309" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (11,122,121,992 samples, 15.62%)</title><rect x="506.1" y="1525" width="184.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="509.09" y="1535.5" >std::__detail::__regex_a..</text>
</g>
<g >
<title>inotify_free_event (100,685,382 samples, 0.14%)</title><rect x="719.7" y="1461" width="1.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="722.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1029" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1039.5" ></text>
</g>
<g >
<title>cfree (251,234,074 samples, 0.35%)</title><rect x="680.4" y="1333" width="4.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="683.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="309" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="319.5" >std::__detai..</text>
</g>
<g >
<title>filemap_alloc_folio (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1285" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="271.59" y="1295.5" ></text>
</g>
<g >
<title>__kmalloc (1,968,744,270 samples, 2.76%)</title><rect x="154.3" y="1381" width="32.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="157.26" y="1391.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="293" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_clone (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1429" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="497.39" y="1439.5" ></text>
</g>
<g >
<title>fault_in_readable (150,937,875 samples, 0.21%)</title><rect x="361.6" y="1333" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="364.62" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1541" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1551.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>operator new (705,459,475 samples, 0.99%)</title><rect x="1024.5" y="69" width="11.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1027.45" y="79.5" ></text>
</g>
<g >
<title>zap_pte_range (96,745,861 samples, 0.14%)</title><rect x="1118.3" y="1333" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1121.26" y="1343.5" ></text>
</g>
<g >
<title>__do_softirq (14,066,629 samples, 0.02%)</title><rect x="1119.9" y="1445" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1122.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1573" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1397" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1189" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1199.5" ></text>
</g>
<g >
<title>_raw_read_unlock (100,503,349 samples, 0.14%)</title><rect x="286.9" y="1253" width="1.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="289.90" y="1263.5" ></text>
</g>
<g >
<title>__kmem_cache_free (703,536,541 samples, 0.99%)</title><rect x="193.5" y="1333" width="11.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="196.55" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1509" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1519.5" ></text>
</g>
<g >
<title>cpu_startup_entry (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1589" width="8.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1181.64" y="1599.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1573" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1126.35" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock (150,961,118 samples, 0.21%)</title><rect x="187.7" y="1381" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="190.72" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1333" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,360,511 samples, 0.07%)</title><rect x="759.8" y="69" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="79.5" ></text>
</g>
<g >
<title>try_charge_memcg (100,578,598 samples, 0.14%)</title><rect x="266.9" y="1221" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="269.92" y="1231.5" ></text>
</g>
<g >
<title>dup_mmap (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1349" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="497.39" y="1359.5" ></text>
</g>
<g >
<title>v8::internal::LookupIterator::Start&lt;false&gt; (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1509" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="498.27" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="389" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="661" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="671.5" >std::__detai..</text>
</g>
<g >
<title>mmap_region (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1365" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="403.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="645" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="437" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (355,721,223 samples, 0.50%)</title><rect x="721.4" y="213" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="223.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (49,996,165 samples, 0.07%)</title><rect x="350.5" y="1253" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="353.50" y="1263.5" ></text>
</g>
<g >
<title>handle_mm_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1189" width="10.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1153.03" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,535,583,946 samples, 11.99%)</title><rect x="521.4" y="1189" width="141.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="524.42" y="1199.5" >std::__detail::_E..</text>
</g>
<g >
<title>path_lookupat (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1525" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1126.23" y="1535.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1541" width="1.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1121.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="789" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="799.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>do_mas_align_munmap (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1445" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="399.32" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,345,789 samples, 0.07%)</title><rect x="632.8" y="885" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="635.85" y="895.5" ></text>
</g>
<g >
<title>operator new (100,712,843 samples, 0.14%)</title><rect x="620.2" y="821" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="623.18" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="485" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,008,168 samples, 0.35%)</title><rect x="1062.8" y="53" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="63.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1589" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="498.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1253" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (10,237,572,444 samples, 14.38%)</title><rect x="891.5" y="85" width="169.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="894.50" y="95.5" >std::__detail::_Execu..</text>
</g>
<g >
<title>[libc.so.6] (50,332,442 samples, 0.07%)</title><rect x="686.2" y="1365" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="689.22" y="1375.5" ></text>
</g>
<g >
<title>operator new (50,386,314 samples, 0.07%)</title><rect x="606.0" y="693" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="609.00" y="703.5" ></text>
</g>
<g >
<title>enqueue_task_fair (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1477" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1127.57" y="1487.5" ></text>
</g>
<g >
<title>[bash] (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1365" width="10.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1152.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="421" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="431.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>kmem_cache_alloc (100,721,004 samples, 0.14%)</title><rect x="288.6" y="1253" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="291.56" y="1263.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1301" width="6.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="88.11" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="725" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1397" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1407.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>load_elf_binary (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1493" width="8.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1093.53" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (815,290,189 samples, 1.14%)</title><rect x="1136.5" y="1429" width="13.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.47" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="421" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,716,952 samples, 0.14%)</title><rect x="850.7" y="69" width="1.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="853.65" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1541" width="5.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="499.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,115,544,564 samples, 14.21%)</title><rect x="517.8" y="1381" width="167.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="520.77" y="1391.5" >std::__detail::_Execu..</text>
</g>
<g >
<title>do_syscall_64 (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1525" width="6.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="88.11" y="1535.5" ></text>
</g>
<g >
<title>vfs_read (3,249,364,206 samples, 4.56%)</title><rect x="27.1" y="1477" width="53.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="30.07" y="1487.5" >vfs_r..</text>
</g>
<g >
<title>do_mas_align_munmap (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1333" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1136.00" y="1343.5" ></text>
</g>
<g >
<title>ext4_da_write_end (5,413,094,490 samples, 7.60%)</title><rect x="271.9" y="1349" width="89.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="274.92" y="1359.5" >ext4_da_wr..</text>
</g>
<g >
<title>__do_sys_clone (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1557" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1120.40" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="997" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="901" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="911.5" ></text>
</g>
<g >
<title>xmalloc (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1285" width="10.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1153.03" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1285" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1295.5" ></text>
</g>
<g >
<title>cfree (150,980,804 samples, 0.21%)</title><rect x="1067.0" y="85" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1069.98" y="95.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (552,847,061 samples, 0.78%)</title><rect x="338.0" y="1173" width="9.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="340.98" y="1183.5" ></text>
</g>
<g >
<title>rw_verify_area (662,712,358 samples, 0.93%)</title><rect x="69.9" y="1461" width="11.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="72.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1365" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (553,916,351 samples, 0.78%)</title><rect x="590.1" y="645" width="9.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="593.15" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="805" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="815.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>xas_load (100,525,278 samples, 0.14%)</title><rect x="269.4" y="1285" width="1.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="272.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,795,192,255 samples, 5.33%)</title><rect x="527.3" y="613" width="62.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="530.26" y="623.5" >std::_..</text>
</g>
<g >
<title>malloc (50,367,248 samples, 0.07%)</title><rect x="588.5" y="533" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="591.48" y="543.5" ></text>
</g>
<g >
<title>malloc (50,380,356 samples, 0.07%)</title><rect x="710.5" y="1509" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="713.51" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1525" width="8.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1181.64" y="1535.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (90,178,301 samples, 0.13%)</title><rect x="494.4" y="1605" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="497.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,289,680,558 samples, 8.83%)</title><rect x="759.8" y="133" width="104.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="143.5" >std::__detai..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (50,369,907 samples, 0.07%)</title><rect x="376.6" y="1509" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="379.62" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1365" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1375.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="341" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,445,049 samples, 0.64%)</title><rect x="1074.5" y="101" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="111.5" ></text>
</g>
<g >
<title>build_open_flags (9,876,364 samples, 0.01%)</title><rect x="396.8" y="1557" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="399.84" y="1567.5" ></text>
</g>
<g >
<title>file_modified (150,834,499 samples, 0.21%)</title><rect x="239.4" y="1365" width="2.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="242.41" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,862,580,479 samples, 5.42%)</title><rect x="21.1" y="1541" width="64.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="24.10" y="1551.5" >entry_S..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (80,880,816 samples, 0.11%)</title><rect x="1119.9" y="1621" width="1.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1122.87" y="1631.5" ></text>
</g>
<g >
<title>mtree_range_walk (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1509" width="2.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1136.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1301" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1311.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="869" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="879.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1365" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="497.39" y="1375.5" ></text>
</g>
<g >
<title>established_get_first (6,462,132 samples, 0.01%)</title><rect x="1118.0" y="1445" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1121.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,477,767,248 samples, 2.08%)</title><rect x="532.3" y="357" width="24.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="535.26" y="367.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,331,660 samples, 0.07%)</title><rect x="606.8" y="693" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="609.84" y="703.5" ></text>
</g>
<g >
<title>read (603,427,637 samples, 0.85%)</title><rect x="711.4" y="1589" width="10.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="714.37" y="1599.5" ></text>
</g>
<g >
<title>rw_verify_area (50,343,679 samples, 0.07%)</title><rect x="369.1" y="1413" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="372.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1525" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1535.5" >std::__detai..</text>
</g>
<g >
<title>write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1509" width="7.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="466.80" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1503.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31,960,376 samples, 0.04%)</title><rect x="1090.0" y="1621" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1093.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="853" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="181" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="629" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="639.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1397" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1136.00" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1445" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1455.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1541" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,529,089 samples, 0.14%)</title><rect x="672.8" y="1253" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="675.85" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,383,375 samples, 0.07%)</title><rect x="496.9" y="197" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (653,351,027 samples, 0.92%)</title><rect x="451.2" y="1605" width="10.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="454.18" y="1615.5" ></text>
</g>
<g >
<title>operator new (50,372,463 samples, 0.07%)</title><rect x="677.1" y="1253" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="680.05" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (452,881,775 samples, 0.64%)</title><rect x="733.9" y="1605" width="7.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="736.93" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1237" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1136.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1285" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1157" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1167.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (250,437,187 samples, 0.35%)</title><rect x="275.3" y="1301" width="4.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="278.25" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="485" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="495.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>malloc (50,345,789 samples, 0.07%)</title><rect x="632.8" y="853" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="635.85" y="863.5" ></text>
</g>
<g >
<title>operator new (50,384,094 samples, 0.07%)</title><rect x="653.7" y="1061" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="656.69" y="1071.5" ></text>
</g>
<g >
<title>copy_page_range (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1477" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1120.40" y="1487.5" ></text>
</g>
<g >
<title>node::Buffer::(anonymous namespace)::StringWrite&lt; (509,587,683 samples, 0.72%)</title><rect x="485.8" y="1557" width="8.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="488.85" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1493" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (206,024,831 samples, 0.29%)</title><rect x="1111.0" y="1621" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.04" y="1631.5" ></text>
</g>
<g >
<title>malloc (100,712,843 samples, 0.14%)</title><rect x="620.2" y="805" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="623.18" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="453" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="463.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1509" width="8.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1181.64" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (50,360,094 samples, 0.07%)</title><rect x="300.4" y="1269" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="303.41" y="1279.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (12,537,379,954 samples, 17.61%)</title><rect x="503.6" y="1589" width="207.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="506.59" y="1599.5" >InotifyBackend::handleEvent</text>
</g>
<g >
<title>setlocale (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1557" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1164.12" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1509" width="2.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,110,060 samples, 0.14%)</title><rect x="560.1" y="357" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="563.11" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1525" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1535.5" ></text>
</g>
<g >
<title>kfree (904,695,217 samples, 1.27%)</title><rect x="191.9" y="1349" width="15.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="194.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1077" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="869" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="901" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,553,585 samples, 0.71%)</title><rect x="865.7" y="85" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="95.5" ></text>
</g>
<g >
<title>unwind_protect_mem (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1301" width="10.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1153.03" y="1311.5" ></text>
</g>
<g >
<title>__cond_resched (51,588,195 samples, 0.07%)</title><rect x="44.2" y="1365" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="47.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="261" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="271.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1301" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1311.5" ></text>
</g>
<g >
<title>__poll (11,336,922 samples, 0.02%)</title><rect x="1099.0" y="1573" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1102.02" y="1583.5" ></text>
</g>
<g >
<title>inode_permission (251,301,385 samples, 0.35%)</title><rect x="699.7" y="1397" width="4.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="702.68" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="181" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="191.5" ></text>
</g>
<g >
<title>operator new (99,796,556 samples, 0.14%)</title><rect x="581.8" y="485" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="584.82" y="495.5" ></text>
</g>
<g >
<title>pthread_cond_wait (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1092.84" y="1567.5" ></text>
</g>
<g >
<title>ion (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1509" width="11.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1102.25" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_newstat (1,006,114,095 samples, 1.41%)</title><rect x="693.8" y="1493" width="16.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="696.83" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="389" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="399.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1125" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1589" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1599.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>malloc@plt (50,380,529 samples, 0.07%)</title><rect x="1035.3" y="53" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1038.31" y="63.5" ></text>
</g>
<g >
<title>zap_pte_range (7,638,801 samples, 0.01%)</title><rect x="414.5" y="1333" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="417.51" y="1343.5" ></text>
</g>
<g >
<title>_start (22,470,900,825 samples, 31.56%)</title><rect x="10.9" y="1621" width="372.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.94" y="1631.5" >_start</text>
</g>
<g >
<title>operator new (49,960,560 samples, 0.07%)</title><rect x="559.3" y="373" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="562.28" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,535,583,946 samples, 11.99%)</title><rect x="521.4" y="1173" width="141.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="524.42" y="1183.5" >std::__detail::_E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1141" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="453" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (252,008,168 samples, 0.35%)</title><rect x="1062.8" y="69" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="437" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="447.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1109" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1119.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (3,928,999,375 samples, 5.52%)</title><rect x="147.6" y="1413" width="65.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="150.60" y="1423.5" >fsnotif..</text>
</g>
<g >
<title>ext4_inode_csum (703,415,021 samples, 0.99%)</title><rect x="335.5" y="1205" width="11.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="338.48" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="485" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="495.5" >std::__detai..</text>
</g>
<g >
<title>[libc.so.6] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1439.5" ></text>
</g>
<g >
<title>[bash] (809,434,006 samples, 1.14%)</title><rect x="1136.5" y="1205" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.53" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1429" width="11.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1102.25" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_lock (50,365,208 samples, 0.07%)</title><rect x="358.8" y="1221" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="361.81" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,083,141,448 samples, 11.35%)</title><rect x="521.4" y="1125" width="134.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="524.42" y="1135.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1157" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1167.5" ></text>
</g>
<g >
<title>malloc (50,361,624 samples, 0.07%)</title><rect x="575.1" y="485" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="578.11" y="495.5" ></text>
</g>
<g >
<title>apparmor_file_permission (155,216,957 samples, 0.22%)</title><rect x="63.9" y="1381" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="66.92" y="1391.5" ></text>
</g>
<g >
<title>cfree (201,410,029 samples, 0.28%)</title><rect x="594.3" y="629" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="597.32" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,158,661 samples, 0.21%)</title><rect x="1085.3" y="101" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1088.30" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="197" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="207.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="197" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="207.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="501" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="511.5" ></text>
</g>
<g >
<title>begin_new_exec (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1477" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1121.12" y="1487.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1477" width="10.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1170.84" y="1487.5" ></text>
</g>
<g >
<title>isolate_freepages_block (44,630,621 samples, 0.06%)</title><rect x="418.9" y="1477" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="421.87" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1493" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="404.36" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (52,383,569 samples, 0.07%)</title><rect x="1119.9" y="1557" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1122.87" y="1567.5" ></text>
</g>
<g >
<title>ovl_d_real (50,373,579 samples, 0.07%)</title><rect x="226.9" y="1445" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="229.91" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1621" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1163.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1477" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1487.5" ></text>
</g>
<g >
<title>malloc (50,364,458 samples, 0.07%)</title><rect x="654.5" y="1045" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="657.53" y="1055.5" ></text>
</g>
<g >
<title>filename_lookup (502,664,844 samples, 0.71%)</title><rect x="698.0" y="1445" width="8.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="701.01" y="1455.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (13,595,464 samples, 0.02%)</title><rect x="1119.9" y="1349" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1122.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="997" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="853" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="863.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="677" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="597" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="565" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="725" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="735.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1573" width="5.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="731.93" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1092.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="597" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="607.5" ></text>
</g>
<g >
<title>arch_call_rest_init (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1573" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="425.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1365" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1375.5" ></text>
</g>
<g >
<title>load_balance (13,595,464 samples, 0.02%)</title><rect x="1119.9" y="1397" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1122.87" y="1407.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1525" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1127.57" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,385,971 samples, 0.07%)</title><rect x="501.9" y="197" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="504.92" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,588,393 samples, 0.14%)</title><rect x="687.1" y="1381" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="690.06" y="1391.5" ></text>
</g>
<g >
<title>security_file_permission (201,168,246 samples, 0.28%)</title><rect x="373.3" y="1445" width="3.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="376.29" y="1455.5" ></text>
</g>
<g >
<title>malloc (150,129,446 samples, 0.21%)</title><rect x="499.4" y="181" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="502.43" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (79,995,761 samples, 0.11%)</title><rect x="1123.2" y="1605" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1126.23" y="1615.5" ></text>
</g>
<g >
<title>execute_command (812,995,093 samples, 1.14%)</title><rect x="1136.5" y="1397" width="13.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1139.47" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1157" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1167.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (510,247,075 samples, 0.72%)</title><rect x="485.8" y="1573" width="8.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="488.83" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_execve (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1589" width="8.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1093.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="437" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1445" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (201,430,529 samples, 0.28%)</title><rect x="534.8" y="213" width="3.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="537.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="357" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="367.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (1,559,804,231 samples, 2.19%)</title><rect x="158.4" y="1365" width="25.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="161.43" y="1375.5" >_..</text>
</g>
<g >
<title>__rcu_read_unlock (103,390,733 samples, 0.15%)</title><rect x="74.2" y="1397" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="77.19" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1541" width="8.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1093.53" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,111,462 samples, 0.03%)</title><rect x="396.7" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="399.70" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1429" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1136.00" y="1439.5" ></text>
</g>
<g >
<title>memset_erms (57,092,712 samples, 0.08%)</title><rect x="185.9" y="1365" width="1.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="188.94" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1061" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,299,611 samples, 0.07%)</title><rect x="1061.1" y="85" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1064.14" y="95.5" ></text>
</g>
<g >
<title>perf-exec (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1637" width="8.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1093.53" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1557" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1567.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>bprm_execve (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1557" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1121.12" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (96,366,000 samples, 0.14%)</title><rect x="82.6" y="1493" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="85.64" y="1503.5" ></text>
</g>
<g >
<title>rest_init (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1557" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1123.91" y="1567.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (50,359,146 samples, 0.07%)</title><rect x="283.6" y="1301" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="286.56" y="1311.5" ></text>
</g>
<g >
<title>seq_read_iter (47,886,477 samples, 0.07%)</title><rect x="1123.7" y="1541" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1126.71" y="1551.5" ></text>
</g>
<g >
<title>__fput (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1493" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1116.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="501" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="511.5" ></text>
</g>
<g >
<title>operator new (50,338,482 samples, 0.07%)</title><rect x="568.4" y="421" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="571.44" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1109" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1119.5" ></text>
</g>
<g >
<title>__entry_text_start (360,348,386 samples, 0.51%)</title><rect x="15.1" y="1541" width="6.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="18.13" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="197" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1445" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="403.72" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="325" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="335.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1317" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="741" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="751.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>enqueue_task (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1493" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1127.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1253" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1461" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1471.5" ></text>
</g>
<g >
<title>iterate_dir (9,225,757 samples, 0.01%)</title><rect x="1111.1" y="1557" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1114.07" y="1567.5" ></text>
</g>
<g >
<title>cfree (100,529,089 samples, 0.14%)</title><rect x="672.8" y="1269" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="675.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1157" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="485" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1077" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (50,379,854 samples, 0.07%)</title><rect x="550.1" y="245" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="553.08" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="533" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="543.5" ></text>
</g>
<g >
<title>unmap_vmas (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1397" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1163.99" y="1407.5" ></text>
</g>
<g >
<title>malloc (655,078,946 samples, 0.92%)</title><rect x="1024.5" y="53" width="10.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1027.45" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,477,767,248 samples, 2.08%)</title><rect x="532.3" y="341" width="24.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="535.26" y="351.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="757" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (691,665,818 samples, 0.97%)</title><rect x="760.6" y="53" width="11.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="763.61" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1013" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1605" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1163.89" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (99,753,981 samples, 0.14%)</title><rect x="500.3" y="149" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="503.27" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,312 samples, 0.14%)</title><rect x="637.0" y="933" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="640.02" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="565" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="575.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1413" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1029" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1039.5" ></text>
</g>
<g >
<title>malloc (50,381,750 samples, 0.07%)</title><rect x="565.9" y="421" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="568.94" y="431.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (50,363,650 samples, 0.07%)</title><rect x="169.3" y="1333" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="172.26" y="1343.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2,161,918,447 samples, 3.04%)</title><rect x="314.7" y="1269" width="35.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="317.68" y="1279.5" >ext..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (13,595,464 samples, 0.02%)</title><rect x="1119.9" y="1365" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1122.87" y="1375.5" ></text>
</g>
<g >
<title>unmap_single_vma (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1381" width="8.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1093.53" y="1391.5" ></text>
</g>
<g >
<title>aa_file_perm (103,163,894 samples, 0.14%)</title><rect x="64.8" y="1365" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="67.78" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1509" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,342,090,613 samples, 4.69%)</title><rect x="528.1" y="549" width="55.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="531.09" y="559.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1365" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,337,684 samples, 0.07%)</title><rect x="560.9" y="341" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="563.93" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1413" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="261" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="271.5" ></text>
</g>
<g >
<title>sh (1,696,711,219 samples, 2.38%)</title><rect x="1133.0" y="1637" width="28.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1135.99" y="1647.5" >sh</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,648,764 samples, 0.42%)</title><rect x="533.1" y="261" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="536.10" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,648,764 samples, 0.42%)</title><rect x="533.1" y="245" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="536.10" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="949" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (50,328,028 samples, 0.07%)</title><rect x="318.8" y="1253" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="321.82" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="757" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (50,364,458 samples, 0.07%)</title><rect x="654.5" y="1077" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="657.53" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1381" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="341" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="351.5" >std::__detai..</text>
</g>
<g >
<title>destroy_inode (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1445" width="6.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="88.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1013" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1023.5" ></text>
</g>
<g >
<title>operator new (49,403,960 samples, 0.07%)</title><rect x="648.7" y="1077" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="651.70" y="1087.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1615.5" ></text>
</g>
<g >
<title>do_statx (25,088,185 samples, 0.04%)</title><rect x="400.9" y="1557" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="403.95" y="1567.5" ></text>
</g>
<g >
<title>operator new (50,345,789 samples, 0.07%)</title><rect x="632.8" y="869" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="635.85" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1429" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,596 samples, 0.14%)</title><rect x="864.0" y="165" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.00" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1445" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="373" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1125" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1135.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (24,962,596 samples, 0.04%)</title><rect x="413.1" y="1605" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="416.14" y="1615.5" ></text>
</g>
<g >
<title>proc_tgid_stat (37,356,275 samples, 0.05%)</title><rect x="1113.2" y="1477" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1116.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,032,777,062 samples, 11.28%)</title><rect x="522.3" y="1109" width="133.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1119.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="277" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="287.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__filemap_get_folio (704,657,146 samples, 0.99%)</title><rect x="259.4" y="1301" width="11.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="262.41" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1349" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1125" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1135.5" ></text>
</g>
<g >
<title>kcompactd (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1589" width="4.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="417.65" y="1599.5" ></text>
</g>
<g >
<title>rw_verify_area (201,168,246 samples, 0.28%)</title><rect x="373.3" y="1461" width="3.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="376.29" y="1471.5" ></text>
</g>
<g >
<title>cfree (807,923,377 samples, 1.13%)</title><rect x="1001.1" y="69" width="13.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1004.05" y="79.5" ></text>
</g>
<g >
<title>poll_idle (33,105,136 samples, 0.05%)</title><rect x="1120.2" y="1509" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1123.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="325" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="741" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1189" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,371,700 samples, 0.07%)</title><rect x="555.1" y="293" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="558.08" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1269" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,470,900,825 samples, 31.56%)</title><rect x="10.9" y="1589" width="372.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.94" y="1599.5" >[libc.so.6]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="901" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="149" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,332,913 samples, 0.07%)</title><rect x="619.3" y="805" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="622.35" y="815.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1589" width="5.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="499.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="533" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,083,141,448 samples, 11.35%)</title><rect x="521.4" y="1157" width="134.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="524.42" y="1167.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="709" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (603,427,637 samples, 0.85%)</title><rect x="711.4" y="1573" width="10.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="714.37" y="1583.5" ></text>
</g>
<g >
<title>get_page_from_freelist (50,375,994 samples, 0.07%)</title><rect x="268.6" y="1221" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="271.59" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="485" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1253" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="869" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="229" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="981" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="991.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (100,685,435 samples, 0.14%)</title><rect x="203.5" y="1317" width="1.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="206.54" y="1327.5" ></text>
</g>
<g >
<title>vfs_read (553,115,396 samples, 0.78%)</title><rect x="712.2" y="1509" width="9.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="715.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,377,286 samples, 0.07%)</title><rect x="637.9" y="917" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="640.86" y="927.5" ></text>
</g>
<g >
<title>folio_unlock (119,194,768 samples, 0.17%)</title><rect x="359.6" y="1317" width="2.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="362.64" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="261" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1471.5" ></text>
</g>
<g >
<title>generic_perform_write (7,525,613,389 samples, 10.57%)</title><rect x="241.9" y="1365" width="124.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="244.91" y="1375.5" >generic_perform..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="293" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,075,334,777 samples, 1.51%)</title><rect x="533.1" y="277" width="17.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="536.10" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1445" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="497.39" y="1455.5" ></text>
</g>
<g >
<title>cfree (200,699,890 samples, 0.28%)</title><rect x="506.9" y="1509" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="509.92" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="997" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="229" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="981" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="991.5" ></text>
</g>
<g >
<title>vfs_write (16,371,200,114 samples, 22.99%)</title><rect x="105.3" y="1477" width="271.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="108.34" y="1487.5" >vfs_write</text>
</g>
<g >
<title>do_iter_read (1,345,327,440 samples, 1.89%)</title><rect x="44.2" y="1429" width="22.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="47.19" y="1439.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="357" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="261" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="271.5" >std::__detai..</text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1525" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="498.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1541" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="773" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,368,739 samples, 0.07%)</title><rect x="599.3" y="661" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="602.33" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,383,375 samples, 0.07%)</title><rect x="496.9" y="181" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="191.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1573" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1116.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1429" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1439.5" ></text>
</g>
<g >
<title>security_file_permission (155,216,957 samples, 0.22%)</title><rect x="63.9" y="1397" width="2.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="66.92" y="1407.5" ></text>
</g>
<g >
<title>uv_spawn (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1541" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="497.39" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1109" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1119.5" ></text>
</g>
<g >
<title>down_read (50,256,224 samples, 0.07%)</title><rect x="256.1" y="1285" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="259.08" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="293" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1621" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="416.60" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (355,721,223 samples, 0.50%)</title><rect x="721.4" y="197" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (50,372,218 samples, 0.07%)</title><rect x="384.2" y="1621" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="387.15" y="1631.5" ></text>
</g>
<g >
<title>[bash] (815,290,189 samples, 1.14%)</title><rect x="1136.5" y="1413" width="13.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.47" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (1,450,427,703 samples, 2.04%)</title><rect x="1136.4" y="1525" width="24.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.38" y="1535.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="309" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="319.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__rcu_read_lock (50,260,313 samples, 0.07%)</title><rect x="205.2" y="1333" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="208.21" y="1343.5" ></text>
</g>
<g >
<title>fsnotify (104,469,011 samples, 0.15%)</title><rect x="29.6" y="1445" width="1.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="32.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (302,109,390 samples, 0.42%)</title><rect x="633.7" y="965" width="5.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="636.68" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="725" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,348,526 samples, 0.07%)</title><rect x="496.1" y="117" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="499.09" y="127.5" ></text>
</g>
<g >
<title>cp_statx (25,088,185 samples, 0.04%)</title><rect x="400.9" y="1541" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="403.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="773" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="213" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="223.5" ></text>
</g>
<g >
<title>sock_alloc (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1301" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1139.28" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1029" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="389" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="399.5" >std::__detai..</text>
</g>
<g >
<title>__x64_sys_getdents64 (8,235,098 samples, 0.01%)</title><rect x="396.7" y="1573" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="399.70" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1285" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,350,478 samples, 0.07%)</title><rect x="684.6" y="1301" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="687.55" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1125" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,075,334,777 samples, 1.51%)</title><rect x="533.1" y="293" width="17.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="536.10" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="469" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="479.5" ></text>
</g>
<g >
<title>aa_file_perm (51,651,924 samples, 0.07%)</title><rect x="71.6" y="1413" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="74.63" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1397" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="949" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,588,393 samples, 0.14%)</title><rect x="687.1" y="1365" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="690.06" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (100,688,118 samples, 0.14%)</title><rect x="732.3" y="101" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="735.27" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="309" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1237" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1247.5" ></text>
</g>
<g >
<title>main (1,484,592,234 samples, 2.08%)</title><rect x="1136.3" y="1573" width="24.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1139.28" y="1583.5" >m..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1525" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="325" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="885" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="895.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,744,596 samples, 0.14%)</title><rect x="864.0" y="181" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="867.00" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,125,685,552 samples, 1.58%)</title><rect x="532.3" y="325" width="18.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="535.26" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="837" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="261" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1221" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1231.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1557" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1116.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,008,168 samples, 0.35%)</title><rect x="1062.8" y="85" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (99,835,564 samples, 0.14%)</title><rect x="669.5" y="1205" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="672.52" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,173,556 samples, 0.14%)</title><rect x="513.6" y="1445" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="516.60" y="1455.5" ></text>
</g>
<g >
<title>cfree (50,316,609 samples, 0.07%)</title><rect x="647.9" y="1077" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="650.87" y="1087.5" ></text>
</g>
<g >
<title>[grep] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1621" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="403.51" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (251,292,986 samples, 0.35%)</title><rect x="533.9" y="229" width="4.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="536.93" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,735,822 samples, 0.14%)</title><rect x="604.3" y="677" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="607.33" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="501" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="511.5" ></text>
</g>
<g >
<title>do_statx (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1461" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="404.36" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="565" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (742,030,380 samples, 1.04%)</title><rect x="760.6" y="69" width="12.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="763.61" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="357" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="565" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1541" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1551.5" ></text>
</g>
<g >
<title>start_this_handle (464,145,892 samples, 0.65%)</title><rect x="292.7" y="1253" width="7.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="295.72" y="1263.5" ></text>
</g>
<g >
<title>xas_store (52,274,313 samples, 0.07%)</title><rect x="87.7" y="1269" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="90.70" y="1279.5" ></text>
</g>
<g >
<title>[bash] (1,456,466,804 samples, 2.05%)</title><rect x="1136.3" y="1557" width="24.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.28" y="1567.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1173" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1183.5" ></text>
</g>
<g >
<title>Glob::isIgnored (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1605" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="499.09" y="1615.5" ></text>
</g>
<g >
<title>filemap_release_folio (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1237" width="2.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="91.57" y="1247.5" ></text>
</g>
<g >
<title>do_idle (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1573" width="8.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1181.64" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1397" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1381" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1391.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>fsnotify (103,730,189 samples, 0.15%)</title><rect x="78.3" y="1397" width="1.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="81.34" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1493" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1092.84" y="1503.5" ></text>
</g>
<g >
<title>begin_new_exec (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1477" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1126.35" y="1487.5" ></text>
</g>
<g >
<title>operator new (100,729,643 samples, 0.14%)</title><rect x="588.5" y="549" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="591.48" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1477" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1487.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1573" width="5.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="499.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="549" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="559.5" ></text>
</g>
<g >
<title>malloc (50,146,232 samples, 0.07%)</title><rect x="586.8" y="549" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="589.81" y="559.5" ></text>
</g>
<g >
<title>refill_obj_stock (52,268,955 samples, 0.07%)</title><rect x="90.3" y="1125" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="93.30" y="1135.5" ></text>
</g>
<g >
<title>kernel_clone (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1541" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="414.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,347,542 samples, 0.07%)</title><rect x="632.0" y="869" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="635.02" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,399,377,760 samples, 6.18%)</title><rect x="526.4" y="661" width="72.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="529.42" y="671.5" >std::__d..</text>
</g>
<g >
<title>[libc.so.6] (50,361,624 samples, 0.07%)</title><rect x="575.1" y="469" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="578.11" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (52,259,238 samples, 0.07%)</title><rect x="80.9" y="1509" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="83.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1349" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,250,210 samples, 0.07%)</title><rect x="771.2" y="37" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="774.24" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="181" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="191.5" ></text>
</g>
<g >
<title>cfree (50,381,957 samples, 0.07%)</title><rect x="610.2" y="757" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="613.17" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1429" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1509" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1519.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1397" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="403.72" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="405" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="415.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>path_put (100,757,121 samples, 0.14%)</title><rect x="706.3" y="1445" width="1.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="709.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="773" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="805" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="815.5" ></text>
</g>
<g >
<title>d_hash_and_lookup (7,412,453 samples, 0.01%)</title><rect x="1111.1" y="1493" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1114.07" y="1503.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (6,403,845 samples, 0.01%)</title><rect x="1160.9" y="1365" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1163.89" y="1375.5" ></text>
</g>
<g >
<title>kmem_cache_free (104,549,824 samples, 0.15%)</title><rect x="89.4" y="1157" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="92.44" y="1167.5" ></text>
</g>
<g >
<title>v8::internal::JsonStringifier::Serialize_&lt;false&gt; (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1557" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="474.04" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (100,742,221 samples, 0.14%)</title><rect x="182.6" y="1349" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="185.60" y="1359.5" ></text>
</g>
<g >
<title>path_openat (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1525" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1114.22" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="805" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="341" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="351.5" ></text>
</g>
<g >
<title>uv__try_write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1541" width="7.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="466.80" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (16,538,694 samples, 0.02%)</title><rect x="396.2" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="517" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="527.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>operator new (452,708,174 samples, 0.64%)</title><rect x="744.8" y="1605" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="747.78" y="1615.5" ></text>
</g>
<g >
<title>__find_get_block (100,206,638 samples, 0.14%)</title><rect x="357.1" y="1205" width="1.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="360.15" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="149" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="159.5" ></text>
</g>
<g >
<title>__fget_light (101,995,902 samples, 0.14%)</title><rect x="23.7" y="1461" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="26.66" y="1471.5" ></text>
</g>
<g >
<title>__check_object_size (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1493" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1114.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,331,660 samples, 0.07%)</title><rect x="606.8" y="677" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="609.84" y="687.5" ></text>
</g>
<g >
<title>operator new (150,129,446 samples, 0.21%)</title><rect x="499.4" y="197" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="502.43" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="245" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="255.5" ></text>
</g>
<g >
<title>begin_new_exec (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1477" width="8.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1093.53" y="1487.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8,279,398,063 samples, 11.63%)</title><rect x="231.9" y="1413" width="137.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="234.92" y="1423.5" >do_iter_readv_wri..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="357" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="367.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (50,373,560 samples, 0.07%)</title><rect x="256.9" y="1269" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="259.91" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (604,213,362 samples, 0.85%)</title><rect x="852.3" y="101" width="10.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="855.32" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1317" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1327.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1221" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="869" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="879.5" ></text>
</g>
<g >
<title>search_binary_handler (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1509" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="400.01" y="1519.5" ></text>
</g>
<g >
<title>expand_string_assignment (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1285" width="13.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1139.52" y="1295.5" ></text>
</g>
<g >
<title>lockref_get (7,757,419 samples, 0.01%)</title><rect x="1111.2" y="1461" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1114.22" y="1471.5" ></text>
</g>
<g >
<title>kfree (100,685,382 samples, 0.14%)</title><rect x="719.7" y="1445" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="722.70" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (402,826,519 samples, 0.57%)</title><rect x="1052.8" y="69" width="6.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1055.80" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,378,302 samples, 0.07%)</title><rect x="890.7" y="37" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="893.66" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="399.32" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1621" width="10.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1170.84" y="1631.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1269" width="2.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="91.57" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,553,585 samples, 0.71%)</title><rect x="865.7" y="117" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="917" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (251,826,117 samples, 0.35%)</title><rect x="638.7" y="1029" width="4.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="641.69" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1605" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1121.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="245" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="255.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1429" width="6.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="88.11" y="1439.5" ></text>
</g>
<g >
<title>strcmp (50,374,853 samples, 0.07%)</title><rect x="210.2" y="1365" width="0.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="213.20" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="373" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1173" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1183.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1573" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="497.39" y="1583.5" ></text>
</g>
<g >
<title>vfs_iter_write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1381" width="11.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1102.25" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1573" width="2.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1190.38" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="533" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="543.5" ></text>
</g>
<g >
<title>exec_mmap (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1461" width="8.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1093.53" y="1471.5" ></text>
</g>
<g >
<title>try_to_unlazy (100,677,194 samples, 0.14%)</title><rect x="698.0" y="1397" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="701.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1461" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="453" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="463.5" ></text>
</g>
<g >
<title>do_idle (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1573" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1135.87" y="1583.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1,207,172,283 samples, 1.70%)</title><rect x="251.9" y="1349" width="20.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="254.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1173" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1183.5" ></text>
</g>
<g >
<title>ksys_read (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1557" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1121.00" y="1567.5" ></text>
</g>
<g >
<title>malloc (100,732,184 samples, 0.14%)</title><rect x="862.3" y="69" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="865.33" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="389" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="773" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="783.5" ></text>
</g>
<g >
<title>__cmd_record (713,790,808 samples, 1.00%)</title><rect x="1099.0" y="1605" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1102.02" y="1615.5" ></text>
</g>
<g >
<title>cpu_startup_entry (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1541" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1123.91" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,334,801 samples, 0.07%)</title><rect x="668.7" y="1189" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="671.69" y="1199.5" ></text>
</g>
<g >
<title>perf_mmap__push (698,806,320 samples, 0.98%)</title><rect x="1099.2" y="1557" width="11.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1102.22" y="1567.5" ></text>
</g>
<g >
<title>cfree (50,340,217 samples, 0.07%)</title><rect x="558.4" y="373" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="561.45" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (289,093,721 samples, 0.41%)</title><rect x="766.5" y="37" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="769.45" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1605" width="8.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1093.53" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="933" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="943.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1557" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1127.57" y="1567.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (52,268,955 samples, 0.07%)</title><rect x="90.3" y="1141" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="93.30" y="1151.5" ></text>
</g>
<g >
<title>setlocale (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1557" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="399.50" y="1567.5" ></text>
</g>
<g >
<title>override_creds (50,362,026 samples, 0.07%)</title><rect x="701.3" y="1349" width="0.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="704.34" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,368,436 samples, 0.07%)</title><rect x="650.4" y="1061" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="653.36" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1205" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1215.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>_raw_spin_lock (50,807,435 samples, 0.07%)</title><rect x="713.0" y="1493" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="716.03" y="1503.5" ></text>
</g>
<g >
<title>page_copy_sane (99,943,243 samples, 0.14%)</title><rect x="247.8" y="1333" width="1.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="250.75" y="1343.5" ></text>
</g>
<g >
<title>exec_mmap (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1461" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="416.60" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1541" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1551.5" ></text>
</g>
<g >
<title>__fsnotify_parent (6,329,749,980 samples, 8.89%)</title><rect x="109.5" y="1461" width="104.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="112.51" y="1471.5" >__fsnotify_p..</text>
</g>
<g >
<title>unmap_page_range (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1365" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1126.35" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="805" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="815.5" ></text>
</g>
<g >
<title>unmap_page_range (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1365" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1163.99" y="1375.5" ></text>
</g>
<g >
<title>override_creds (103,894,650 samples, 0.15%)</title><rect x="38.2" y="1429" width="1.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="41.23" y="1439.5" ></text>
</g>
<g >
<title>[perf-3932766.map] (510,998,130 samples, 0.72%)</title><rect x="485.8" y="1621" width="8.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="488.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,744,596 samples, 0.14%)</title><rect x="864.0" y="117" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.00" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="933" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1237" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,924,254,197 samples, 23.77%)</title><rect x="100.3" y="1525" width="280.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="103.35" y="1535.5" >do_syscall_64</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (501,951,005 samples, 0.70%)</title><rect x="874.0" y="117" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="877.00" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1487.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1605" width="2.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1136.76" y="1615.5" ></text>
</g>
<g >
<title>do_exit (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1493" width="10.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1170.84" y="1503.5" ></text>
</g>
<g >
<title>[ls] (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1557" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="404.36" y="1567.5" ></text>
</g>
<g >
<title>do_idle (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1525" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="425.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,342,090,613 samples, 4.69%)</title><rect x="528.1" y="565" width="55.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="531.09" y="575.5" >std::..</text>
</g>
<g >
<title>seq_path_root (25,118,428 samples, 0.04%)</title><rect x="1124.1" y="1493" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1127.09" y="1503.5" ></text>
</g>
<g >
<title>mnt_user_ns (51,743,195 samples, 0.07%)</title><rect x="37.4" y="1413" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="40.38" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (51,455,926 samples, 0.07%)</title><rect x="27.1" y="1445" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="30.07" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (33,975,798 samples, 0.05%)</title><rect x="412.6" y="1557" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="415.58" y="1567.5" ></text>
</g>
<g >
<title>seq_escape_mem (22,768,049 samples, 0.03%)</title><rect x="1123.7" y="1477" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1126.71" y="1487.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1621" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1135.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="805" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="815.5" ></text>
</g>
<g >
<title>do_futex (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1477" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1092.84" y="1487.5" ></text>
</g>
<g >
<title>[bash] (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1317" width="10.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1153.03" y="1327.5" ></text>
</g>
<g >
<title>operator new (270,507,660 samples, 0.38%)</title><rect x="543.1" y="245" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="546.10" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1285" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1295.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (52,175,682 samples, 0.07%)</title><rect x="84.2" y="1493" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="87.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="789" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,392,474,622 samples, 4.76%)</title><rect x="527.3" y="581" width="56.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="530.26" y="591.5" >std::..</text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (103,980,246 samples, 0.15%)</title><rect x="35.7" y="1381" width="1.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="38.65" y="1391.5" ></text>
</g>
<g >
<title>rw_verify_area (155,216,957 samples, 0.22%)</title><rect x="63.9" y="1413" width="2.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="66.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,719,162,775 samples, 15.05%)</title><rect x="511.9" y="1509" width="177.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="514.93" y="1519.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="421" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="277" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="645" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="869" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="879.5" ></text>
</g>
<g >
<title>kernfs_dop_revalidate (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1461" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1126.23" y="1471.5" ></text>
</g>
<g >
<title>ovl_getattr (50,341,068 samples, 0.07%)</title><rect x="709.7" y="1429" width="0.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="712.67" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="613" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="623.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1509" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1120.40" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1269" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1279.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="213" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="223.5" ></text>
</g>
<g >
<title>__entry_text_start (302,039,235 samples, 0.42%)</title><rect x="94.5" y="1541" width="5.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="97.51" y="1551.5" ></text>
</g>
<g >
<title>__handle_mm_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1173" width="10.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1153.03" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,318,752 samples, 0.07%)</title><rect x="622.7" y="805" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="625.68" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (16,538,694 samples, 0.02%)</title><rect x="396.2" y="1605" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.21" y="1615.5" ></text>
</g>
<g >
<title>dget_parent (51,441,388 samples, 0.07%)</title><rect x="27.9" y="1445" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="30.92" y="1455.5" ></text>
</g>
<g >
<title>__fdget_pos (151,122,527 samples, 0.21%)</title><rect x="102.0" y="1477" width="2.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="105.02" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_JsonStringify (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1589" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="474.04" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1189" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1199.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (52,360,824 samples, 0.07%)</title><rect x="462.8" y="1605" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="465.84" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="853" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="863.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (50,377,699 samples, 0.07%)</title><rect x="706.3" y="1429" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="709.34" y="1439.5" ></text>
</g>
<g >
<title>xas_load (153,134,672 samples, 0.22%)</title><rect x="59.7" y="1317" width="2.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="62.66" y="1327.5" ></text>
</g>
<g >
<title>operator new@plt (50,150,646 samples, 0.07%)</title><rect x="731.4" y="101" width="0.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="734.43" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="213" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="223.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__socket (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1397" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1139.28" y="1407.5" ></text>
</g>
<g >
<title>malloc (50,338,482 samples, 0.07%)</title><rect x="568.4" y="405" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="571.44" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="661" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1397" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="437" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="447.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1269" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1279.5" ></text>
</g>
<g >
<title>lockref_put_return (50,379,422 samples, 0.07%)</title><rect x="707.2" y="1429" width="0.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="710.17" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,378,699 samples, 0.07%)</title><rect x="542.3" y="229" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="545.27" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,980,804 samples, 0.21%)</title><rect x="1067.0" y="69" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1069.98" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,100,834 samples, 0.21%)</title><rect x="639.5" y="997" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="642.52" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1477" width="11.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1102.25" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (100,291,399 samples, 0.14%)</title><rect x="607.7" y="693" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="610.67" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="549" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="559.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,366,718 samples, 0.07%)</title><rect x="597.7" y="629" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="600.66" y="639.5" ></text>
</g>
<g >
<title>mas_destroy (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1253" width="0.1" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1136.00" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1381" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1391.5" ></text>
</g>
<g >
<title>operator new (100,042,939 samples, 0.14%)</title><rect x="758.1" y="85" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="761.12" y="95.5" ></text>
</g>
<g >
<title>ttwu_do_activate (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1509" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1127.57" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,301,437 samples, 0.07%)</title><rect x="569.3" y="517" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="572.27" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1029" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1029" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1205" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1445" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1455.5" ></text>
</g>
<g >
<title>vma_mas_store (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1349" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="403.72" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="853" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="245" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1061" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="197" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="207.5" ></text>
</g>
<g >
<title>__buffer_migrate_folio (202,365,815 samples, 0.28%)</title><rect x="415.5" y="1461" width="3.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="418.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1493" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1503.5" ></text>
</g>
<g >
<title>uv__writev (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1525" width="7.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="466.80" y="1535.5" ></text>
</g>
<g >
<title>__kmem_cache_free (50,373,949 samples, 0.07%)</title><rect x="191.0" y="1349" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="194.05" y="1359.5" ></text>
</g>
<g >
<title>operator new (101,556,896 samples, 0.14%)</title><rect x="510.3" y="1509" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="513.25" y="1519.5" ></text>
</g>
<g >
<title>malloc (52,532,020 samples, 0.07%)</title><rect x="579.3" y="469" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="582.28" y="479.5" ></text>
</g>
<g >
<title>__file_remove_privs (50,346,602 samples, 0.07%)</title><rect x="216.9" y="1445" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="219.90" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (1,444,999,997 samples, 2.03%)</title><rect x="1136.5" y="1477" width="23.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.47" y="1487.5" >e..</text>
</g>
<g >
<title>file_modified (50,315,339 samples, 0.07%)</title><rect x="367.4" y="1381" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="370.45" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="597" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="607.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>start_secondary (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1605" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1135.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="437" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="405" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="415.5" ></text>
</g>
<g >
<title>__fget_light (151,122,527 samples, 0.21%)</title><rect x="102.0" y="1461" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="105.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="133" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1493" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1589" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="400.01" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (100,737,617 samples, 0.14%)</title><rect x="165.9" y="1349" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="168.92" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="773" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="783.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1429" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_read (603,427,637 samples, 0.85%)</title><rect x="711.4" y="1541" width="10.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="714.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="325" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="335.5" ></text>
</g>
<g >
<title>[unknown] (713,790,808 samples, 1.00%)</title><rect x="1099.0" y="1621" width="11.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1102.02" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="629" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="639.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="677" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="687.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::string::_M_mutate (50,380,356 samples, 0.07%)</title><rect x="710.5" y="1541" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="713.51" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,111,462 samples, 0.03%)</title><rect x="396.7" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="399.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="693" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="703.5" ></text>
</g>
<g >
<title>from_kuid (49,571,825 samples, 0.07%)</title><rect x="349.7" y="1221" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="352.68" y="1231.5" ></text>
</g>
<g >
<title>[bash] (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1317" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1445" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1455.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1461" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1190.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1397" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,081,854 samples, 0.21%)</title><rect x="1074.5" y="85" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1333" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1343.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="757" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="693" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="949" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,222,198,967 samples, 8.74%)</title><rect x="524.8" y="901" width="103.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="527.76" y="911.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1237" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="437" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1253" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1263.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>cfree (100,759,638 samples, 0.14%)</title><rect x="635.4" y="949" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="638.35" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="709" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="719.5" ></text>
</g>
<g >
<title>begin_new_exec (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1477" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="400.01" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="373" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="383.5" ></text>
</g>
<g >
<title>pointer (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1413" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1114.76" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="469" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="479.5" ></text>
</g>
<g >
<title>__sys_socket (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1333" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1139.28" y="1343.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1589" width="0.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="497.39" y="1599.5" ></text>
</g>
<g >
<title>mas_store (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1333" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="497.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1221" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1231.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (151,056,389 samples, 0.21%)</title><rect x="378.3" y="1493" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="381.29" y="1503.5" ></text>
</g>
<g >
<title>copy_page_to_iter (52,131,111 samples, 0.07%)</title><rect x="45.0" y="1365" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="48.05" y="1375.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1573" width="8.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1093.53" y="1583.5" ></text>
</g>
<g >
<title>v8::internal::JsonStringify (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1573" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="474.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="853" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="863.5" ></text>
</g>
<g >
<title>strcpy (50,374,865 samples, 0.07%)</title><rect x="211.9" y="1397" width="0.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="214.87" y="1407.5" ></text>
</g>
<g >
<title>mas_leaf_max_gap (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1205" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="497.64" y="1215.5" ></text>
</g>
<g >
<title>established_get_next (6,462,132 samples, 0.01%)</title><rect x="1118.0" y="1461" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1121.00" y="1471.5" ></text>
</g>
<g >
<title>Glob::isIgnored (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1589" width="5.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="731.93" y="1599.5" ></text>
</g>
<g >
<title>main (22,470,900,825 samples, 31.56%)</title><rect x="10.9" y="1573" width="372.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.94" y="1583.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,354,051 samples, 0.07%)</title><rect x="728.9" y="101" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1013" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1023.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (201,306,160 samples, 0.28%)</title><rect x="167.6" y="1349" width="3.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="170.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1061" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1071.5" ></text>
</g>
<g >
<title>rb_insert_color (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1461" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1127.57" y="1471.5" ></text>
</g>
<g >
<title>migrate_pages (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1541" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="417.65" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,450,491 samples, 0.14%)</title><rect x="575.9" y="501" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="578.95" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (816,220,725 samples, 1.15%)</title><rect x="613.5" y="837" width="13.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="616.51" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_futex (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1589" width="8.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1127.90" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1173" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,038,491 samples, 0.21%)</title><rect x="666.2" y="1189" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="669.19" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,087,842,415 samples, 12.76%)</title><rect x="520.6" y="1253" width="150.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="523.58" y="1263.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1077" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1349" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="453" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1557" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1567.5" ></text>
</g>
<g >
<title>exit_mmap (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1413" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="416.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1493" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1493" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1503.5" ></text>
</g>
<g >
<title>[perf-3857800.map] (428,553,736 samples, 0.60%)</title><rect x="478.7" y="1621" width="7.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="481.71" y="1631.5" ></text>
</g>
<g >
<title>inotify_read (451,973,928 samples, 0.63%)</title><rect x="713.9" y="1493" width="7.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="716.88" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,121,452,629 samples, 8.60%)</title><rect x="525.6" y="885" width="101.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="895.5" >std::__detai..</text>
</g>
<g >
<title>___slab_alloc (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1205" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1139.28" y="1215.5" ></text>
</g>
<g >
<title>isolate_freepages (44,630,621 samples, 0.06%)</title><rect x="418.9" y="1493" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="421.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,746,418 samples, 0.14%)</title><rect x="727.3" y="197" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="730.26" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,055,626,860 samples, 1.48%)</title><rect x="693.0" y="1525" width="17.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="696.01" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1477" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1487.5" ></text>
</g>
<g >
<title>setlocale (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1541" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1163.42" y="1551.5" ></text>
</g>
<g >
<title>__clone (12,605,327 samples, 0.02%)</title><rect x="1089.8" y="1621" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1092.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="245" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,305,231,904 samples, 7.45%)</title><rect x="525.6" y="837" width="87.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="847.5" >std::__det..</text>
</g>
<g >
<title>malloc (50,366,175 samples, 0.07%)</title><rect x="611.8" y="741" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="614.84" y="751.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1605" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1123.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,384,313 samples, 0.07%)</title><rect x="725.6" y="117" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="728.60" y="127.5" ></text>
</g>
<g >
<title>number (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1381" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1114.76" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1317" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1327.5" ></text>
</g>
<g >
<title>execute_command (815,290,189 samples, 1.14%)</title><rect x="1136.5" y="1445" width="13.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1139.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1317" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="245" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="255.5" ></text>
</g>
<g >
<title>malloc (100,716,564 samples, 0.14%)</title><rect x="561.8" y="341" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="564.77" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1493" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="399.32" y="1503.5" ></text>
</g>
<g >
<title>handle_pte_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1157" width="10.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1153.03" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="885" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="895.5" ></text>
</g>
<g >
<title>exit_mmap (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1413" width="8.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1093.53" y="1423.5" ></text>
</g>
<g >
<title>__unmap_and_move.constprop.0 (254,417,097 samples, 0.36%)</title><rect x="414.7" y="1509" width="4.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="417.65" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,445,049 samples, 0.64%)</title><rect x="1074.5" y="133" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1141" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1151.5" ></text>
</g>
<g >
<title>__sock_create (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1317" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1139.28" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,553,585 samples, 0.71%)</title><rect x="865.7" y="53" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="63.5" ></text>
</g>
<g >
<title>mas_store_prealloc (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1333" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="403.72" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="245" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="255.5" ></text>
</g>
<g >
<title>do_idle (8,409,210 samples, 0.01%)</title><rect x="1124.6" y="1573" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1127.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="229" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="239.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="677" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="687.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (14,115,495 samples, 0.02%)</title><rect x="1124.6" y="1621" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1127.55" y="1631.5" ></text>
</g>
<g >
<title>mmput (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1445" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1126.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="389" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,347,075 samples, 0.07%)</title><rect x="1076.1" y="69" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1079.15" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="853" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="229" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="239.5" ></text>
</g>
<g >
<title>[bash] (1,450,427,703 samples, 2.04%)</title><rect x="1136.4" y="1509" width="24.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.38" y="1519.5" >[..</text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1477" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1487.5" ></text>
</g>
<g >
<title>proc_pid_status (89,517,056 samples, 0.13%)</title><rect x="1111.8" y="1477" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1114.76" y="1487.5" ></text>
</g>
<g >
<title>do_idle (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1573" width="10.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="388.45" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,765,715 samples, 0.14%)</title><rect x="724.8" y="133" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="727.76" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_free (100,685,382 samples, 0.14%)</title><rect x="719.7" y="1429" width="1.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="722.70" y="1439.5" ></text>
</g>
<g >
<title>[[heap]] (154,212,817 samples, 0.22%)</title><rect x="397.9" y="1621" width="2.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="400.95" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (49,403,960 samples, 0.07%)</title><rect x="648.7" y="1045" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="651.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1509" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="949" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="959.5" ></text>
</g>
<g >
<title>security_inode_alloc (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1237" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1139.28" y="1247.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (103,699,561 samples, 0.15%)</title><rect x="62.2" y="1413" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="65.20" y="1423.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (100,379,823 samples, 0.14%)</title><rect x="351.3" y="1253" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="354.33" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="837" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="847.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (52,051,282 samples, 0.07%)</title><rect x="414.7" y="1477" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="417.65" y="1487.5" ></text>
</g>
<g >
<title>send_to_group (4,533,196,486 samples, 6.37%)</title><rect x="137.6" y="1429" width="75.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="140.59" y="1439.5" >send_to_..</text>
</g>
<g >
<title>do_syscall_64 (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1605" width="8.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1127.90" y="1615.5" ></text>
</g>
<g >
<title>execute_command_internal (809,434,006 samples, 1.14%)</title><rect x="1136.5" y="1221" width="13.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1139.53" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (402,717,633 samples, 0.57%)</title><rect x="583.5" y="581" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="586.47" y="591.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (4,842,151,364 samples, 6.80%)</title><rect x="279.4" y="1317" width="80.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="282.40" y="1327.5" >__mark_in..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="757" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1045" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1173" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1183.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="821" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="831.5" ></text>
</g>
<g >
<title>__libc_start_main (22,470,900,825 samples, 31.56%)</title><rect x="10.9" y="1605" width="372.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.94" y="1615.5" >__libc_start_main</text>
</g>
<g >
<title>[bash] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1525" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.28" y="1535.5" ></text>
</g>
<g >
<title>do_iter_write (8,430,431,153 samples, 11.84%)</title><rect x="231.1" y="1429" width="139.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="234.09" y="1439.5" >do_iter_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1301" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1311.5" ></text>
</g>
<g >
<title>getpwuid_r (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1493" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1139.28" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,334,037 samples, 0.14%)</title><rect x="547.6" y="245" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="550.59" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1509" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="325" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="335.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1573" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="581" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="229" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="239.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (904,875,199 samples, 1.27%)</title><rect x="332.1" y="1221" width="15.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="335.15" y="1231.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (16,538,694 samples, 0.02%)</title><rect x="396.2" y="1621" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="421" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="431.5" ></text>
</g>
<g >
<title>__pmd_alloc (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1429" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="414.19" y="1439.5" ></text>
</g>
<g >
<title>___slab_alloc (50,306,232 samples, 0.07%)</title><rect x="163.4" y="1349" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="166.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="677" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="687.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1285" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1045" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1055.5" ></text>
</g>
<g >
<title>mod_objcg_state (250,579,088 samples, 0.35%)</title><rect x="199.4" y="1317" width="4.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="202.39" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="501" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,347,075 samples, 0.07%)</title><rect x="1076.1" y="53" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1079.15" y="63.5" ></text>
</g>
<g >
<title>copy_pmd_range (15,019,738 samples, 0.02%)</title><rect x="494.4" y="1301" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="497.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1013" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1023.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__libc_start_main (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1605" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="403.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1061" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="965" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="975.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (100,692,699 samples, 0.14%)</title><rect x="245.3" y="1349" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="248.25" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="245" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="517" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="527.5" ></text>
</g>
<g >
<title>[grep] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="403.51" y="1583.5" ></text>
</g>
<g >
<title>xas_start (50,625,899 samples, 0.07%)</title><rect x="61.4" y="1301" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="64.36" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::OrdinaryDefineOwnProperty (37,129,336 samples, 0.05%)</title><rect x="495.3" y="1541" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="498.27" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,951,730 samples, 0.14%)</title><rect x="1087.8" y="133" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1090.79" y="143.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull (59,143,935 samples, 0.08%)</title><rect x="1112.3" y="1445" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1115.26" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1493" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1503.5" ></text>
</g>
<g >
<title>do_idle (163,141,905 samples, 0.23%)</title><rect x="419.6" y="1573" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="422.61" y="1583.5" ></text>
</g>
<g >
<title>iterate_dir (8,235,098 samples, 0.01%)</title><rect x="396.7" y="1557" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="399.70" y="1567.5" ></text>
</g>
<g >
<title>__wake_up (50,367,499 samples, 0.07%)</title><rect x="302.9" y="1253" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="305.92" y="1263.5" ></text>
</g>
<g >
<title>seq_read_iter (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1121.00" y="1503.5" ></text>
</g>
<g >
<title>operator new (50,146,232 samples, 0.07%)</title><rect x="586.8" y="565" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="589.81" y="575.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1237" width="10.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1153.03" y="1247.5" ></text>
</g>
<g >
<title>_dl_catch_exception (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1541" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="403.72" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1541" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1551.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="549" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="559.5" ></text>
</g>
<g >
<title>unmap_vmas (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1397" width="8.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1093.53" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1541" width="6.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="88.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="741" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1045" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1189" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1199.5" ></text>
</g>
<g >
<title>copy_pte_range (17,086,006 samples, 0.02%)</title><rect x="1117.7" y="1429" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1120.72" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::JsonStringifier::ApplyToJsonFunction (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1525" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="474.04" y="1535.5" ></text>
</g>
<g >
<title>_start (1,484,592,234 samples, 2.08%)</title><rect x="1136.3" y="1621" width="24.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1139.28" y="1631.5" >_..</text>
</g>
<g >
<title>get_signal (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1525" width="10.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1170.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="197" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1189" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1199.5" ></text>
</g>
<g >
<title>compaction_alloc (44,630,621 samples, 0.06%)</title><rect x="418.9" y="1509" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="421.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="341" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1173" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1183.5" >std::__detai..</text>
</g>
<g >
<title>ttwu_do_activate (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1509" width="10.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="388.45" y="1519.5" ></text>
</g>
<g >
<title>setlocale (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1557" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="404.90" y="1567.5" ></text>
</g>
<g >
<title>operator new (604,213,362 samples, 0.85%)</title><rect x="852.3" y="85" width="10.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="855.32" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="613" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="453" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="463.5" ></text>
</g>
<g >
<title>down_write (201,442,100 samples, 0.28%)</title><rect x="217.7" y="1445" width="3.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="220.74" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="885" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="895.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1557" width="8.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1181.64" y="1567.5" ></text>
</g>
<g >
<title>futex_wait_queue (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1445" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1092.84" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="437" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1221" width="10.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1153.03" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1477" width="7.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="466.80" y="1487.5" ></text>
</g>
<g >
<title>vm_normal_page (8,582,824 samples, 0.01%)</title><rect x="1118.1" y="1333" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1121.12" y="1343.5" ></text>
</g>
<g >
<title>ret_from_fork (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1621" width="4.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="417.65" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="389" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1557" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1567.5" ></text>
</g>
<g >
<title>schedule_idle (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1557" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1135.87" y="1567.5" ></text>
</g>
<g >
<title>ovl_override_creds (100,716,240 samples, 0.14%)</title><rect x="227.7" y="1445" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="230.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="821" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1141" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,338,482 samples, 0.07%)</title><rect x="568.4" y="437" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="571.44" y="447.5" ></text>
</g>
<g >
<title>malloc (1,415,961,103 samples, 1.99%)</title><rect x="810.5" y="85" width="23.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="813.52" y="95.5" >m..</text>
</g>
<g >
<title>[libc.so.6] (251,234,074 samples, 0.35%)</title><rect x="680.4" y="1317" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="683.39" y="1327.5" ></text>
</g>
<g >
<title>search_binary_handler (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1509" width="1.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1121.12" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (8,966,623 samples, 0.01%)</title><rect x="1120.9" y="1509" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1123.91" y="1519.5" ></text>
</g>
<g >
<title>cfree (201,425,111 samples, 0.28%)</title><rect x="571.8" y="501" width="3.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="574.77" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="581" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="165" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="175.5" ></text>
</g>
<g >
<title>map_id_up (99,987,132 samples, 0.14%)</title><rect x="348.0" y="1205" width="1.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="351.03" y="1215.5" ></text>
</g>
<g >
<title>malloc (49,403,960 samples, 0.07%)</title><rect x="648.7" y="1061" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="651.70" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1503.5" ></text>
</g>
<g >
<title>fdarray__poll (11,336,922 samples, 0.02%)</title><rect x="1099.0" y="1589" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1102.02" y="1599.5" ></text>
</g>
<g >
<title>mmap_region (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1365" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1136.00" y="1375.5" ></text>
</g>
<g >
<title>execute_command_internal (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1445" width="10.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1152.98" y="1455.5" ></text>
</g>
<g >
<title>copy_page_range (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1477" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="414.19" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1381" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1163.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="821" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (501,951,005 samples, 0.70%)</title><rect x="874.0" y="85" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="877.00" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="229" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="239.5" ></text>
</g>
<g >
<title>operator new (1,415,961,103 samples, 1.99%)</title><rect x="810.5" y="101" width="23.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="813.52" y="111.5" >o..</text>
</g>
<g >
<title>strncpy_from_user (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1509" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1114.35" y="1519.5" ></text>
</g>
<g >
<title>crypto_shash_update (653,590,191 samples, 0.92%)</title><rect x="336.3" y="1189" width="10.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="339.31" y="1199.5" ></text>
</g>
<g >
<title>uv__io_poll (18,926,757 samples, 0.03%)</title><rect x="1089.4" y="1605" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1092.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1109" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="261" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,154,217 samples, 0.07%)</title><rect x="567.6" y="421" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.61" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="901" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="911.5" >std::__detai..</text>
</g>
<g >
<title>cpu_startup_entry (163,141,905 samples, 0.23%)</title><rect x="419.6" y="1589" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="422.61" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="709" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1461" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1605" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="425.31" y="1615.5" ></text>
</g>
<g >
<title>set_default_locale (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1557" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.42" y="1567.5" ></text>
</g>
<g >
<title>operator new (50,357,067 samples, 0.07%)</title><rect x="631.2" y="885" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="634.18" y="895.5" ></text>
</g>
<g >
<title>strchr (25,118,428 samples, 0.04%)</title><rect x="1124.1" y="1477" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1127.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1429" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1439.5" >std::__detai..</text>
</g>
<g >
<title>ext4_file_write_iter (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1333" width="11.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1102.25" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="629" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1301" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1311.5" ></text>
</g>
<g >
<title>__cond_resched (100,704,067 samples, 0.14%)</title><rect x="107.8" y="1461" width="1.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="110.84" y="1471.5" ></text>
</g>
<g >
<title>initialize_shell_variables (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1541" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1139.28" y="1551.5" ></text>
</g>
<g >
<title>mas_wr_modify (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1301" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="497.64" y="1311.5" ></text>
</g>
<g >
<title>task_work_run (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1525" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1116.86" y="1535.5" ></text>
</g>
<g >
<title>exec_binprm (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1525" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="416.60" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1045" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_poll (6,490,580 samples, 0.01%)</title><rect x="1099.0" y="1525" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1102.02" y="1535.5" ></text>
</g>
<g >
<title>____fput (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1509" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1116.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1045" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1055.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1509" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="497.39" y="1519.5" ></text>
</g>
<g >
<title>do_iter_write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1365" width="11.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1102.25" y="1375.5" ></text>
</g>
<g >
<title>exit_mmap (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1413" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1121.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="373" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_write (33,975,798 samples, 0.05%)</title><rect x="412.6" y="1573" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="415.58" y="1583.5" ></text>
</g>
<g >
<title>filemap_add_folio (150,953,377 samples, 0.21%)</title><rect x="266.1" y="1285" width="2.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="269.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,841,712,790 samples, 15.23%)</title><rect x="882.3" y="149" width="179.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="159.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>futex_wait (7,197,541 samples, 0.01%)</title><rect x="1089.8" y="1461" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1092.84" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (503,539,414 samples, 0.71%)</title><rect x="1044.5" y="69" width="8.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1047.45" y="79.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (52,260,012 samples, 0.07%)</title><rect x="86.8" y="1221" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="89.84" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="933" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="943.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (52,260,012 samples, 0.07%)</title><rect x="86.8" y="1237" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="89.84" y="1247.5" ></text>
</g>
<g >
<title>[sleep] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1573" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1164.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="149" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="821" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="293" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,981,847,646 samples, 2.78%)</title><rect x="530.6" y="405" width="32.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.60" y="415.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (50,367,248 samples, 0.07%)</title><rect x="675.3" y="1237" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="678.35" y="1247.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1349" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="400.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="341" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="351.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,086,410,922 samples, 1.53%)</title><rect x="44.2" y="1397" width="18.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="47.19" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,417,538,665 samples, 14.63%)</title><rect x="516.1" y="1429" width="172.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="519.10" y="1439.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="997" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1007.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (7,638,801 samples, 0.01%)</title><rect x="414.5" y="1349" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="417.51" y="1359.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (52,260,012 samples, 0.07%)</title><rect x="86.8" y="1253" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="89.84" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (501,951,005 samples, 0.70%)</title><rect x="874.0" y="101" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="877.00" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1525" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="821" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="831.5" ></text>
</g>
<g >
<title>folio_migrate_mapping (50,465,392 samples, 0.07%)</title><rect x="418.0" y="1445" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="421.03" y="1455.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1557" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1567.5" ></text>
</g>
<g >
<title>ovl_override_creds (50,362,026 samples, 0.07%)</title><rect x="701.3" y="1365" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="704.34" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="965" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="975.5" >std::__detai..</text>
</g>
<g >
<title>dput (50,345,376 samples, 0.07%)</title><rect x="119.3" y="1445" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="122.29" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="757" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="767.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>revert_creds (100,652,714 samples, 0.14%)</title><rect x="702.2" y="1381" width="1.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="705.17" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="933" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="943.5" ></text>
</g>
<g >
<title>cfree (151,100,834 samples, 0.21%)</title><rect x="639.5" y="1013" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="642.52" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,537,972,323 samples, 26.03%)</title><rect x="755.6" y="1605" width="307.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="758.62" y="1615.5" >std::__detail::_Executor&lt;__gnu_cxx::__nor..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1541" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="837" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,383,375 samples, 0.07%)</title><rect x="496.9" y="213" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="223.5" ></text>
</g>
<g >
<title>ovl_i_path_real (50,338,573 samples, 0.07%)</title><rect x="699.7" y="1381" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="702.68" y="1391.5" ></text>
</g>
<g >
<title>cpu_startup_entry (62,751,032 samples, 0.09%)</title><rect x="1119.9" y="1589" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1122.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="981" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (50,335,922 samples, 0.07%)</title><rect x="598.5" y="629" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="601.49" y="639.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1573" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1121.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="917" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,026,655,425 samples, 9.87%)</title><rect x="522.3" y="1029" width="116.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="525.25" y="1039.5" >std::__detail:..</text>
</g>
<g >
<title>folio_wait_stable (50,010,220 samples, 0.07%)</title><rect x="271.1" y="1301" width="0.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="274.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1061" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,357,067 samples, 0.07%)</title><rect x="631.2" y="853" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="634.18" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="789" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="789" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="799.5" ></text>
</g>
<g >
<title>operator delete@plt (151,097,840 samples, 0.21%)</title><rect x="1021.9" y="69" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1024.95" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,593,548,616 samples, 13.47%)</title><rect x="519.7" y="1317" width="159.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="522.75" y="1327.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1157" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1167.5" ></text>
</g>
<g >
<title>__wake_up (150,932,020 samples, 0.21%)</title><rect x="308.8" y="1237" width="2.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="311.84" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1125" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1135.5" ></text>
</g>
<g >
<title>__legitimize_path (100,677,194 samples, 0.14%)</title><rect x="698.0" y="1381" width="1.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="701.01" y="1391.5" ></text>
</g>
<g >
<title>operator new (52,532,020 samples, 0.07%)</title><rect x="579.3" y="485" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="582.28" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="613" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="623.5" ></text>
</g>
<g >
<title>[grep] (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1621" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="399.50" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="741" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,675,063 samples, 0.02%)</title><rect x="400.5" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.51" y="1535.5" ></text>
</g>
<g >
<title>__tsearch (21,409,543 samples, 0.03%)</title><rect x="1160.5" y="1429" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1163.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="213" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="223.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (100,281,920 samples, 0.14%)</title><rect x="147.6" y="1397" width="1.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="150.60" y="1407.5" ></text>
</g>
<g >
<title>start_secondary (62,751,032 samples, 0.09%)</title><rect x="1119.9" y="1605" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1122.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1525" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1157" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (501,951,005 samples, 0.70%)</title><rect x="874.0" y="133" width="8.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="877.00" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,528,112,013 samples, 2.15%)</title><rect x="531.4" y="389" width="25.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="534.43" y="399.5" >s..</text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1205" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1136.00" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="213" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,449,746,499 samples, 6.25%)</title><rect x="526.4" y="693" width="73.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="529.42" y="703.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1109" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1119.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1605" width="5.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="499.93" y="1615.5" ></text>
</g>
<g >
<title>__do_sys_clone (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1413" width="0.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="497.39" y="1423.5" ></text>
</g>
<g >
<title>down_write (49,409,603 samples, 0.07%)</title><rect x="236.9" y="1365" width="0.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="239.93" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,449,746,499 samples, 6.25%)</title><rect x="526.4" y="709" width="73.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="529.42" y="719.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="741" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,792,196 samples, 0.03%)</title><rect x="401.9" y="1541" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="404.90" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="821" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="831.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__x64_sys_unlink (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1509" width="6.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="88.11" y="1519.5" ></text>
</g>
<g >
<title>__fdget_pos (33,975,798 samples, 0.05%)</title><rect x="412.6" y="1541" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="415.58" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_write (16,571,754,253 samples, 23.27%)</title><rect x="102.0" y="1509" width="274.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="105.02" y="1519.5" >__x64_sys_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1573" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1253" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1093" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1103.5" ></text>
</g>
<g >
<title>free_buffer_head (104,549,824 samples, 0.15%)</title><rect x="89.4" y="1173" width="1.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="92.44" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="181" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="965" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="975.5" ></text>
</g>
<g >
<title>kmalloc_slab (100,333,143 samples, 0.14%)</title><rect x="184.3" y="1365" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="187.27" y="1375.5" ></text>
</g>
<g >
<title>copy_mc_enhanced_fast_string (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1109" width="10.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1153.03" y="1119.5" ></text>
</g>
<g >
<title>single_release (33,274,135 samples, 0.05%)</title><rect x="1113.9" y="1477" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1116.90" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="981" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="991.5" ></text>
</g>
<g >
<title>std::string::insert (50,380,356 samples, 0.07%)</title><rect x="710.5" y="1557" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="713.51" y="1567.5" ></text>
</g>
<g >
<title>search_binary_handler (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1509" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1163.89" y="1519.5" ></text>
</g>
<g >
<title>radix_tree_lookup (50,326,997 samples, 0.07%)</title><rect x="246.1" y="1317" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="249.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="725" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="735.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (50,374,541 samples, 0.07%)</title><rect x="365.8" y="1349" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="368.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="805" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="815.5" ></text>
</g>
<g >
<title>vfs_read (52,214,060 samples, 0.07%)</title><rect x="1123.6" y="1557" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1126.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="469" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="479.5" ></text>
</g>
<g >
<title>lookup_fast (150,686,265 samples, 0.21%)</title><rect x="703.8" y="1381" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="706.84" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1525" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1093" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1103.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="597" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="607.5" >std::__detai..</text>
</g>
<g >
<title>evict (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1349" width="6.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="88.11" y="1359.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (6,281,122 samples, 0.01%)</title><rect x="1120.8" y="1509" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1123.80" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1519.5" ></text>
</g>
<g >
<title>unmap_page_range (53,493,953 samples, 0.08%)</title><rect x="397.0" y="1365" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="400.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="933" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="943.5" ></text>
</g>
<g >
<title>ksys_read (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1557" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1114.76" y="1567.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1317" width="11.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1102.25" y="1327.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (401,029,618 samples, 0.56%)</title><rect x="353.0" y="1237" width="6.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="356.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="309" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (16,538,694 samples, 0.02%)</title><rect x="396.2" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="277" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,618,460,561 samples, 14.91%)</title><rect x="513.6" y="1477" width="176.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="516.60" y="1487.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="981" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (501,906,996 samples, 0.70%)</title><rect x="662.9" y="1221" width="8.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="665.86" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="117" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="127.5" ></text>
</g>
<g >
<title>operator new (50,386,386 samples, 0.07%)</title><rect x="537.3" y="181" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="540.26" y="191.5" ></text>
</g>
<g >
<title>ovl_show_options (22,768,049 samples, 0.03%)</title><rect x="1123.7" y="1493" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1126.71" y="1503.5" ></text>
</g>
<g >
<title>sleep (24,250,441 samples, 0.03%)</title><rect x="1161.1" y="1637" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1164.11" y="1647.5" ></text>
</g>
<g >
<title>malloc (50,382,874 samples, 0.07%)</title><rect x="670.3" y="1173" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="673.34" y="1183.5" ></text>
</g>
<g >
<title>mas_split.isra.0 (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1253" width="0.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="497.64" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (201,410,029 samples, 0.28%)</title><rect x="594.3" y="613" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.32" y="623.5" ></text>
</g>
<g >
<title>dput (52,243,298 samples, 0.07%)</title><rect x="28.8" y="1445" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="31.77" y="1455.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (551,405,606 samples, 0.77%)</title><rect x="350.5" y="1269" width="9.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="353.50" y="1279.5" ></text>
</g>
<g >
<title>cpuidle_enter (158,395,118 samples, 0.22%)</title><rect x="1187.4" y="1493" width="2.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1190.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1333" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1141" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1151.5" ></text>
</g>
<g >
<title>do_sys_poll (6,490,580 samples, 0.01%)</title><rect x="1099.0" y="1509" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1102.02" y="1519.5" ></text>
</g>
<g >
<title>node (40,294,416,231 samples, 56.59%)</title><rect x="422.8" y="1637" width="667.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="425.81" y="1647.5" >node</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1061" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1141" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1151.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1541" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="400.01" y="1551.5" ></text>
</g>
<g >
<title>up_write (50,074,773 samples, 0.07%)</title><rect x="366.6" y="1365" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="369.62" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="197" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1439.5" ></text>
</g>
<g >
<title>dup_mmap (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1493" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1120.40" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1173" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1183.5" ></text>
</g>
<g >
<title>__slab_free (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1221" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1136.00" y="1231.5" ></text>
</g>
<g >
<title>ovl_write_iter (9,387,243,168 samples, 13.18%)</title><rect x="215.2" y="1461" width="155.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="218.23" y="1471.5" >ovl_write_iter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="453" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (742,030,380 samples, 1.04%)</title><rect x="760.6" y="85" width="12.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="763.61" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="581" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="591.5" ></text>
</g>
<g >
<title>__pagevec_release (104,549,042 samples, 0.15%)</title><rect x="85.1" y="1285" width="1.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="88.11" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1349" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1359.5" ></text>
</g>
<g >
<title>cache_from_obj (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1285" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="403.72" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1285" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1295.5" ></text>
</g>
<g >
<title>getpwuid (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1509" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1139.28" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,053,391,843 samples, 7.10%)</title><rect x="525.6" y="757" width="83.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="767.5" >std::__de..</text>
</g>
<g >
<title>read (4,325,157,366 samples, 6.07%)</title><rect x="13.4" y="1557" width="71.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="16.43" y="1567.5" >read</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1557" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (151,101,731 samples, 0.21%)</title><rect x="587.6" y="565" width="2.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="590.64" y="575.5" ></text>
</g>
<g >
<title>do_sys_openat2 (32,219,295 samples, 0.05%)</title><rect x="1111.2" y="1557" width="0.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1114.22" y="1567.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (50,327,071 samples, 0.07%)</title><rect x="381.6" y="1525" width="0.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="384.63" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,071,259 samples, 0.01%)</title><rect x="396.3" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.32" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1205" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1215.5" ></text>
</g>
<g >
<title>arch_call_rest_init (18,129,784 samples, 0.03%)</title><rect x="1120.9" y="1573" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1123.91" y="1583.5" ></text>
</g>
<g >
<title>record__mmap_read_all (702,453,871 samples, 0.99%)</title><rect x="1099.2" y="1589" width="11.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1102.21" y="1599.5" ></text>
</g>
<g >
<title>getname_flags (151,103,815 samples, 0.21%)</title><rect x="694.7" y="1461" width="2.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="697.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="885" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="895.5" ></text>
</g>
<g >
<title>cfree (100,763,619 samples, 0.14%)</title><rect x="497.8" y="197" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="500.76" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="501" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="511.5" ></text>
</g>
<g >
<title>drop_buffers.constprop.0 (52,280,359 samples, 0.07%)</title><rect x="88.6" y="1189" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="91.57" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_lock (151,007,160 samples, 0.21%)</title><rect x="114.5" y="1445" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="117.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="693" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="703.5" ></text>
</g>
<g >
<title>cfree (50,363,380 samples, 0.07%)</title><rect x="565.1" y="437" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="568.10" y="447.5" ></text>
</g>
<g >
<title>unmap_single_vma (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1381" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1126.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="741" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_execve (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1589" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="416.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="773" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="783.5" ></text>
</g>
<g >
<title>mast_fill_bnode (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1221" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="497.64" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="517" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="527.5" ></text>
</g>
<g >
<title>num_to_str (59,143,935 samples, 0.08%)</title><rect x="1112.3" y="1413" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1115.26" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1093" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1103.5" ></text>
</g>
<g >
<title>runc (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1637" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1135.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="485" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1493" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1503.5" ></text>
</g>
<g >
<title>__split_vma (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1317" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.00" y="1327.5" ></text>
</g>
<g >
<title>exec_mmap (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1461" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1121.12" y="1471.5" ></text>
</g>
<g >
<title>seq_printf (30,373,121 samples, 0.04%)</title><rect x="1111.8" y="1445" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1114.76" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1221" width="11.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.81" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="245" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="245" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="255.5" >std::__detai..</text>
</g>
<g >
<title>[libc.so.6] (100,732,924 samples, 0.14%)</title><rect x="723.1" y="133" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="726.09" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="277" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="287.5" ></text>
</g>
<g >
<title>mas_wr_bnode (38,029,227 samples, 0.05%)</title><rect x="494.6" y="1285" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="497.64" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="837" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,305,231,904 samples, 7.45%)</title><rect x="525.6" y="789" width="87.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="528.59" y="799.5" >std::__det..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (50,347,075 samples, 0.07%)</title><rect x="1076.1" y="37" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1079.15" y="47.5" ></text>
</g>
<g >
<title>[unknown] (18,111,462 samples, 0.03%)</title><rect x="396.7" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="399.70" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,291,708,058 samples, 4.62%)</title><rect x="528.9" y="533" width="54.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="531.93" y="543.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,951,730 samples, 0.14%)</title><rect x="1087.8" y="117" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1090.79" y="127.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1509" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="414.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1477" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1317" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1327.5" ></text>
</g>
<g >
<title>[bash] (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1413" width="10.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1152.98" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,381,750 samples, 0.07%)</title><rect x="565.9" y="405" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="568.94" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,121,452,629 samples, 8.60%)</title><rect x="525.6" y="869" width="101.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="528.59" y="879.5" >std::__detai..</text>
</g>
<g >
<title>exit_to_user_mode_loop (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1557" width="10.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1170.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1045" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1055.5" ></text>
</g>
<g >
<title>pagecache_get_page (804,960,804 samples, 1.13%)</title><rect x="258.6" y="1317" width="13.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="261.58" y="1327.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1349" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1126.35" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="565" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="453" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="463.5" >std::__detai..</text>
</g>
<g >
<title>exit_to_user_mode_loop (35,893,144 samples, 0.05%)</title><rect x="1113.9" y="1541" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1116.86" y="1551.5" ></text>
</g>
<g >
<title>malloc (270,507,660 samples, 0.38%)</title><rect x="543.1" y="229" width="4.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="546.10" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="949" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1109" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="405" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="415.5" ></text>
</g>
<g >
<title>copy_p4d_range (15,019,738 samples, 0.02%)</title><rect x="494.4" y="1317" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="497.39" y="1327.5" ></text>
</g>
<g >
<title>check_heap_object (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1461" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1114.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="437" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1077" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1087.5" >std::__detai..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50,202,815 samples, 0.07%)</title><rect x="309.7" y="1205" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="312.68" y="1215.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (558,860,561 samples, 0.78%)</title><rect x="302.1" y="1269" width="9.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="305.08" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1509" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="404.36" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (100,551,563 samples, 0.14%)</title><rect x="308.8" y="1221" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="311.84" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="421" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1029" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1039.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1573" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1163.89" y="1583.5" ></text>
</g>
<g >
<title>vma_mas_store (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1285" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1136.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1285" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1295.5" >std::__detai..</text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="741" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="751.5" ></text>
</g>
<g >
<title>malloc (50,348,526 samples, 0.07%)</title><rect x="496.1" y="85" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="499.09" y="95.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1541" width="10.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1170.84" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="869" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="879.5" ></text>
</g>
<g >
<title>operator new (250,353,514 samples, 0.35%)</title><rect x="446.2" y="1605" width="4.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="449.20" y="1615.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8,027,611,321 samples, 11.27%)</title><rect x="234.4" y="1381" width="133.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="237.42" y="1391.5" >ext4_buffered_wr..</text>
</g>
<g >
<title>[libc.so.6] (1,484,592,234 samples, 2.08%)</title><rect x="1136.3" y="1589" width="24.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1599.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,933,249 samples, 0.42%)</title><rect x="728.9" y="725" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="731.93" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1205" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.93" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="629" width="14.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1077.48" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="997" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1007.5" ></text>
</g>
<g >
<title>futex_wake_mark (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1541" width="8.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1127.90" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1061" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1071.5" >std::__detai..</text>
</g>
<g >
<title>[bash] (1,444,999,997 samples, 2.03%)</title><rect x="1136.5" y="1461" width="23.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.47" y="1471.5" >[..</text>
</g>
<g >
<title>inode_init_always (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1253" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1139.28" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,360,511 samples, 0.07%)</title><rect x="759.8" y="85" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="95.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (50,368,099 samples, 0.07%)</title><rect x="380.8" y="1525" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="383.79" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1525" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1077" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1087.5" ></text>
</g>
<g >
<title>_raw_read_lock (100,705,100 samples, 0.14%)</title><rect x="285.2" y="1253" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="288.23" y="1263.5" ></text>
</g>
<g >
<title>__xstat64 (1,163,451,165 samples, 1.63%)</title><rect x="691.2" y="1557" width="19.3" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="694.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="757" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="767.5" ></text>
</g>
<g >
<title>kvfree (33,274,135 samples, 0.05%)</title><rect x="1113.9" y="1461" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1116.90" y="1471.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (50,379,381 samples, 0.07%)</title><rect x="714.7" y="1445" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="717.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (251,840,061 samples, 0.35%)</title><rect x="609.3" y="773" width="4.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="612.33" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1013" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1023.5" >std::__detai..</text>
</g>
<g >
<title>kthread (299,047,718 samples, 0.42%)</title><rect x="414.7" y="1605" width="4.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="417.65" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1557" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1477" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1487.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (25,275,555 samples, 0.04%)</title><rect x="422.3" y="1461" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="425.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="677" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="687.5" ></text>
</g>
<g >
<title>expand_string_assignment (629,709,808 samples, 0.88%)</title><rect x="1150.0" y="1381" width="10.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.98" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1573" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1121.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="677" width="16.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,332,442 samples, 0.07%)</title><rect x="686.2" y="1381" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="689.22" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1413" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (553,840,735 samples, 0.78%)</title><rect x="882.3" y="85" width="9.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="95.5" ></text>
</g>
<g >
<title>walk_component (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1493" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1126.23" y="1503.5" ></text>
</g>
<g >
<title>__fsnotify_parent (457,943,535 samples, 0.64%)</title><rect x="73.3" y="1413" width="7.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="76.32" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,065,289,548 samples, 14.13%)</title><rect x="518.6" y="1365" width="166.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="521.60" y="1375.5" >std::__detail::_Execu..</text>
</g>
<g >
<title>record__mmap_read_evlist (702,453,871 samples, 0.99%)</title><rect x="1099.2" y="1573" width="11.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1102.21" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (649,798,296 samples, 0.91%)</title><rect x="385.4" y="1589" width="10.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="388.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1237" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="613" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,746,418 samples, 0.14%)</title><rect x="727.3" y="229" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="730.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,106,606,698 samples, 1.55%)</title><rect x="834.0" y="101" width="18.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="836.98" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="485" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1461" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="1471.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>memset_erms (50,361,829 samples, 0.07%)</title><rect x="291.9" y="1253" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="294.89" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1461" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="497.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="901" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1205" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1215.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1621" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="403.72" y="1631.5" ></text>
</g>
<g >
<title>v8::internal::JsonStringifier::Serialize_&lt;true&gt; (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1541" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="474.04" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (6,330,602 samples, 0.01%)</title><rect x="471.0" y="1605" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="474.04" y="1615.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (50,159,572 samples, 0.07%)</title><rect x="708.0" y="1429" width="0.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="711.01" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1525" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1535.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (150,937,875 samples, 0.21%)</title><rect x="361.6" y="1349" width="2.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="364.62" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (30,460,295 samples, 0.04%)</title><rect x="422.3" y="1541" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="425.31" y="1551.5" ></text>
</g>
<g >
<title>proc_reg_read (7,003,534 samples, 0.01%)</title><rect x="1118.0" y="1525" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1121.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="789" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="799.5" ></text>
</g>
<g >
<title>uv__work_done (9,682,184 samples, 0.01%)</title><rect x="1089.5" y="1573" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1092.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="293" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="645" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="655.5" ></text>
</g>
<g >
<title>mt_find (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1525" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1136.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1221" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1231.5" ></text>
</g>
<g >
<title>cfree (154,564,667 samples, 0.22%)</title><rect x="722.2" y="149" width="2.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="725.20" y="159.5" ></text>
</g>
<g >
<title>exec_binprm (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1126.35" y="1535.5" ></text>
</g>
<g >
<title>runc:[2:INIT] (487,918,654 samples, 0.69%)</title><rect x="1124.8" y="1637" width="8.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1127.79" y="1647.5" ></text>
</g>
<g >
<title>prepare_task_switch (6,281,122 samples, 0.01%)</title><rect x="1120.8" y="1525" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1123.80" y="1535.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1605" width="5.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="731.93" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="885" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="895.5" >std::__detai..</text>
</g>
<g >
<title>find_vma (152,211,144 samples, 0.21%)</title><rect x="1133.8" y="1541" width="2.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1136.76" y="1551.5" ></text>
</g>
<g >
<title>seq_read (126,873,331 samples, 0.18%)</title><rect x="1111.8" y="1525" width="2.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1114.76" y="1535.5" ></text>
</g>
<g >
<title>__d_lookup (7,412,453 samples, 0.01%)</title><rect x="1111.1" y="1477" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1114.07" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="421" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (481,202,767 samples, 0.68%)</title><rect x="1124.9" y="1621" width="8.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1127.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1429" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1439.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>[libc.so.6] (12,950,010 samples, 0.02%)</title><rect x="1161.3" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.27" y="1455.5" ></text>
</g>
<g >
<title>operator new (150,158,661 samples, 0.21%)</title><rect x="1085.3" y="133" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1088.30" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_statx (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1477" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="404.36" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="661" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="671.5" ></text>
</g>
<g >
<title>page_remove_rmap (6,799,010 samples, 0.01%)</title><rect x="414.5" y="1317" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="417.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="629" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="639.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1477" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1487.5" >std::__detai..</text>
</g>
<g >
<title>write (696,998,046 samples, 0.98%)</title><rect x="1099.2" y="1493" width="11.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1102.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1397" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1407.5" ></text>
</g>
<g >
<title>do_epoll_wait (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1557" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="414.93" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,055,626,860 samples, 1.48%)</title><rect x="693.0" y="1541" width="17.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="696.01" y="1551.5" ></text>
</g>
<g >
<title>dget_parent (137,547,952 samples, 0.19%)</title><rect x="117.0" y="1445" width="2.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="120.01" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="789" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="799.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1125" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1135.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>queued_write_lock_slowpath (652,059,742 samples, 0.92%)</title><rect x="1167.8" y="1461" width="10.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1170.84" y="1471.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1381" width="6.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="88.11" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="501" width="180.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.32" y="511.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,553,585 samples, 0.71%)</title><rect x="865.7" y="69" width="8.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="79.5" ></text>
</g>
<g >
<title>__fget_light (49,431,612 samples, 0.07%)</title><rect x="104.5" y="1477" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="107.52" y="1487.5" ></text>
</g>
<g >
<title>kernel_clone (35,984,091 samples, 0.05%)</title><rect x="1117.4" y="1541" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1120.40" y="1551.5" ></text>
</g>
<g >
<title>add_transaction_credits (99,556,384 samples, 0.14%)</title><rect x="298.8" y="1237" width="1.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="301.76" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="309" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="319.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1541" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="416.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,739,781 samples, 0.14%)</title><rect x="649.5" y="1077" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="652.52" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,087,842,415 samples, 12.76%)</title><rect x="520.6" y="1237" width="150.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="523.58" y="1247.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (50,190,638 samples, 0.07%)</title><rect x="626.2" y="821" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="629.20" y="831.5" ></text>
</g>
<g >
<title>ovl_copyattr (352,441,489 samples, 0.49%)</title><rect x="221.1" y="1445" width="5.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="224.07" y="1455.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (804,960,804 samples, 1.13%)</title><rect x="258.6" y="1333" width="13.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="261.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1109" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="469" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="479.5" ></text>
</g>
<g >
<title>ps (625,254,249 samples, 0.88%)</title><rect x="1110.8" y="1637" width="10.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1113.85" y="1647.5" ></text>
</g>
<g >
<title>security_file_permission (50,352,831 samples, 0.07%)</title><rect x="370.0" y="1413" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="372.95" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,345,696 samples, 0.07%)</title><rect x="661.2" y="1141" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="664.19" y="1151.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (150,346,083 samples, 0.21%)</title><rect x="321.3" y="1237" width="2.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="324.32" y="1247.5" ></text>
</g>
<g >
<title>search_binary_handler (63,685,009 samples, 0.09%)</title><rect x="413.6" y="1509" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="416.60" y="1519.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,086,410,922 samples, 1.53%)</title><rect x="44.2" y="1413" width="18.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="47.19" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_write_end (690,556,594 samples, 0.97%)</title><rect x="1099.4" y="1285" width="11.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1102.35" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (603,427,637 samples, 0.85%)</title><rect x="711.4" y="1557" width="10.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="714.37" y="1567.5" ></text>
</g>
<g >
<title>operator delete (50,367,168 samples, 0.07%)</title><rect x="611.0" y="757" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="614.00" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1573" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="414.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="965" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1429" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1439.5" ></text>
</g>
<g >
<title>ovl_read_iter (2,171,466,593 samples, 3.05%)</title><rect x="31.4" y="1461" width="36.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="34.37" y="1471.5" >ovl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (502,553,585 samples, 0.71%)</title><rect x="865.7" y="101" width="8.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="868.67" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="597" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="607.5" ></text>
</g>
<g >
<title>perf (713,790,808 samples, 1.00%)</title><rect x="1099.0" y="1637" width="11.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1102.02" y="1647.5" ></text>
</g>
<g >
<title>__cond_resched (50,188,753 samples, 0.07%)</title><rect x="113.7" y="1445" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="116.68" y="1455.5" ></text>
</g>
<g >
<title>bprm_execve (512,557,729 samples, 0.72%)</title><rect x="1090.5" y="1557" width="8.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1093.53" y="1567.5" ></text>
</g>
<g >
<title>memset_erms (50,382,030 samples, 0.07%)</title><rect x="696.3" y="1429" width="0.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="699.34" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,950,010 samples, 0.02%)</title><rect x="1161.3" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.27" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="485" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="495.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (11,445,209 samples, 0.02%)</title><rect x="400.7" y="1413" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="403.72" y="1423.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8,178,653,497 samples, 11.49%)</title><rect x="233.6" y="1397" width="135.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="236.59" y="1407.5" >ext4_file_write_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1445" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1455.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="613" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="623.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>__file_remove_privs (100,480,226 samples, 0.14%)</title><rect x="240.2" y="1333" width="1.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="243.25" y="1343.5" ></text>
</g>
<g >
<title>jbd2__journal_start (916,433,445 samples, 1.29%)</title><rect x="285.2" y="1269" width="15.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="288.23" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="693" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="703.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1013" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1023.5" ></text>
</g>
<g >
<title>kernel_clone (53,048,965 samples, 0.07%)</title><rect x="494.4" y="1397" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="497.39" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,086,330 samples, 0.01%)</title><rect x="1099.0" y="1541" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1102.02" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (251,579,198 samples, 0.35%)</title><rect x="729.8" y="117" width="4.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="732.76" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="997" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1221" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_statx (25,088,185 samples, 0.04%)</title><rect x="400.9" y="1573" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="403.95" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1365" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1139.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="965" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,795,192,255 samples, 5.33%)</title><rect x="527.3" y="629" width="62.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="530.26" y="639.5" >std::_..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (201,434,920 samples, 0.28%)</title><rect x="651.2" y="1077" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="654.19" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (201,248,511 samples, 0.28%)</title><rect x="685.4" y="1413" width="3.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="688.39" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="997" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1007.5" >std::__detai..</text>
</g>
<g >
<title>malloc (150,158,661 samples, 0.21%)</title><rect x="1085.3" y="117" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1088.30" y="127.5" ></text>
</g>
<g >
<title>__rcu_read_lock (50,303,017 samples, 0.07%)</title><rect x="165.1" y="1349" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="168.09" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1269" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1279.5" ></text>
</g>
<g >
<title>__check_heap_object (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1445" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1114.35" y="1455.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (50,370,912 samples, 0.07%)</title><rect x="186.9" y="1381" width="0.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="189.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="165" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="175.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>tlb_finish_mmu (6,403,845 samples, 0.01%)</title><rect x="1160.9" y="1397" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1163.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1413" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1423.5" ></text>
</g>
<g >
<title>truncate_cleanup_folio (156,830,183 samples, 0.22%)</title><rect x="88.6" y="1285" width="2.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="91.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1157" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1167.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1077" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1087.5" ></text>
</g>
<g >
<title>write (17,629,071,894 samples, 24.76%)</title><rect x="91.2" y="1557" width="292.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="94.17" y="1567.5" >write</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2,864,328,336 samples, 4.02%)</title><rect x="312.2" y="1285" width="47.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="315.18" y="1295.5" >__ex..</text>
</g>
<g >
<title>Builtins_CreateShallowObjectLiteral (428,553,736 samples, 0.60%)</title><rect x="478.7" y="1605" width="7.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="481.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="565" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="575.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1013" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1023.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (100,379,823 samples, 0.14%)</title><rect x="351.3" y="1237" width="1.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="354.33" y="1247.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (50,371,227 samples, 0.07%)</title><rect x="164.3" y="1349" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="167.26" y="1359.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (94,778,487 samples, 0.13%)</title><rect x="75.9" y="1381" width="1.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="78.90" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="1589" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="1599.5" ></text>
</g>
<g >
<title>operator new (50,045,742 samples, 0.07%)</title><rect x="726.4" y="133" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="729.43" y="143.5" ></text>
</g>
<g >
<title>move_to_new_folio (202,365,815 samples, 0.28%)</title><rect x="415.5" y="1493" width="3.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="418.51" y="1503.5" ></text>
</g>
<g >
<title>unmap_page_range (62,845,218 samples, 0.09%)</title><rect x="413.6" y="1365" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="416.60" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (13,330,486 samples, 0.02%)</title><rect x="1160.9" y="1493" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1163.89" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,146,232 samples, 0.07%)</title><rect x="586.8" y="533" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.81" y="543.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (50,317,723 samples, 0.07%)</title><rect x="206.0" y="1333" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="209.04" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (100,721,785 samples, 0.14%)</title><rect x="694.7" y="1429" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="697.67" y="1439.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (150,318,796 samples, 0.21%)</title><rect x="246.9" y="1349" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="249.92" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="709" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1589" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="499.09" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_write (425,365,413 samples, 0.60%)</title><rect x="463.8" y="1461" width="7.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="466.80" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,305,231,904 samples, 7.45%)</title><rect x="525.6" y="805" width="87.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="528.59" y="815.5" >std::__det..</text>
</g>
<g >
<title>path_lookupat (502,664,844 samples, 0.71%)</title><rect x="698.0" y="1429" width="8.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="701.01" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,386,314 samples, 0.07%)</title><rect x="606.0" y="661" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="609.00" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1333" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="661" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="671.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (201,393,775 samples, 0.28%)</title><rect x="377.5" y="1509" width="3.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="380.46" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="901" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="911.5" ></text>
</g>
<g >
<title>ext4_evict_inode (365,913,550 samples, 0.51%)</title><rect x="85.1" y="1333" width="6.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="88.11" y="1343.5" ></text>
</g>
<g >
<title>filemap_get_pages (308,418,112 samples, 0.43%)</title><rect x="57.1" y="1349" width="5.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="60.09" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (221,269,044 samples, 0.31%)</title><rect x="1114.5" y="1621" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1117.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="1317" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1349" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1359.5" >std::__detai..</text>
</g>
<g >
<title>jbd2_write_access_granted (100,379,823 samples, 0.14%)</title><rect x="351.3" y="1221" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="354.33" y="1231.5" ></text>
</g>
<g >
<title>folio_add_lru (52,051,282 samples, 0.07%)</title><rect x="414.7" y="1493" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="417.65" y="1503.5" ></text>
</g>
<g >
<title>generic_perform_write (50,367,010 samples, 0.07%)</title><rect x="368.3" y="1381" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="371.28" y="1391.5" ></text>
</g>
<g >
<title>__do_sys_clone (44,245,510 samples, 0.06%)</title><rect x="411.2" y="1557" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="414.19" y="1567.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (50,341,134 samples, 0.07%)</title><rect x="313.0" y="1269" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="316.01" y="1279.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (1,610,566,192 samples, 2.26%)</title><rect x="323.8" y="1237" width="26.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="326.82" y="1247.5" >e..</text>
</g>
<g >
<title>fsnotify_perm.part.0 (508,671,093 samples, 0.71%)</title><rect x="72.5" y="1429" width="8.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="75.48" y="1439.5" ></text>
</g>
<g >
<title>[anon] (2,466,636,412 samples, 3.46%)</title><rect x="422.8" y="1621" width="40.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="425.83" y="1631.5" >[an..</text>
</g>
<g >
<title>operator new (100,746,815 samples, 0.14%)</title><rect x="659.5" y="1141" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="662.52" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="629" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="405" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="549" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="559.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,933,249 samples, 0.42%)</title><rect x="728.9" y="1141" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.93" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="1029" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1093" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (723,312,712 samples, 1.02%)</title><rect x="538.9" y="261" width="12.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="541.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1333" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,269,776,320 samples, 3.19%)</title><rect x="772.9" y="85" width="37.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="775.91" y="95.5" >[li..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50,380,457 samples, 0.07%)</title><rect x="310.5" y="1221" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="313.51" y="1231.5" ></text>
</g>
<g >
<title>[sleep] (22,581,251 samples, 0.03%)</title><rect x="1161.1" y="1621" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1164.12" y="1631.5" ></text>
</g>
<g >
<title>load_elf_binary (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1493" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="400.01" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1381" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1391.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="773" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="783.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1301" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="1311.5" >std::__detai..</text>
</g>
<g >
<title>Builtins_LoadIC (6,339,306 samples, 0.01%)</title><rect x="496.0" y="1605" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="498.96" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (24,461,876 samples, 0.03%)</title><rect x="1111.4" y="1477" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1114.35" y="1487.5" ></text>
</g>
<g >
<title>[perf-3857781.map] (462,564,251 samples, 0.65%)</title><rect x="471.0" y="1621" width="7.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="474.04" y="1631.5" ></text>
</g>
<g >
<title>proc_pid_readdir (9,225,757 samples, 0.01%)</title><rect x="1111.1" y="1525" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1114.07" y="1535.5" ></text>
</g>
<g >
<title>lookup_fast (7,170,678 samples, 0.01%)</title><rect x="1123.2" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1126.23" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_enter (50,197,250 samples, 0.07%)</title><rect x="1119.9" y="1541" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1122.87" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,125,430 samples, 0.04%)</title><rect x="1160.4" y="1477" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="533" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,581,226 samples, 0.04%)</title><rect x="400.9" y="1621" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="403.91" y="1631.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (7,470,921 samples, 0.01%)</title><rect x="1124.6" y="1541" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1127.57" y="1551.5" ></text>
</g>
<g >
<title>cfree (503,099,797 samples, 0.71%)</title><rect x="431.1" y="1605" width="8.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="434.15" y="1615.5" ></text>
</g>
<g >
<title>[bash] (810,492,459 samples, 1.14%)</title><rect x="1136.5" y="1301" width="13.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.52" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="421" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1253" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="1263.5" ></text>
</g>
<g >
<title>zap_pte_range (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1333" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1163.99" y="1343.5" ></text>
</g>
<g >
<title>stop_this_handle (307,092,678 samples, 0.43%)</title><rect x="306.3" y="1253" width="5.0" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="309.25" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1029" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,746,418 samples, 0.14%)</title><rect x="727.3" y="181" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="730.26" y="191.5" ></text>
</g>
<g >
<title>from_kprojid (99,987,132 samples, 0.14%)</title><rect x="348.0" y="1221" width="1.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="351.03" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="629" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="639.5" ></text>
</g>
<g >
<title>__vma_adjust (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1301" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1136.00" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,765,715 samples, 0.14%)</title><rect x="724.8" y="149" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="727.76" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,763,619 samples, 0.14%)</title><rect x="497.8" y="181" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="500.76" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,504,590 samples, 1.41%)</title><rect x="865.7" y="581" width="16.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="868.67" y="591.5" ></text>
</g>
<g >
<title>ep_poll (38,666,246 samples, 0.05%)</title><rect x="411.9" y="1541" width="0.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="414.93" y="1551.5" ></text>
</g>
<g >
<title>xas_start (50,380,077 samples, 0.07%)</title><rect x="270.3" y="1269" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="273.25" y="1279.5" ></text>
</g>
<g >
<title>[grep] (9,574,479 samples, 0.01%)</title><rect x="396.5" y="1573" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="399.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1061" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="499.09" y="1071.5" ></text>
</g>
<g >
<title>all (71,209,539,042 samples, 100%)</title><rect x="10.0" y="1653" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1621" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1121.12" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,042,939 samples, 0.14%)</title><rect x="758.1" y="1093" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="761.12" y="1103.5" ></text>
</g>
<g >
<title>__cond_resched (201,375,072 samples, 0.28%)</title><rect x="155.1" y="1365" width="3.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="158.09" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="1221" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="1231.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="213" width="105.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="762.78" y="223.5" >std::__detai..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57,019,593 samples, 0.08%)</title><rect x="397.0" y="1621" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="400.01" y="1631.5" ></text>
</g>
<g >
<title>atime_needs_update (258,906,961 samples, 0.36%)</title><rect x="33.1" y="1413" width="4.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="36.09" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,106,606,698 samples, 1.55%)</title><rect x="834.0" y="85" width="18.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="836.98" y="95.5" ></text>
</g>
<g >
<title>alloc_inode (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1269" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1139.28" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1413" width="7.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="724.37" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="597" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="607.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (966,793,539 samples, 1.36%)</title><rect x="285.2" y="1285" width="16.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="288.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1061" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1071.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>malloc (50,372,463 samples, 0.07%)</title><rect x="677.1" y="1237" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="680.05" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,976,684 samples, 0.01%)</title><rect x="396.5" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="399.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,110,060 samples, 0.14%)</title><rect x="560.1" y="373" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="563.11" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,042,939 samples, 0.14%)</title><rect x="758.1" y="421" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.12" y="431.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (6,926,641 samples, 0.01%)</title><rect x="1161.0" y="1349" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1163.99" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,063,611 samples, 1.27%)</title><rect x="1074.5" y="917" width="14.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1077.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,146,488 samples, 0.99%)</title><rect x="1062.8" y="1141" width="11.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1065.81" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1157" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1167.5" ></text>
</g>
<g >
<title>[perf-3857750.map] (442,796,237 samples, 0.62%)</title><rect x="463.7" y="1621" width="7.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="466.71" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1477" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1487.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (456,467,641 samples, 0.64%)</title><rect x="721.4" y="1445" width="7.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="724.37" y="1455.5" ></text>
</g>
<g >
<title>cfree (200,508,171 samples, 0.28%)</title><rect x="1082.0" y="133" width="3.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1084.97" y="143.5" ></text>
</g>
<g >
<title>add_wait_queue (50,379,381 samples, 0.07%)</title><rect x="714.7" y="1477" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="717.71" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (105,328,685 samples, 0.15%)</title><rect x="1118.1" y="1381" width="1.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1121.12" y="1391.5" ></text>
</g>
<g >
<title>malloc (626,050,453 samples, 0.88%)</title><rect x="1150.0" y="1269" width="10.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1153.03" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1349" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="453" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="463.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,125,685,552 samples, 1.58%)</title><rect x="532.3" y="309" width="18.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="535.26" y="319.5" ></text>
</g>
<g >
<title>free_unref_page_list (52,263,723 samples, 0.07%)</title><rect x="86.0" y="1253" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="88.97" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,662,411 samples, 0.49%)</title><rect x="496.9" y="789" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.93" y="799.5" ></text>
</g>
<g >
<title>bprm_execve (17,819,189 samples, 0.03%)</title><rect x="1123.3" y="1557" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1126.35" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,039,101 samples, 0.01%)</title><rect x="1136.3" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.28" y="1423.5" ></text>
</g>
<g >
<title>crypto_shash_update (201,460,178 samples, 0.28%)</title><rect x="332.1" y="1205" width="3.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="335.15" y="1215.5" ></text>
</g>
<g >
<title>do_mmap (6,039,101 samples, 0.01%)</title><rect x="1133.0" y="1381" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1136.00" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,841,712,790 samples, 15.23%)</title><rect x="882.3" y="101" width="179.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="111.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (553,521,678 samples, 0.78%)</title><rect x="600.2" y="709" width="9.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="603.16" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,892,059,420 samples, 15.30%)</title><rect x="882.3" y="1221" width="180.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="885.32" y="1231.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>cpuidle_enter (526,927,425 samples, 0.74%)</title><rect x="1178.6" y="1541" width="8.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1181.64" y="1551.5" ></text>
</g>
<g >
<title>apparmor_file_permission (51,651,924 samples, 0.07%)</title><rect x="71.6" y="1429" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="74.63" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (16,538,694 samples, 0.02%)</title><rect x="396.2" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="399.21" y="1567.5" ></text>
</g>
<g >
<title>vfs_statx (32,471,503 samples, 0.05%)</title><rect x="401.4" y="1445" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="404.36" y="1455.5" ></text>
</g>
<g >
<title>copy_event_to_user (200,576,110 samples, 0.28%)</title><rect x="715.5" y="1477" width="3.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="718.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,390,425,154 samples, 8.97%)</title><rect x="759.8" y="517" width="105.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="762.78" y="527.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,348,526 samples, 0.07%)</title><rect x="496.1" y="1221" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="499.09" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (153,269,183 samples, 0.22%)</title><rect x="577.6" y="501" width="2.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="580.61" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,144,646 samples, 0.07%)</title><rect x="462.0" y="1605" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="465.01" y="1615.5" ></text>
</g>
<g >
<title>cpu_startup_entry (7,053,548 samples, 0.01%)</title><rect x="1132.9" y="1589" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1135.87" y="1599.5" ></text>
</g>
</g>
</svg>
