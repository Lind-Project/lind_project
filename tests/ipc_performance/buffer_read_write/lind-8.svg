<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>ret_from_fork (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1605" width="2.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1010.88" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1509" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="352.33" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1541" width="2.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="64.94" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,224,652 samples, 0.01%)</title><rect x="307.8" y="53" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="197" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="207.5" ></text>
</g>
<g >
<title>memcmp (48,799,243 samples, 0.19%)</title><rect x="30.6" y="1605" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="33.59" y="1615.5" ></text>
</g>
<g >
<title>load_elf_binary (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1477" width="2.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="79.11" y="1487.5" ></text>
</g>
<g >
<title>mmput (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1509" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1003.37" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1381" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="79.11" y="1391.5" ></text>
</g>
<g >
<title>futex_wait (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1445" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="352.14" y="1455.5" ></text>
</g>
<g >
<title>__schedule (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1397" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="352.14" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="965" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (7,270,599 samples, 0.03%)</title><rect x="304.0" y="869" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="306.96" y="879.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (78,839,863 samples, 0.31%)</title><rect x="84.5" y="1413" width="3.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="87.50" y="1423.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1381" width="21.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="330.63" y="1391.5" >g..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="949" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="959.5" ></text>
</g>
<g >
<title>inode_permission (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1301" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="193.05" y="1311.5" ></text>
</g>
<g >
<title>bprm_execve (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1541" width="33.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="159.83" y="1551.5" >bp..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1509" width="17.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="623.24" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="101" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="111.5" ></text>
</g>
<g >
<title>mtree_range_walk (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1493" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="248.39" y="1503.5" ></text>
</g>
<g >
<title>madvise_walk_vmas (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1525" width="2.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="17.60" y="1535.5" ></text>
</g>
<g >
<title>sqlite3_step (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1413" width="11.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="53.33" y="1423.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (20,116,978 samples, 0.08%)</title><rect x="349.4" y="1605" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="352.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="607.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (46,350,527 samples, 0.18%)</title><rect x="14.6" y="1461" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.60" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.38" y="1471.5" ></text>
</g>
<g >
<title>p4d_offset (33,354,518 samples, 0.13%)</title><rect x="74.0" y="1445" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="77.04" y="1455.5" ></text>
</g>
<g >
<title>schedule (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1413" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="352.14" y="1423.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1381" width="5.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1004.65" y="1391.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1589" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="248.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="341" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="991.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,720,350 samples, 0.03%)</title><rect x="1010.2" y="1541" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.19" y="1551.5" ></text>
</g>
<g >
<title>filemap_add_folio (251,808,388 samples, 1.00%)</title><rect x="754.9" y="1285" width="11.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="757.89" y="1295.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1365" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="412.12" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="901" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="911.5" ></text>
</g>
<g >
<title>block_dirty_folio (52,218,235 samples, 0.21%)</title><rect x="537.0" y="1205" width="2.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="539.98" y="1215.5" ></text>
</g>
<g >
<title>unix_stream_connect (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1269" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="194.58" y="1279.5" ></text>
</g>
<g >
<title>bprm_execve (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1541" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1010.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1077" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1493" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.17" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1093" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1103.5" ></text>
</g>
<g >
<title>drain_obj_stock (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1333" width="2.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1010.88" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (1,149,645,870 samples, 4.58%)</title><rect x="196.2" y="1605" width="54.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="199.21" y="1615.5" >[unkn..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1253" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1009.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="997" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,617,989 samples, 0.35%)</title><rect x="301.6" y="1397" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,118,260 samples, 0.01%)</title><rect x="326.0" y="101" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="329.04" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1381" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="51.29" y="1391.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1333" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1069.55" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1493" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="309.66" y="1503.5" ></text>
</g>
<g >
<title>tlb_flush_rmaps (52,215,196 samples, 0.21%)</title><rect x="539.4" y="1253" width="2.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="542.44" y="1263.5" ></text>
</g>
<g >
<title>code_store::store_request_t::store_request_t (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1477" width="2.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="64.94" y="1487.5" ></text>
</g>
<g >
<title>ext4_release_folio (121,077,599 samples, 0.48%)</title><rect x="83.2" y="1445" width="5.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="86.25" y="1455.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1541" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="329.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="293" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="303.5" ></text>
</g>
<g >
<title>destroy_inode (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1349" width="17.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="623.24" y="1359.5" ></text>
</g>
<g >
<title>block_invalidate_folio (28,692,856 samples, 0.11%)</title><rect x="1005.5" y="1205" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1008.49" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="757" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="767.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2,542,068 samples, 0.01%)</title><rect x="269.0" y="1589" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="271.97" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,234,236 samples, 0.01%)</title><rect x="407.9" y="1413" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="410.93" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1525" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="270.57" y="1535.5" ></text>
</g>
<g >
<title>shrink_node (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1541" width="2.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1010.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1349" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1359.5" ></text>
</g>
<g >
<title>lock_page_memcg (3,021,883 samples, 0.01%)</title><rect x="252.1" y="1285" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="255.10" y="1295.5" ></text>
</g>
<g >
<title>update_load_avg (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1397" width="2.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="249.84" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1445" width="0.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="329.42" y="1455.5" ></text>
</g>
<g >
<title>pick_next_task (2,835,831 samples, 0.01%)</title><rect x="1189.5" y="1509" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.50" y="1519.5" ></text>
</g>
<g >
<title>folio_memcg_unlock (13,904,316 samples, 0.06%)</title><rect x="1066.6" y="1269" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1069.65" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock (50,222,268 samples, 0.20%)</title><rect x="804.6" y="1317" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="807.62" y="1327.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_remove (26,966,986 samples, 0.11%)</title><rect x="250.4" y="1349" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="253.42" y="1359.5" ></text>
</g>
<g >
<title>madvise_vma_behavior (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1509" width="2.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="17.60" y="1519.5" ></text>
</g>
<g >
<title>do_user_addr_fault (81,451,072 samples, 0.32%)</title><rect x="24.4" y="1557" width="3.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="27.43" y="1567.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3,902,895 samples, 0.02%)</title><rect x="88.9" y="1429" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="91.94" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1381" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1391.5" ></text>
</g>
<g >
<title>do_sys_poll (15,157,558 samples, 0.06%)</title><rect x="407.8" y="1493" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="410.76" y="1503.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (222,214,504 samples, 0.89%)</title><rect x="713.7" y="1509" width="10.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="716.65" y="1519.5" ></text>
</g>
<g >
<title>[perf-3857699.map] (651,812,361 samples, 2.60%)</title><rect x="269.0" y="1605" width="30.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="271.97" y="1615.5" >[p..</text>
</g>
<g >
<title>v8::internal::IsPropertyNameFeedback (2,542,068 samples, 0.01%)</title><rect x="269.0" y="1541" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="271.97" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1605" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="79.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1397" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1407.5" ></text>
</g>
<g >
<title>remove_wait_queue (3,544,144 samples, 0.01%)</title><rect x="408.3" y="1461" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="411.30" y="1471.5" ></text>
</g>
<g >
<title>shrink_inactive_list (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1493" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1010.88" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1477" width="4.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="539.98" y="1487.5" ></text>
</g>
<g >
<title>exc_page_fault (131,089,772 samples, 0.52%)</title><rect x="24.4" y="1573" width="6.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="27.43" y="1583.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1599.5" ></text>
</g>
<g >
<title>shrink_node (310,904,543 samples, 1.24%)</title><rect x="78.6" y="1541" width="14.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="81.61" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="901" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="549" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="559.5" ></text>
</g>
<g >
<title>__mmput (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1413" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="253.42" y="1423.5" ></text>
</g>
<g >
<title>proc_readfd_common (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1269" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1009.96" y="1279.5" ></text>
</g>
<g >
<title>exit_mm (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1525" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1003.37" y="1535.5" ></text>
</g>
<g >
<title>sqlite3MemSize (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1301" width="2.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="64.94" y="1311.5" ></text>
</g>
<g >
<title>__vm_munmap (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1429" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="998.23" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="351.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1349" width="2.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="753.16" y="1359.5" ></text>
</g>
<g >
<title>rest_init (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1541" width="1.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="158.59" y="1551.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (131,089,772 samples, 0.52%)</title><rect x="24.4" y="1589" width="6.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="27.43" y="1599.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1397" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1407.5" ></text>
</g>
<g >
<title>__gup_longterm_locked (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1429" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="71.79" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1509" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.38" y="1519.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (8,226,943 samples, 0.03%)</title><rect x="267.6" y="1445" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="270.59" y="1455.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1269" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="353.38" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (150,629,403 samples, 0.60%)</title><rect x="944.5" y="1477" width="7.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="947.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1413" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.17" y="1423.5" ></text>
</g>
<g >
<title>mmput (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1429" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1069.55" y="1439.5" ></text>
</g>
<g >
<title>task_work_run (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1525" width="5.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1004.65" y="1535.5" ></text>
</g>
<g >
<title>filename_lookup (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1349" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="193.05" y="1359.5" ></text>
</g>
<g >
<title>vfs_read (7,414,869 samples, 0.03%)</title><rect x="306.9" y="1493" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="309.91" y="1503.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1333" width="33.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="159.83" y="1343.5" >za..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="565" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="575.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1429" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="330.36" y="1439.5" ></text>
</g>
<g >
<title>pcache1Free (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1317" width="2.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="64.94" y="1327.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (52,060,744 samples, 0.21%)</title><rect x="620.2" y="1157" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="623.24" y="1167.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1509" width="11.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="53.33" y="1519.5" ></text>
</g>
<g >
<title>unmap_single_vma (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1317" width="4.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="539.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1333" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1343.5" ></text>
</g>
<g >
<title>ext4_convert_inline_data (50,423,842 samples, 0.20%)</title><rect x="795.1" y="1349" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="798.15" y="1359.5" ></text>
</g>
<g >
<title>ret_from_fork (322,077,026 samples, 1.28%)</title><rect x="78.1" y="1605" width="15.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="81.08" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (32,357,697 samples, 0.13%)</title><rect x="26.7" y="1541" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.74" y="1551.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1525" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="329.42" y="1535.5" ></text>
</g>
<g >
<title>do_idle (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1509" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="270.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="149" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="159.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (3,544,144 samples, 0.01%)</title><rect x="408.3" y="1429" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="411.30" y="1439.5" ></text>
</g>
<g >
<title>record__mmap_read_all (15,348,752 samples, 0.06%)</title><rect x="408.6" y="1573" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="411.63" y="1583.5" ></text>
</g>
<g >
<title>exec_binprm (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1509" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1069.55" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,448,650 samples, 0.04%)</title><rect x="268.2" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="271.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,300,786 samples, 0.20%)</title><rect x="301.6" y="885" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1589" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.60" y="1599.5" ></text>
</g>
<g >
<title>__unmap_and_move.constprop.0 (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1493" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="255.25" y="1503.5" ></text>
</g>
<g >
<title>do_idle (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1509" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="158.59" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1269" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="411.71" y="1279.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (38,115,285 samples, 0.15%)</title><rect x="90.0" y="1413" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="92.98" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.14" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,137,345 samples, 0.01%)</title><rect x="306.9" y="1477" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="309.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1509" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1519.5" ></text>
</g>
<g >
<title>page_add_file_rmap (50,346,468 samples, 0.20%)</title><rect x="885.3" y="1333" width="2.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="888.27" y="1343.5" ></text>
</g>
<g >
<title>readdir64 (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1381" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1009.96" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (685,731,102 samples, 2.73%)</title><rect x="93.3" y="1493" width="32.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="96.31" y="1503.5" >as..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="917" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="927.5" ></text>
</g>
<g >
<title>rest_init (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1541" width="0.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="270.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="437" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="501" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="645" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1461" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="821.78" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="501" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1461" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (137,371,296 samples, 0.55%)</title><rect x="1000.4" y="1573" width="6.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1003.37" y="1583.5" ></text>
</g>
<g >
<title>exit_mmap (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1477" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1003.37" y="1487.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49,864,499 samples, 0.20%)</title><rect x="887.6" y="1493" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="890.64" y="1503.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (50,617,291 samples, 0.20%)</title><rect x="992.8" y="1589" width="2.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="995.85" y="1599.5" ></text>
</g>
<g >
<title>super_cache_scan (69,189,366 samples, 0.28%)</title><rect x="90.0" y="1461" width="3.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="92.98" y="1471.5" ></text>
</g>
<g >
<title>xas_load (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1365" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="92.29" y="1375.5" ></text>
</g>
<g >
<title>glob_filename (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1413" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1009.86" y="1423.5" ></text>
</g>
<g >
<title>__slab_free (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1285" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.81" y="1295.5" ></text>
</g>
<g >
<title>unmap_page_range (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1333" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="998.23" y="1343.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1445" width="5.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1004.65" y="1455.5" ></text>
</g>
<g >
<title>isolate_freepages (116,191,629 samples, 0.46%)</title><rect x="258.4" y="1477" width="5.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="261.42" y="1487.5" ></text>
</g>
<g >
<title>[ls] (45,306,426 samples, 0.18%)</title><rect x="191.6" y="1541" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1551.5" ></text>
</g>
<g >
<title>folio_memcg_lock.part.0 (3,021,883 samples, 0.01%)</title><rect x="252.1" y="1269" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="255.10" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1039.5" ></text>
</g>
<g >
<title>operator new (4,392,921 samples, 0.02%)</title><rect x="301.7" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="304.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="885" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="207.5" ></text>
</g>
<g >
<title>start_kernel (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1573" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="158.59" y="1583.5" ></text>
</g>
<g >
<title>sccp (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1605" width="17.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="35.89" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (459,692,975 samples, 1.83%)</title><rect x="973.6" y="1605" width="21.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="976.61" y="1615.5" >[..</text>
</g>
<g >
<title>__x64_sys_execve (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1573" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1010.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1013" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1461" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1471.5" ></text>
</g>
<g >
<title>realloc (50,881,623 samples, 0.20%)</title><rect x="426.0" y="1589" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="428.98" y="1599.5" ></text>
</g>
<g >
<title>do_sys_openat2 (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1301" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1009.86" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1445" width="17.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="623.24" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,761,682 samples, 0.01%)</title><rect x="303.2" y="661" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="306.16" y="671.5" ></text>
</g>
<g >
<title>cfree (2,761,682 samples, 0.01%)</title><rect x="303.2" y="677" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="306.16" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="229" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="789" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="799.5" ></text>
</g>
<g >
<title>epoll_wait (4,756,057 samples, 0.02%)</title><rect x="326.2" y="1573" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="329.19" y="1583.5" ></text>
</g>
<g >
<title>notify_change (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1301" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="821.78" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="197" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,106,974 samples, 0.26%)</title><rect x="301.6" y="981" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="991.5" ></text>
</g>
<g >
<title>vfs_statx (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1445" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="309.66" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1493" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="412.12" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1509" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1519.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (50,279,478 samples, 0.20%)</title><rect x="880.5" y="1221" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="883.50" y="1231.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1349" width="4.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="802.84" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="277" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1589" width="2.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="67.25" y="1599.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1269" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="51.29" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="837" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="847.5" ></text>
</g>
<g >
<title>dup_mmap (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1493" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1068.18" y="1503.5" ></text>
</g>
<g >
<title>xa_load (100,598,765 samples, 0.40%)</title><rect x="776.2" y="1285" width="4.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="779.22" y="1295.5" ></text>
</g>
<g >
<title>get_user_pages_remote (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1445" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="71.79" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,445,742,118 samples, 5.76%)</title><rect x="745.4" y="1493" width="68.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="748.39" y="1503.5" >asm_exc..</text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1493" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="329.42" y="1503.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,171,812 samples, 0.01%)</title><rect x="88.8" y="1365" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="91.84" y="1375.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (12,857,551 samples, 0.05%)</title><rect x="264.0" y="1493" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="267.05" y="1503.5" ></text>
</g>
<g >
<title>search_binary_handler (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1493" width="2.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="79.11" y="1503.5" ></text>
</g>
<g >
<title>Glob::isIgnored (116,802,566 samples, 0.47%)</title><rect x="301.2" y="1525" width="5.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="304.17" y="1535.5" ></text>
</g>
<g >
<title>do_page_mkwrite (85,726,572 samples, 0.34%)</title><rect x="807.0" y="1397" width="4.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="809.98" y="1407.5" ></text>
</g>
<g >
<title>do_idle (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1509" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.81" y="1519.5" ></text>
</g>
<g >
<title>dput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1477" width="5.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1004.65" y="1487.5" ></text>
</g>
<g >
<title>unlock_page_memcg (50,346,468 samples, 0.20%)</title><rect x="885.3" y="1317" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="888.27" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1573" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="353.38" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1461" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1471.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (49,991,410 samples, 0.20%)</title><rect x="12.2" y="1589" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="15.25" y="1599.5" ></text>
</g>
<g >
<title>leave_mm (3,544,144 samples, 0.01%)</title><rect x="263.9" y="1493" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="266.88" y="1503.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (684,315,942 samples, 2.73%)</title><rect x="93.3" y="1461" width="32.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="96.31" y="1471.5" >__..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1509" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="821.78" y="1519.5" ></text>
</g>
<g >
<title>shrink_lruvec (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1509" width="2.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1010.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1109" width="3.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.58" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="709" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="719.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1301" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1311.5" ></text>
</g>
<g >
<title>dequeue_task_fair (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1429" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="249.84" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1429" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,607,817,441 samples, 10.39%)</title><rect x="1067.4" y="1605" width="122.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1070.35" y="1615.5" >secondary_start..</text>
</g>
<g >
<title>__dentry_kill (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1461" width="5.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1004.65" y="1471.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1477" width="11.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="878.78" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1573" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="998.23" y="1583.5" ></text>
</g>
<g >
<title>__poll (9,856,100 samples, 0.04%)</title><rect x="327.2" y="1525" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="330.17" y="1535.5" ></text>
</g>
<g >
<title>notify_change (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1333" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="821.78" y="1343.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1557" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1010.50" y="1567.5" ></text>
</g>
<g >
<title>folio_mark_dirty (52,218,235 samples, 0.21%)</title><rect x="537.0" y="1237" width="2.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="539.98" y="1247.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1589" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="270.57" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,056,771 samples, 0.03%)</title><rect x="301.6" y="405" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="415.5" ></text>
</g>
<g >
<title>builtin_address_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1125" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1010.07" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="453" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="463.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1525" width="33.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="159.83" y="1535.5" >bp..</text>
</g>
<g >
<title>v8::internal::BinarySearch&lt; (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1461" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="303.18" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1205" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1215.5" ></text>
</g>
<g >
<title>__update_blocked_fair (17,216,379 samples, 0.07%)</title><rect x="155.6" y="1333" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="158.61" y="1343.5" ></text>
</g>
<g >
<title>exec_binprm (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1509" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="79.11" y="1519.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (196,666,340 samples, 0.78%)</title><rect x="52.7" y="1381" width="9.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="55.69" y="1391.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (66,472,293 samples, 0.26%)</title><rect x="1003.7" y="1221" width="3.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1006.71" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,417,137 samples, 0.01%)</title><rect x="308.5" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.51" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="175.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1349" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1068.18" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_clone (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1573" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1068.18" y="1583.5" ></text>
</g>
<g >
<title>refactoring::get_counterparts (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1525" width="11.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="53.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="629" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="639.5" ></text>
</g>
<g >
<title>iput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1317" width="5.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1004.65" y="1327.5" ></text>
</g>
<g >
<title>__vm_munmap (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1397" width="4.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="539.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,977,690 samples, 0.33%)</title><rect x="301.6" y="1333" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1343.5" ></text>
</g>
<g >
<title>lru_add_drain (46,350,527 samples, 0.18%)</title><rect x="14.6" y="1477" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="17.60" y="1487.5" ></text>
</g>
<g >
<title>unlink (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1461" width="17.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="623.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="357" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="367.5" ></text>
</g>
<g >
<title>_start (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1605" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1009.86" y="1615.5" ></text>
</g>
<g >
<title>copy_p4d_range (19,799,406 samples, 0.08%)</title><rect x="73.1" y="1445" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="76.11" y="1455.5" ></text>
</g>
<g >
<title>__do_softirq (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1381" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.81" y="1391.5" ></text>
</g>
<g >
<title>ct_kernel_enter.constprop.0 (3,746,029 samples, 0.01%)</title><rect x="125.6" y="1493" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="128.56" y="1503.5" ></text>
</g>
<g >
<title>fdarray__poll (18,540,052 samples, 0.07%)</title><rect x="407.8" y="1573" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="410.76" y="1583.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (156,368,741 samples, 0.62%)</title><rect x="605.6" y="1493" width="7.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="608.56" y="1503.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1301" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="411.95" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,224,652 samples, 0.01%)</title><rect x="307.8" y="101" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,571,385 samples, 0.23%)</title><rect x="301.6" y="917" width="2.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="927.5" ></text>
</g>
<g >
<title>Builtins_CallFunction_ReceiverIsAny (649,270,293 samples, 2.59%)</title><rect x="269.1" y="1589" width="30.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="272.09" y="1599.5" >Bu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,989,838 samples, 0.03%)</title><rect x="304.7" y="1013" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="307.71" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1589" width="33.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="159.83" y="1599.5" >do..</text>
</g>
<g >
<title>HandleStackContext (253,988,981 samples, 1.01%)</title><rect x="464.5" y="1573" width="11.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="467.50" y="1583.5" ></text>
</g>
<g >
<title>super_cache_count (11,034,148 samples, 0.04%)</title><rect x="89.5" y="1461" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="92.46" y="1471.5" ></text>
</g>
<g >
<title>schedule (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1477" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="249.84" y="1487.5" ></text>
</g>
<g >
<title>__schedule (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1525" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="158.37" y="1535.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1333" width="5.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1004.65" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (552,934,791 samples, 2.20%)</title><rect x="918.5" y="1397" width="26.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="921.54" y="1407.5" >[..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="949" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="117" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="127.5" ></text>
</g>
<g >
<title>do_sys_ftruncate (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1365" width="2.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="821.78" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="549" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="559.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1493" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="76.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1285" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1295.5" ></text>
</g>
<g >
<title>unlink_file_vma (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1365" width="56.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="354.00" y="1375.5" >unlink..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1205" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1215.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1269" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="753.16" y="1279.5" ></text>
</g>
<g >
<title>ksys_read (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1541" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="71.79" y="1551.5" ></text>
</g>
<g >
<title>task_dump_owner (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1189" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1009.86" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1349" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="352.14" y="1359.5" ></text>
</g>
<g >
<title>operator new (3,663,495 samples, 0.01%)</title><rect x="307.4" y="1589" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="310.45" y="1599.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1541" width="21.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="330.63" y="1551.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="773" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="783.5" ></text>
</g>
<g >
<title>page_cache_async_ra (603,838,818 samples, 2.41%)</title><rect x="752.5" y="1349" width="28.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.55" y="1359.5" >pa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="213" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="223.5" ></text>
</g>
<g >
<title>ovl_read_iter (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1525" width="17.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="35.89" y="1535.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (50,489,429 samples, 0.20%)</title><rect x="802.2" y="1253" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="805.25" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1055.5" ></text>
</g>
<g >
<title>tcp_seq_start (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1461" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="78.61" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1493" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="158.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (137,371,296 samples, 0.55%)</title><rect x="1000.4" y="1605" width="6.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1003.37" y="1615.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1365" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1010.88" y="1375.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1493" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.81" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1573" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="253.42" y="1583.5" ></text>
</g>
<g >
<title>getname_flags (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1445" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="195.34" y="1455.5" ></text>
</g>
<g >
<title>ext4_setattr (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1285" width="2.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="821.78" y="1295.5" ></text>
</g>
<g >
<title>__munmap (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1493" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="998.23" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1461" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1009.86" y="1471.5" ></text>
</g>
<g >
<title>shrink_inactive_list (215,097,417 samples, 0.86%)</title><rect x="79.0" y="1493" width="10.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="82.01" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1461" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="805" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="789" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,056,771 samples, 0.03%)</title><rect x="301.6" y="437" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="447.5" ></text>
</g>
<g >
<title>malloc (2,791,968 samples, 0.01%)</title><rect x="304.6" y="901" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="307.58" y="911.5" ></text>
</g>
<g >
<title>search_binary_handler (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1493" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="353.38" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,118,260 samples, 0.01%)</title><rect x="66.2" y="1605" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="69.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1525" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1445" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1455.5" ></text>
</g>
<g >
<title>exec_mmap (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1445" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1010.50" y="1455.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1333" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="411.95" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,106,974 samples, 0.26%)</title><rect x="301.6" y="997" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (18,238,817 samples, 0.07%)</title><rect x="305.8" y="1493" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="308.80" y="1503.5" ></text>
</g>
<g >
<title>do_shrink_slab (87,275,839 samples, 0.35%)</title><rect x="89.1" y="1477" width="4.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="92.12" y="1487.5" ></text>
</g>
<g >
<title>folio_mark_dirty (50,222,268 samples, 0.20%)</title><rect x="804.6" y="1349" width="2.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="807.62" y="1359.5" ></text>
</g>
<g >
<title>set_page_dirty (52,218,235 samples, 0.21%)</title><rect x="537.0" y="1253" width="2.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="539.98" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_read (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1557" width="1.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="71.79" y="1567.5" ></text>
</g>
<g >
<title>[anon] (50,983,464 samples, 0.20%)</title><rect x="12.2" y="1605" width="2.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="15.20" y="1615.5" ></text>
</g>
<g >
<title>isolate_freepages_block (116,191,629 samples, 0.46%)</title><rect x="258.4" y="1461" width="5.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="261.42" y="1471.5" ></text>
</g>
<g >
<title>find_lock_entries (43,790,680 samples, 0.17%)</title><rect x="1001.6" y="1237" width="2.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1004.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="549" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="559.5" ></text>
</g>
<g >
<title>opendir (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1381" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1009.86" y="1391.5" ></text>
</g>
<g >
<title>do_iter_read (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1493" width="17.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="35.89" y="1503.5" ></text>
</g>
<g >
<title>HandleStackContext (50,820,812 samples, 0.20%)</title><rect x="454.8" y="1589" width="2.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="457.79" y="1599.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,762,868 samples, 0.07%)</title><rect x="155.6" y="1445" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="158.59" y="1455.5" ></text>
</g>
<g >
<title>[[heap]] (100,989,594 samples, 0.40%)</title><rect x="409.4" y="1605" width="4.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="412.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1541" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="310.26" y="1551.5" ></text>
</g>
<g >
<title>send_to_group (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1349" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="411.71" y="1359.5" ></text>
</g>
<g >
<title>__check_object_size (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1397" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="195.34" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1509" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1519.5" ></text>
</g>
<g >
<title>unmap_single_vma (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1365" width="33.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="159.83" y="1375.5" >un..</text>
</g>
<g >
<title>filename_lookup (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1429" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="309.66" y="1439.5" ></text>
</g>
<g >
<title>__access_remote_vm (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1461" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="71.79" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="229" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="239.5" ></text>
</g>
<g >
<title>kthread (322,077,026 samples, 1.28%)</title><rect x="78.1" y="1589" width="15.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="81.08" y="1599.5" ></text>
</g>
<g >
<title>__mmput (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1413" width="56.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="354.00" y="1423.5" >__mmput</text>
</g>
<g >
<title>search_binary_handler (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1493" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1069.55" y="1503.5" ></text>
</g>
<g >
<title>task_tick_idle (680,148,128 samples, 2.71%)</title><rect x="93.5" y="1365" width="32.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="96.51" y="1375.5" >ta..</text>
</g>
<g >
<title>cpuidle_idle_call (2,597,215,603 samples, 10.35%)</title><rect x="1067.4" y="1541" width="122.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1070.35" y="1551.5" >cpuidle_idle_call</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,720,350 samples, 0.03%)</title><rect x="1010.2" y="1605" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="895.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_JsonParse (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1573" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="303.18" y="1583.5" ></text>
</g>
<g >
<title>update_blocked_averages (17,216,379 samples, 0.07%)</title><rect x="155.6" y="1349" width="0.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="158.61" y="1359.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (684,315,942 samples, 2.73%)</title><rect x="93.3" y="1429" width="32.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="96.31" y="1439.5" >__..</text>
</g>
<g >
<title>do_sys_openat2 (45,042,173 samples, 0.18%)</title><rect x="66.7" y="1541" width="2.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="69.67" y="1551.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (43,187,599 samples, 0.17%)</title><rect x="66.8" y="1509" width="2.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="69.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="293" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1477" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1125" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="869" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="879.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1509" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1068.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="565" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1525" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1189" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_connect (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1317" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="194.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="837" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1029" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1039.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1205" width="17.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="623.24" y="1215.5" ></text>
</g>
<g >
<title>all (25,089,877,469 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (17,226,813 samples, 0.07%)</title><rect x="70.4" y="1557" width="0.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="73.36" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="245" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="255.5" ></text>
</g>
<g >
<title>uncharge_batch (52,060,744 samples, 0.21%)</title><rect x="620.2" y="1141" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="623.24" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50,077,705 samples, 0.20%)</title><rect x="423.6" y="1589" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="426.62" y="1599.5" ></text>
</g>
<g >
<title>create_empty_buffers (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1285" width="4.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="881.15" y="1295.5" ></text>
</g>
<g >
<title>iput (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1381" width="17.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="623.24" y="1391.5" ></text>
</g>
<g >
<title>__fsnotify_parent (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1381" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="411.71" y="1391.5" ></text>
</g>
<g >
<title>page_cache_ra_order (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1301" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="878.78" y="1311.5" ></text>
</g>
<g >
<title>filemap_release_folio (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1461" width="2.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1010.88" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="85" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="95.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1477" width="17.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="35.89" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,392,921 samples, 0.02%)</title><rect x="301.7" y="309" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="304.69" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1477" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="998.23" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1461" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1471.5" ></text>
</g>
<g >
<title>free_buffer_head (15,601,473 samples, 0.06%)</title><rect x="88.2" y="1397" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="91.21" y="1407.5" ></text>
</g>
<g >
<title>uv_cond_wait (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1557" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="352.14" y="1567.5" ></text>
</g>
<g >
<title>exc_page_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1461" width="11.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="878.78" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="421" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="431.5" ></text>
</g>
<g >
<title>getname (43,187,599 samples, 0.17%)</title><rect x="66.8" y="1525" width="2.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="69.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1269" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (15,035,702 samples, 0.06%)</title><rect x="307.9" y="101" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="310.92" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1493" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1503.5" ></text>
</g>
<g >
<title>malloc (11,263,428 samples, 0.04%)</title><rect x="302.1" y="405" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="305.15" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1349" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="353.38" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1013.48" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_statx (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1461" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="195.34" y="1471.5" ></text>
</g>
<g >
<title>__filemap_add_folio (251,808,388 samples, 1.00%)</title><rect x="754.9" y="1269" width="11.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="757.89" y="1279.5" ></text>
</g>
<g >
<title>wake_up_bit (52,184,050 samples, 0.21%)</title><rect x="635.0" y="1157" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="637.96" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1173" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1183.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,597,215,603 samples, 10.35%)</title><rect x="1067.4" y="1509" width="122.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1070.35" y="1519.5" >cpuidle_enter_s..</text>
</g>
<g >
<title>code_store::store_t::start_transaction (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1445" width="2.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="64.94" y="1455.5" ></text>
</g>
<g >
<title>sqlite3_step (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1413" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="64.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_clone (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1557" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="76.11" y="1567.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (101,467,798 samples, 0.40%)</title><rect x="766.7" y="1285" width="4.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="769.73" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,096,812 samples, 0.29%)</title><rect x="301.6" y="1061" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61,907,543 samples, 0.25%)</title><rect x="73.1" y="1589" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="76.11" y="1599.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1477" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.38" y="1487.5" ></text>
</g>
<g >
<title>begin_new_exec (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1461" width="33.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="159.83" y="1471.5" >be..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1301" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="613" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="821" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="831.5" ></text>
</g>
<g >
<title>perf (33,888,819 samples, 0.14%)</title><rect x="407.8" y="1621" width="1.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="410.76" y="1631.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1557" width="33.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="159.83" y="1567.5" >do..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (52,194,739 samples, 0.21%)</title><rect x="476.4" y="1573" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="479.44" y="1583.5" ></text>
</g>
<g >
<title>realloc (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1477" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="67.25" y="1487.5" ></text>
</g>
<g >
<title>do_user_addr_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1349" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="51.29" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1349" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="194.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="549" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="559.5" ></text>
</g>
<g >
<title>handle_pte_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1445" width="24.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="515.90" y="1455.5" >h..</text>
</g>
<g >
<title>mark_buffer_dirty (151,301,162 samples, 0.60%)</title><rect x="788.0" y="1317" width="7.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="791.03" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1573" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1069.55" y="1583.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (53,232,538 samples, 0.21%)</title><rect x="987.9" y="1589" width="2.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="990.89" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1301" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="411.71" y="1311.5" ></text>
</g>
<g >
<title>add_wait_queue (3,365,274 samples, 0.01%)</title><rect x="307.0" y="1461" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="310.01" y="1471.5" ></text>
</g>
<g >
<title>zap_pte_range (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1397" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1003.37" y="1407.5" ></text>
</g>
<g >
<title>exec_mmap (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1445" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="353.38" y="1455.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,344,938,871 samples, 5.36%)</title><rect x="747.8" y="1413" width="63.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="750.76" y="1423.5" >handle..</text>
</g>
<g >
<title>lru_lazyfree_fn (12,879,917 samples, 0.05%)</title><rect x="16.2" y="1429" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="19.17" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (101,839,889 samples, 0.41%)</title><rect x="66.4" y="1573" width="4.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="69.38" y="1583.5" ></text>
</g>
<g >
<title>zap_pte_range (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1269" width="4.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="539.98" y="1279.5" ></text>
</g>
<g >
<title>free_unref_page_list (52,200,785 samples, 0.21%)</title><rect x="625.1" y="1157" width="2.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="628.14" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.33" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1461" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="411.71" y="1471.5" ></text>
</g>
<g >
<title>_compound_head (19,799,406 samples, 0.08%)</title><rect x="73.1" y="1397" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="76.11" y="1407.5" ></text>
</g>
<g >
<title>lock_page_memcg (50,716,950 samples, 0.20%)</title><rect x="792.8" y="1301" width="2.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="795.76" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1413" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="965" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="805" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="815.5" ></text>
</g>
<g >
<title>exec_mmap (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1445" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1069.55" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (11,804,444 samples, 0.05%)</title><rect x="251.7" y="1365" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="254.69" y="1375.5" ></text>
</g>
<g >
<title>unlink_file_vma (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1365" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1010.50" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1429" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1013.38" y="1439.5" ></text>
</g>
<g >
<title>____fput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1509" width="5.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1004.65" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="511.5" ></text>
</g>
<g >
<title>[unknown] (557,594,288 samples, 2.22%)</title><rect x="300.9" y="1605" width="26.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.94" y="1615.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1231.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (50,521,062 samples, 0.20%)</title><rect x="440.6" y="1589" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="443.57" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="191.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1445" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="92.29" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="693" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (137,371,296 samples, 0.55%)</title><rect x="1000.4" y="1589" width="6.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1003.37" y="1599.5" ></text>
</g>
<g >
<title>proc_readfd (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1285" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1009.96" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="485" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="495.5" ></text>
</g>
<g >
<title>path_openat (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1269" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1009.86" y="1279.5" ></text>
</g>
<g >
<title>pipe_poll (2,271,493 samples, 0.01%)</title><rect x="327.3" y="1429" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="330.25" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1493" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.38" y="1503.5" ></text>
</g>
<g >
<title>[sleep] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1557" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1013.60" y="1567.5" ></text>
</g>
<g >
<title>mutex_lock (3,690,570 samples, 0.01%)</title><rect x="408.0" y="1445" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="411.03" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_common (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1413" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="251.80" y="1423.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1253" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="998.23" y="1263.5" ></text>
</g>
<g >
<title>shrink_folio_list (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1477" width="2.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1010.88" y="1487.5" ></text>
</g>
<g >
<title>filemap_fault (705,624,101 samples, 2.81%)</title><rect x="747.8" y="1365" width="33.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="750.76" y="1375.5" >fi..</text>
</g>
<g >
<title>exit_mmap (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1397" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="79.11" y="1407.5" ></text>
</g>
<g >
<title>bprm_execve (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1541" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="253.42" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1477" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="549" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="559.5" ></text>
</g>
<g >
<title>compact_zone (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1541" width="11.7" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="255.25" y="1551.5" ></text>
</g>
<g >
<title>operator new (2,309,228 samples, 0.01%)</title><rect x="305.4" y="1237" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="308.37" y="1247.5" ></text>
</g>
<g >
<title>cpuidle_enter (25,689,843 samples, 0.10%)</title><rect x="155.6" y="1477" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="158.59" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1135.5" ></text>
</g>
<g >
<title>exit_mmap (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1397" width="56.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="354.00" y="1407.5" >exit_m..</text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1333" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="411.71" y="1343.5" ></text>
</g>
<g >
<title>established_get_next (7,148,733 samples, 0.03%)</title><rect x="75.6" y="1429" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="78.61" y="1439.5" ></text>
</g>
<g >
<title>__block_write_begin_int (301,942,142 samples, 1.20%)</title><rect x="780.9" y="1333" width="14.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="783.95" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1381" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="261" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1317" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1477" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="195.34" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1525" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="353.38" y="1535.5" ></text>
</g>
<g >
<title>try_to_free_buffers (28,692,856 samples, 0.11%)</title><rect x="1005.5" y="1157" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1008.49" y="1167.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,353,514,656 samples, 5.39%)</title><rect x="556.6" y="1541" width="63.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="559.59" y="1551.5" >rustpo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,535,589 samples, 0.03%)</title><rect x="304.3" y="949" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="307.31" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,404,201 samples, 0.20%)</title><rect x="193.8" y="1413" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.84" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="565" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="575.5" ></text>
</g>
<g >
<title>kthread (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1589" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1010.88" y="1599.5" ></text>
</g>
<g >
<title>page_cache_ra_order (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1333" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="753.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1477" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1487.5" ></text>
</g>
<g >
<title>path_lookupat (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1333" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1013.48" y="1343.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (4,306,515 samples, 0.02%)</title><rect x="155.2" y="1525" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="158.17" y="1535.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1413" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="330.36" y="1423.5" ></text>
</g>
<g >
<title>filemap_read (321,149,949 samples, 1.28%)</title><rect x="35.2" y="1429" width="15.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="38.23" y="1439.5" ></text>
</g>
<g >
<title>__dentry_kill (31,074,081 samples, 0.12%)</title><rect x="91.8" y="1413" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="94.77" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1477" width="17.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="623.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="821" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="565" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1183.5" ></text>
</g>
<g >
<title>page_counter_cancel (52,060,744 samples, 0.21%)</title><rect x="620.2" y="1109" width="2.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="623.24" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,920,962 samples, 0.09%)</title><rect x="301.6" y="597" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="607.5" ></text>
</g>
<g >
<title>xas_load (100,598,765 samples, 0.40%)</title><rect x="776.2" y="1269" width="4.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="779.22" y="1279.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (50,245,156 samples, 0.20%)</title><rect x="788.0" y="1269" width="2.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="791.03" y="1279.5" ></text>
</g>
<g >
<title>__handle_mm_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1413" width="11.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="878.78" y="1423.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (121,077,599 samples, 0.48%)</title><rect x="83.2" y="1429" width="5.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="86.25" y="1439.5" ></text>
</g>
<g >
<title>iterate_dir (6,066,531 samples, 0.02%)</title><rect x="66.4" y="1541" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="69.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="853" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1445" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="411.71" y="1455.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (16,972,422 samples, 0.07%)</title><rect x="1000.9" y="1381" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1003.85" y="1391.5" ></text>
</g>
<g >
<title>page_remove_rmap (13,904,316 samples, 0.06%)</title><rect x="1066.6" y="1301" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1069.65" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1333" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="194.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1157" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1253" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1263.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1349" width="4.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="881.15" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,182,566 samples, 0.03%)</title><rect x="327.2" y="1493" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="330.17" y="1503.5" ></text>
</g>
<g >
<title>___d_drop (31,074,081 samples, 0.12%)</title><rect x="91.8" y="1397" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="94.77" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="629" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="639.5" ></text>
</g>
<g >
<title>balance_pgdat (310,904,543 samples, 1.24%)</title><rect x="78.6" y="1557" width="14.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="81.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (295,825,964 samples, 1.18%)</title><rect x="50.3" y="1557" width="13.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="53.33" y="1567.5" ></text>
</g>
<g >
<title>cpptools-srv (46,751,947 samples, 0.19%)</title><rect x="10.0" y="1621" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,106,974 samples, 0.26%)</title><rect x="301.6" y="965" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1061" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="581" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,445,742,118 samples, 5.76%)</title><rect x="745.4" y="1461" width="68.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="748.39" y="1471.5" >do_user..</text>
</g>
<g >
<title>truncate_inode_pages_final (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1221" width="17.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="623.24" y="1231.5" ></text>
</g>
<g >
<title>write (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1509" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="412.12" y="1519.5" ></text>
</g>
<g >
<title>established_get_first (7,148,733 samples, 0.03%)</title><rect x="75.6" y="1413" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="78.61" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="437" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1349" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1359.5" ></text>
</g>
<g >
<title>charge_memcg (100,654,730 samples, 0.40%)</title><rect x="762.0" y="1237" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="764.99" y="1247.5" ></text>
</g>
<g >
<title>v8::internal::TransitionsAccessor::FindTransitionToDataProperty (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1509" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="303.18" y="1519.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (49,864,499 samples, 0.20%)</title><rect x="887.6" y="1477" width="2.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="890.64" y="1487.5" ></text>
</g>
<g >
<title>schedule_idle (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1541" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="158.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1125" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1135.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (684,315,942 samples, 2.73%)</title><rect x="93.3" y="1445" width="32.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="96.31" y="1455.5" >hr..</text>
</g>
<g >
<title>__irq_exit_rcu (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1397" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1192.81" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="741" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1573" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="629" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="639.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (50,315,482 samples, 0.20%)</title><rect x="811.0" y="1445" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="814.02" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="677" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1413" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="193.05" y="1423.5" ></text>
</g>
<g >
<title>alloc_pages (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1381" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1068.18" y="1391.5" ></text>
</g>
<g >
<title>expand_string_assignment (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1269" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1010.07" y="1279.5" ></text>
</g>
<g >
<title>record__pushfn (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1525" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="411.71" y="1535.5" ></text>
</g>
<g >
<title>do_user_addr_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1445" width="11.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="878.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="677" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="687.5" ></text>
</g>
<g >
<title>cpu_startup_entry (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1525" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="158.59" y="1535.5" ></text>
</g>
<g >
<title>[ls] (16,206,644 samples, 0.06%)</title><rect x="191.6" y="1509" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,300,786 samples, 0.20%)</title><rect x="301.6" y="837" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="847.5" ></text>
</g>
<g >
<title>filename_lookup (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1349" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1013.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1013" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1023.5" ></text>
</g>
<g >
<title>find_special_builtin (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1141" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1010.07" y="1151.5" ></text>
</g>
<g >
<title>unmap_single_vma (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1365" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="353.38" y="1375.5" ></text>
</g>
<g >
<title>ls (1,660,638,023 samples, 6.62%)</title><rect x="190.1" y="1621" width="78.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="193.05" y="1631.5" >ls</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1087.5" ></text>
</g>
<g >
<title>cfree (3,118,260 samples, 0.01%)</title><rect x="326.0" y="117" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="329.04" y="127.5" ></text>
</g>
<g >
<title>rest_init (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1541" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1192.81" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="805" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="533" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="543.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1253" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="193.05" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="165" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="175.5" ></text>
</g>
<g >
<title>handle_pte_fault (32,357,697 samples, 0.13%)</title><rect x="26.7" y="1509" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="29.74" y="1519.5" ></text>
</g>
<g >
<title>vfs_write (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1525" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="251.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="773" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1285" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="51.29" y="1295.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1317" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="753.16" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="495.5" ></text>
</g>
<g >
<title>CStoreRequest::CStoreRequest (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1493" width="2.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="64.94" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="741" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1061" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1413" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1061" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1071.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1317" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="837" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="847.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1253" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1493" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="195.34" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1413" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1423.5" ></text>
</g>
<g >
<title>NaClSysClose (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1557" width="4.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="539.98" y="1567.5" ></text>
</g>
<g >
<title>perf_poll (5,924,806 samples, 0.02%)</title><rect x="407.9" y="1461" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="410.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,747,596 samples, 0.12%)</title><rect x="301.6" y="645" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (86,617,989 samples, 0.35%)</title><rect x="301.6" y="1365" width="4.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="597" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="607.5" ></text>
</g>
<g >
<title>path_lookupat (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1333" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="193.05" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="911.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (100,280,788 samples, 0.40%)</title><rect x="771.5" y="1253" width="4.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="774.50" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,096,812 samples, 0.29%)</title><rect x="301.6" y="1029" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="677" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="463.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1461" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="329.42" y="1471.5" ></text>
</g>
<g >
<title>__dentry_kill (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1301" width="17.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="623.24" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1,365,449,833 samples, 5.44%)</title><rect x="890.0" y="1493" width="64.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.98" y="1503.5" >rustpos..</text>
</g>
<g >
<title>sqlite3BtreeBeginTrans (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1381" width="2.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="64.94" y="1391.5" ></text>
</g>
<g >
<title>zap_pte_range (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1317" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1069.55" y="1327.5" ></text>
</g>
<g >
<title>ksys_read (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1541" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="78.61" y="1551.5" ></text>
</g>
<g >
<title>[bash] (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1493" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1009.86" y="1503.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (104,056,512 samples, 0.41%)</title><rect x="551.7" y="1541" width="4.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="554.69" y="1551.5" ></text>
</g>
<g >
<title>__do_sys_clone (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1557" width="1.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1068.18" y="1567.5" ></text>
</g>
<g >
<title>exc_page_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1365" width="2.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="51.29" y="1375.5" ></text>
</g>
<g >
<title>pollwake (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1237" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="411.71" y="1247.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1253" width="5.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1004.65" y="1263.5" ></text>
</g>
<g >
<title>main (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1557" width="0.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="998.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="437" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="447.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (116,802,566 samples, 0.47%)</title><rect x="301.2" y="1541" width="5.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="304.17" y="1551.5" ></text>
</g>
<g >
<title>NaClSysWrite (6,483,407,886 samples, 25.84%)</title><rect x="649.3" y="1557" width="304.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="652.28" y="1567.5" >NaClSysWrite</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1605" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1010.50" y="1615.5" ></text>
</g>
<g >
<title>exec_mmap (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1445" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="253.42" y="1455.5" ></text>
</g>
<g >
<title>destroy_inode (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1397" width="5.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1004.65" y="1407.5" ></text>
</g>
<g >
<title>__wake_up (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1285" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="411.71" y="1295.5" ></text>
</g>
<g >
<title>__filemap_add_folio (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1189" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="411.95" y="1199.5" ></text>
</g>
<g >
<title>realloc (806,775,700 samples, 3.22%)</title><rect x="906.6" y="1413" width="37.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="909.60" y="1423.5" >rea..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1413" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,840,053 samples, 0.03%)</title><rect x="303.5" y="789" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="306.52" y="799.5" ></text>
</g>
<g >
<title>__fsnotify_parent (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1413" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="412.12" y="1423.5" ></text>
</g>
<g >
<title>search_binary_handler (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1493" width="56.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="354.00" y="1503.5" >search..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1557" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="253.42" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1375.5" ></text>
</g>
<g >
<title>vfs_read (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1525" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="78.61" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,056,771 samples, 0.03%)</title><rect x="301.6" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="431.5" ></text>
</g>
<g >
<title>block_invalidate_folio (104,295,564 samples, 0.42%)</title><rect x="630.1" y="1157" width="4.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="633.05" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1141" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (3,420,423 samples, 0.01%)</title><rect x="268.8" y="1589" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="271.81" y="1599.5" ></text>
</g>
<g >
<title>rcu_do_batch (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1333" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.81" y="1343.5" ></text>
</g>
<g >
<title>operator new (5,992,358 samples, 0.02%)</title><rect x="309.7" y="53" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="312.71" y="63.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1605" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1519.5" ></text>
</g>
<g >
<title>sync_regs (114,872,345 samples, 0.46%)</title><rect x="813.4" y="1493" width="5.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="816.38" y="1503.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1557" width="21.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="330.63" y="1567.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,224,652 samples, 0.01%)</title><rect x="307.8" y="85" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (14,864,191 samples, 0.06%)</title><rect x="302.0" y="437" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="304.98" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1269" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="194.93" y="1279.5" ></text>
</g>
<g >
<title>NaClSysBrk (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1557" width="24.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="515.90" y="1567.5" >N..</text>
</g>
<g >
<title>code_store::statement_t::step (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1429" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="64.94" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,617,989 samples, 0.35%)</title><rect x="301.6" y="1349" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1359.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1429" width="11.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="53.33" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1157" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1167.5" ></text>
</g>
<g >
<title>mmput (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1429" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="353.38" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1477" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1487.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1525" width="1.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="253.42" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (50,498,504 samples, 0.20%)</title><rect x="428.4" y="1589" width="2.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="431.37" y="1599.5" ></text>
</g>
<g >
<title>filemap_add_folio (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1205" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="411.95" y="1215.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1205" width="2.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="821.78" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1477" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="412.12" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="735.5" ></text>
</g>
<g >
<title>tcp_get_idx (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1445" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="78.61" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="997" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1493" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1503.5" ></text>
</g>
<g >
<title>parse_and_execute (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1221" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1010.07" y="1231.5" ></text>
</g>
<g >
<title>operator new (2,307,460 samples, 0.01%)</title><rect x="302.9" y="597" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="305.94" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (50,413,548 samples, 0.20%)</title><rect x="973.6" y="1589" width="2.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="976.61" y="1599.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (251,836,257 samples, 1.00%)</title><rect x="442.9" y="1589" width="11.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="445.95" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1493" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1503.5" ></text>
</g>
<g >
<title>__schedule (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1461" width="2.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="249.84" y="1471.5" ></text>
</g>
<g >
<title>Builtins_KeyedHasIC_Megamorphic (4,410,995 samples, 0.02%)</title><rect x="300.3" y="1589" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="303.29" y="1599.5" ></text>
</g>
<g >
<title>set_page_dirty (50,222,268 samples, 0.20%)</title><rect x="804.6" y="1365" width="2.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="807.62" y="1375.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1285" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="878.78" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (75,566,524 samples, 0.30%)</title><rect x="263.9" y="1541" width="3.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="266.88" y="1551.5" ></text>
</g>
<g >
<title>load_elf_binary (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1477" width="56.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="354.00" y="1487.5" >load_e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="709" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1525" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1535.5" ></text>
</g>
<g >
<title>enframe (131,089,772 samples, 0.52%)</title><rect x="24.4" y="1605" width="6.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="27.43" y="1615.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (196,666,340 samples, 0.78%)</title><rect x="52.7" y="1365" width="9.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="55.69" y="1375.5" ></text>
</g>
<g >
<title>__open64_nocancel (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1365" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1009.86" y="1375.5" ></text>
</g>
<g >
<title>seq_read (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1493" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="78.61" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="639.5" ></text>
</g>
<g >
<title>do_truncate (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1349" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="821.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="117" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="127.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1397" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="998.23" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1509" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1183.5" ></text>
</g>
<g >
<title>worker (6,100,517 samples, 0.02%)</title><rect x="349.1" y="1573" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="352.14" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="485" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1589" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="998.23" y="1599.5" ></text>
</g>
<g >
<title>lru_lazyfree_fn.part.0 (12,879,917 samples, 0.05%)</title><rect x="16.2" y="1413" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="19.17" y="1423.5" ></text>
</g>
<g >
<title>xas_init_marks (43,752,521 samples, 0.17%)</title><rect x="81.2" y="1429" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="84.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,326,164 samples, 0.31%)</title><rect x="301.6" y="1253" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1263.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,234,236 samples, 0.01%)</title><rect x="407.9" y="1397" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="410.93" y="1407.5" ></text>
</g>
<g >
<title>read (8,488,571 samples, 0.03%)</title><rect x="306.9" y="1573" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="309.86" y="1583.5" ></text>
</g>
<g >
<title>ep_poll_callback (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1461" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="251.80" y="1471.5" ></text>
</g>
<g >
<title>vfs_read (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1541" width="17.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="35.89" y="1551.5" ></text>
</g>
<g >
<title>ksys_write (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1541" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="251.80" y="1551.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1573" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="310.26" y="1583.5" ></text>
</g>
<g >
<title>browse_engine::on_file_created (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1509" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="64.94" y="1519.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (52,194,863 samples, 0.21%)</title><rect x="627.6" y="1189" width="2.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="630.60" y="1199.5" ></text>
</g>
<g >
<title>sleep (13,318,567 samples, 0.05%)</title><rect x="1010.1" y="1621" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1013.10" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,300,786 samples, 0.20%)</title><rect x="301.6" y="853" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="863.5" ></text>
</g>
<g >
<title>[bash] (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1541" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1009.86" y="1551.5" ></text>
</g>
<g >
<title>__schedule (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1381" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="330.36" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="351.5" ></text>
</g>
<g >
<title>walk_component (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1237" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1009.86" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,546,442 samples, 0.07%)</title><rect x="407.8" y="1525" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="410.76" y="1535.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1365" width="4.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="539.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1061" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1071.5" ></text>
</g>
<g >
<title>dispatcher (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1525" width="4.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="539.98" y="1535.5" ></text>
</g>
<g >
<title>copy_pmd_range (19,799,406 samples, 0.08%)</title><rect x="73.1" y="1429" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="76.11" y="1439.5" ></text>
</g>
<g >
<title>dput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1365" width="5.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1004.65" y="1375.5" ></text>
</g>
<g >
<title>vfs_read (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1525" width="1.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="71.79" y="1535.5" ></text>
</g>
<g >
<title>do_unlinkat (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1397" width="17.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="623.24" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1397" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1477" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1487.5" ></text>
</g>
<g >
<title>[anon] (865,150,057 samples, 3.45%)</title><rect x="414.1" y="1605" width="40.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="417.10" y="1615.5" >[an..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="517" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="527.5" ></text>
</g>
<g >
<title>do_mas_munmap (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1413" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="998.23" y="1423.5" ></text>
</g>
<g >
<title>__sys_connect_file (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1285" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="194.58" y="1295.5" ></text>
</g>
<g >
<title>zap_pte_range (11,804,444 samples, 0.05%)</title><rect x="251.7" y="1317" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="254.69" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="741" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (201,270,777 samples, 0.80%)</title><rect x="844.9" y="1493" width="9.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="847.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,672,351 samples, 0.12%)</title><rect x="190.2" y="1605" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="193.18" y="1615.5" ></text>
</g>
<g >
<title>__alloc_pages (101,467,798 samples, 0.40%)</title><rect x="766.7" y="1237" width="4.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="769.73" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50,339,056 samples, 0.20%)</title><rect x="790.4" y="1301" width="2.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="793.40" y="1311.5" ></text>
</g>
<g >
<title>page_remove_rmap (52,215,196 samples, 0.21%)</title><rect x="539.4" y="1237" width="2.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="542.44" y="1247.5" ></text>
</g>
<g >
<title>do_set_pte (50,346,468 samples, 0.20%)</title><rect x="885.3" y="1349" width="2.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="888.27" y="1359.5" ></text>
</g>
<g >
<title>native_write_cr4 (3,544,144 samples, 0.01%)</title><rect x="263.9" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="266.88" y="1439.5" ></text>
</g>
<g >
<title>execute_command_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1157" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1493" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1445" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1013.38" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (4,144,161 samples, 0.02%)</title><rect x="307.6" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="310.62" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,920,962 samples, 0.09%)</title><rect x="301.6" y="469" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="479.5" ></text>
</g>
<g >
<title>kcompactd (11,172,483 samples, 0.04%)</title><rect x="78.1" y="1573" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="81.08" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1557" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="78.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="933" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="943.5" ></text>
</g>
<g >
<title>shell_glob_filename (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1429" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1009.86" y="1439.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (777,814,568 samples, 3.10%)</title><rect x="701.8" y="1525" width="36.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="704.75" y="1535.5" >das..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1045" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1055.5" ></text>
</g>
<g >
<title>[libc.so.6] (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1541" width="24.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="515.90" y="1551.5" >[..</text>
</g>
<g >
<title>walk_page_range (2,937,126 samples, 0.01%)</title><rect x="16.8" y="1477" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="19.78" y="1487.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (46,350,527 samples, 0.18%)</title><rect x="14.6" y="1445" width="2.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="17.60" y="1455.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (3,641,509 samples, 0.01%)</title><rect x="408.8" y="1189" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="411.78" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="853" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="863.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1317" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1013.48" y="1327.5" ></text>
</g>
<g >
<title>__filemap_get_folio (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1221" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="411.95" y="1231.5" ></text>
</g>
<g >
<title>handle_pte_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1397" width="11.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="878.78" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="501" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1413" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1221" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="485" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="495.5" ></text>
</g>
<g >
<title>std::fs::File::set_len (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1493" width="2.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="821.78" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,171,812 samples, 0.01%)</title><rect x="88.8" y="1349" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="91.84" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="549" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="559.5" ></text>
</g>
<g >
<title>create_page_buffers (100,357,182 samples, 0.40%)</title><rect x="783.3" y="1317" width="4.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="786.31" y="1327.5" ></text>
</g>
<g >
<title>fsnotify (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1397" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="412.12" y="1407.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1301" width="4.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="802.84" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1093" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1103.5" ></text>
</g>
<g >
<title>try_to_migrate_one (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1445" width="6.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="255.25" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (52,135,043 samples, 0.21%)</title><rect x="603.1" y="1509" width="2.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="606.10" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1525" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1010.50" y="1535.5" ></text>
</g>
<g >
<title>try_to_free_buffers (104,295,564 samples, 0.42%)</title><rect x="630.1" y="1093" width="4.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="633.05" y="1103.5" ></text>
</g>
<g >
<title>set_next_entity (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1477" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="158.37" y="1487.5" ></text>
</g>
<g >
<title>execute_command (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1429" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1010.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1461" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="998.23" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1493" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.25" y="1503.5" ></text>
</g>
<g >
<title>kernel_clone (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1525" width="2.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="76.11" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2,835,831 samples, 0.01%)</title><rect x="1189.5" y="1493" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.50" y="1503.5" ></text>
</g>
<g >
<title>drain_all_pages (7,768,481 samples, 0.03%)</title><rect x="78.2" y="1541" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="81.24" y="1551.5" ></text>
</g>
<g >
<title>kswapd (310,904,543 samples, 1.24%)</title><rect x="78.6" y="1573" width="14.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="81.61" y="1583.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (101,361,133 samples, 0.40%)</title><rect x="642.2" y="1541" width="4.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="645.17" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1541" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1551.5" ></text>
</g>
<g >
<title>do_mas_munmap (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1381" width="4.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="539.98" y="1391.5" ></text>
</g>
<g >
<title>bprm_execve (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1541" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="353.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,577,200 samples, 0.29%)</title><rect x="301.6" y="1077" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="485" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="309" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1429" width="24.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="515.90" y="1439.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1141" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1285" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1589" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="79.11" y="1599.5" ></text>
</g>
<g >
<title>poll_freewait (3,544,144 samples, 0.01%)</title><rect x="408.3" y="1477" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="411.30" y="1487.5" ></text>
</g>
<g >
<title>copy_process (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1509" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="76.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1423.5" ></text>
</g>
<g >
<title>unmap_page_range (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1349" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1069.55" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1317" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1327.5" ></text>
</g>
<g >
<title>proactive_compact_node (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1557" width="11.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="255.25" y="1567.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (7,926,975 samples, 0.03%)</title><rect x="156.4" y="1445" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="159.42" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,255,522 samples, 0.21%)</title><rect x="617.8" y="1509" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="620.78" y="1519.5" ></text>
</g>
<g >
<title>malloc (2,759,312 samples, 0.01%)</title><rect x="304.4" y="917" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="307.45" y="927.5" ></text>
</g>
<g >
<title>__block_write_begin_int (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1317" width="4.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="881.15" y="1327.5" ></text>
</g>
<g >
<title>__xstat64 (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1541" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="309.66" y="1551.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1413" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="92.29" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1381" width="2.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="821.78" y="1391.5" ></text>
</g>
<g >
<title>charge_memcg (6,071,234 samples, 0.02%)</title><rect x="28.0" y="1461" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="30.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="927.5" ></text>
</g>
<g >
<title>__libc_start_main (98,496,681 samples, 0.39%)</title><rect x="191.6" y="1589" width="4.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="194.58" y="1599.5" ></text>
</g>
<g >
<title>compaction_alloc (116,191,629 samples, 0.46%)</title><rect x="258.4" y="1493" width="5.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="261.42" y="1503.5" ></text>
</g>
<g >
<title>do_futex (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1461" width="21.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="330.63" y="1471.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="389" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="245" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="255.5" ></text>
</g>
<g >
<title>arch_call_rest_init (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1557" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="270.57" y="1567.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (49,638,700 samples, 0.20%)</title><rect x="28.3" y="1525" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="31.26" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (44,679,536 samples, 0.18%)</title><rect x="246.8" y="1573" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="249.84" y="1583.5" ></text>
</g>
<g >
<title>shrink_slab (87,275,839 samples, 0.35%)</title><rect x="89.1" y="1509" width="4.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="92.12" y="1519.5" ></text>
</g>
<g >
<title>mmput (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1429" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1010.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1029" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="805" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="815.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::code_items_set&gt;::move_next (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1445" width="11.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="53.33" y="1455.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (52,072,922 samples, 0.21%)</title><rect x="978.4" y="1589" width="2.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="981.38" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,488,571 samples, 0.03%)</title><rect x="306.9" y="1557" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="309.86" y="1567.5" ></text>
</g>
<g >
<title>[perf-3932754.map] (2,840,375 samples, 0.01%)</title><rect x="299.9" y="1605" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="302.90" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="181" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="191.5" ></text>
</g>
<g >
<title>__free_one_page (7,768,481 samples, 0.03%)</title><rect x="78.2" y="1477" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="81.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="149" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="159.5" ></text>
</g>
<g >
<title>__mmput (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1413" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1069.55" y="1423.5" ></text>
</g>
<g >
<title>ion (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1493" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="411.71" y="1503.5" ></text>
</g>
<g >
<title>__wake_up_common (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1253" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="411.71" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,251,029 samples, 0.02%)</title><rect x="301.6" y="341" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="351.5" ></text>
</g>
<g >
<title>_start (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1605" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="998.23" y="1615.5" ></text>
</g>
<g >
<title>thread_pool::do_work (295,825,964 samples, 1.18%)</title><rect x="50.3" y="1573" width="13.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="53.33" y="1583.5" ></text>
</g>
<g >
<title>handle_mm_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1477" width="24.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="515.90" y="1487.5" >h..</text>
</g>
<g >
<title>get_page_from_freelist (101,467,798 samples, 0.40%)</title><rect x="766.7" y="1221" width="4.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="769.73" y="1231.5" ></text>
</g>
<g >
<title>ext4_readahead (49,683,079 samples, 0.20%)</title><rect x="752.5" y="1285" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="755.55" y="1295.5" ></text>
</g>
<g >
<title>poll_idle (58,306,174 samples, 0.23%)</title><rect x="264.7" y="1493" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="267.65" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1589" width="17.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.89" y="1599.5" ></text>
</g>
<g >
<title>wake_affine (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1333" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="251.80" y="1343.5" ></text>
</g>
<g >
<title>refill_obj_stock (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1349" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1010.88" y="1359.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1525" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="79.11" y="1535.5" ></text>
</g>
<g >
<title>add_wait_queue (2,234,236 samples, 0.01%)</title><rect x="407.9" y="1429" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="410.93" y="1439.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFileMap::write_to_map (708,338,455 samples, 2.82%)</title><rect x="854.3" y="1509" width="33.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="857.32" y="1519.5" >ru..</text>
</g>
<g >
<title>shrink_folio_list (172,566,680 samples, 0.69%)</title><rect x="81.0" y="1477" width="8.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="84.01" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="821" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="831.5" ></text>
</g>
<g >
<title>do_idle (78,344,292 samples, 0.31%)</title><rect x="263.9" y="1557" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="266.88" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="495.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1285" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="353.38" y="1295.5" ></text>
</g>
<g >
<title>seq_read_iter (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1477" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="78.61" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1125" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1077" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1087.5" ></text>
</g>
<g >
<title>unmap_vmas (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1365" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="998.23" y="1375.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1413" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="194.93" y="1423.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (50,222,268 samples, 0.20%)</title><rect x="804.6" y="1333" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="807.62" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1461" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="437" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="447.5" ></text>
</g>
<g >
<title>update_cfs_group (2,349,296 samples, 0.01%)</title><rect x="327.4" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="330.36" y="1327.5" ></text>
</g>
<g >
<title>page_remove_rmap (3,021,883 samples, 0.01%)</title><rect x="252.1" y="1301" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="255.10" y="1311.5" ></text>
</g>
<g >
<title>balance_dirty_pages (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1333" width="4.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="802.84" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="933" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="693" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="703.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1525" width="24.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="515.90" y="1535.5" >a..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1461" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1471.5" ></text>
</g>
<g >
<title>start_secondary (1,325,848,435 samples, 5.28%)</title><rect x="93.2" y="1589" width="62.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="96.23" y="1599.5" >start_..</text>
</g>
<g >
<title>cpuidle_enter_state (1,315,223,710 samples, 5.24%)</title><rect x="93.3" y="1509" width="61.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="96.31" y="1519.5" >cpuidl..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3,544,144 samples, 0.01%)</title><rect x="408.3" y="1445" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="411.30" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1493" width="33.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="159.83" y="1503.5" >se..</text>
</g>
<g >
<title>__x64_sys_unlink (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1413" width="17.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="623.24" y="1423.5" ></text>
</g>
<g >
<title>__do_sys_newstat (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1477" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="309.66" y="1487.5" ></text>
</g>
<g >
<title>_nss_systemd_getgrgid_r (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1461" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="194.93" y="1471.5" ></text>
</g>
<g >
<title>set_page_dirty (10,135,901 samples, 0.04%)</title><rect x="1000.4" y="1381" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1003.37" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (2,309,228 samples, 0.01%)</title><rect x="305.4" y="1253" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="308.37" y="1263.5" ></text>
</g>
<g >
<title>balance_pgdat (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1557" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1010.88" y="1567.5" ></text>
</g>
<g >
<title>run_rebalance_domains (17,216,379 samples, 0.07%)</title><rect x="155.6" y="1365" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="158.61" y="1375.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (50,279,478 samples, 0.20%)</title><rect x="880.5" y="1237" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="883.50" y="1247.5" ></text>
</g>
<g >
<title>__folio_mark_dirty (50,245,156 samples, 0.20%)</title><rect x="788.0" y="1301" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="791.03" y="1311.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1365" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="251.80" y="1375.5" ></text>
</g>
<g >
<title>ovl_write_iter (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1381" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="411.95" y="1391.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1253" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="411.95" y="1263.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1493" width="11.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="53.33" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (103,002,857 samples, 0.41%)</title><rect x="71.2" y="1605" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="74.17" y="1615.5" ></text>
</g>
<g >
<title>start_kernel (12,487,213 samples, 0.05%)</title><rect x="267.6" y="1573" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="270.57" y="1583.5" ></text>
</g>
<g >
<title>unlock_page_memcg (13,904,316 samples, 0.06%)</title><rect x="1066.6" y="1285" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1069.65" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1397" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1407.5" ></text>
</g>
<g >
<title>do_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1381" width="11.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="878.78" y="1391.5" ></text>
</g>
<g >
<title>shrink_dentry_list (31,074,081 samples, 0.12%)</title><rect x="91.8" y="1429" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="94.77" y="1439.5" ></text>
</g>
<g >
<title>free_unref_page_list (3,902,895 samples, 0.02%)</title><rect x="88.9" y="1461" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="91.94" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1333" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1009.96" y="1343.5" ></text>
</g>
<g >
<title>kthread (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1589" width="11.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="255.25" y="1599.5" ></text>
</g>
<g >
<title>exc_page_fault (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1589" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="253.28" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (2,791,968 samples, 0.01%)</title><rect x="304.6" y="933" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="307.58" y="943.5" ></text>
</g>
<g >
<title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1557" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="303.18" y="1567.5" ></text>
</g>
<g >
<title>proc_fill_cache (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1253" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1009.96" y="1263.5" ></text>
</g>
<g >
<title>copy_page_to_iter (222,950,308 samples, 0.89%)</title><rect x="39.8" y="1413" width="10.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="42.85" y="1423.5" ></text>
</g>
<g >
<title>[bash] (7,132,702 samples, 0.03%)</title><rect x="1007.1" y="1445" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1509" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1009.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_write (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1557" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="251.80" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="293" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="303.5" ></text>
</g>
<g >
<title>__dentry_kill (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1349" width="5.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1004.65" y="1359.5" ></text>
</g>
<g >
<title>[bash] (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1477" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1009.86" y="1487.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (151,109,776 samples, 0.60%)</title><rect x="642.2" y="1557" width="7.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="645.17" y="1567.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (52,259,785 samples, 0.21%)</title><rect x="546.8" y="1557" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="549.80" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1429" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="193.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1103.5" ></text>
</g>
<g >
<title>__libc_start_main (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1589" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1009.86" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (2,541,777 samples, 0.01%)</title><rect x="303.8" y="805" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="306.84" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1525" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="965" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="975.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (570,636,644 samples, 2.27%)</title><rect x="478.9" y="1573" width="26.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="481.90" y="1583.5" >N..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,352,275,648 samples, 5.39%)</title><rect x="93.2" y="1605" width="63.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="96.23" y="1615.5" >second..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,385,337 samples, 0.01%)</title><rect x="308.6" y="53" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="63.5" ></text>
</g>
<g >
<title>filemap_free_folio (52,194,863 samples, 0.21%)</title><rect x="627.6" y="1173" width="2.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="630.60" y="1183.5" ></text>
</g>
<g >
<title>uv_mutex_unlock (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1557" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="352.33" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (25,689,843 samples, 0.10%)</title><rect x="155.6" y="1493" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="158.59" y="1503.5" ></text>
</g>
<g >
<title>search_binary_handler (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1493" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1010.50" y="1503.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1,109,455,393 samples, 4.42%)</title><rect x="892.4" y="1477" width="52.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="895.37" y="1487.5" >&lt;serd..</text>
</g>
<g >
<title>filemap_fault (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1349" width="2.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="878.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="927.5" ></text>
</g>
<g >
<title>malloc (4,392,921 samples, 0.02%)</title><rect x="301.7" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="304.69" y="287.5" ></text>
</g>
<g >
<title>cpptools_context::handle_create_decl_def_scan (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1541" width="11.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="53.33" y="1551.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,985,844,453 samples, 7.91%)</title><rect x="1096.1" y="1493" width="93.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1099.11" y="1503.5" >mwait_idle_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1397" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1407.5" ></text>
</g>
<g >
<title>operator new (18,238,817 samples, 0.07%)</title><rect x="305.8" y="1477" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="308.80" y="1487.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1365" width="6.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="255.25" y="1375.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1285" width="17.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="623.24" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="149" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1509" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="309.66" y="1519.5" ></text>
</g>
<g >
<title>CompareAndSwap (310,899,824 samples, 1.24%)</title><rect x="491.1" y="1557" width="14.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="494.11" y="1567.5" ></text>
</g>
<g >
<title>__filemap_remove_folio (43,752,521 samples, 0.17%)</title><rect x="81.2" y="1445" width="2.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="84.19" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1477" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="821.78" y="1487.5" ></text>
</g>
<g >
<title>iput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1429" width="5.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1004.65" y="1439.5" ></text>
</g>
<g >
<title>[anon] (17,366,377 samples, 0.07%)</title><rect x="268.2" y="1605" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="271.15" y="1615.5" ></text>
</g>
<g >
<title>memset_erms (43,187,599 samples, 0.17%)</title><rect x="66.8" y="1493" width="2.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="69.76" y="1503.5" ></text>
</g>
<g >
<title>_dl_catch_exception (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1525" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="193.05" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="917" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="927.5" ></text>
</g>
<g >
<title>file_free_rcu (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1317" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="991.5" ></text>
</g>
<g >
<title>arch_call_rest_init (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1557" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,227,205 samples, 0.01%)</title><rect x="307.3" y="149" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="310.26" y="159.5" ></text>
</g>
<g >
<title>ovl_permission (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1285" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="193.05" y="1295.5" ></text>
</g>
<g >
<title>send_to_group (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1381" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="412.12" y="1391.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1397" width="2.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="64.94" y="1407.5" ></text>
</g>
<g >
<title>intel_idle (2,960,606 samples, 0.01%)</title><rect x="125.7" y="1493" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="128.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,651,526 samples, 0.02%)</title><rect x="305.3" y="1269" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="308.26" y="1279.5" ></text>
</g>
<g >
<title>begin_new_exec (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1461" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="353.38" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1525" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.25" y="1535.5" ></text>
</g>
<g >
<title>exec_binprm (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1509" width="56.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="354.00" y="1519.5" >exec_b..</text>
</g>
<g >
<title>do_syscall_64 (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1573" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.60" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,603,851,112 samples, 10.38%)</title><rect x="1067.4" y="1573" width="122.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1070.35" y="1583.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1013" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1023.5" ></text>
</g>
<g >
<title>DirTree::update (2,162,582 samples, 0.01%)</title><rect x="301.1" y="1541" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="304.07" y="1551.5" ></text>
</g>
<g >
<title>rmqueue_bulk (50,452,028 samples, 0.20%)</title><rect x="769.1" y="1189" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="772.13" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="869" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (806,775,700 samples, 3.22%)</title><rect x="906.6" y="1429" width="37.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="909.60" y="1439.5" >all..</text>
</g>
<g >
<title>ovl_destroy_inode (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1333" width="17.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="623.24" y="1343.5" ></text>
</g>
<g >
<title>exit_mmap (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1397" width="33.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="159.83" y="1407.5" >ex..</text>
</g>
<g >
<title>__unfreeze_partials (3,614,459 samples, 0.01%)</title><rect x="88.7" y="1333" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="91.67" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="623.5" ></text>
</g>
<g >
<title>do_group_exit (137,371,296 samples, 0.55%)</title><rect x="1000.4" y="1557" width="6.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1003.37" y="1567.5" ></text>
</g>
<g >
<title>scan_nonmember_declaration (44,844,569 samples, 0.18%)</title><rect x="10.1" y="1605" width="2.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.09" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="741" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101,839,889 samples, 0.41%)</title><rect x="66.4" y="1589" width="4.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="69.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1061" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1071.5" ></text>
</g>
<g >
<title>[perf-3932779.map] (8,996,841 samples, 0.04%)</title><rect x="300.1" y="1605" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="303.07" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1429" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,560,614,463 samples, 6.22%)</title><rect x="745.4" y="1509" width="73.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="748.39" y="1519.5" >[libc.so..</text>
</g>
<g >
<title>[ls] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1493" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1455.5" ></text>
</g>
<g >
<title>__free_one_page (52,200,785 samples, 0.21%)</title><rect x="625.1" y="1109" width="2.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="628.14" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="309.66" y="1535.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,720,350 samples, 0.03%)</title><rect x="1010.2" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.19" y="1583.5" ></text>
</g>
<g >
<title>[ls] (45,306,426 samples, 0.18%)</title><rect x="191.6" y="1525" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1535.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (603,838,818 samples, 2.41%)</title><rect x="752.5" y="1301" width="28.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="755.55" y="1311.5" >pa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="325" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,668,234 samples, 0.01%)</title><rect x="325.9" y="85" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="328.92" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="453" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="463.5" ></text>
</g>
<g >
<title>list_lru_walk_one (38,115,285 samples, 0.15%)</title><rect x="90.0" y="1429" width="1.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="92.98" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1477" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1253" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1263.5" ></text>
</g>
<g >
<title>do_set_pte (51,037,734 samples, 0.20%)</title><rect x="882.9" y="1365" width="2.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="885.87" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1477" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="352.14" y="1487.5" ></text>
</g>
<g >
<title>evict (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1253" width="17.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="623.24" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1269" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1279.5" ></text>
</g>
<g >
<title>isolate_lru_folios (42,530,737 samples, 0.17%)</title><rect x="79.0" y="1477" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="82.01" y="1487.5" ></text>
</g>
<g >
<title>moveToChild (49,267,766 samples, 0.20%)</title><rect x="57.3" y="1349" width="2.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="60.27" y="1359.5" ></text>
</g>
<g >
<title>start_secondary (78,344,292 samples, 0.31%)</title><rect x="263.9" y="1589" width="3.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="266.88" y="1599.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1397" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="193.05" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="933" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="943.5" ></text>
</g>
<g >
<title>bprm_execve (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1541" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1069.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="101" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="111.5" ></text>
</g>
<g >
<title>__pte_alloc (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1413" width="1.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1068.18" y="1423.5" ></text>
</g>
<g >
<title>update_process_times (680,148,128 samples, 2.71%)</title><rect x="93.5" y="1381" width="32.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="96.51" y="1391.5" >up..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (14,384,235 samples, 0.06%)</title><rect x="303.3" y="821" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.29" y="831.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1349" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="251.80" y="1359.5" ></text>
</g>
<g >
<title>dup_mmap (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1477" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="76.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1141" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,417,137 samples, 0.01%)</title><rect x="308.5" y="85" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.51" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1231.5" ></text>
</g>
<g >
<title>filemap_release_folio (104,295,564 samples, 0.42%)</title><rect x="630.1" y="1141" width="4.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="633.05" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,326,164 samples, 0.31%)</title><rect x="301.6" y="1269" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1445" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="193.05" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (2,829,076,068 samples, 11.28%)</title><rect x="821.1" y="1525" width="133.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="824.15" y="1535.5" >rustposix::safep..</text>
</g>
<g >
<title>irq_exit_rcu (17,519,317 samples, 0.07%)</title><rect x="155.6" y="1413" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="158.60" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFileMap::close (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1509" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="998.23" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,385,337 samples, 0.01%)</title><rect x="308.6" y="37" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="47.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (50,225,660 samples, 0.20%)</title><rect x="414.1" y="1589" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="417.10" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1445" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1003.37" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (416,757,389 samples, 1.66%)</title><rect x="593.3" y="1525" width="19.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="596.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1317" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1327.5" ></text>
</g>
<g >
<title>grep (1,968,560,120 samples, 7.85%)</title><rect x="64.2" y="1621" width="92.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="67.25" y="1631.5" >grep</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,168,955 samples, 0.02%)</title><rect x="303.0" y="693" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.04" y="703.5" ></text>
</g>
<g >
<title>up_read (49,406,311 samples, 0.20%)</title><rect x="797.5" y="1349" width="2.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="800.52" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1589" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1013.60" y="1599.5" ></text>
</g>
<g >
<title>free_pgtables (26,966,986 samples, 0.11%)</title><rect x="250.4" y="1381" width="1.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="253.42" y="1391.5" ></text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (295,825,964 samples, 1.18%)</title><rect x="50.3" y="1589" width="13.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="53.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="959.5" ></text>
</g>
<g >
<title>__filemap_add_folio (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1285" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="753.16" y="1295.5" ></text>
</g>
<g >
<title>record__write (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1541" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="412.12" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1557" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="117" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="127.5" ></text>
</g>
<g >
<title>dequeue_task_fair (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1349" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="330.36" y="1359.5" ></text>
</g>
<g >
<title>ext4_evict_inode (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1237" width="17.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="623.24" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1429" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (26,805,253 samples, 0.11%)</title><rect x="308.7" y="69" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="311.74" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (150,629,403 samples, 0.60%)</title><rect x="944.5" y="1461" width="7.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="947.55" y="1471.5" ></text>
</g>
<g >
<title>irq_enter_rcu (567,950,109 samples, 2.26%)</title><rect x="1069.4" y="1461" width="26.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1072.39" y="1471.5" >i..</text>
</g>
<g >
<title>handle_pte_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1301" width="2.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="51.29" y="1311.5" ></text>
</g>
<g >
<title>malloc (3,572,185 samples, 0.01%)</title><rect x="308.3" y="69" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="311.34" y="79.5" ></text>
</g>
<g >
<title>unmap_page_range (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1349" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="79.11" y="1359.5" ></text>
</g>
<g >
<title>dput (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1317" width="17.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="623.24" y="1327.5" ></text>
</g>
<g >
<title>[sel_ldr] (362,120,073 samples, 1.44%)</title><rect x="956.6" y="1589" width="17.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="959.58" y="1599.5" ></text>
</g>
<g >
<title>generic_file_read_iter (321,149,949 samples, 1.28%)</title><rect x="35.2" y="1445" width="15.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="38.23" y="1455.5" ></text>
</g>
<g >
<title>do_sys_openat2 (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1317" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="194.93" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (78,326,164 samples, 0.31%)</title><rect x="301.6" y="1237" width="3.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.58" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8,182,566 samples, 0.03%)</title><rect x="327.2" y="1477" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="330.17" y="1487.5" ></text>
</g>
<g >
<title>pagecache_get_page (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1237" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="411.95" y="1247.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1333" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="353.38" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1525" width="56.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="354.00" y="1535.5" >bprm_e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1189" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1199.5" ></text>
</g>
<g >
<title>prune_dcache_sb (69,189,366 samples, 0.28%)</title><rect x="90.0" y="1445" width="3.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="92.98" y="1455.5" ></text>
</g>
<g >
<title>getdents64 (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1365" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1009.96" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (46,180,278 samples, 0.18%)</title><rect x="1065.2" y="1589" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1068.18" y="1599.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (618,801,332 samples, 2.47%)</title><rect x="126.0" y="1493" width="29.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="128.97" y="1503.5" >mw..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1119.5" ></text>
</g>
<g >
<title>default_wake_function (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1381" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="251.80" y="1391.5" ></text>
</g>
<g >
<title>try_to_migrate (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1477" width="6.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="255.25" y="1487.5" ></text>
</g>
<g >
<title>create_page_buffers (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1301" width="4.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="881.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,224,652 samples, 0.01%)</title><rect x="307.8" y="37" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="47.5" ></text>
</g>
<g >
<title>exc_page_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1509" width="24.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="515.90" y="1519.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="581" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1413" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="821.78" y="1423.5" ></text>
</g>
<g >
<title>unmap_page_range (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1301" width="4.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="539.98" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock (26,636,263 samples, 0.11%)</title><rect x="83.2" y="1413" width="1.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="86.25" y="1423.5" ></text>
</g>
<g >
<title>schedule_idle (4,671,252 samples, 0.02%)</title><rect x="1189.5" y="1541" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.50" y="1551.5" ></text>
</g>
<g >
<title>node (1,761,417,154 samples, 7.02%)</title><rect x="268.2" y="1621" width="82.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="271.15" y="1631.5" >node</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFileMap::write_to_map (50,475,532 samples, 0.20%)</title><rect x="430.7" y="1589" width="2.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="433.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,251,029 samples, 0.02%)</title><rect x="301.6" y="325" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="335.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1525" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1069.55" y="1535.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2,227,205 samples, 0.01%)</title><rect x="16.7" y="1397" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="19.67" y="1407.5" ></text>
</g>
<g >
<title>sqlite3PagerSharedLock (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1365" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="64.94" y="1375.5" ></text>
</g>
<g >
<title>do_idle (2,603,851,112 samples, 10.38%)</title><rect x="1067.4" y="1557" width="122.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1070.35" y="1567.5" >do_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,977,690 samples, 0.33%)</title><rect x="301.6" y="1317" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,056,771 samples, 0.03%)</title><rect x="301.6" y="389" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="997" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="181" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1429" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="411.71" y="1439.5" ></text>
</g>
<g >
<title>malloc (2,307,460 samples, 0.01%)</title><rect x="302.9" y="581" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="305.94" y="591.5" ></text>
</g>
<g >
<title>ksys_read (8,488,571 samples, 0.03%)</title><rect x="306.9" y="1509" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="309.86" y="1519.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1461" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="92.29" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (15,601,473 samples, 0.06%)</title><rect x="88.2" y="1381" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="91.21" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="655.5" ></text>
</g>
<g >
<title>path_lookupat (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1413" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="309.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="613" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="623.5" ></text>
</g>
<g >
<title>ext4_readahead (100,280,788 samples, 0.40%)</title><rect x="771.5" y="1269" width="4.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="774.50" y="1279.5" ></text>
</g>
<g >
<title>exec_mmap (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1445" width="33.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="159.83" y="1455.5" >ex..</text>
</g>
<g >
<title>do_syscall_64 (8,488,571 samples, 0.03%)</title><rect x="306.9" y="1541" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="309.86" y="1551.5" ></text>
</g>
<g >
<title>zap_pte_range (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1317" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="79.11" y="1327.5" ></text>
</g>
<g >
<title>unmap_single_vma (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1349" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="998.23" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1557" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1567.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (50,656,759 samples, 0.20%)</title><rect x="411.7" y="1589" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="414.72" y="1599.5" ></text>
</g>
<g >
<title>futex_wait (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1445" width="21.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="330.63" y="1455.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1359.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,395,426,636 samples, 5.56%)</title><rect x="745.4" y="1429" width="65.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="748.39" y="1439.5" >__handl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1365" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="79.11" y="1375.5" ></text>
</g>
<g >
<title>__schedule (4,671,252 samples, 0.02%)</title><rect x="1189.5" y="1525" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="661" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="671.5" ></text>
</g>
<g >
<title>uv__io_poll (20,750,922 samples, 0.08%)</title><rect x="326.2" y="1589" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="329.19" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (338,508,885 samples, 1.35%)</title><rect x="310.0" y="69" width="15.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="313.00" y="79.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (101,478,947 samples, 0.40%)</title><rect x="995.6" y="1605" width="4.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="998.60" y="1615.5" ></text>
</g>
<g >
<title>rcu_core (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1349" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.81" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,747,596 samples, 0.12%)</title><rect x="301.6" y="661" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32,357,697 samples, 0.13%)</title><rect x="26.7" y="1525" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.74" y="1535.5" ></text>
</g>
<g >
<title>__memcpy_fwd (159,770,753 samples, 0.64%)</title><rect x="16.9" y="1605" width="7.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="19.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="239.5" ></text>
</g>
<g >
<title>begin_new_exec (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1461" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1010.50" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="565" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="575.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1541" width="2.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="17.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (680,148,128 samples, 2.71%)</title><rect x="93.5" y="1413" width="32.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="96.51" y="1423.5" >ti..</text>
</g>
<g >
<title>vm_normal_page (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1301" width="33.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="159.83" y="1311.5" >vm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1349" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1359.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1461" width="17.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.89" y="1471.5" ></text>
</g>
<g >
<title>switch_mm (3,544,144 samples, 0.01%)</title><rect x="263.9" y="1477" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="266.88" y="1487.5" ></text>
</g>
<g >
<title>fsnotify (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1365" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="411.71" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="261" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="271.5" ></text>
</g>
<g >
<title>vfs_statx (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1365" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1013.48" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1509" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1519.5" ></text>
</g>
<g >
<title>execute_command_internal (7,132,702 samples, 0.03%)</title><rect x="1007.1" y="1461" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1471.5" ></text>
</g>
<g >
<title>next_tgid (6,066,531 samples, 0.02%)</title><rect x="66.4" y="1493" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1407.5" ></text>
</g>
<g >
<title>generic_perform_write (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1285" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="411.95" y="1295.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1493" width="2.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="249.84" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1429" width="4.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="539.98" y="1439.5" ></text>
</g>
<g >
<title>realloc (150,629,403 samples, 0.60%)</title><rect x="944.5" y="1445" width="7.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="947.55" y="1455.5" ></text>
</g>
<g >
<title>ext4_release_folio (104,295,564 samples, 0.42%)</title><rect x="630.1" y="1125" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="633.05" y="1135.5" ></text>
</g>
<g >
<title>do_anonymous_page (32,357,697 samples, 0.13%)</title><rect x="26.7" y="1493" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="29.74" y="1503.5" ></text>
</g>
<g >
<title>finish_fault (50,346,468 samples, 0.20%)</title><rect x="885.3" y="1365" width="2.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="888.27" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="191.5" ></text>
</g>
<g >
<title>pthread_cond_wait (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="352.14" y="1551.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1285" width="4.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="539.98" y="1295.5" ></text>
</g>
<g >
<title>dispatcher (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1525" width="17.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="623.24" y="1535.5" ></text>
</g>
<g >
<title>folio_mark_dirty (10,135,901 samples, 0.04%)</title><rect x="1000.4" y="1365" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1003.37" y="1375.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (6,328,028 samples, 0.03%)</title><rect x="327.3" y="1445" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="330.25" y="1455.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1557" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="329.42" y="1567.5" ></text>
</g>
<g >
<title>execute_command (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1173" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1010.07" y="1183.5" ></text>
</g>
<g >
<title>xas_start (50,253,299 samples, 0.20%)</title><rect x="778.6" y="1253" width="2.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="781.58" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1509" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1381" width="2.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1010.88" y="1391.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1285" width="4.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="802.84" y="1295.5" ></text>
</g>
<g >
<title>block_dirty_folio (10,135,901 samples, 0.04%)</title><rect x="1000.4" y="1333" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1003.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (52,099,308 samples, 0.21%)</title><rect x="622.7" y="1141" width="2.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="625.69" y="1151.5" ></text>
</g>
<g >
<title>evict (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1365" width="17.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="623.24" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (26,102,239 samples, 0.10%)</title><rect x="39.8" y="1397" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="42.85" y="1407.5" ></text>
</g>
<g >
<title>start (295,825,964 samples, 1.18%)</title><rect x="50.3" y="1605" width="13.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="53.33" y="1615.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1445" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="194.93" y="1455.5" ></text>
</g>
<g >
<title>ovl_get_inode_acl (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1237" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="193.05" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1461" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1573" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1583.5" ></text>
</g>
<g >
<title>__mmput (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1413" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="353.38" y="1423.5" ></text>
</g>
<g >
<title>mmput (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1429" width="56.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="354.00" y="1439.5" >mmput</text>
</g>
<g >
<title>__x64_sys_getdents64 (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1317" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1009.96" y="1327.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (26,966,986 samples, 0.11%)</title><rect x="250.4" y="1365" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="253.42" y="1375.5" ></text>
</g>
<g >
<title>unmap_page_range (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1349" width="33.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="159.83" y="1359.5" >un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="629" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="645" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="655.5" ></text>
</g>
<g >
<title>__do_fault (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1365" width="2.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="878.78" y="1375.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1349" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1359.5" ></text>
</g>
<g >
<title>[unknown]  (412,646,643 samples, 1.64%)</title><rect x="954.2" y="1605" width="19.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="957.20" y="1615.5" ></text>
</g>
<g >
<title>enqueue_task (4,306,515 samples, 0.02%)</title><rect x="155.2" y="1477" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="158.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="901" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="911.5" ></text>
</g>
<g >
<title>unmap_and_move (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1509" width="11.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="255.25" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (302,584,309 samples, 1.21%)</title><rect x="724.1" y="1509" width="14.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="727.10" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (82,977,690 samples, 0.33%)</title><rect x="301.6" y="1301" width="3.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.58" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1173" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1557" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="249.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="677" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate::{{closure}} (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1445" width="2.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="821.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="885" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1109" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1445" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="661" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1109" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1279.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (9,856,100 samples, 0.04%)</title><rect x="327.2" y="1557" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="330.17" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1327.5" ></text>
</g>
<g >
<title>getpwuid_r (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1461" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="194.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1461" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.81" y="1471.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1365" width="4.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="802.84" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1189" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1199.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1567.5" ></text>
</g>
<g >
<title>generic_permission (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1269" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="193.05" y="1279.5" ></text>
</g>
<g >
<title>__handle_mm_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1317" width="2.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="51.29" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1349" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1009.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1445" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="309" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="319.5" ></text>
</g>
<g >
<title>do_filp_open (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1285" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1009.86" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="223.5" ></text>
</g>
<g >
<title>malloc (2,668,234 samples, 0.01%)</title><rect x="325.9" y="53" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="328.92" y="63.5" ></text>
</g>
<g >
<title>NaClSysBrkDecoder (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1573" width="24.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="515.90" y="1583.5" >N..</text>
</g>
<g >
<title>unmap_vmas (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1381" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1069.55" y="1391.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1285" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1295.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3,902,895 samples, 0.02%)</title><rect x="88.9" y="1445" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="91.94" y="1455.5" ></text>
</g>
<g >
<title>zap_pte_range (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1317" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="353.38" y="1327.5" ></text>
</g>
<g >
<title>inode_permission (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1301" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1013.48" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_openat (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1333" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="194.93" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,347,221 samples, 0.20%)</title><rect x="949.3" y="1429" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="952.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="431.5" ></text>
</g>
<g >
<title>filemap_add_folio (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1301" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="753.16" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="165" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="319.5" ></text>
</g>
<g >
<title>pte_alloc_one (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1397" width="1.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1068.18" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,747,596 samples, 0.12%)</title><rect x="301.6" y="677" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="687.5" ></text>
</g>
<g >
<title>load_elf_binary (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1477" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1010.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1365" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1375.5" ></text>
</g>
<g >
<title>_find_next_bit (3,477,766 samples, 0.01%)</title><rect x="89.1" y="1461" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="92.12" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1509" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="158.37" y="1519.5" ></text>
</g>
<g >
<title>page_cache_async_ra (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1333" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="878.78" y="1343.5" ></text>
</g>
<g >
<title>Builtins_KeyedLoadIC_PolymorphicName (2,137,345 samples, 0.01%)</title><rect x="299.6" y="1589" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="302.63" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="869" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (252,025,595 samples, 1.00%)</title><rect x="875.8" y="1429" width="11.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="878.78" y="1439.5" ></text>
</g>
<g >
<title>__handle_mm_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1461" width="24.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="515.90" y="1471.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="757" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="767.5" ></text>
</g>
<g >
<title>vfs_fstatat (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1013.48" y="1391.5" ></text>
</g>
<g >
<title>futex_wait_queue (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1429" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="352.14" y="1439.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (54,637,385 samples, 0.22%)</title><rect x="951.6" y="1477" width="2.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="954.63" y="1487.5" ></text>
</g>
<g >
<title>alloc_buffer_head (50,279,478 samples, 0.20%)</title><rect x="880.5" y="1253" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="883.50" y="1263.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1253" width="2.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="821.78" y="1263.5" ></text>
</g>
<g >
<title>ovl_setattr (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1317" width="2.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="821.78" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1573" width="2.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="79.11" y="1583.5" ></text>
</g>
<g >
<title>unmap_vmas (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1461" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1003.37" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,597,215,603 samples, 10.35%)</title><rect x="1067.4" y="1525" width="122.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1070.35" y="1535.5" >cpuidle_enter</text>
</g>
<g >
<title>do_filp_open (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1301" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="194.93" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="159.5" ></text>
</g>
<g >
<title>unmap_page_range (11,804,444 samples, 0.05%)</title><rect x="251.7" y="1349" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="254.69" y="1359.5" ></text>
</g>
<g >
<title>begin_new_exec (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1461" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1069.55" y="1471.5" ></text>
</g>
<g >
<title>ondemand_readahead (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1317" width="2.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="878.78" y="1327.5" ></text>
</g>
<g >
<title>page_cache_ra_order (603,838,818 samples, 2.41%)</title><rect x="752.5" y="1317" width="28.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="755.55" y="1327.5" >pa..</text>
</g>
<g >
<title>raw_spin_rq_unlock (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1365" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="352.14" y="1375.5" ></text>
</g>
<g >
<title>xa_delete_node (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1397" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="92.29" y="1407.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1317" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="411.95" y="1327.5" ></text>
</g>
<g >
<title>futex_wait_queue (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1429" width="21.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="330.63" y="1439.5" >f..</text>
</g>
<g >
<title>[libc.so.6] (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1525" width="21.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="330.63" y="1535.5" >[..</text>
</g>
<g >
<title>__madvise (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1605" width="2.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="17.60" y="1615.5" ></text>
</g>
<g >
<title>filemap_release_folio (121,077,599 samples, 0.48%)</title><rect x="83.2" y="1461" width="5.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="86.25" y="1471.5" ></text>
</g>
<g >
<title>vfs_fstatat (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1381" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="193.05" y="1391.5" ></text>
</g>
<g >
<title>[sleep] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1605" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1013.60" y="1615.5" ></text>
</g>
<g >
<title>filemap_release_folio (28,692,856 samples, 0.11%)</title><rect x="1005.5" y="1189" width="1.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1008.49" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1525" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1535.5" ></text>
</g>
<g >
<title>cpu_startup_entry (78,344,292 samples, 0.31%)</title><rect x="263.9" y="1573" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="266.88" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,839,889 samples, 0.41%)</title><rect x="66.4" y="1605" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="69.38" y="1615.5" ></text>
</g>
<g >
<title>setlocale (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1541" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1013.60" y="1551.5" ></text>
</g>
<g >
<title>consume_obj_stock (50,279,478 samples, 0.20%)</title><rect x="880.5" y="1205" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="883.50" y="1215.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (156,479,614 samples, 0.62%)</title><rect x="630.1" y="1173" width="7.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="633.05" y="1183.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1525" width="2.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1010.88" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="885" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1205" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="773" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="783.5" ></text>
</g>
<g >
<title>kcompactd (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1573" width="11.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="255.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="645" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="821" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="831.5" ></text>
</g>
<g >
<title>[bash] (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1445" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1009.86" y="1455.5" ></text>
</g>
<g >
<title>vfs_iter_read (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1509" width="17.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="35.89" y="1519.5" ></text>
</g>
<g >
<title>exit_mmap (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1397" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="253.42" y="1407.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1413" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1003.37" y="1423.5" ></text>
</g>
<g >
<title>__pagevec_release (156,360,837 samples, 0.62%)</title><rect x="620.2" y="1189" width="7.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="623.24" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1573" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="245" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="735.5" ></text>
</g>
<g >
<title>write (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1477" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="411.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1589" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="329.04" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="965" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="975.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1397" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="251.80" y="1407.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2,162,582 samples, 0.01%)</title><rect x="301.1" y="1509" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="304.07" y="1519.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1589" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="158.59" y="1599.5" ></text>
</g>
<g >
<title>vfs_statx (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1365" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="193.05" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1605" width="11.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="255.25" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1349" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1009.86" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1605" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="353.38" y="1615.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (49,969,583 samples, 0.20%)</title><rect x="510.6" y="1573" width="2.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="513.55" y="1583.5" ></text>
</g>
<g >
<title>operator new (2,791,968 samples, 0.01%)</title><rect x="304.6" y="917" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="307.58" y="927.5" ></text>
</g>
<g >
<title>dequeue_task (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1365" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="330.36" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="245" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="255.5" ></text>
</g>
<g >
<title>inotify_read (5,277,524 samples, 0.02%)</title><rect x="307.0" y="1477" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="310.01" y="1487.5" ></text>
</g>
<g >
<title>v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonObject (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1525" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="303.18" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,916,551 samples, 0.14%)</title><rect x="301.6" y="725" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="735.5" ></text>
</g>
<g >
<title>[bash] (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1189" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1010.07" y="1199.5" ></text>
</g>
<g >
<title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1541" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="303.18" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1589" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1010.50" y="1599.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1557" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="353.38" y="1567.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (151,009,320 samples, 0.60%)</title><rect x="759.6" y="1253" width="7.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="762.63" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="783.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (49,638,700 samples, 0.20%)</title><rect x="28.3" y="1541" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="31.26" y="1551.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1221" width="2.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="821.78" y="1231.5" ></text>
</g>
<g >
<title>block_page_mkwrite (301,942,142 samples, 1.20%)</title><rect x="780.9" y="1349" width="14.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="783.95" y="1359.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (51,074,824 samples, 0.20%)</title><rect x="976.0" y="1589" width="2.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="978.98" y="1599.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1429" width="2.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1010.88" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="757" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1573" width="17.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.89" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1605" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="253.28" y="1615.5" ></text>
</g>
<g >
<title>path_openat (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1285" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="194.93" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1263.5" ></text>
</g>
<g >
<title>__do_softirq (17,519,317 samples, 0.07%)</title><rect x="155.6" y="1381" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="158.60" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1445" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1455.5" ></text>
</g>
<g >
<title>record__write (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1509" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="411.71" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,546,442 samples, 0.07%)</title><rect x="407.8" y="1541" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="410.76" y="1551.5" ></text>
</g>
<g >
<title>operator new (3,572,185 samples, 0.01%)</title><rect x="308.3" y="85" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="311.34" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="533" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,756,057 samples, 0.02%)</title><rect x="326.2" y="1557" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="329.19" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="773" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="783.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (10,135,901 samples, 0.04%)</title><rect x="1000.4" y="1349" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1003.37" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1349" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="194.93" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1157" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1167.5" ></text>
</g>
<g >
<title>copy_pte_range (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1429" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1068.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1509" width="4.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="539.98" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1605" width="56.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="354.00" y="1615.5" >entry_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,571,385 samples, 0.23%)</title><rect x="301.6" y="949" width="2.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="959.5" ></text>
</g>
<g >
<title>unmap_region (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1381" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="998.23" y="1391.5" ></text>
</g>
<g >
<title>[grep] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1557" width="2.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="67.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="735.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1269" width="5.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1004.65" y="1279.5" ></text>
</g>
<g >
<title>execute_command_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1333" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1343.5" ></text>
</g>
<g >
<title>filemap_add_folio (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1269" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="878.78" y="1279.5" ></text>
</g>
<g >
<title>__munmap (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1461" width="4.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="539.98" y="1471.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (11,804,444 samples, 0.05%)</title><rect x="251.7" y="1333" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="254.69" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1573" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1009.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="469" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,270,599 samples, 0.03%)</title><rect x="304.0" y="885" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="306.96" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="949" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="959.5" ></text>
</g>
<g >
<title>sync_regs (28,513,083 samples, 0.11%)</title><rect x="248.9" y="1589" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="251.94" y="1599.5" ></text>
</g>
<g >
<title>free_buffer_head (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1397" width="2.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1010.88" y="1407.5" ></text>
</g>
<g >
<title>proc_root_readdir (6,066,531 samples, 0.02%)</title><rect x="66.4" y="1525" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="69.38" y="1535.5" ></text>
</g>
<g >
<title>__pollwait (2,271,493 samples, 0.01%)</title><rect x="327.3" y="1413" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="330.25" y="1423.5" ></text>
</g>
<g >
<title>xas_store (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1381" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="92.29" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (2,307,460 samples, 0.01%)</title><rect x="302.9" y="613" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="305.94" y="623.5" ></text>
</g>
<g >
<title>free_pgtables (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1381" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1010.50" y="1391.5" ></text>
</g>
<g >
<title>mt_find (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1509" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="248.39" y="1519.5" ></text>
</g>
<g >
<title>mmput (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1429" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="79.11" y="1439.5" ></text>
</g>
<g >
<title>exec_binprm (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1509" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="353.38" y="1519.5" ></text>
</g>
<g >
<title>cfree (2,852,988 samples, 0.01%)</title><rect x="305.0" y="1061" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="308.04" y="1071.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1493" width="17.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="623.24" y="1503.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,519,317 samples, 0.07%)</title><rect x="155.6" y="1397" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="158.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="725" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="735.5" ></text>
</g>
<g >
<title>try_to_free_buffers (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1413" width="2.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1010.88" y="1423.5" ></text>
</g>
<g >
<title>__clone (473,381,949 samples, 1.89%)</title><rect x="327.2" y="1605" width="22.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="330.17" y="1615.5" >_..</text>
</g>
<g >
<title>connect (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1365" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="194.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="709" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="719.5" ></text>
</g>
<g >
<title>xas_nomem (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1237" width="2.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="878.78" y="1247.5" ></text>
</g>
<g >
<title>xas_clear_mark (43,752,521 samples, 0.17%)</title><rect x="81.2" y="1413" width="2.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="84.19" y="1423.5" ></text>
</g>
<g >
<title>exec_binprm (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1509" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1010.50" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_futex (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1477" width="21.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="330.63" y="1487.5" >_..</text>
</g>
<g >
<title>unix_release_sock (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1253" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="194.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1477" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1109" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1119.5" ></text>
</g>
<g >
<title>ondemand_readahead (603,838,818 samples, 2.41%)</title><rect x="752.5" y="1333" width="28.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="755.55" y="1343.5" >on..</text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (50,349,477 samples, 0.20%)</title><rect x="416.5" y="1589" width="2.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="419.46" y="1599.5" ></text>
</g>
<g >
<title>mmput (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1429" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="253.42" y="1439.5" ></text>
</g>
<g >
<title>release_pages (16,972,422 samples, 0.07%)</title><rect x="1000.9" y="1333" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1003.85" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1173" width="3.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.58" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="757" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="325" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="335.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (1,415,314,332 samples, 5.64%)</title><rect x="887.6" y="1509" width="66.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="890.64" y="1519.5" >serde_c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="741" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,326,164 samples, 0.31%)</title><rect x="301.6" y="1221" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1231.5" ></text>
</g>
<g >
<title>iterate_dir (2,302,514 samples, 0.01%)</title><rect x="1007.0" y="1301" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1009.96" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1077" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1247.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1509" width="2.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="249.84" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1125" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1135.5" ></text>
</g>
<g >
<title>__alloc_pages (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1365" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1068.18" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1413" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1423.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1461" width="11.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="53.33" y="1471.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1589" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.81" y="1599.5" ></text>
</g>
<g >
<title>malloc (7,270,599 samples, 0.03%)</title><rect x="304.0" y="837" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="306.96" y="847.5" ></text>
</g>
<g >
<title>glob_vector (4,605,028 samples, 0.02%)</title><rect x="1006.9" y="1397" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1009.86" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (100,827,109 samples, 0.40%)</title><rect x="733.6" y="1493" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="736.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1381" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1343.5" ></text>
</g>
<g >
<title>madvise_free_single_vma (49,287,653 samples, 0.20%)</title><rect x="14.6" y="1493" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="17.60" y="1503.5" ></text>
</g>
<g >
<title>free_pgtables (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1381" width="56.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="354.00" y="1391.5" >free_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1013" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1023.5" ></text>
</g>
<g >
<title>perf-exec (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1621" width="56.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="354.00" y="1631.5" >perf-e..</text>
</g>
<g >
<title>do_exit (137,371,296 samples, 0.55%)</title><rect x="1000.4" y="1541" width="6.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1003.37" y="1551.5" ></text>
</g>
<g >
<title>InotifyBackend::start (9,856,100 samples, 0.04%)</title><rect x="327.2" y="1541" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="330.17" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="773" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="783.5" ></text>
</g>
<g >
<title>[perf-3933356.map] (9,544,057 samples, 0.04%)</title><rect x="300.5" y="1605" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="303.49" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (473,381,949 samples, 1.89%)</title><rect x="327.2" y="1589" width="22.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="330.17" y="1599.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1189" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1199.5" ></text>
</g>
<g >
<title>pid_revalidate (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1205" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1009.86" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1455.5" ></text>
</g>
<g >
<title>unmap_region (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1349" width="4.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="539.98" y="1359.5" ></text>
</g>
<g >
<title>proc_reg_read (7,761,565 samples, 0.03%)</title><rect x="75.6" y="1509" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="78.61" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="399.5" ></text>
</g>
<g >
<title>pcache1Truncate (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1349" width="2.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="64.94" y="1359.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1477" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="352.33" y="1487.5" ></text>
</g>
<g >
<title>proc_pid_cmdline_read (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1509" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="71.79" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1381" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="353.38" y="1391.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1237" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="51.29" y="1247.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (10,567,932,736 samples, 42.12%)</title><rect x="457.2" y="1589" width="497.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="460.18" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="543.5" ></text>
</g>
<g >
<title>folio_account_dirtied (50,245,156 samples, 0.20%)</title><rect x="788.0" y="1285" width="2.4" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="791.03" y="1295.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1589" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="303.18" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="133" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="143.5" ></text>
</g>
<g >
<title>copy_p4d_range (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1461" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1068.18" y="1471.5" ></text>
</g>
<g >
<title>unmap_page_range (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1429" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1003.37" y="1439.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (49,956,564 samples, 0.20%)</title><rect x="59.6" y="1349" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.59" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,852,988 samples, 0.01%)</title><rect x="305.0" y="1045" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="308.04" y="1055.5" ></text>
</g>
<g >
<title>Builtins_ToNumeric_Baseline (2,190,247 samples, 0.01%)</title><rect x="300.8" y="1589" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="303.84" y="1599.5" ></text>
</g>
<g >
<title>eventfd_write (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1509" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="251.80" y="1519.5" ></text>
</g>
<g >
<title>do_user_addr_fault (511,914,951 samples, 2.04%)</title><rect x="512.9" y="1493" width="24.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="515.90" y="1503.5" >d..</text>
</g>
<g >
<title>Glob::isIgnored (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1557" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="310.26" y="1567.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1205" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="411.71" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="693" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="703.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1381" width="6.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="255.25" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="527.5" ></text>
</g>
<g >
<title>kswapd (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1573" width="2.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1010.88" y="1583.5" ></text>
</g>
<g >
<title>xa_load (11,034,148 samples, 0.04%)</title><rect x="89.5" y="1429" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="92.46" y="1439.5" ></text>
</g>
<g >
<title>bprm_execve (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1541" width="56.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="354.00" y="1551.5" >bprm_e..</text>
</g>
<g >
<title>folio_memcg_unlock (52,136,055 samples, 0.21%)</title><rect x="632.5" y="1077" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="635.50" y="1087.5" ></text>
</g>
<g >
<title>block_page_mkwrite (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1333" width="4.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="881.15" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1397" width="21.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="330.63" y="1407.5" >h..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="373" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="383.5" ></text>
</g>
<g >
<title>generic_permission (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1269" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1013.48" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1413" width="4.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="539.98" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1477" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.81" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (98,496,681 samples, 0.39%)</title><rect x="191.6" y="1573" width="4.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1029" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="949" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="901" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="911.5" ></text>
</g>
<g >
<title>ftruncate64 (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1429" width="2.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="821.78" y="1439.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1429" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="194.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1189" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="352.14" y="1519.5" ></text>
</g>
<g >
<title>__get_user_pages (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1413" width="1.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="71.79" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="981" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_free (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1301" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.81" y="1311.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1477" width="11.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="53.33" y="1487.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1557" width="2.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="79.11" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1333" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="51.29" y="1343.5" ></text>
</g>
<g >
<title>operator new (11,263,428 samples, 0.04%)</title><rect x="302.1" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="305.15" y="431.5" ></text>
</g>
<g >
<title>compact_zone (3,404,002 samples, 0.01%)</title><rect x="78.1" y="1541" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="81.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="805" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1045" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="591.5" ></text>
</g>
<g >
<title>access_remote_vm (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1477" width="1.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="71.79" y="1487.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1429" width="1.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="195.34" y="1439.5" ></text>
</g>
<g >
<title>kernel_clone (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1541" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1068.18" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1237" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1247.5" ></text>
</g>
<g >
<title>cpptools_context::cpptools_fileCreated (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1525" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="64.94" y="1535.5" ></text>
</g>
<g >
<title>exc_page_fault (1,445,742,118 samples, 5.76%)</title><rect x="745.4" y="1477" width="68.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="748.39" y="1487.5" >exc_pag..</text>
</g>
<g >
<title>vfs_write (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1397" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="411.71" y="1407.5" ></text>
</g>
<g >
<title>operator new (7,270,599 samples, 0.03%)</title><rect x="304.0" y="853" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="306.96" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="309" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="319.5" ></text>
</g>
<g >
<title>folio_alloc (101,467,798 samples, 0.40%)</title><rect x="766.7" y="1269" width="4.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="769.73" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1365" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="194.93" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (116,802,566 samples, 0.47%)</title><rect x="301.2" y="1509" width="5.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="304.17" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1237" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="501" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,251,029 samples, 0.02%)</title><rect x="301.6" y="373" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="383.5" ></text>
</g>
<g >
<title>rmqueue (50,452,028 samples, 0.20%)</title><rect x="769.1" y="1205" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="772.13" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="287.5" ></text>
</g>
<g >
<title>copy_page_range (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1461" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="76.11" y="1471.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1237" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.78" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1093" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1103.5" ></text>
</g>
<g >
<title>xas_start (11,034,148 samples, 0.04%)</title><rect x="89.5" y="1397" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="92.46" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1477" width="33.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="159.83" y="1487.5" >lo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1381" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="533" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="543.5" ></text>
</g>
<g >
<title>[libnss_systemd.so.2] (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1397" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="194.93" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1477" width="1.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="253.42" y="1487.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (567,950,109 samples, 2.26%)</title><rect x="1069.4" y="1445" width="26.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1072.39" y="1455.5" >t..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,852,988 samples, 0.01%)</title><rect x="305.0" y="1077" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="308.04" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1557" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1567.5" ></text>
</g>
<g >
<title>rcu_core_si (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1365" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.81" y="1375.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (401,772,295 samples, 1.60%)</title><rect x="780.9" y="1365" width="18.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="783.95" y="1375.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1551.5" ></text>
</g>
<g >
<title>do_page_mkwrite (100,346,679 samples, 0.40%)</title><rect x="878.1" y="1365" width="4.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="881.15" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1509" width="21.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="330.63" y="1519.5" >e..</text>
</g>
<g >
<title>ext4_evict_inode (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1285" width="5.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1004.65" y="1295.5" ></text>
</g>
<g >
<title>memcpy@plt (52,259,785 samples, 0.21%)</title><rect x="546.8" y="1541" width="2.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="549.80" y="1551.5" ></text>
</g>
<g >
<title>ptep_clear_flush (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1429" width="6.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="255.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,284,509 samples, 0.01%)</title><rect x="305.6" y="1397" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="308.65" y="1407.5" ></text>
</g>
<g >
<title>load_elf_binary (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1477" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1069.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1221" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1231.5" ></text>
</g>
<g >
<title>release_pages (156,360,837 samples, 0.62%)</title><rect x="620.2" y="1173" width="7.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="623.24" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="885" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="895.5" ></text>
</g>
<g >
<title>cfree (251,620,492 samples, 1.00%)</title><rect x="842.5" y="1509" width="11.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="845.49" y="1519.5" ></text>
</g>
<g >
<title>command_substitute (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1237" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1010.07" y="1247.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4,306,515 samples, 0.02%)</title><rect x="155.2" y="1541" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="158.17" y="1551.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (3,544,144 samples, 0.01%)</title><rect x="263.9" y="1461" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="266.88" y="1471.5" ></text>
</g>
<g >
<title>cfree (5,519,174 samples, 0.02%)</title><rect x="302.7" y="613" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="305.68" y="623.5" ></text>
</g>
<g >
<title>[ls] (98,496,681 samples, 0.39%)</title><rect x="191.6" y="1605" width="4.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (370,883,847 samples, 1.48%)</title><rect x="32.9" y="1557" width="17.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="35.89" y="1567.5" ></text>
</g>
<g >
<title>pcache1TruncateUnsafe (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1333" width="2.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="64.94" y="1343.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1349" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="412.12" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,916,551 samples, 0.14%)</title><rect x="301.6" y="789" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="799.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (25,689,843 samples, 0.10%)</title><rect x="155.6" y="1461" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="158.59" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="469" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="479.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1557" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="253.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="821" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="831.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1301" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="353.38" y="1311.5" ></text>
</g>
<g >
<title>operator new (2,759,312 samples, 0.01%)</title><rect x="304.4" y="933" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="307.45" y="943.5" ></text>
</g>
<g >
<title>xas_load (11,034,148 samples, 0.04%)</title><rect x="89.5" y="1413" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="92.46" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1477" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="353.38" y="1487.5" ></text>
</g>
<g >
<title>DirTree::_find (2,162,582 samples, 0.01%)</title><rect x="301.1" y="1525" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="304.07" y="1535.5" ></text>
</g>
<g >
<title>__cmd_record (33,888,819 samples, 0.14%)</title><rect x="407.8" y="1589" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="410.76" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1589" width="56.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="354.00" y="1599.5" >do_sys..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="517" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="837" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="847.5" ></text>
</g>
<g >
<title>lindrustfinalize (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1525" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="998.23" y="1535.5" ></text>
</g>
<g >
<title>folio_mark_dirty (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1269" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="998.23" y="1279.5" ></text>
</g>
<g >
<title>exit_mmap (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1397" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="353.38" y="1407.5" ></text>
</g>
<g >
<title>[grep] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1605" width="2.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="67.25" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1509" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.25" y="1519.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1589" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="310.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="869" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="613" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="623.5" ></text>
</g>
<g >
<title>migrate_pages (247,412,249 samples, 0.99%)</title><rect x="252.2" y="1525" width="11.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="255.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="405" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="415.5" ></text>
</g>
<g >
<title>begin_new_exec (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1461" width="2.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="79.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="357" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1173" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1183.5" ></text>
</g>
<g >
<title>cpptools (1,106,640,696 samples, 4.41%)</title><rect x="12.2" y="1621" width="52.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="15.20" y="1631.5" >cppto..</text>
</g>
<g >
<title>filemap_read (49,733,898 samples, 0.20%)</title><rect x="32.9" y="1445" width="2.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="35.89" y="1455.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (3,574,559 samples, 0.01%)</title><rect x="89.3" y="1429" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="92.29" y="1439.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1413" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.81" y="1423.5" ></text>
</g>
<g >
<title>uv__async_io (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1573" width="0.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="329.42" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1493" width="21.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="330.63" y="1503.5" >d..</text>
</g>
<g >
<title>lind_close (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1541" width="4.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="539.98" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,640,299 samples, 0.01%)</title><rect x="305.5" y="1333" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="308.48" y="1343.5" ></text>
</g>
<g >
<title>vfs_fstatat (2,888,072 samples, 0.01%)</title><rect x="306.7" y="1461" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="309.66" y="1471.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,762,868 samples, 0.07%)</title><rect x="155.6" y="1429" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="158.59" y="1439.5" ></text>
</g>
<g >
<title>exit_mmap (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1397" width="0.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1069.55" y="1407.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (100,193,354 samples, 0.40%)</title><rect x="654.0" y="1525" width="4.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="657.00" y="1535.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1557" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1069.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="565" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="575.5" ></text>
</g>
<g >
<title>enqueue_entity (3,232,813 samples, 0.01%)</title><rect x="155.2" y="1445" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="158.17" y="1455.5" ></text>
</g>
<g >
<title>cfree (6,840,053 samples, 0.03%)</title><rect x="303.5" y="805" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="306.52" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="677" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,531,287 samples, 0.03%)</title><rect x="78.6" y="1509" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="81.61" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1013" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1023.5" ></text>
</g>
<g >
<title>alloc_pages (101,467,798 samples, 0.40%)</title><rect x="766.7" y="1253" width="4.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="769.73" y="1263.5" ></text>
</g>
<g >
<title>poll_idle (3,329,191 samples, 0.01%)</title><rect x="268.0" y="1445" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="270.98" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (12,130,036 samples, 0.05%)</title><rect x="267.6" y="1477" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="270.57" y="1487.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (52,200,785 samples, 0.21%)</title><rect x="625.1" y="1125" width="2.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="628.14" y="1135.5" ></text>
</g>
<g >
<title>NaClLog (102,496,846 samples, 0.41%)</title><rect x="505.7" y="1573" width="4.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="508.73" y="1583.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (52,099,308 samples, 0.21%)</title><rect x="622.7" y="1157" width="2.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="625.69" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1157" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1285" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3,365,274 samples, 0.01%)</title><rect x="307.0" y="1445" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="310.01" y="1455.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (52,218,235 samples, 0.21%)</title><rect x="537.0" y="1221" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="539.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1205" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1365" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (51,453,081 samples, 0.21%)</title><rect x="418.8" y="1589" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="421.83" y="1599.5" ></text>
</g>
<g >
<title>__fput (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1493" width="5.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1004.65" y="1503.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (3,649,104 samples, 0.01%)</title><rect x="88.5" y="1349" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="91.50" y="1359.5" ></text>
</g>
<g >
<title>perf_mmap__push (10,314,710 samples, 0.04%)</title><rect x="408.6" y="1541" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="411.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1445" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1455.5" ></text>
</g>
<g >
<title>free_unref_page_commit (52,200,785 samples, 0.21%)</title><rect x="625.1" y="1141" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="628.14" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1573" width="56.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="354.00" y="1583.5" >__x64_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1461" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1471.5" ></text>
</g>
<g >
<title>dequeue_task (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1445" width="2.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="249.84" y="1455.5" ></text>
</g>
<g >
<title>exec_mmap (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1445" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="79.11" y="1455.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1381" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="195.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,300,786 samples, 0.20%)</title><rect x="301.6" y="869" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="709" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="719.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (12,130,036 samples, 0.05%)</title><rect x="267.6" y="1493" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="270.57" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,572,185 samples, 0.01%)</title><rect x="308.3" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="311.34" y="63.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (155,900,648 samples, 0.62%)</title><rect x="612.9" y="1525" width="7.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="615.91" y="1535.5" ></text>
</g>
<g >
<title>schedule (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1397" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="330.36" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,385,337 samples, 0.01%)</title><rect x="308.6" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1429" width="17.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="623.24" y="1439.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1573" width="4.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="539.98" y="1583.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (151,815,903 samples, 0.61%)</title><rect x="799.8" y="1381" width="7.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="802.84" y="1391.5" ></text>
</g>
<g >
<title>copy_page_range (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1477" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1068.18" y="1487.5" ></text>
</g>
<g >
<title>[ls] (98,496,681 samples, 0.39%)</title><rect x="191.6" y="1557" width="4.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="194.58" y="1567.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (6,735,772,335 samples, 26.85%)</title><rect x="637.4" y="1573" width="316.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="640.41" y="1583.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>exec_mmap (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1445" width="56.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="354.00" y="1455.5" >exec_m..</text>
</g>
<g >
<title>exec_binprm (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1509" width="33.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="159.83" y="1519.5" >ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1333" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1397" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="194.58" y="1407.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (90,831,505 samples, 0.36%)</title><rect x="263.9" y="1605" width="4.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="266.88" y="1615.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1269" width="2.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="821.78" y="1279.5" ></text>
</g>
<g >
<title>mmput (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1429" width="33.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="159.83" y="1439.5" >mm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1093" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,617,989 samples, 0.35%)</title><rect x="301.6" y="1381" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,760,775,074 samples, 7.02%)</title><rect x="738.3" y="1525" width="82.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="741.34" y="1535.5" >rustposix..</text>
</g>
<g >
<title>cgroup_rstat_flush_locked (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1269" width="4.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="802.84" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="431.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,571,385 samples, 0.23%)</title><rect x="301.6" y="901" width="2.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (44,679,536 samples, 0.18%)</title><rect x="246.8" y="1589" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="249.84" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1605" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="253.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1429" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="357" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="389" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="399.5" ></text>
</g>
<g >
<title>vfs_write (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1429" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="412.12" y="1439.5" ></text>
</g>
<g >
<title>dequeue_entity (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1413" width="2.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="249.84" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_poll (15,157,558 samples, 0.06%)</title><rect x="407.8" y="1509" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="410.76" y="1519.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (87,275,839 samples, 0.35%)</title><rect x="89.1" y="1493" width="4.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="92.12" y="1503.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1269" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1192.81" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="933" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="997" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1007.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1317" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="998.23" y="1327.5" ></text>
</g>
<g >
<title>__filemap_add_folio (50,294,714 samples, 0.20%)</title><rect x="875.8" y="1253" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="878.78" y="1263.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,613,662,284 samples, 6.43%)</title><rect x="544.4" y="1573" width="75.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="547.35" y="1583.5" >NaClSysR..</text>
</g>
<g >
<title>find_vma (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1525" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="248.39" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="613" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="623.5" ></text>
</g>
<g >
<title>_dl_catch_exception (4,598,217 samples, 0.02%)</title><rect x="1010.4" y="1525" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1013.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="133" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="143.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1317" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="411.71" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1541" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1461" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.17" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (99,904,355 samples, 0.40%)</title><rect x="939.8" y="1365" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="942.85" y="1375.5" ></text>
</g>
<g >
<title>unmap_vmas (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1381" width="33.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="159.83" y="1391.5" >un..</text>
</g>
<g >
<title>ovl_permission (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1285" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1013.48" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="341" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="661" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1253" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,720,350 samples, 0.03%)</title><rect x="1010.2" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1429" width="4.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.17" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1189" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1199.5" ></text>
</g>
<g >
<title>begin_new_exec (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1461" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="253.42" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="373" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1557" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1493" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="251.80" y="1503.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,226,813 samples, 0.07%)</title><rect x="70.4" y="1541" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="73.36" y="1551.5" ></text>
</g>
<g >
<title>drain_pages_zone (7,768,481 samples, 0.03%)</title><rect x="78.2" y="1509" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="81.24" y="1519.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4,306,515 samples, 0.02%)</title><rect x="155.2" y="1493" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="158.17" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1541" width="2.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="79.11" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1541" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="352.33" y="1551.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1333" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="79.11" y="1343.5" ></text>
</g>
<g >
<title>setlocale (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1541" width="2.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="196.71" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="607.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (466,423,324 samples, 1.86%)</title><rect x="327.2" y="1573" width="21.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="330.17" y="1583.5" >e..</text>
</g>
<g >
<title>__x64_sys_openat (45,042,173 samples, 0.18%)</title><rect x="66.7" y="1557" width="2.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="69.67" y="1567.5" ></text>
</g>
<g >
<title>do_idle (1,324,107,242 samples, 5.28%)</title><rect x="93.3" y="1557" width="62.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="96.31" y="1567.5" >do_idle</text>
</g>
<g >
<title>enqueue_task_fair (3,232,813 samples, 0.01%)</title><rect x="155.2" y="1461" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="158.17" y="1471.5" ></text>
</g>
<g >
<title>asm_common_interrupt (567,950,109 samples, 2.26%)</title><rect x="1069.4" y="1493" width="26.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1072.39" y="1503.5" >a..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="193.05" y="1583.5" ></text>
</g>
<g >
<title>put_cpu_partial (3,614,459 samples, 0.01%)</title><rect x="88.7" y="1349" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="91.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="277" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="287.5" ></text>
</g>
<g >
<title>execute_command (7,132,702 samples, 0.03%)</title><rect x="1007.1" y="1477" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1010.07" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (6,066,531 samples, 0.02%)</title><rect x="66.4" y="1557" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="69.38" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1333" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1009.86" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,668,234 samples, 0.01%)</title><rect x="325.9" y="37" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="328.92" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1493" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1503.5" ></text>
</g>
<g >
<title>do_user_addr_fault (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1557" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="248.39" y="1567.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1445" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="158.37" y="1455.5" ></text>
</g>
<g >
<title>malloc (2,309,228 samples, 0.01%)</title><rect x="305.4" y="1221" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="308.37" y="1231.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1269" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="411.95" y="1279.5" ></text>
</g>
<g >
<title>__poll (18,540,052 samples, 0.07%)</title><rect x="407.8" y="1557" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="410.76" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_read (8,488,571 samples, 0.03%)</title><rect x="306.9" y="1525" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="309.86" y="1535.5" ></text>
</g>
<g >
<title>get_mm_cmdline (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1493" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="71.79" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="309" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter (74,707,869 samples, 0.30%)</title><rect x="263.9" y="1525" width="3.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="266.88" y="1535.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52,135,043 samples, 0.21%)</title><rect x="603.1" y="1493" width="2.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="606.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,747,596 samples, 0.12%)</title><rect x="301.6" y="693" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="597" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (74,707,869 samples, 0.30%)</title><rect x="263.9" y="1509" width="3.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="266.88" y="1519.5" ></text>
</g>
<g >
<title>exit_mmap (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1397" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1010.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,118,260 samples, 0.01%)</title><rect x="326.0" y="133" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="329.04" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,826,634 samples, 0.03%)</title><rect x="302.7" y="629" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="305.68" y="639.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (11,613,414 samples, 0.05%)</title><rect x="407.8" y="1477" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="410.76" y="1487.5" ></text>
</g>
<g >
<title>unmap_vmas (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1333" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="539.98" y="1343.5" ></text>
</g>
<g >
<title>setlocale (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1541" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="67.25" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="581" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="591.5" ></text>
</g>
<g >
<title>strncpy_from_user (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1413" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="195.34" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,959,829 samples, 1.53%)</title><rect x="307.8" y="1589" width="18.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1599.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1317" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="193.05" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="581" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="591.5" ></text>
</g>
<g >
<title>charge_memcg (43,333,867 samples, 0.17%)</title><rect x="48.3" y="1253" width="2.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="51.29" y="1263.5" ></text>
</g>
<g >
<title>__rdl_realloc (50,393,791 samples, 0.20%)</title><rect x="421.3" y="1589" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="424.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,251,029 samples, 0.02%)</title><rect x="301.6" y="357" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="367.5" ></text>
</g>
<g >
<title>start_kernel (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1573" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.81" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1215.5" ></text>
</g>
<g >
<title>openat64 (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1381" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="194.93" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1269" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1029" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="405" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="415.5" ></text>
</g>
<g >
<title>getgrgid_r (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1477" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="805" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1045" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="421" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (17,226,813 samples, 0.07%)</title><rect x="70.4" y="1525" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="73.36" y="1535.5" ></text>
</g>
<g >
<title>rmap_walk_file (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1461" width="6.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="255.25" y="1471.5" ></text>
</g>
<g >
<title>alloc_page_buffers (50,279,478 samples, 0.20%)</title><rect x="880.5" y="1269" width="2.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="883.50" y="1279.5" ></text>
</g>
<g >
<title>__mmput (41,827,000 samples, 0.17%)</title><rect x="76.1" y="1413" width="2.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="79.11" y="1423.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (134,334,222 samples, 0.54%)</title><rect x="300.9" y="1589" width="6.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="303.94" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,916,551 samples, 0.14%)</title><rect x="301.6" y="709" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="719.5" ></text>
</g>
<g >
<title>do_page_mkwrite (401,772,295 samples, 1.60%)</title><rect x="780.9" y="1381" width="18.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="783.95" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (61,907,543 samples, 0.25%)</title><rect x="73.1" y="1573" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="76.11" y="1583.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1541" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="998.23" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::TransitionArray::SearchAndGetTarget (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1477" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="303.18" y="1487.5" ></text>
</g>
<g >
<title>__mmput (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1413" width="33.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="159.83" y="1423.5" >__..</text>
</g>
<g >
<title>truncate_cleanup_folio (66,472,293 samples, 0.26%)</title><rect x="1003.7" y="1237" width="3.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1006.71" y="1247.5" ></text>
</g>
<g >
<title>parse_and_execute (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1525" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1009.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1573" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1583.5" ></text>
</g>
<g >
<title>Builtins_BaselineOutOfLinePrologue (2,376,081 samples, 0.01%)</title><rect x="300.1" y="1589" width="0.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="303.07" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_DefineKeyedOwnPropertyInLiteral (2,542,068 samples, 0.01%)</title><rect x="269.0" y="1573" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="271.97" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="981" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="991.5" ></text>
</g>
<g >
<title>[perf-3857781.map] (2,137,345 samples, 0.01%)</title><rect x="299.6" y="1605" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="302.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="325" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1141" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="453" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (806,775,700 samples, 3.22%)</title><rect x="906.6" y="1445" width="37.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="909.60" y="1455.5" >all..</text>
</g>
<g >
<title>ion (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1525" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="412.12" y="1535.5" ></text>
</g>
<g >
<title>read_pages (100,280,788 samples, 0.40%)</title><rect x="771.5" y="1285" width="4.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="774.50" y="1295.5" ></text>
</g>
<g >
<title>cr4_update_irqsoff (3,544,144 samples, 0.01%)</title><rect x="263.9" y="1445" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="266.88" y="1455.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (310,904,543 samples, 1.24%)</title><rect x="78.6" y="1525" width="14.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="81.61" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1317" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1009.86" y="1327.5" ></text>
</g>
<g >
<title>sh (69,396,529 samples, 0.28%)</title><rect x="1006.8" y="1621" width="3.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1009.84" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1541" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="261" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="271.5" ></text>
</g>
<g >
<title>__libc_calloc (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1429" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1013.60" y="1439.5" ></text>
</g>
<g >
<title>__rdl_dealloc (50,721,846 samples, 0.20%)</title><rect x="840.1" y="1509" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="843.10" y="1519.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,395,426,636 samples, 5.56%)</title><rect x="745.4" y="1445" width="65.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="748.39" y="1455.5" >handle_..</text>
</g>
<g >
<title>common_interrupt (567,950,109 samples, 2.26%)</title><rect x="1069.4" y="1477" width="26.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1072.39" y="1487.5" >c..</text>
</g>
<g >
<title>copy_pmd_range (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1445" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1068.18" y="1455.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1317" width="2.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1010.88" y="1327.5" ></text>
</g>
<g >
<title>shrink_lruvec (215,097,417 samples, 0.86%)</title><rect x="79.0" y="1509" width="10.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="82.01" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_write (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1461" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="412.12" y="1471.5" ></text>
</g>
<g >
<title>set_page_dirty (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1285" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="998.23" y="1295.5" ></text>
</g>
<g >
<title>arch_call_rest_init (26,427,213 samples, 0.11%)</title><rect x="155.6" y="1557" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="158.59" y="1567.5" ></text>
</g>
<g >
<title>do_iter_write (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1349" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="411.95" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (6,282,820,558 samples, 25.04%)</title><rect x="658.7" y="1541" width="295.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="661.71" y="1551.5" >rustposix::safeposix::syscalls::fs_call..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1429" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.81" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1333" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1349" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1365" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="213" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1205" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1125" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_execve (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1573" width="33.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="159.83" y="1583.5" >__..</text>
</g>
<g >
<title>v8::internal::FeedbackNexus::GetName (2,542,068 samples, 0.01%)</title><rect x="269.0" y="1557" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="271.97" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="501" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1445" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (50,690,668 samples, 0.20%)</title><rect x="721.7" y="1493" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="724.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (401,839,500 samples, 1.60%)</title><rect x="925.6" y="1381" width="18.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="928.65" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (456,567,224 samples, 1.82%)</title><rect x="327.6" y="1413" width="21.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="330.63" y="1423.5" >h..</text>
</g>
<g >
<title>try_to_free_buffers (15,601,473 samples, 0.06%)</title><rect x="88.2" y="1413" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="91.21" y="1423.5" ></text>
</g>
<g >
<title>__count_memcg_events (50,354,590 samples, 0.20%)</title><rect x="759.6" y="1237" width="2.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="762.63" y="1247.5" ></text>
</g>
<g >
<title>swapper (3,811,840,015 samples, 15.19%)</title><rect x="1010.7" y="1621" width="179.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1013.73" y="1631.5" >swapper</text>
</g>
<g >
<title>__wake_up (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1445" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="251.80" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="757" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1445" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.81" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,190,255 samples, 0.21%)</title><rect x="193.7" y="1445" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="196.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,224,652 samples, 0.01%)</title><rect x="307.8" y="69" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,203,833 samples, 0.01%)</title><rect x="349.3" y="1493" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="352.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="373" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1093" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1589" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="253.42" y="1599.5" ></text>
</g>
<g >
<title>iput (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1269" width="17.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="623.24" y="1279.5" ></text>
</g>
<g >
<title>do_futex (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1461" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="352.14" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1477" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="329.42" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="352.14" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::TransitionsAccessor::SearchTransition (2,209,765 samples, 0.01%)</title><rect x="300.2" y="1493" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="303.18" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1327.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (16,972,422 samples, 0.07%)</title><rect x="1000.9" y="1365" width="0.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1003.85" y="1375.5" ></text>
</g>
<g >
<title>getpwuid (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1477" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="194.58" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,315,223,710 samples, 5.24%)</title><rect x="93.3" y="1541" width="61.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="96.31" y="1551.5" >cpuidl..</text>
</g>
<g >
<title>flush_tlb_mm_range (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1413" width="6.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="255.25" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46,180,278 samples, 0.18%)</title><rect x="1065.2" y="1605" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1068.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="175.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (7,768,481 samples, 0.03%)</title><rect x="78.2" y="1493" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="81.24" y="1503.5" ></text>
</g>
<g >
<title>lind (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1621" width="33.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="159.83" y="1631.5" >lind</text>
</g>
<g >
<title>__slab_free (7,263,563 samples, 0.03%)</title><rect x="88.5" y="1365" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="91.50" y="1375.5" ></text>
</g>
<g >
<title>do_sys_poll (8,182,566 samples, 0.03%)</title><rect x="327.2" y="1461" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="330.17" y="1471.5" ></text>
</g>
<g >
<title>evict (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1413" width="5.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1004.65" y="1423.5" ></text>
</g>
<g >
<title>copy_pte_range (19,799,406 samples, 0.08%)</title><rect x="73.1" y="1413" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="76.11" y="1423.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (104,295,564 samples, 0.42%)</title><rect x="630.1" y="1109" width="4.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="633.05" y="1119.5" ></text>
</g>
<g >
<title>malloc@plt (18,238,817 samples, 0.07%)</title><rect x="305.8" y="1461" width="0.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="308.80" y="1471.5" ></text>
</g>
<g >
<title>copy_process (29,068,413 samples, 0.12%)</title><rect x="1065.2" y="1525" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1068.18" y="1535.5" ></text>
</g>
<g >
<title>__pollwait (2,234,236 samples, 0.01%)</title><rect x="407.9" y="1445" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="410.93" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="821" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="831.5" ></text>
</g>
<g >
<title>irqentry_exit (49,638,700 samples, 0.20%)</title><rect x="28.3" y="1557" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="31.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="981" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="741" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="751.5" ></text>
</g>
<g >
<title>__do_fault (705,624,101 samples, 2.81%)</title><rect x="747.8" y="1381" width="33.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="750.76" y="1391.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1365" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1010.07" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (50,721,846 samples, 0.20%)</title><rect x="840.1" y="1493" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="843.10" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,036,973 samples, 1.21%)</title><rect x="873.4" y="1493" width="14.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="876.38" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,720,350 samples, 0.03%)</title><rect x="1010.2" y="1557" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1013.19" y="1567.5" ></text>
</g>
<g >
<title>zap_pte_range (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1317" width="33.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="159.83" y="1327.5" >za..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (196,848,069 samples, 0.78%)</title><rect x="41.1" y="1397" width="9.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="44.07" y="1407.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (124,468,675 samples, 0.50%)</title><rect x="300.9" y="1573" width="5.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="303.94" y="1583.5" ></text>
</g>
<g >
<title>NaClSysRead (52,279,321 samples, 0.21%)</title><rect x="541.9" y="1573" width="2.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="544.89" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1535.5" ></text>
</g>
<g >
<title>__filemap_get_folio (50,927,726 samples, 0.20%)</title><rect x="747.8" y="1349" width="2.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="750.76" y="1359.5" ></text>
</g>
<g >
<title>unmap_single_vma (17,111,865 samples, 0.07%)</title><rect x="1066.5" y="1365" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1069.55" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,073,820 samples, 0.60%)</title><rect x="980.8" y="1589" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="983.83" y="1599.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (15,348,752 samples, 0.06%)</title><rect x="408.6" y="1557" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="411.63" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1285" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="469" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="479.5" ></text>
</g>
<g >
<title>sel_ldr (12,704,059,968 samples, 50.63%)</title><rect x="409.4" y="1621" width="597.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="412.35" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>ksys_write (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1445" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="412.12" y="1455.5" ></text>
</g>
<g >
<title>__do_sys_clone (53,153,924 samples, 0.21%)</title><rect x="73.1" y="1541" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="76.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (49,748,643 samples, 0.20%)</title><rect x="646.9" y="1541" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="649.94" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="437" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="447.5" ></text>
</g>
<g >
<title>NaClSysUnlinkDecoder (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1573" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="623.24" y="1583.5" ></text>
</g>
<g >
<title>mt_find (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1525" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="253.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (52,208,032 samples, 0.21%)</title><rect x="990.4" y="1589" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="993.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1237" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1247.5" ></text>
</g>
<g >
<title>execute_command (6,074,578 samples, 0.02%)</title><rect x="1007.1" y="1381" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1010.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,118,260 samples, 0.01%)</title><rect x="326.0" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="329.04" y="431.5" ></text>
</g>
<g >
<title>default_wake_function (5,292,334 samples, 0.02%)</title><rect x="408.7" y="1221" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="411.71" y="1231.5" ></text>
</g>
<g >
<title>start_secondary (2,603,851,112 samples, 10.38%)</title><rect x="1067.4" y="1589" width="122.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1070.35" y="1599.5" >start_secondary</text>
</g>
<g >
<title>operator new (2,668,234 samples, 0.01%)</title><rect x="325.9" y="69" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="328.92" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="165" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,920,962 samples, 0.09%)</title><rect x="301.6" y="517" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="527.5" ></text>
</g>
<g >
<title>charge_memcg (50,857,557 samples, 0.20%)</title><rect x="750.2" y="1253" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="753.16" y="1263.5" ></text>
</g>
<g >
<title>evict (110,262,973 samples, 0.44%)</title><rect x="1001.6" y="1301" width="5.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1004.65" y="1311.5" ></text>
</g>
<g >
<title>unmap_vmas (11,804,444 samples, 0.05%)</title><rect x="251.7" y="1381" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="254.69" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="1141" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="1151.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1541" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="248.39" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,366,466 samples, 0.17%)</title><rect x="64.2" y="1573" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="597" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="607.5" ></text>
</g>
<g >
<title>malloc (5,992,358 samples, 0.02%)</title><rect x="309.7" y="37" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="312.71" y="47.5" ></text>
</g>
<g >
<title>kcompactd_do_work (11,172,483 samples, 0.04%)</title><rect x="78.1" y="1557" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="81.08" y="1567.5" ></text>
</g>
<g >
<title>block_dirty_folio (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1237" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="998.23" y="1247.5" ></text>
</g>
<g >
<title>lookup_fast (2,302,514 samples, 0.01%)</title><rect x="1006.9" y="1221" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1009.86" y="1231.5" ></text>
</g>
<g >
<title>proc_pid_readdir (6,066,531 samples, 0.02%)</title><rect x="66.4" y="1509" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="69.38" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1445" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="998.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1301" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1589" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.92" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1301" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (706,453,285 samples, 2.82%)</title><rect x="156.8" y="1605" width="33.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="159.83" y="1615.5" >en..</text>
</g>
<g >
<title>ksys_write (8,708,951 samples, 0.03%)</title><rect x="408.7" y="1413" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="411.71" y="1423.5" ></text>
</g>
<g >
<title>tick_sched_handle (680,148,128 samples, 2.71%)</title><rect x="93.5" y="1397" width="32.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="96.51" y="1407.5" >ti..</text>
</g>
<g >
<title>do_user_addr_fault (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1573" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="253.28" y="1583.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (2,650,160 samples, 0.01%)</title><rect x="1010.5" y="1397" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1013.48" y="1407.5" ></text>
</g>
<g >
<title>__mmput (8,204,306 samples, 0.03%)</title><rect x="1007.5" y="1413" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1010.50" y="1423.5" ></text>
</g>
<g >
<title>main (11,737,730 samples, 0.05%)</title><rect x="1006.9" y="1557" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1009.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="757" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="767.5" ></text>
</g>
<g >
<title>mutex_unlock (3,634,949 samples, 0.01%)</title><rect x="407.8" y="1461" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="410.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,106,974 samples, 0.26%)</title><rect x="301.6" y="1013" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (72,096,812 samples, 0.29%)</title><rect x="301.6" y="1045" width="3.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,920,962 samples, 0.09%)</title><rect x="301.6" y="533" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="304.65" y="543.5" ></text>
</g>
<g >
<title>CCodeStoreManager::request (49,095,561 samples, 0.20%)</title><rect x="61.9" y="1461" width="2.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="64.94" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1295.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (6,071,234 samples, 0.02%)</title><rect x="28.0" y="1477" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="30.97" y="1487.5" ></text>
</g>
<g >
<title>lind_unlink (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1541" width="17.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="623.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,260,354 samples, 0.07%)</title><rect x="307.8" y="453" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.81" y="463.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (16,972,422 samples, 0.07%)</title><rect x="1000.9" y="1349" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1003.85" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,263,428 samples, 0.04%)</title><rect x="302.1" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="305.15" y="399.5" ></text>
</g>
<g >
<title>do_epoll_wait (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1541" width="2.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="249.84" y="1551.5" ></text>
</g>
<g >
<title>[sel_ldr] (10,618,753,548 samples, 42.32%)</title><rect x="454.8" y="1605" width="499.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="457.79" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>vfs_iter_write (3,416,617 samples, 0.01%)</title><rect x="409.0" y="1365" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="411.95" y="1375.5" ></text>
</g>
<g >
<title>do_fault (1,259,212,299 samples, 5.02%)</title><rect x="747.8" y="1397" width="59.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="750.76" y="1407.5" >do_fault</text>
</g>
<g >
<title>update_load_avg (2,835,831 samples, 0.01%)</title><rect x="1189.5" y="1461" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.50" y="1471.5" ></text>
</g>
<g >
<title>NaClSysUnlink (365,035,314 samples, 1.45%)</title><rect x="620.2" y="1557" width="17.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="623.24" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1157" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1167.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,046,380 samples, 0.04%)</title><rect x="307.9" y="69" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="310.92" y="79.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,325,848,435 samples, 5.28%)</title><rect x="93.2" y="1573" width="62.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="96.23" y="1583.5" >cpu_st..</text>
</g>
<g >
<title>follow_page_mask (33,504,372 samples, 0.13%)</title><rect x="68.8" y="1397" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="71.79" y="1407.5" ></text>
</g>
<g >
<title>__remove_hrtimer (4,167,814 samples, 0.02%)</title><rect x="93.3" y="1413" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="96.31" y="1423.5" ></text>
</g>
<g >
<title>page_counter_uncharge (52,060,744 samples, 0.21%)</title><rect x="620.2" y="1125" width="2.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="623.24" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="133" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="143.5" ></text>
</g>
<g >
<title>getgrgid (8,707,898 samples, 0.03%)</title><rect x="191.9" y="1493" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="194.93" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1333" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1343.5" ></text>
</g>
<g >
<title>__remove_mapping (47,586,186 samples, 0.19%)</title><rect x="81.0" y="1461" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="84.01" y="1471.5" ></text>
</g>
<g >
<title>begin_new_exec (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1461" width="56.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="354.00" y="1471.5" >begin_..</text>
</g>
<g >
<title>list_lru_count_one (11,034,148 samples, 0.04%)</title><rect x="89.5" y="1445" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="92.46" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,650,160 samples, 0.01%)</title><rect x="1010.6" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.60" y="1583.5" ></text>
</g>
<g >
<title>exec_binprm (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1509" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="253.42" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (156,368,741 samples, 0.62%)</title><rect x="605.6" y="1509" width="7.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="608.56" y="1519.5" ></text>
</g>
<g >
<title>__mmput (27,108,323 samples, 0.11%)</title><rect x="1000.4" y="1493" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1003.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1141" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,563,749 samples, 0.39%)</title><rect x="301.2" y="1477" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1525" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1535.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_remove (26,966,986 samples, 0.11%)</title><rect x="250.4" y="1333" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="253.42" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (33,888,819 samples, 0.14%)</title><rect x="407.8" y="1605" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="410.76" y="1615.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (124,468,675 samples, 0.50%)</title><rect x="300.9" y="1557" width="5.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="303.94" y="1567.5" ></text>
</g>
<g >
<title>__wake_up_common (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1477" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="251.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1381" width="17.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.63" y="1391.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (101,593,635 samples, 0.40%)</title><rect x="799.8" y="1317" width="4.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="802.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="869" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="879.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (158,437,365 samples, 0.63%)</title><rect x="433.1" y="1589" width="7.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="436.12" y="1599.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (246,730,403 samples, 0.98%)</title><rect x="50.3" y="1397" width="11.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="53.33" y="1407.5" ></text>
</g>
<g >
<title>mtree_range_walk (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1509" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="253.28" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,315,223,710 samples, 5.24%)</title><rect x="93.3" y="1525" width="61.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="96.31" y="1535.5" >cpuidl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,430,188 samples, 0.30%)</title><rect x="301.6" y="1205" width="3.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="933" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="943.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1,059,107,884 samples, 4.22%)</title><rect x="894.7" y="1461" width="49.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="897.74" y="1471.5" >serde..</text>
</g>
<g >
<title>__sys_connect (7,498,746 samples, 0.03%)</title><rect x="191.6" y="1301" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="194.58" y="1311.5" ></text>
</g>
<g >
<title>create_empty_buffers (100,357,182 samples, 0.40%)</title><rect x="783.3" y="1301" width="4.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="786.31" y="1311.5" ></text>
</g>
<g >
<title>truncate_cleanup_folio (156,479,614 samples, 0.62%)</title><rect x="630.1" y="1189" width="7.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="633.05" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="693" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="703.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (12,130,036 samples, 0.05%)</title><rect x="267.6" y="1461" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="270.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,497,304 samples, 0.02%)</title><rect x="268.6" y="1589" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="271.60" y="1599.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (150,289,510 samples, 0.60%)</title><rect x="651.6" y="1541" width="7.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="654.64" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (50,215,191 samples, 0.20%)</title><rect x="818.8" y="1397" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="821.78" y="1407.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (4,306,515 samples, 0.02%)</title><rect x="155.2" y="1509" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="158.17" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="1541" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (4,056,535 samples, 0.02%)</title><rect x="327.4" y="1333" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="330.36" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1445" width="4.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="539.98" y="1455.5" ></text>
</g>
<g >
<title>release_pages (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1253" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="353.38" y="1263.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (685,731,102 samples, 2.73%)</title><rect x="93.3" y="1477" width="32.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="96.31" y="1487.5" >sy..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,227,205 samples, 0.01%)</title><rect x="307.3" y="373" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="310.26" y="383.5" ></text>
</g>
<g >
<title>search_binary_handler (38,771,430 samples, 0.15%)</title><rect x="250.4" y="1493" width="1.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="253.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,571,385 samples, 0.23%)</title><rect x="301.6" y="933" width="2.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.65" y="943.5" ></text>
</g>
<g >
<title>vm_normal_page (2,204,969 samples, 0.01%)</title><rect x="78.0" y="1301" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.98" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1269" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1279.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (50,332,835 samples, 0.20%)</title><rect x="409.4" y="1589" width="2.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="412.35" y="1599.5" ></text>
</g>
<g >
<title>exc_page_fault (30,880,817 samples, 0.12%)</title><rect x="245.4" y="1573" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="248.39" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5,034,042 samples, 0.02%)</title><rect x="409.1" y="1333" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="412.12" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="799.5" ></text>
</g>
<g >
<title>ext4_release_folio (47,157,611 samples, 0.19%)</title><rect x="1007.9" y="1445" width="2.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1010.88" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="1557" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="725" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="735.5" ></text>
</g>
<g >
<title>set_next_entity (2,835,831 samples, 0.01%)</title><rect x="1189.5" y="1477" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.50" y="1487.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,966,329 samples, 0.02%)</title><rect x="1189.8" y="1525" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.81" y="1535.5" ></text>
</g>
<g >
<title>cfree (9,046,380 samples, 0.04%)</title><rect x="307.9" y="85" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="310.92" y="95.5" ></text>
</g>
<g >
<title>zap_pte_range (7,976,908 samples, 0.03%)</title><rect x="995.2" y="1301" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="998.23" y="1311.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,206,912,346 samples, 4.81%)</title><rect x="351.0" y="1557" width="56.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="354.00" y="1567.5" >do_exe..</text>
</g>
<g >
<title>cgroup_rstat_updated (6,071,234 samples, 0.02%)</title><rect x="28.0" y="1445" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="30.97" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,227,205 samples, 0.01%)</title><rect x="307.3" y="997" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.26" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1253" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1263.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (131,220,620 samples, 0.52%)</title><rect x="252.2" y="1397" width="6.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="255.25" y="1407.5" ></text>
</g>
<g >
<title>v8::internal::ScavengeJob::Task::RunInternal (15,994,865 samples, 0.06%)</title><rect x="326.4" y="1509" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="329.42" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="629" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,118,260 samples, 0.01%)</title><rect x="326.0" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="329.04" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (104,433,431 samples, 0.42%)</title><rect x="537.0" y="1493" width="4.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="539.98" y="1503.5" ></text>
</g>
<g >
<title>ep_poll (41,761,499 samples, 0.17%)</title><rect x="246.8" y="1525" width="2.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="249.84" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,153,362 samples, 0.05%)</title><rect x="350.4" y="1589" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="353.38" y="1599.5" ></text>
</g>
<g >
<title>try_charge_memcg (100,654,730 samples, 0.40%)</title><rect x="762.0" y="1221" width="4.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="764.99" y="1231.5" ></text>
</g>
<g >
<title>find_vma (3,021,883 samples, 0.01%)</title><rect x="250.3" y="1541" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="253.28" y="1551.5" ></text>
</g>
<g >
<title>__drain_all_pages (7,768,481 samples, 0.03%)</title><rect x="78.2" y="1525" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="81.24" y="1535.5" ></text>
</g>
<g >
<title>NaClSysRead (1,509,376,040 samples, 6.02%)</title><rect x="549.3" y="1557" width="70.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="552.26" y="1567.5" >NaClSysR..</text>
</g>
<g >
<title>statx (29,099,782 samples, 0.12%)</title><rect x="192.3" y="1509" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="195.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,977,690 samples, 0.33%)</title><rect x="301.6" y="1285" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.58" y="1295.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (2,786,054 samples, 0.01%)</title><rect x="190.1" y="1221" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="193.05" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (367,699,475 samples, 1.47%)</title><rect x="308.6" y="1221" width="17.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="311.63" y="1231.5" ></text>
</g>
<g >
<title>ext4_release_folio (28,692,856 samples, 0.11%)</title><rect x="1005.5" y="1173" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1008.49" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,668,234 samples, 0.01%)</title><rect x="325.9" y="789" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="328.92" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,260,354 samples, 0.07%)</title><rect x="307.8" y="1077" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.81" y="1087.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2,918,037 samples, 0.01%)</title><rect x="248.8" y="1429" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="251.80" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,182,566 samples, 0.03%)</title><rect x="327.2" y="1509" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="330.17" y="1519.5" ></text>
</g>
<g >
<title>update_load_avg (4,577,017 samples, 0.02%)</title><rect x="155.4" y="1461" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="158.37" y="1471.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (3,896,684 samples, 0.02%)</title><rect x="349.1" y="1381" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="352.14" y="1391.5" ></text>
</g>
</g>
</svg>
