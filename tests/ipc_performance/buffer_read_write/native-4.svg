<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1702.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1685" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1685" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1061" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1071.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4 (100,459,423 samples, 0.01%)</title><rect x="1173.8" y="1621" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1176.84" y="1631.5" ></text>
</g>
<g >
<title>__folio_mark_dirty (150,172,924 samples, 0.01%)</title><rect x="292.6" y="1285" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="295.57" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (470,732,593 samples, 0.05%)</title><rect x="488.2" y="1621" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="491.24" y="1631.5" ></text>
</g>
<g >
<title>sqlite3Select (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1445" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="420.30" y="1455.5" ></text>
</g>
<g >
<title>operator new (99,383,017 samples, 0.01%)</title><rect x="783.7" y="1493" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="786.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="485" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="495.5" ></text>
</g>
<g >
<title>__do_sys_clone (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1573" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="515.82" y="1583.5" ></text>
</g>
<g >
<title>futex_wait (138,871,723 samples, 0.01%)</title><rect x="511.5" y="1541" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="514.51" y="1551.5" ></text>
</g>
<g >
<title>ion (1,000,656,443 samples, 0.10%)</title><rect x="1175.6" y="1509" width="1.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1178.62" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (529,298,776 samples, 0.05%)</title><rect x="446.7" y="1589" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="449.74" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_lock (902,321,967 samples, 0.09%)</title><rect x="285.2" y="1301" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="288.19" y="1311.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (292,398,587 samples, 0.03%)</title><rect x="487.9" y="1621" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.91" y="1631.5" ></text>
</g>
<g >
<title>malloc (200,966,712 samples, 0.02%)</title><rect x="736.2" y="1045" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="739.16" y="1055.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1413" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="465.57" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (200,798,446 samples, 0.02%)</title><rect x="692.6" y="757" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="695.55" y="767.5" ></text>
</g>
<g >
<title>sqlite3VdbeRecordCompareWithSkip (148,033,670 samples, 0.01%)</title><rect x="463.3" y="1317" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="466.29" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (880,305,995 samples, 0.09%)</title><rect x="515.3" y="1621" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="518.27" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1189" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="501" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="511.5" ></text>
</g>
<g >
<title>kfree (652,995,046 samples, 0.06%)</title><rect x="208.4" y="1365" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="211.39" y="1375.5" ></text>
</g>
<g >
<title>proc_single_show (319,901,219 samples, 0.03%)</title><rect x="479.8" y="1493" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="482.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,924,369,539 samples, 16.27%)</title><rect x="591.0" y="1445" width="192.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="594.01" y="1455.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>__do_sys_newstat (2,241,408,171 samples, 0.22%)</title><rect x="420.3" y="1541" width="2.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="423.33" y="1551.5" ></text>
</g>
<g >
<title>node::crypto::SecureContext::AddCACert (172,883,500 samples, 0.02%)</title><rect x="565.3" y="1557" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="568.30" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (180,902,274 samples, 0.02%)</title><rect x="478.1" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.07" y="1439.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (400,376,984 samples, 0.04%)</title><rect x="207.5" y="1333" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="210.53" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (238,687,081 samples, 0.02%)</title><rect x="486.8" y="1509" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="489.81" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (201,303,613 samples, 0.02%)</title><rect x="828.3" y="101" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="831.25" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="501" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="511.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="533" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="741" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="751.5" ></text>
</g>
<g >
<title>unmap_vmas (302,246,375 samples, 0.03%)</title><rect x="467.6" y="1477" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="470.65" y="1487.5" ></text>
</g>
<g >
<title>apparmor_file_permission (258,563,674 samples, 0.03%)</title><rect x="73.7" y="1445" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="76.70" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (4,687,862,096 samples, 0.46%)</title><rect x="472.5" y="1525" width="5.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="475.55" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::IncrementalMarking::AdvanceWithDeadline (138,917,418 samples, 0.01%)</title><rect x="1167.7" y="1509" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1170.68" y="1519.5" ></text>
</g>
<g >
<title>proc_single_show (112,417,646 samples, 0.01%)</title><rect x="1177.2" y="1493" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1180.25" y="1503.5" ></text>
</g>
<g >
<title>operator new (17,885,951,519 samples, 1.74%)</title><rect x="1095.2" y="69" width="20.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.17" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="453" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="463.5" ></text>
</g>
<g >
<title>create_sync_work (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1541" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="467.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1413" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1423.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="693" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (706,474,207 samples, 0.07%)</title><rect x="782.2" y="1397" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="785.16" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="853" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="863.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1077" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1087.5" ></text>
</g>
<g >
<title>__entry_text_start (6,005,413,600 samples, 0.59%)</title><rect x="95.5" y="1541" width="6.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="98.50" y="1551.5" ></text>
</g>
<g >
<title>start_kernel (266,804,653 samples, 0.03%)</title><rect x="486.8" y="1589" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="489.81" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (152,425,282 samples, 0.01%)</title><rect x="70.1" y="1397" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="73.12" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (440,502,147 samples, 0.04%)</title><rect x="569.8" y="165" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="572.82" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,685,138,827 samples, 0.65%)</title><rect x="677.5" y="709" width="7.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="680.46" y="719.5" ></text>
</g>
<g >
<title>inet_recvmsg (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1429" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1171.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (451,525,428 samples, 0.04%)</title><rect x="633.7" y="293" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="636.70" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1045" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1477" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,615,955 samples, 0.02%)</title><rect x="683.6" y="661" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="686.59" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1349" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="917" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="927.5" ></text>
</g>
<g >
<title>__slab_free (98,044,161 samples, 0.01%)</title><rect x="443.1" y="1445" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="446.12" y="1455.5" ></text>
</g>
<g >
<title>__fdget_pos (151,009,598 samples, 0.01%)</title><rect x="806.5" y="1509" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="809.51" y="1519.5" ></text>
</g>
<g >
<title>ovl_copyattr (401,723,008 samples, 0.04%)</title><rect x="225.0" y="1461" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="227.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="309" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="319.5" ></text>
</g>
<g >
<title>ovl_override_creds (100,742,664 samples, 0.01%)</title><rect x="225.4" y="1461" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="228.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="789" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="799.5" ></text>
</g>
<g >
<title>__fsnotify_parent (208,924,278 samples, 0.02%)</title><rect x="74.6" y="1429" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="77.64" y="1439.5" ></text>
</g>
<g >
<title>path_lookupat (97,427,531 samples, 0.01%)</title><rect x="452.1" y="1493" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="455.05" y="1503.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (251,657,429 samples, 0.02%)</title><rect x="182.3" y="1365" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="185.31" y="1375.5" ></text>
</g>
<g >
<title>alloc_buffer_head (100,692,843 samples, 0.01%)</title><rect x="273.1" y="1285" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="276.07" y="1295.5" ></text>
</g>
<g >
<title>sh (2,114,155,201 samples, 0.21%)</title><rect x="1180.8" y="1637" width="2.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1183.77" y="1647.5" ></text>
</g>
<g >
<title>operator new (100,757,667 samples, 0.01%)</title><rect x="785.7" y="1525" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="788.69" y="1535.5" ></text>
</g>
<g >
<title>security_file_permission (1,855,188,628 samples, 0.18%)</title><rect x="389.9" y="1397" width="2.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="392.86" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="85" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.70" y="95.5" ></text>
</g>
<g >
<title>size_to_class (99,296,973 samples, 0.01%)</title><rect x="414.2" y="1605" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="417.16" y="1615.5" ></text>
</g>
<g >
<title>__cond_resched (151,105,651 samples, 0.01%)</title><rect x="114.5" y="1461" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="117.54" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (300,313,641 samples, 0.03%)</title><rect x="396.0" y="1413" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="399.00" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.08" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,498,288 samples, 0.01%)</title><rect x="685.0" y="693" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="687.97" y="703.5" ></text>
</g>
<g >
<title>malloc (99,383,017 samples, 0.01%)</title><rect x="783.7" y="1477" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="786.74" y="1487.5" ></text>
</g>
<g >
<title>[git] (320,335,677 samples, 0.03%)</title><rect x="472.1" y="1557" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="475.09" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (150,682,245 samples, 0.01%)</title><rect x="403.8" y="1541" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="406.79" y="1551.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (9,575,176,516 samples, 0.93%)</title><rect x="312.1" y="1269" width="11.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="315.08" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="165" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="175.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>ext4_da_write_begin (250,673,236 samples, 0.02%)</title><rect x="249.5" y="1365" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="252.52" y="1375.5" ></text>
</g>
<g >
<title>__wake_up_common (201,371,019 samples, 0.02%)</title><rect x="318.4" y="1221" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="321.36" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (100,743,795 samples, 0.01%)</title><rect x="601.7" y="885" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="604.71" y="895.5" ></text>
</g>
<g >
<title>get_meta (193,968,980 samples, 0.02%)</title><rect x="413.8" y="1605" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="416.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="741" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="751.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>ext4_readdir (148,031,486 samples, 0.01%)</title><rect x="423.2" y="1493" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="426.18" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,132,155 samples, 0.02%)</title><rect x="487.7" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1365" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (401,855,222 samples, 0.04%)</title><rect x="647.7" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="650.72" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator=@plt (100,301,057 samples, 0.01%)</title><rect x="701.1" y="821" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="704.06" y="831.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (364,946,090 samples, 0.04%)</title><rect x="486.1" y="1525" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="489.13" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="677" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="687.5" ></text>
</g>
<g >
<title>[libc.so.6] (753,391,986 samples, 0.07%)</title><rect x="698.7" y="789" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="701.66" y="799.5" ></text>
</g>
<g >
<title>deflate.part.3 (676,174,507 samples, 0.07%)</title><rect x="1170.3" y="1541" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1173.26" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1237" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (1,102,273,791 samples, 0.11%)</title><rect x="1157.0" y="69" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1159.97" y="79.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (249,034,074 samples, 0.02%)</title><rect x="118.7" y="1445" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="121.72" y="1455.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (99,276,404 samples, 0.01%)</title><rect x="441.8" y="1445" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="444.80" y="1455.5" ></text>
</g>
<g >
<title>sqlite3GetToken (97,761,512 samples, 0.01%)</title><rect x="418.6" y="1429" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="421.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,761,563 samples, 0.01%)</title><rect x="590.9" y="1445" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="593.90" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (143,408,334 samples, 0.01%)</title><rect x="447.0" y="1525" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="449.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1221" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1231.5" ></text>
</g>
<g >
<title>exit_mmap (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1413" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1176.96" y="1423.5" ></text>
</g>
<g >
<title>filename_lookup (113,807,666 samples, 0.01%)</title><rect x="489.3" y="1445" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="492.34" y="1455.5" ></text>
</g>
<g >
<title>set_default_locale (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1557" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1185.46" y="1567.5" ></text>
</g>
<g >
<title>vfs_iter_read (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1525" width="0.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="458.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,574,362 samples, 0.02%)</title><rect x="566.5" y="133" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="143.5" ></text>
</g>
<g >
<title>path_put (500,660,913 samples, 0.05%)</title><rect x="799.4" y="1445" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="802.44" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1365" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1375.5" ></text>
</g>
<g >
<title>do_writepages (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1461" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="519.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="565" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="575.5" ></text>
</g>
<g >
<title>do_task_stat (94,132,938 samples, 0.01%)</title><rect x="480.0" y="1461" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="483.02" y="1471.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1,492,738,325 samples, 0.15%)</title><rect x="563.6" y="1557" width="1.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="566.56" y="1567.5" ></text>
</g>
<g >
<title>__getblk_gfp (3,660,476,587 samples, 0.36%)</title><rect x="372.1" y="1221" width="4.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="375.07" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="581" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="591.5" ></text>
</g>
<g >
<title>sccp (126,590,085 samples, 0.01%)</title><rect x="426.8" y="1605" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="429.82" y="1615.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (906,102,252 samples, 0.09%)</title><rect x="238.6" y="1429" width="1.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="241.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1125" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1135.5" ></text>
</g>
<g >
<title>operator new (351,950,996 samples, 0.03%)</title><rect x="571.4" y="181" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="574.37" y="191.5" ></text>
</g>
<g >
<title>security_file_permission (355,964,586 samples, 0.03%)</title><rect x="397.7" y="1461" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="400.73" y="1471.5" ></text>
</g>
<g >
<title>malloc (151,071,953 samples, 0.01%)</title><rect x="668.5" y="533" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="671.51" y="543.5" ></text>
</g>
<g >
<title>release_pages (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1429" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="518.06" y="1439.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,608,076,263 samples, 0.25%)</title><rect x="400.3" y="1493" width="3.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="403.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="965" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="917" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="927.5" ></text>
</g>
<g >
<title>futex_wake (433,794,506 samples, 0.04%)</title><rect x="446.8" y="1541" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="449.80" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,869,667 samples, 0.09%)</title><rect x="763.1" y="1269" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="766.10" y="1279.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (310,233,968 samples, 0.03%)</title><rect x="1179.1" y="1541" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1182.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1445" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1455.5" ></text>
</g>
<g >
<title>cfree (1,254,113,209 samples, 0.12%)</title><rect x="568.4" y="197" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="571.38" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1541" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1551.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1205" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="94.05" y="1215.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (296,002,474 samples, 0.03%)</title><rect x="812.8" y="1413" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="815.76" y="1423.5" ></text>
</g>
<g >
<title>generic_permission (100,638,920 samples, 0.01%)</title><rect x="790.3" y="1381" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="793.34" y="1391.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (98,021,008 samples, 0.01%)</title><rect x="465.3" y="1445" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="468.33" y="1455.5" ></text>
</g>
<g >
<title>ovl_d_real (301,462,417 samples, 0.03%)</title><rect x="237.7" y="1429" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="240.67" y="1439.5" ></text>
</g>
<g >
<title>__do_sys_clone (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1557" width="0.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1181.62" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (302,102,683 samples, 0.03%)</title><rect x="625.0" y="213" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="628.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="725" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="735.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="277" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="287.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (119,643,059 samples, 0.01%)</title><rect x="1176.0" y="1269" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1179.04" y="1279.5" ></text>
</g>
<g >
<title>iterate_dir (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1269" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.79" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1109" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1119.5" ></text>
</g>
<g >
<title>ovl_override_creds (1,654,085,485 samples, 0.16%)</title><rect x="235.4" y="1445" width="1.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="238.37" y="1455.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,858,233,885 samples, 0.18%)</title><rect x="179.8" y="1333" width="2.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="182.82" y="1343.5" ></text>
</g>
<g >
<title>malloc (1,119,295,713 samples, 0.11%)</title><rect x="779.1" y="1381" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="782.08" y="1391.5" ></text>
</g>
<g >
<title>down_write (2,007,973,514 samples, 0.20%)</title><rect x="229.1" y="1445" width="2.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="232.07" y="1455.5" ></text>
</g>
<g >
<title>v8::internal::compiler::EscapeAnalysis::Reduce (128,810,777 samples, 0.01%)</title><rect x="1169.6" y="1461" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1172.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="693" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="703.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (204,579,076 samples, 0.02%)</title><rect x="89.9" y="1493" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="92.86" y="1503.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (6,864,728,894 samples, 0.67%)</title><rect x="351.3" y="1173" width="7.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="354.26" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (503,074,130 samples, 0.05%)</title><rect x="657.1" y="485" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="660.13" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1317" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1327.5" ></text>
</g>
<g >
<title>malloc (2,408,770,730 samples, 0.23%)</title><rect x="970.4" y="69" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="973.36" y="79.5" ></text>
</g>
<g >
<title>[[heap]] (157,882,322 samples, 0.02%)</title><rect x="487.4" y="1621" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="490.36" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_read (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1493" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1174.05" y="1503.5" ></text>
</g>
<g >
<title>operator new@plt (401,394,175 samples, 0.04%)</title><rect x="1130.6" y="53" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1133.61" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (501,367,953 samples, 0.05%)</title><rect x="973.6" y="101" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="976.65" y="111.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (99,611,428 samples, 0.01%)</title><rect x="295.0" y="1301" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="298.01" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (1,715,424,107 samples, 0.17%)</title><rect x="563.5" y="1573" width="2.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="566.53" y="1583.5" ></text>
</g>
<g >
<title>ksys_write (255,747,137,919 samples, 24.92%)</title><rect x="104.4" y="1493" width="294.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="107.44" y="1503.5" >ksys_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="453" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="463.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (24,944,765,541 samples, 2.43%)</title><rect x="153.6" y="1365" width="28.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="156.62" y="1375.5" >__..</text>
</g>
<g >
<title>apparmor_file_permission (570,854,373 samples, 0.06%)</title><rect x="70.5" y="1381" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="73.54" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="245" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="255.5" ></text>
</g>
<g >
<title>fsnotify_compare_groups (351,161,866 samples, 0.03%)</title><rect x="218.5" y="1445" width="0.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="221.54" y="1455.5" ></text>
</g>
<g >
<title>free_unref_page_list (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1413" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="518.06" y="1423.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1557" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="420.92" y="1567.5" ></text>
</g>
<g >
<title>ovl_i_path_real (94,016,028 samples, 0.01%)</title><rect x="424.6" y="1445" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="427.61" y="1455.5" ></text>
</g>
<g >
<title>[ls] (1,043,648,500 samples, 0.10%)</title><rect x="488.8" y="1557" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="491.78" y="1567.5" ></text>
</g>
<g >
<title>woken_wake_function (99,512,013 samples, 0.01%)</title><rect x="211.2" y="1317" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="214.15" y="1327.5" ></text>
</g>
<g >
<title>schedule_idle (469,338,035 samples, 0.05%)</title><rect x="521.9" y="1557" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="524.94" y="1567.5" ></text>
</g>
<g >
<title>expr (1,834,042,625 samples, 0.18%)</title><rect x="465.9" y="1637" width="2.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="468.91" y="1647.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1397" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1171.75" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="741" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (454,725,173 samples, 0.04%)</title><rect x="725.6" y="997" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="728.65" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,054,034,465 samples, 0.10%)</title><rect x="638.0" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="641.03" y="367.5" ></text>
</g>
<g >
<title>operator new (1,052,209,718 samples, 0.10%)</title><rect x="714.8" y="949" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="717.79" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1013" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1023.5" ></text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::Run (233,477,851 samples, 0.02%)</title><rect x="1169.9" y="1541" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1172.89" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="197" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="207.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (127,215,151,805 samples, 12.40%)</title><rect x="242.7" y="1413" width="146.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="245.69" y="1423.5" >do_iter_readv_writev</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="517" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="501" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,054,626,638 samples, 0.20%)</title><rect x="482.4" y="1605" width="2.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="485.41" y="1615.5" ></text>
</g>
<g >
<title>[ls] (128,087,289 samples, 0.01%)</title><rect x="508.9" y="1605" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="511.94" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (285,124,850 samples, 0.03%)</title><rect x="1183.2" y="1573" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.24" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (350,637,845 samples, 0.03%)</title><rect x="827.9" y="101" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="830.85" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="325" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1461" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="933" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (95,970,764,627 samples, 9.35%)</title><rect x="600.0" y="949" width="110.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="603.03" y="959.5" >std::__detail..</text>
</g>
<g >
<title>__x64_sys_fcntl (198,219,989 samples, 0.02%)</title><rect x="451.8" y="1573" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="454.82" y="1583.5" ></text>
</g>
<g >
<title>atime_needs_update (156,624,438 samples, 0.02%)</title><rect x="42.8" y="1429" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="45.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1173" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1183.5" >std::__detail::..</text>
</g>
<g >
<title>worker (1,080,171,263 samples, 0.11%)</title><rect x="1170.3" y="1589" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1173.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1557" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="389" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="399.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1365" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="566.57" y="1375.5" ></text>
</g>
<g >
<title>operator new (352,456,368 samples, 0.03%)</title><rect x="684.5" y="677" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="687.45" y="687.5" ></text>
</g>
<g >
<title>__libc_fork (1,425,396,059 samples, 0.14%)</title><rect x="563.6" y="1493" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="566.56" y="1503.5" ></text>
</g>
<g >
<title>do_iter_write (742,150,101 samples, 0.07%)</title><rect x="1175.9" y="1365" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1178.89" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (346,447,768 samples, 0.03%)</title><rect x="467.6" y="1605" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="470.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="693" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="703.5" ></text>
</g>
<g >
<title>operator new (602,818,262 samples, 0.06%)</title><rect x="647.5" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="650.49" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (99,568,202 samples, 0.01%)</title><rect x="1167.5" y="1541" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1170.47" y="1551.5" ></text>
</g>
<g >
<title>sqlite3_column_text (99,295,510 samples, 0.01%)</title><rect x="458.6" y="1429" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="461.61" y="1439.5" ></text>
</g>
<g >
<title>[git] (1,196,609,522 samples, 0.12%)</title><rect x="469.3" y="1349" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,726,195,678 samples, 0.66%)</title><rect x="635.2" y="389" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="638.20" y="399.5" ></text>
</g>
<g >
<title>operator new (503,089,648 samples, 0.05%)</title><rect x="1149.9" y="85" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.90" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1461" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1471.5" >std::__detail::..</text>
</g>
<g >
<title>unlock_page (100,608,504 samples, 0.01%)</title><rect x="381.2" y="1333" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="384.19" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (117,302,247 samples, 0.01%)</title><rect x="488.5" y="1573" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="491.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,331,153 samples, 0.10%)</title><rect x="589.7" y="1445" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="592.74" y="1455.5" ></text>
</g>
<g >
<title>glob_matcher::match (146,225,917 samples, 0.01%)</title><rect x="465.2" y="1445" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="468.16" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1493" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1503.5" ></text>
</g>
<g >
<title>operator delete (100,712,500 samples, 0.01%)</title><rect x="714.6" y="949" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="717.62" y="959.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (1,403,096,236 samples, 0.14%)</title><rect x="121.8" y="1429" width="1.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="124.78" y="1439.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (58,406,234,583 samples, 5.69%)</title><rect x="148.5" y="1397" width="67.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="151.48" y="1407.5" >inotify..</text>
</g>
<g >
<title>[grep] (306,643,247 samples, 0.03%)</title><rect x="478.0" y="1621" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="481.03" y="1631.5" ></text>
</g>
<g >
<title>_raw_read_unlock (1,053,985,364 samples, 0.10%)</title><rect x="300.0" y="1253" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="302.97" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,357,267,495 samples, 0.23%)</title><rect x="320.0" y="1205" width="2.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="323.04" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,572,967 samples, 0.01%)</title><rect x="617.8" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="620.84" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,550,114,969 samples, 10.19%)</title><rect x="852.9" y="133" width="120.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="143.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (900,351,080 samples, 0.09%)</title><rect x="683.0" y="693" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="686.01" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1317" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1327.5" >std::__detail::..</text>
</g>
<g >
<title>free_buffer_head (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1173" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="94.05" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,132,155 samples, 0.02%)</title><rect x="487.7" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.68" y="1487.5" ></text>
</g>
<g >
<title>search_binary_handler (1,781,137,071 samples, 0.17%)</title><rect x="513.0" y="1509" width="2.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="515.95" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (2,241,408,171 samples, 0.22%)</title><rect x="420.3" y="1557" width="2.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="423.33" y="1567.5" ></text>
</g>
<g >
<title>load_elf_binary (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1493" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1176.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1557" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1253" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1263.5" ></text>
</g>
<g >
<title>truncate_cleanup_folio (209,044,807 samples, 0.02%)</title><rect x="91.0" y="1285" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="93.99" y="1295.5" ></text>
</g>
<g >
<title>__libc_start_main (300,861,442 samples, 0.03%)</title><rect x="478.0" y="1605" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="481.04" y="1615.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1493" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="458.55" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="805" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="933" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="943.5" >std::__detail::..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (2,951,590,649 samples, 0.29%)</title><rect x="260.2" y="1333" width="3.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="263.18" y="1343.5" ></text>
</g>
<g >
<title>__fget_light (151,009,598 samples, 0.01%)</title><rect x="806.5" y="1493" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="809.51" y="1503.5" ></text>
</g>
<g >
<title>__tsearch (398,766,845 samples, 0.04%)</title><rect x="467.0" y="1445" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="470.00" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (346,447,768 samples, 0.03%)</title><rect x="467.6" y="1621" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="470.62" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (150,258,723 samples, 0.01%)</title><rect x="850.8" y="53" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="853.76" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1269" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1279.5" ></text>
</g>
<g >
<title>ovl_permission (2,002,994,815 samples, 0.20%)</title><rect x="473.0" y="1397" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="475.96" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="469" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="479.5" ></text>
</g>
<g >
<title>copy_page_range (470,293,790 samples, 0.05%)</title><rect x="482.5" y="1477" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="485.46" y="1487.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (2,058,431,889 samples, 0.20%)</title><rect x="800.8" y="1445" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="803.77" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,915,435,841 samples, 12.76%)</title><rect x="595.1" y="1205" width="150.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="598.07" y="1215.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>remove_wait_queue (200,200,357 samples, 0.02%)</title><rect x="813.2" y="1477" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="816.16" y="1487.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (98,734,319 samples, 0.01%)</title><rect x="443.4" y="1477" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="446.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="213" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="437" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1093" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1103.5" ></text>
</g>
<g >
<title>begin_new_exec (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1477" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1176.96" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1125" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1135.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="533" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1333" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (351,478,394 samples, 0.03%)</title><rect x="717.8" y="949" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="720.77" y="959.5" ></text>
</g>
<g >
<title>current_time (1,004,077,413 samples, 0.10%)</title><rect x="254.1" y="1333" width="1.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="257.08" y="1343.5" ></text>
</g>
<g >
<title>unmap_region (511,908,045 samples, 0.05%)</title><rect x="443.4" y="1509" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="446.39" y="1519.5" ></text>
</g>
<g >
<title>ovl_real_fdget (2,344,822,336 samples, 0.23%)</title><rect x="47.6" y="1445" width="2.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="50.62" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (198,450,313 samples, 0.02%)</title><rect x="461.5" y="1445" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="464.53" y="1455.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (182,650,117,127 samples, 17.80%)</title><rect x="575.8" y="1557" width="210.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="578.82" y="1567.5" >Watcher::isIgnored</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="309" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="319.5" ></text>
</g>
<g >
<title>unmap_and_move (434,625,122 samples, 0.04%)</title><rect x="515.3" y="1525" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="518.34" y="1535.5" ></text>
</g>
<g >
<title>__virt_addr_valid (100,767,446 samples, 0.01%)</title><rect x="809.3" y="1413" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="812.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,372,741,521 samples, 0.62%)</title><rect x="643.0" y="453" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="646.05" y="463.5" ></text>
</g>
<g >
<title>do_sys_openat2 (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1541" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="429.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="725" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="735.5" ></text>
</g>
<g >
<title>exit_mm (310,788,856 samples, 0.03%)</title><rect x="467.6" y="1541" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="470.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1413" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,599,119 samples, 0.03%)</title><rect x="823.3" y="197" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.29" y="207.5" ></text>
</g>
<g >
<title>operator new (100,722,782 samples, 0.01%)</title><rect x="718.1" y="933" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="721.05" y="943.5" ></text>
</g>
<g >
<title>[git] (751,648,409 samples, 0.07%)</title><rect x="469.4" y="1317" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.37" y="1327.5" ></text>
</g>
<g >
<title>vfs_statx (243,477,964 samples, 0.02%)</title><rect x="489.5" y="1445" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="492.48" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (445,905,180 samples, 0.04%)</title><rect x="674.3" y="597" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="677.29" y="607.5" ></text>
</g>
<g >
<title>getdents64 (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1349" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="474.21" y="1359.5" ></text>
</g>
<g >
<title>[bash] (518,622,012 samples, 0.05%)</title><rect x="1181.3" y="1461" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1413" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1423.5" ></text>
</g>
<g >
<title>revert_creds (1,404,366,117 samples, 0.14%)</title><rect x="72.0" y="1461" width="1.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="75.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="933" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="943.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1557" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (150,035,093 samples, 0.01%)</title><rect x="807.3" y="1477" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="810.33" y="1487.5" ></text>
</g>
<g >
<title>getname_flags (978,112,600 samples, 0.10%)</title><rect x="786.7" y="1461" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="789.73" y="1471.5" ></text>
</g>
<g >
<title>__cond_resched (100,489,920 samples, 0.01%)</title><rect x="371.7" y="1221" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="374.73" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Event&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Event&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Event&gt; &gt; &gt;::find (100,596,213 samples, 0.01%)</title><rect x="553.6" y="1605" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="556.63" y="1615.5" ></text>
</g>
<g >
<title>proc_fill_cache (186,984,103 samples, 0.02%)</title><rect x="483.6" y="1509" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="486.61" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,728,962 samples, 0.01%)</title><rect x="598.2" y="1061" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.24" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="613" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="581" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="591.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (100,752,901 samples, 0.01%)</title><rect x="391.0" y="1365" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="394.01" y="1375.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,291,527,872 samples, 0.13%)</title><rect x="509.4" y="1557" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="512.36" y="1567.5" ></text>
</g>
<g >
<title>mmput (310,788,856 samples, 0.03%)</title><rect x="467.6" y="1525" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="470.64" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (250,574,362 samples, 0.02%)</title><rect x="566.5" y="101" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="111.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (295,386,810 samples, 0.03%)</title><rect x="1169.5" y="1541" width="0.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1172.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,574,398,885 samples, 4.34%)</title><rect x="608.0" y="549" width="51.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="610.95" y="559.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="597" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="581" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="591.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,088,114,719 samples, 1.08%)</title><rect x="852.9" y="117" width="12.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (251,141,301 samples, 0.02%)</title><rect x="337.8" y="1237" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="340.81" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="245" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="255.5" >std::__detail::..</text>
</g>
<g >
<title>__split_vma (603,185,020 samples, 0.06%)</title><rect x="442.3" y="1509" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="445.25" y="1519.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (250,499,363 samples, 0.02%)</title><rect x="362.2" y="1237" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="365.16" y="1247.5" ></text>
</g>
<g >
<title>[bash] (425,171,509 samples, 0.04%)</title><rect x="1181.9" y="1461" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.94" y="1471.5" ></text>
</g>
<g >
<title>ovl_dir_read_merged (236,629,477 samples, 0.02%)</title><rect x="470.8" y="1237" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="473.82" y="1247.5" ></text>
</g>
<g >
<title>fdarray__poll (736,286,968 samples, 0.07%)</title><rect x="1174.7" y="1589" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1177.65" y="1599.5" ></text>
</g>
<g >
<title>alloc_slot (2,183,798,806 samples, 0.21%)</title><rect x="447.3" y="1621" width="2.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="450.34" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="245" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="255.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (602,513,886 samples, 0.06%)</title><rect x="800.1" y="1429" width="0.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="803.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="661" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="671.5" ></text>
</g>
<g >
<title>setlocale (194,088,443 samples, 0.02%)</title><rect x="487.7" y="1557" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="490.68" y="1567.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (101,232,629 samples, 0.01%)</title><rect x="424.2" y="1429" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="427.24" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1493" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1301" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1311.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="565" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1557" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1567.5" >std::__detail::..</text>
</g>
<g >
<title>[git] (2,740,566,366 samples, 0.27%)</title><rect x="468.2" y="1381" width="3.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.20" y="1391.5" ></text>
</g>
<g >
<title>operator delete@plt (151,052,255 samples, 0.01%)</title><rect x="673.6" y="629" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="676.59" y="639.5" ></text>
</g>
<g >
<title>wake_up_q (145,454,108 samples, 0.01%)</title><rect x="447.1" y="1525" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="450.13" y="1535.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (1,286,604,371 samples, 0.13%)</title><rect x="458.9" y="1397" width="1.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="461.95" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="965" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1525" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1535.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (95,517,458,486 samples, 9.31%)</title><rect x="600.5" y="933" width="109.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="603.50" y="943.5" >std::__detail..</text>
</g>
<g >
<title>copy_pmd_range (463,193,234 samples, 0.05%)</title><rect x="482.5" y="1445" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="485.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (753,542,060 samples, 0.07%)</title><rect x="981.1" y="37" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="984.10" y="47.5" ></text>
</g>
<g >
<title>process_one_work (223,883,294 samples, 0.02%)</title><rect x="516.0" y="1573" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="518.99" y="1583.5" ></text>
</g>
<g >
<title>__rcu_read_lock (100,268,573 samples, 0.01%)</title><rect x="365.0" y="1221" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="368.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,531,379 samples, 0.07%)</title><rect x="1140.5" y="117" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1143.55" y="127.5" ></text>
</g>
<g >
<title>copy_pmd_range (1,047,548,729 samples, 0.10%)</title><rect x="509.5" y="1445" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="512.47" y="1455.5" ></text>
</g>
<g >
<title>security_inode_permission (100,645,566 samples, 0.01%)</title><rect x="796.1" y="1397" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="799.13" y="1407.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (62,070,297,472 samples, 6.05%)</title><rect x="146.9" y="1413" width="71.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="149.87" y="1423.5" >fsnotify..</text>
</g>
<g >
<title>malloc (350,849,022 samples, 0.03%)</title><rect x="658.3" y="469" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="661.29" y="479.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,256,633,488 samples, 0.12%)</title><rect x="809.6" y="1461" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="812.64" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1317" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1327.5" ></text>
</g>
<g >
<title>aa_file_perm (250,643,800 samples, 0.02%)</title><rect x="394.9" y="1429" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="397.87" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,291,527,872 samples, 0.13%)</title><rect x="509.4" y="1573" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="512.36" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,551,421,430 samples, 0.15%)</title><rect x="721.7" y="997" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="724.75" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (96,303,725 samples, 0.01%)</title><rect x="471.9" y="1621" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="474.93" y="1631.5" ></text>
</g>
<g >
<title>bprm_execve (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1557" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="454.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="837" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="549" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="559.5" ></text>
</g>
<g >
<title>walk_component (106,495,398 samples, 0.01%)</title><rect x="478.9" y="1477" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="481.95" y="1487.5" ></text>
</g>
<g >
<title>getgrgid (252,377,854 samples, 0.02%)</title><rect x="489.0" y="1525" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="492.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (502,450,451 samples, 0.05%)</title><rect x="743.8" y="1125" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="746.81" y="1135.5" ></text>
</g>
<g >
<title>exec_mmap (295,491,117 samples, 0.03%)</title><rect x="1179.1" y="1461" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1182.08" y="1471.5" ></text>
</g>
<g >
<title>send_to_group (94,225,019 samples, 0.01%)</title><rect x="1175.7" y="1365" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1178.71" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator=@plt (151,091,262 samples, 0.01%)</title><rect x="735.5" y="1077" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="738.53" y="1087.5" ></text>
</g>
<g >
<title>read (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1557" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1171.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1125" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (10,628,654,344 samples, 1.04%)</title><rect x="1118.9" y="69" width="12.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.85" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1189" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="405" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1173" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="661" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="671.5" ></text>
</g>
<g >
<title>ovl_override_creds (1,212,372,255 samples, 0.12%)</title><rect x="793.5" y="1365" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="796.52" y="1375.5" ></text>
</g>
<g >
<title>code_store::schema::code_items::read_statement_t::get_data (150,701,836 samples, 0.01%)</title><rect x="457.2" y="1477" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="460.24" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (99,644,112 samples, 0.01%)</title><rect x="451.9" y="1525" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="454.88" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,060,106,292 samples, 0.30%)</title><rect x="942.1" y="53" width="3.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="945.12" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,657,143,757 samples, 0.84%)</title><rect x="1148.7" y="101" width="10.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1151.75" y="111.5" ></text>
</g>
<g >
<title>vfs_fstatat (2,197,507,147 samples, 0.21%)</title><rect x="420.4" y="1525" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="423.38" y="1535.5" ></text>
</g>
<g >
<title>path_lookupat (155,423,189 samples, 0.02%)</title><rect x="472.3" y="1413" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="475.28" y="1423.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (197,288,687 samples, 0.02%)</title><rect x="442.7" y="1445" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="445.66" y="1455.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,355,939,154 samples, 0.23%)</title><rect x="204.3" y="1317" width="2.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="207.30" y="1327.5" ></text>
</g>
<g >
<title>msvc::path_utf8::filename (98,162,058 samples, 0.01%)</title><rect x="460.6" y="1477" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="463.60" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="469" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="479.5" ></text>
</g>
<g >
<title>cpptools_context::handle_parse_file (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1605" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="421.38" y="1615.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (149,403,896 samples, 0.01%)</title><rect x="476.8" y="1397" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="479.75" y="1407.5" ></text>
</g>
<g >
<title>seq_read (132,106,614 samples, 0.01%)</title><rect x="1177.2" y="1525" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1180.22" y="1535.5" ></text>
</g>
<g >
<title>vfs_fstatat (127,109,334 samples, 0.01%)</title><rect x="478.9" y="1541" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="481.95" y="1551.5" ></text>
</g>
<g >
<title>filename_lookup (3,590,285,271 samples, 0.35%)</title><rect x="472.8" y="1461" width="4.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="475.80" y="1471.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (98,685,359 samples, 0.01%)</title><rect x="423.2" y="1445" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="426.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,375,098,821 samples, 0.62%)</title><rect x="982.7" y="101" width="7.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="985.66" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="245" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="255.5" ></text>
</g>
<g >
<title>mod_memcg_state (132,261,039 samples, 0.01%)</title><rect x="509.8" y="1317" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="512.77" y="1327.5" ></text>
</g>
<g >
<title>[bash] (244,833,517 samples, 0.02%)</title><rect x="1181.9" y="1365" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.94" y="1375.5" ></text>
</g>
<g >
<title>iterate_dir (258,970,766 samples, 0.03%)</title><rect x="423.3" y="1493" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="426.35" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (317,405,121 samples, 0.03%)</title><rect x="1189.6" y="1493" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.63" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="741" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="751.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (103,851,409 samples, 0.01%)</title><rect x="84.8" y="1397" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="87.84" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1461" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (24,436,244,401 samples, 2.38%)</title><rect x="917.5" y="69" width="28.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.53" y="79.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="677" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,114,528 samples, 0.01%)</title><rect x="600.3" y="933" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="603.32" y="943.5" ></text>
</g>
<g >
<title>do_mas_munmap (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1077" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="492.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="453" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="277" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="287.5" ></text>
</g>
<g >
<title>vfs_read (6,035,305,588 samples, 0.59%)</title><rect x="806.7" y="1509" width="7.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="809.75" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="805" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="815.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="933" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (200,702,020 samples, 0.02%)</title><rect x="863.2" y="37" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="866.17" y="47.5" ></text>
</g>
<g >
<title>get_page_from_freelist (201,067,410 samples, 0.02%)</title><rect x="281.8" y="1221" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="284.79" y="1231.5" ></text>
</g>
<g >
<title>CExtStore::GetFiles (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1541" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="420.92" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="565" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="869" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="879.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1493" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="757" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="767.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1,757,549,501 samples, 0.17%)</title><rect x="335.8" y="1237" width="2.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="338.79" y="1247.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (95,382,822 samples, 0.01%)</title><rect x="522.6" y="1445" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="525.55" y="1455.5" ></text>
</g>
<g >
<title>unlink (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1557" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="93.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="437" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,126,722,648 samples, 0.60%)</title><rect x="1141.7" y="69" width="7.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (641,097,774 samples, 0.06%)</title><rect x="423.1" y="1573" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="426.14" y="1583.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (150,863,587 samples, 0.01%)</title><rect x="377.6" y="1285" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="380.61" y="1295.5" ></text>
</g>
<g >
<title>exit_mmap (1,578,986,059 samples, 0.15%)</title><rect x="513.0" y="1413" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="515.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1157" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="437" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="447.5" ></text>
</g>
<g >
<title>cpp_properties::provide_args (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1525" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="467.77" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (445,375,276 samples, 0.04%)</title><rect x="486.1" y="1557" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="489.12" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,668,425 samples, 0.01%)</title><rect x="785.1" y="1525" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="788.12" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1013" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1023.5" ></text>
</g>
<g >
<title>_start (1,206,367,646 samples, 0.12%)</title><rect x="1181.3" y="1621" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1184.32" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,459,423 samples, 0.01%)</title><rect x="1173.8" y="1605" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.84" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,011,327 samples, 0.03%)</title><rect x="649.0" y="405" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="651.99" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="645" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (244,833,517 samples, 0.02%)</title><rect x="1181.9" y="1381" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.94" y="1391.5" ></text>
</g>
<g >
<title>ovl_iterate (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1237" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.40" y="1247.5" ></text>
</g>
<g >
<title>tid_fd_revalidate (96,136,182 samples, 0.01%)</title><rect x="489.6" y="1365" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="492.62" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="853" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1109" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1119.5" ></text>
</g>
<g >
<title>sqlite3WalkSelect.part.0 (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1429" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="420.75" y="1439.5" ></text>
</g>
<g >
<title>security_inode_getattr (602,657,665 samples, 0.06%)</title><rect x="801.6" y="1397" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="804.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,435,084 samples, 0.10%)</title><rect x="675.2" y="613" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="678.20" y="623.5" ></text>
</g>
<g >
<title>step_into (100,311,292 samples, 0.01%)</title><rect x="799.3" y="1397" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="802.33" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (401,799,336 samples, 0.04%)</title><rect x="727.0" y="1013" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="729.98" y="1023.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (95,275,831 samples, 0.01%)</title><rect x="484.1" y="1509" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="487.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="901" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="911.5" ></text>
</g>
<g >
<title>seq_read (144,195,785 samples, 0.01%)</title><rect x="1171.1" y="1429" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1174.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (652,993,739 samples, 0.06%)</title><rect x="814.6" y="117" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.61" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1317" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.79" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="325" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="335.5" ></text>
</g>
<g >
<title>generic_write_checks (251,362,526 samples, 0.02%)</title><rect x="250.9" y="1349" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="253.90" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="485" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="495.5" ></text>
</g>
<g >
<title>path_lookupat (243,477,964 samples, 0.02%)</title><rect x="489.5" y="1413" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="492.48" y="1423.5" ></text>
</g>
<g >
<title>perf (1,956,520,003 samples, 0.19%)</title><rect x="1174.6" y="1637" width="2.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1177.62" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="277" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="287.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>sqlite3RunParser (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1461" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.30" y="1471.5" ></text>
</g>
<g >
<title>__get_task_ioprio (501,860,358 samples, 0.05%)</title><rect x="223.8" y="1461" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="226.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1509" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1519.5" ></text>
</g>
<g >
<title>malloc (301,131,362 samples, 0.03%)</title><rect x="649.7" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="652.69" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="661" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="671.5" ></text>
</g>
<g >
<title>[ls] (92,395,121 samples, 0.01%)</title><rect x="508.9" y="1573" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="511.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,658,125,139 samples, 1.33%)</title><rect x="945.6" y="101" width="15.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="948.64" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="645" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="655.5" ></text>
</g>
<g >
<title>malloc (1,168,159,887 samples, 0.11%)</title><rect x="742.2" y="1125" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="745.23" y="1135.5" ></text>
</g>
<g >
<title>Glob::isIgnored (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1557" width="4.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="570.62" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1077" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1087.5" ></text>
</g>
<g >
<title>[libc.so.6] (970,486,414 samples, 0.09%)</title><rect x="466.4" y="1541" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.44" y="1551.5" ></text>
</g>
<g >
<title>do_iter_write (130,525,978,211 samples, 12.72%)</title><rect x="242.0" y="1429" width="150.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="245.00" y="1439.5" >do_iter_write</text>
</g>
<g >
<title>xas_load (1,454,519,992 samples, 0.14%)</title><rect x="67.6" y="1317" width="1.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="70.56" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1285" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1295.5" ></text>
</g>
<g >
<title>unmap_page_range (268,487,058 samples, 0.03%)</title><rect x="1179.1" y="1365" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1182.11" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,924,369,539 samples, 16.27%)</title><rect x="591.0" y="1429" width="192.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="594.01" y="1439.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>[libc.so.6] (388,890,641 samples, 0.04%)</title><rect x="490.1" y="1445" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.13" y="1455.5" ></text>
</g>
<g >
<title>do_epoll_wait (97,994,577 samples, 0.01%)</title><rect x="1167.5" y="1525" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1170.47" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,733,389,240 samples, 0.46%)</title><rect x="472.5" y="1557" width="5.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="475.49" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (119,504,338 samples, 0.01%)</title><rect x="488.1" y="1493" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="491.09" y="1503.5" ></text>
</g>
<g >
<title>__kmalloc_node (194,622,818 samples, 0.02%)</title><rect x="479.5" y="1477" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="482.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="533" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="543.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>malloc (148,875,993 samples, 0.01%)</title><rect x="785.3" y="1525" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="788.29" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (751,947,056 samples, 0.07%)</title><rect x="783.9" y="1509" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="786.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="197" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="207.5" ></text>
</g>
<g >
<title>[git] (3,122,801,189 samples, 0.30%)</title><rect x="468.1" y="1445" width="3.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.10" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,767,898,356 samples, 0.17%)</title><rect x="1169.5" y="1605" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1172.47" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1525" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.75" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="741" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="751.5" ></text>
</g>
<g >
<title>filemap_add_folio (750,959,986 samples, 0.07%)</title><rect x="280.9" y="1285" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="283.87" y="1295.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (290,464,632 samples, 0.03%)</title><rect x="521.6" y="1557" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="524.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,646,944 samples, 0.04%)</title><rect x="596.6" y="1125" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="599.57" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (98,726,025 samples, 0.01%)</title><rect x="322.8" y="1205" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="325.75" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,762,200,869 samples, 0.17%)</title><rect x="671.6" y="613" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="674.57" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1429" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1301" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.79" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="613" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="623.5" ></text>
</g>
<g >
<title>proc_readfd (132,053,223 samples, 0.01%)</title><rect x="1181.8" y="1301" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1184.75" y="1311.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (6,729,510,346 samples, 0.66%)</title><rect x="457.0" y="1525" width="7.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="459.97" y="1535.5" ></text>
</g>
<g >
<title>cfree (2,003,987,645 samples, 0.20%)</title><rect x="620.8" y="245" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="623.79" y="255.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,962,112,971 samples, 0.29%)</title><rect x="175.1" y="1333" width="3.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="178.09" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (2,405,991,042 samples, 0.23%)</title><rect x="424.0" y="1557" width="2.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="427.05" y="1567.5" ></text>
</g>
<g >
<title>cfree (2,411,180,614 samples, 0.23%)</title><rect x="748.4" y="1205" width="2.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="751.39" y="1215.5" ></text>
</g>
<g >
<title>try_charge_memcg (87,474,292 samples, 0.01%)</title><rect x="479.6" y="1429" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="482.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="389" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="399.5" ></text>
</g>
<g >
<title>__mmput (310,788,856 samples, 0.03%)</title><rect x="467.6" y="1509" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="470.64" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (146,641,736 samples, 0.01%)</title><rect x="478.4" y="1621" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="481.38" y="1631.5" ></text>
</g>
<g >
<title>sqlite3Prepare (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1493" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="420.75" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="949" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,461,891,565 samples, 2.77%)</title><rect x="610.2" y="405" width="32.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="613.20" y="415.5" >st..</text>
</g>
<g >
<title>sccp (494,729,541 samples, 0.05%)</title><rect x="455.4" y="1621" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="458.43" y="1631.5" ></text>
</g>
<g >
<title>bprm_execve (236,105,163 samples, 0.02%)</title><rect x="1182.8" y="1557" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1185.82" y="1567.5" ></text>
</g>
<g >
<title>mas_store (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1477" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="513.67" y="1487.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (183,912,765 samples, 0.02%)</title><rect x="489.1" y="1301" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.10" y="1311.5" ></text>
</g>
<g >
<title>malloc (251,711,081 samples, 0.02%)</title><rect x="745.2" y="1109" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="748.21" y="1119.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (274,068,655 samples, 0.03%)</title><rect x="1169.6" y="1509" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1172.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="597" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="607.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (201,370,974 samples, 0.02%)</title><rect x="167.4" y="1333" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="170.36" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,131,951,594 samples, 2.06%)</title><rect x="610.8" y="357" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="613.78" y="367.5" >s..</text>
</g>
<g >
<title>page_remove_rmap (220,488,936 samples, 0.02%)</title><rect x="514.3" y="1317" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="517.29" y="1327.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (364,985,104 samples, 0.04%)</title><rect x="50.3" y="1445" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="53.31" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (168,629,361 samples, 0.02%)</title><rect x="1183.8" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1477" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1487.5" ></text>
</g>
<g >
<title>OSSL_DECODER_is_a (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1333" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="568.30" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt;, std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; &gt;, std::allocator&lt;std::pair&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_unique&lt;code_store::record_id_t&lt;code_store::file_tag_t&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (98,749,005 samples, 0.01%)</title><rect x="462.5" y="1477" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="465.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1477" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (191,069,811 samples, 0.02%)</title><rect x="452.1" y="1605" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="455.05" y="1615.5" ></text>
</g>
<g >
<title>[bash] (122,755,078 samples, 0.01%)</title><rect x="1181.9" y="1317" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1029" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1039.5" ></text>
</g>
<g >
<title>copy_present_pte (328,453,511 samples, 0.03%)</title><rect x="564.7" y="1269" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="567.66" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (291,280,626 samples, 0.03%)</title><rect x="478.0" y="1525" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1535.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (236,105,163 samples, 0.02%)</title><rect x="1182.8" y="1573" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1185.82" y="1583.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1,093,995,801 samples, 0.11%)</title><rect x="49.1" y="1429" width="1.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="52.06" y="1439.5" ></text>
</g>
<g >
<title>ep_send_events (150,233,943 samples, 0.01%)</title><rect x="511.0" y="1525" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="514.05" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="389" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="399.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (215,660,641 samples, 0.02%)</title><rect x="1183.3" y="1525" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.31" y="1535.5" ></text>
</g>
<g >
<title>up_write (1,658,272,967 samples, 0.16%)</title><rect x="385.7" y="1365" width="1.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="388.70" y="1375.5" ></text>
</g>
<g >
<title>__mmput (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1429" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1176.96" y="1439.5" ></text>
</g>
<g >
<title>cfree (2,006,971,848 samples, 0.20%)</title><rect x="671.3" y="629" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="674.29" y="639.5" ></text>
</g>
<g >
<title>operator new (100,739,151 samples, 0.01%)</title><rect x="735.4" y="1061" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="738.42" y="1071.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectGetOwnPropertyDescriptors (93,708,489 samples, 0.01%)</title><rect x="565.7" y="1589" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="568.71" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="421" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1301" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1311.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobWorker::Run (324,788,121 samples, 0.03%)</title><rect x="1169.9" y="1573" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1172.89" y="1583.5" ></text>
</g>
<g >
<title>shell_glob_filename (273,171,413 samples, 0.03%)</title><rect x="1181.6" y="1445" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1184.63" y="1455.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1541" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="420.30" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (200,512,767 samples, 0.02%)</title><rect x="701.2" y="821" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="704.17" y="831.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (788,586,886 samples, 0.08%)</title><rect x="419.1" y="1557" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="422.12" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1589" width="2.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1174.64" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1061" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,155,151,635 samples, 0.11%)</title><rect x="666.2" y="565" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="669.20" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="453" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="463.5" ></text>
</g>
<g >
<title>__xstat64 (15,166,290,717 samples, 1.48%)</title><rect x="785.9" y="1557" width="17.4" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="788.87" y="1567.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (149,880,295 samples, 0.01%)</title><rect x="403.3" y="1493" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="406.33" y="1503.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (311,068,069 samples, 0.03%)</title><rect x="75.8" y="1413" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="78.84" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="357" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (616,144,290 samples, 0.06%)</title><rect x="485.0" y="1381" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="487.95" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (980,064,273 samples, 0.10%)</title><rect x="1175.6" y="1477" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.64" y="1487.5" ></text>
</g>
<g >
<title>[bash] (292,789,686 samples, 0.03%)</title><rect x="1181.9" y="1413" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.94" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_read (206,486,727 samples, 0.02%)</title><rect x="24.3" y="1525" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="27.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1445" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_openat (204,852,393 samples, 0.02%)</title><rect x="484.0" y="1573" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="487.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,768,057 samples, 0.01%)</title><rect x="850.5" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="79.5" ></text>
</g>
<g >
<title>copy_present_pte (342,086,745 samples, 0.03%)</title><rect x="510.3" y="1413" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="513.28" y="1423.5" ></text>
</g>
<g >
<title>node::IsConstructCallCallback (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1541" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="565.54" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1461" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1471.5" ></text>
</g>
<g >
<title>getgrgid_r (252,377,854 samples, 0.02%)</title><rect x="489.0" y="1509" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="492.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (754,084,903 samples, 0.07%)</title><rect x="624.5" y="245" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="627.48" y="255.5" ></text>
</g>
<g >
<title>filename_lookup (2,138,869,853 samples, 0.21%)</title><rect x="424.2" y="1509" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="427.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1509" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1519.5" ></text>
</g>
<g >
<title>dput (309,744,797 samples, 0.03%)</title><rect x="82.4" y="1397" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="85.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,202,898,922 samples, 0.12%)</title><rect x="752.8" y="1205" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="755.80" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1269" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1279.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,706,171 samples, 0.01%)</title><rect x="614.7" y="149" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="617.66" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1077" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1087.5" ></text>
</g>
<g >
<title>page_remove_rmap (312,863,808 samples, 0.03%)</title><rect x="485.3" y="1317" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="488.27" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (138,447,630 samples, 0.01%)</title><rect x="485.9" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="488.95" y="1631.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1445" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="494.10" y="1455.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (752,089,048 samples, 0.07%)</title><rect x="349.9" y="1189" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="352.88" y="1199.5" ></text>
</g>
<g >
<title>ovl_override_creds (191,502,865 samples, 0.02%)</title><rect x="420.9" y="1413" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="423.94" y="1423.5" ></text>
</g>
<g >
<title>dup_mmap (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1349" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="566.57" y="1359.5" ></text>
</g>
<g >
<title>git (8,682,555,638 samples, 0.85%)</title><rect x="468.0" y="1637" width="10.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="471.02" y="1647.5" ></text>
</g>
<g >
<title>ASN1_item_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1509" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="568.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="933" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="965" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="975.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (156,393,369 samples, 0.02%)</title><rect x="89.7" y="1477" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="92.68" y="1487.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1477" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="518.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1173" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1183.5" ></text>
</g>
<g >
<title>inode_permission (3,265,423,089 samples, 0.32%)</title><rect x="472.9" y="1413" width="3.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="475.93" y="1423.5" ></text>
</g>
<g >
<title>ext4_inode_csum (603,457,943 samples, 0.06%)</title><rect x="344.2" y="1221" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="347.22" y="1231.5" ></text>
</g>
<g >
<title>ext4_readdir (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1173" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="473.23" y="1183.5" ></text>
</g>
<g >
<title>kvmalloc_node (194,622,818 samples, 0.02%)</title><rect x="479.5" y="1493" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="482.54" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (300,533,997 samples, 0.03%)</title><rect x="814.8" y="101" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.84" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="597" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (104,528,687 samples, 0.01%)</title><rect x="91.1" y="1157" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="94.11" y="1167.5" ></text>
</g>
<g >
<title>kernel_clone (1,291,527,872 samples, 0.13%)</title><rect x="509.4" y="1541" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="512.36" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="869" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="879.5" ></text>
</g>
<g >
<title>refill_obj_stock (200,369,030 samples, 0.02%)</title><rect x="207.0" y="1317" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="210.01" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="549" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="559.5" >std::__detail::..</text>
</g>
<g >
<title>[sleep] (491,899,254 samples, 0.05%)</title><rect x="1183.6" y="1621" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1186.58" y="1631.5" ></text>
</g>
<g >
<title>ext4_da_write_end (250,957,451 samples, 0.02%)</title><rect x="249.8" y="1365" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="252.80" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1605" width="8.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1161.88" y="1615.5" ></text>
</g>
<g >
<title>aa_file_perm (207,479,430 samples, 0.02%)</title><rect x="70.3" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="73.30" y="1391.5" ></text>
</g>
<g >
<title>operator delete (100,714,573 samples, 0.01%)</title><rect x="655.0" y="501" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="658.00" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="405" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="117" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1029" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1039.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (465,305,108 samples, 0.05%)</title><rect x="441.6" y="1557" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="444.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="309" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="319.5" ></text>
</g>
<g >
<title>mod_objcg_state (401,620,463 samples, 0.04%)</title><rect x="178.5" y="1349" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="181.49" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1045" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="997" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1007.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[grep] (227,975,949 samples, 0.02%)</title><rect x="487.6" y="1621" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="490.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,158,346,156 samples, 0.89%)</title><rect x="990.2" y="69" width="10.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1461" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1471.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>tcp_recvmsg (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1413" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1171.75" y="1423.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (33,667,848,101 samples, 3.28%)</title><rect x="325.0" y="1269" width="38.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="328.00" y="1279.5" >ext..</text>
</g>
<g >
<title>add_wait_queue (500,731,387 samples, 0.05%)</title><rect x="807.6" y="1477" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="810.56" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1397" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1407.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (502,803,921 samples, 0.05%)</title><rect x="303.7" y="1237" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="306.66" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1397" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.39" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="661" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="671.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="277" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (214,609,103 samples, 0.02%)</title><rect x="1179.8" y="1525" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1182.76" y="1535.5" ></text>
</g>
<g >
<title>_dl_catch_exception (183,912,765 samples, 0.02%)</title><rect x="489.1" y="1317" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.10" y="1327.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (201,907,196,186 samples, 19.68%)</title><rect x="572.5" y="1573" width="232.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="575.52" y="1583.5" >InotifyBackend::handleSubscrip..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1237" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1247.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>apparmor_file_permission (1,299,896,328 samples, 0.13%)</title><rect x="75.1" y="1429" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="78.12" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_clone (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1589" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="515.82" y="1599.5" ></text>
</g>
<g >
<title>operator new (350,352,315 samples, 0.03%)</title><rect x="784.4" y="1493" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="787.37" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1493" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1503.5" >std::__detail::..</text>
</g>
<g >
<title>ext4_nonda_switch (250,801,456 samples, 0.02%)</title><rect x="273.2" y="1333" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="276.25" y="1343.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (92,222,236 samples, 0.01%)</title><rect x="1176.4" y="1221" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1179.36" y="1231.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (561,210,683 samples, 0.05%)</title><rect x="804.1" y="1541" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="807.07" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1205" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1215.5" >std::__detail::..</text>
</g>
<g >
<title>search_binary_handler (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1509" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1176.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (852,927,635 samples, 0.08%)</title><rect x="633.3" y="309" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="636.29" y="319.5" ></text>
</g>
<g >
<title>alloc_pages (94,686,113 samples, 0.01%)</title><rect x="509.5" y="1413" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="512.52" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1301" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1311.5" ></text>
</g>
<g >
<title>search_binary_handler (233,210,568 samples, 0.02%)</title><rect x="1182.8" y="1509" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1185.82" y="1519.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (201,209,393 samples, 0.02%)</title><rect x="324.2" y="1269" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="327.19" y="1279.5" ></text>
</g>
<g >
<title>operator new (452,598,661 samples, 0.04%)</title><rect x="851.4" y="85" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="854.45" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,944,144 samples, 0.01%)</title><rect x="751.0" y="1173" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="753.99" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,531,379 samples, 0.07%)</title><rect x="1140.5" y="85" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1143.55" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,296,491,810 samples, 0.81%)</title><rect x="755.6" y="1285" width="9.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="758.63" y="1295.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1509" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="519.11" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (215,660,641 samples, 0.02%)</title><rect x="1183.3" y="1477" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.31" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1189" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="853" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="863.5" ></text>
</g>
<g >
<title>lookup_fast (95,275,831 samples, 0.01%)</title><rect x="484.1" y="1477" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="487.06" y="1487.5" ></text>
</g>
<g >
<title>__get_task_ioprio (312,510,369 samples, 0.03%)</title><rect x="29.4" y="1477" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="32.40" y="1487.5" ></text>
</g>
<g >
<title>page_copy_sane (260,672,154 samples, 0.03%)</title><rect x="62.7" y="1333" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="65.68" y="1343.5" ></text>
</g>
<g >
<title>bprm_execve (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1557" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="487.82" y="1567.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (100,717,419 samples, 0.01%)</title><rect x="211.6" y="1349" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="214.55" y="1359.5" ></text>
</g>
<g >
<title>map_id_up (551,867,724 samples, 0.05%)</title><rect x="360.6" y="1205" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="363.60" y="1215.5" ></text>
</g>
<g >
<title>cfree (150,890,028 samples, 0.01%)</title><rect x="826.8" y="101" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="829.75" y="111.5" ></text>
</g>
<g >
<title>override_creds (191,502,865 samples, 0.02%)</title><rect x="420.9" y="1397" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="423.94" y="1407.5" ></text>
</g>
<g >
<title>exec_mmap (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1461" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="454.59" y="1471.5" ></text>
</g>
<g >
<title>ovl_dir_read_merged (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1205" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="473.23" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92,530,933 samples, 0.01%)</title><rect x="464.5" y="1429" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="467.49" y="1439.5" ></text>
</g>
<g >
<title>_copy_to_user (99,864,771 samples, 0.01%)</title><rect x="809.5" y="1461" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="812.52" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="517" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="527.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (295,386,810 samples, 0.03%)</title><rect x="1169.5" y="1573" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1172.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="181" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1221" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1231.5" ></text>
</g>
<g >
<title>do_iter_write (149,952,374 samples, 0.01%)</title><rect x="228.9" y="1445" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="231.90" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="725" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="735.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__x64_sys_pread64 (445,362,636 samples, 0.04%)</title><rect x="455.4" y="1573" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="458.43" y="1583.5" ></text>
</g>
<g >
<title>do_iter_read (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1509" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="458.55" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="357" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (630,170,256 samples, 0.06%)</title><rect x="423.1" y="1557" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="426.14" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="389" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="399.5" ></text>
</g>
<g >
<title>ext4_file_getattr (400,960,888 samples, 0.04%)</title><rect x="802.5" y="1381" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="805.50" y="1391.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (249,455,295 samples, 0.02%)</title><rect x="324.4" y="1269" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="327.42" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,305,383,810 samples, 0.13%)</title><rect x="818.4" y="133" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="821.43" y="143.5" ></text>
</g>
<g >
<title>atime_needs_update (1,866,929,130 samples, 0.18%)</title><rect x="43.6" y="1413" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="46.56" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1301" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="474.21" y="1311.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (105,631,594 samples, 0.01%)</title><rect x="1176.6" y="1237" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1179.57" y="1247.5" ></text>
</g>
<g >
<title>__fdget_pos (208,906,619 samples, 0.02%)</title><rect x="24.9" y="1493" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="27.93" y="1503.5" ></text>
</g>
<g >
<title>inotify_read (5,427,964,251 samples, 0.53%)</title><rect x="807.1" y="1493" width="6.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="810.15" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (15,053,490,482 samples, 1.47%)</title><rect x="269.4" y="1349" width="17.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="272.43" y="1359.5" ></text>
</g>
<g >
<title>get_meta (1,273,470,103 samples, 0.12%)</title><rect x="452.3" y="1621" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="455.27" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="261" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="271.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (122,466,712 samples, 0.01%)</title><rect x="1185.5" y="1621" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1188.45" y="1631.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12,083,377,177 samples, 1.18%)</title><rect x="363.7" y="1269" width="13.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="366.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (122,043,145,218 samples, 11.89%)</title><rect x="596.2" y="1157" width="140.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="599.22" y="1167.5" >std::__detail::_E..</text>
</g>
<g >
<title>parse_and_execute (969,179,473 samples, 0.09%)</title><rect x="1181.3" y="1541" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1184.32" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="549" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1125" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1135.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1493" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="465.78" y="1503.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (200,044,047 samples, 0.02%)</title><rect x="263.9" y="1349" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="266.87" y="1359.5" ></text>
</g>
<g >
<title>operator new (351,676,568 samples, 0.03%)</title><rect x="567.2" y="101" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="570.16" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1029" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,530,947,308 samples, 0.73%)</title><rect x="650.5" y="517" width="8.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="653.49" y="527.5" ></text>
</g>
<g >
<title>mas_alloc_nodes (98,684,737 samples, 0.01%)</title><rect x="442.9" y="1493" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="445.95" y="1503.5" ></text>
</g>
<g >
<title>malloc (1,504,848,587 samples, 0.15%)</title><rect x="655.2" y="485" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="658.17" y="495.5" ></text>
</g>
<g >
<title>fsnotify (150,746,717 samples, 0.01%)</title><rect x="224.8" y="1461" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="227.80" y="1471.5" ></text>
</g>
<g >
<title>ovl_read_iter (26,665,604,927 samples, 2.60%)</title><rect x="41.4" y="1461" width="30.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="44.36" y="1471.5" >ov..</text>
</g>
<g >
<title>__slab_free (401,635,904 samples, 0.04%)</title><rect x="812.1" y="1413" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="815.12" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="789" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="799.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (312,613,240 samples, 0.03%)</title><rect x="90.3" y="1525" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="93.27" y="1535.5" ></text>
</g>
<g >
<title>mmput (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1525" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="518.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1061" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1237" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1247.5" ></text>
</g>
<g >
<title>_dl_catch_exception (215,660,641 samples, 0.02%)</title><rect x="1183.3" y="1541" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1186.31" y="1551.5" ></text>
</g>
<g >
<title>__fget_light (154,969,484 samples, 0.02%)</title><rect x="29.2" y="1477" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="32.17" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (336,818,704 samples, 0.03%)</title><rect x="516.4" y="1509" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="519.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,169,308,566 samples, 0.41%)</title><rect x="823.7" y="149" width="4.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="159.5" ></text>
</g>
<g >
<title>vfs_fstatat (4,613,006,307 samples, 0.45%)</title><rect x="472.6" y="1493" width="5.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="475.63" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="805" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (198,639,752 samples, 0.02%)</title><rect x="464.0" y="1397" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="466.98" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,405,991,042 samples, 0.23%)</title><rect x="424.0" y="1573" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="427.05" y="1583.5" ></text>
</g>
<g >
<title>mmput (723,974,279 samples, 0.07%)</title><rect x="484.8" y="1445" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="487.83" y="1455.5" ></text>
</g>
<g >
<title>generic_write_end (81,627,278,439 samples, 7.96%)</title><rect x="287.3" y="1333" width="93.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="290.32" y="1343.5" >generic_wri..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,158,346,156 samples, 0.89%)</title><rect x="990.2" y="85" width="10.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="95.5" ></text>
</g>
<g >
<title>bprm_execve (1,784,267,804 samples, 0.17%)</title><rect x="513.0" y="1557" width="2.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="515.95" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="773" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="783.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::create_statement (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1493" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="420.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1013" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="789" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="799.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1125" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1135.5" ></text>
</g>
<g >
<title>glob_vector (209,562,664 samples, 0.02%)</title><rect x="1181.7" y="1413" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1184.67" y="1423.5" ></text>
</g>
<g >
<title>__wake_up_common (402,027,581 samples, 0.04%)</title><rect x="319.6" y="1205" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="322.58" y="1215.5" ></text>
</g>
<g >
<title>_dl_catch_error (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1413" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="492.08" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1365" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1375.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="805" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="405" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,129,440 samples, 0.01%)</title><rect x="602.9" y="805" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="605.92" y="815.5" ></text>
</g>
<g >
<title>walk_component (246,019,226 samples, 0.02%)</title><rect x="426.1" y="1461" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="429.08" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1253" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="473.23" y="1263.5" ></text>
</g>
<g >
<title>try_to_wake_up (145,454,108 samples, 0.01%)</title><rect x="447.1" y="1509" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="450.13" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,758,118 samples, 0.01%)</title><rect x="613.1" y="229" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="616.10" y="239.5" ></text>
</g>
<g >
<title>ext4_readdir (236,629,477 samples, 0.02%)</title><rect x="470.8" y="1205" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="473.82" y="1215.5" ></text>
</g>
<g >
<title>strncpy_from_user (100,322,793 samples, 0.01%)</title><rect x="426.6" y="1477" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="429.65" y="1487.5" ></text>
</g>
<g >
<title>ovl_dir_read_merged (198,893,336 samples, 0.02%)</title><rect x="470.4" y="1221" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="473.43" y="1231.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (2,059,889,824 samples, 0.20%)</title><rect x="270.9" y="1333" width="2.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="273.88" y="1343.5" ></text>
</g>
<g >
<title>vfs_read (91,020,590 samples, 0.01%)</title><rect x="484.3" y="1541" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="487.29" y="1551.5" ></text>
</g>
<g >
<title>ovl_d_real (416,652,545 samples, 0.04%)</title><rect x="47.9" y="1429" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="50.92" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (653,372,059 samples, 0.06%)</title><rect x="684.1" y="693" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="687.11" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="517" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,003,497,657 samples, 0.10%)</title><rect x="632.1" y="277" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="635.14" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (605,221,230 samples, 0.06%)</title><rect x="676.4" y="629" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="679.36" y="639.5" ></text>
</g>
<g >
<title>from_kgid (200,095,486 samples, 0.02%)</title><rect x="362.4" y="1237" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="365.45" y="1247.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (125,750,607,952 samples, 12.26%)</title><rect x="244.4" y="1397" width="144.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="247.38" y="1407.5" >ext4_file_write_iter</text>
</g>
<g >
<title>main (341,563,447,618 samples, 33.29%)</title><rect x="11.6" y="1573" width="392.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.63" y="1583.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="661" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1525" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1535.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1509" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1171.04" y="1519.5" ></text>
</g>
<g >
<title>cfree (2,010,718,196 samples, 0.20%)</title><rect x="758.4" y="1269" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="761.42" y="1279.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (201,060,324 samples, 0.02%)</title><rect x="251.2" y="1365" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="254.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="437" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="447.5" ></text>
</g>
<g >
<title>dget_parent (1,804,951,049 samples, 0.18%)</title><rect x="121.3" y="1445" width="2.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="124.31" y="1455.5" ></text>
</g>
<g >
<title>[expr] (1,159,579,250 samples, 0.11%)</title><rect x="466.2" y="1573" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="469.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="453" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="463.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[libc.so.6] (1,507,512,156 samples, 0.15%)</title><rect x="712.9" y="933" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="715.89" y="943.5" ></text>
</g>
<g >
<title>[ls] (2,139,170,976 samples, 0.21%)</title><rect x="488.8" y="1573" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="491.78" y="1583.5" ></text>
</g>
<g >
<title>__unlock (2,636,908,766 samples, 0.26%)</title><rect x="444.3" y="1621" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="447.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1317" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1327.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1509" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1182.62" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,002,697,376 samples, 0.10%)</title><rect x="484.8" y="1605" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="487.80" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="677" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="687.5" ></text>
</g>
<g >
<title>operator new (249,845,877 samples, 0.02%)</title><rect x="764.4" y="1253" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="767.42" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock (100,717,419 samples, 0.01%)</title><rect x="211.6" y="1365" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="214.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,574,362 samples, 0.02%)</title><rect x="566.5" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="127.5" ></text>
</g>
<g >
<title>do_statx (101,358,042 samples, 0.01%)</title><rect x="488.7" y="1557" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="491.66" y="1567.5" ></text>
</g>
<g >
<title>fault_in_readable (2,161,593,112 samples, 0.21%)</title><rect x="382.0" y="1333" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="385.00" y="1343.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (119,504,338 samples, 0.01%)</title><rect x="488.1" y="1509" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="491.09" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,743,388 samples, 0.01%)</title><rect x="677.2" y="661" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="680.23" y="671.5" ></text>
</g>
<g >
<title>v8::internal::IncrementalMarkingJob::Task::RunInternal (184,954,282 samples, 0.02%)</title><rect x="1167.6" y="1525" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1170.63" y="1535.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (130,690,016 samples, 0.01%)</title><rect x="522.7" y="1461" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="525.67" y="1471.5" ></text>
</g>
<g >
<title>fstatat64 (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1541" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="475.27" y="1551.5" ></text>
</g>
<g >
<title>arch_call_rest_init (266,804,653 samples, 0.03%)</title><rect x="486.8" y="1573" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="489.81" y="1583.5" ></text>
</g>
<g >
<title>do_idle (3,259,286,935 samples, 0.32%)</title><rect x="1185.9" y="1573" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.88" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1541" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1551.5" >std::__detail::..</text>
</g>
<g >
<title>current_time (156,544,569 samples, 0.02%)</title><rect x="45.7" y="1413" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="48.71" y="1423.5" ></text>
</g>
<g >
<title>lockref_put_return (1,191,970,343 samples, 0.12%)</title><rect x="85.0" y="1397" width="1.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="87.96" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (220,107,779 samples, 0.02%)</title><rect x="486.8" y="1493" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="489.81" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="773" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="783.5" ></text>
</g>
<g >
<title>ext4_do_writepages (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1429" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="519.11" y="1439.5" ></text>
</g>
<g >
<title>try_to_unlazy (349,629,519 samples, 0.03%)</title><rect x="788.7" y="1397" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="791.67" y="1407.5" ></text>
</g>
<g >
<title>sqlite3SelectPrep (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1445" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="420.75" y="1455.5" ></text>
</g>
<g >
<title>sock_recvmsg (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1445" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1171.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1573" width="5.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="826.69" y="1583.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (100,748,271 samples, 0.01%)</title><rect x="324.7" y="1269" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="327.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.70" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1237" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,522,246,362 samples, 0.34%)</title><rect x="1158.9" y="133" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="143.5" ></text>
</g>
<g >
<title>operator new (1,605,145,715 samples, 0.16%)</title><rect x="697.7" y="821" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="700.68" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1397" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1093" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1413" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1423.5" ></text>
</g>
<g >
<title>copy_process (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1541" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="515.82" y="1551.5" ></text>
</g>
<g >
<title>mmap_region (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1093" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="492.15" y="1103.5" ></text>
</g>
<g >
<title>filename_lookup (1,244,174,940 samples, 0.12%)</title><rect x="420.6" y="1493" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="423.60" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (151,044,506 samples, 0.01%)</title><rect x="331.8" y="1253" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="334.80" y="1263.5" ></text>
</g>
<g >
<title>load_elf_binary (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1493" width="1.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="487.82" y="1503.5" ></text>
</g>
<g >
<title>cfree (45,120,779,868 samples, 4.40%)</title><rect x="865.6" y="101" width="51.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="868.65" y="111.5" >cfree</text>
</g>
<g >
<title>Builtins_JSBuiltinsConstructStub (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1605" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="565.54" y="1615.5" ></text>
</g>
<g >
<title>[git] (3,246,330,122 samples, 0.32%)</title><rect x="468.1" y="1461" width="3.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1471.5" ></text>
</g>
<g >
<title>__brelse (1,806,255,434 samples, 0.18%)</title><rect x="327.9" y="1253" width="2.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="330.93" y="1263.5" ></text>
</g>
<g >
<title>malloc (503,089,648 samples, 0.05%)</title><rect x="1149.9" y="69" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1152.90" y="79.5" ></text>
</g>
<g >
<title>ksys_read (91,020,590 samples, 0.01%)</title><rect x="484.3" y="1557" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="487.29" y="1567.5" ></text>
</g>
<g >
<title>from_kgid (603,699,123 samples, 0.06%)</title><rect x="359.2" y="1221" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="362.16" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="517" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="527.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,759,124 samples, 0.01%)</title><rect x="710.4" y="949" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="713.40" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="549" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,124,705 samples, 0.01%)</title><rect x="657.5" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="660.54" y="479.5" ></text>
</g>
<g >
<title>workspace_folder_context::is_file_excluded (1,087,496,774 samples, 0.11%)</title><rect x="463.5" y="1509" width="1.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="466.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="885" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="895.5" ></text>
</g>
<g >
<title>kmalloc_slab (848,886,280 samples, 0.08%)</title><rect x="182.6" y="1365" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="185.60" y="1375.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1429" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="93.81" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="885" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_read (107,656,707 samples, 0.01%)</title><rect x="511.8" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="514.84" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="837" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1141" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1151.5" ></text>
</g>
<g >
<title>create_async_work (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1557" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="467.77" y="1567.5" ></text>
</g>
<g >
<title>start_this_handle (149,528,907 samples, 0.01%)</title><rect x="311.2" y="1269" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="314.22" y="1279.5" ></text>
</g>
<g >
<title>do_epoll_wait (539,725,000 samples, 0.05%)</title><rect x="510.9" y="1557" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="513.89" y="1567.5" ></text>
</g>
<g >
<title>unmap_page_range (302,246,375 samples, 0.03%)</title><rect x="467.6" y="1445" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="470.65" y="1455.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1349" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1176.96" y="1359.5" ></text>
</g>
<g >
<title>__schedule (104,026,595 samples, 0.01%)</title><rect x="486.7" y="1541" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="489.68" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (153,304,359 samples, 0.01%)</title><rect x="828.5" y="181" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="831.49" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (407,047,770 samples, 0.04%)</title><rect x="850.5" y="85" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1141" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1317" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="474.21" y="1327.5" ></text>
</g>
<g >
<title>[git] (2,536,092,995 samples, 0.25%)</title><rect x="468.2" y="1365" width="2.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.20" y="1375.5" ></text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (7,963,097,504 samples, 0.78%)</title><rect x="456.3" y="1605" width="9.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="459.34" y="1615.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (313,598,874 samples, 0.03%)</title><rect x="90.9" y="1301" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="93.87" y="1311.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (88,364,498 samples, 0.01%)</title><rect x="470.9" y="1173" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="473.93" y="1183.5" ></text>
</g>
<g >
<title>vfs_read (48,929,040,316 samples, 4.77%)</title><rect x="30.5" y="1477" width="56.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="33.54" y="1487.5" >vfs_r..</text>
</g>
<g >
<title>glob_filename (242,980,706 samples, 0.02%)</title><rect x="1181.6" y="1429" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1184.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more@plt (603,237,385 samples, 0.06%)</title><rect x="982.0" y="37" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="984.97" y="47.5" ></text>
</g>
<g >
<title>__libc_start_main (1,206,367,646 samples, 0.12%)</title><rect x="1181.3" y="1605" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1184.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1029" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1039.5" ></text>
</g>
<g >
<title>ovl_getattr (432,464,106 samples, 0.04%)</title><rect x="477.1" y="1445" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="480.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (905,216,191 samples, 0.09%)</title><rect x="570.3" y="197" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="573.33" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (95,382,822 samples, 0.01%)</title><rect x="522.6" y="1461" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="525.55" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,507,258,178 samples, 0.15%)</title><rect x="740.3" y="1125" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="743.32" y="1135.5" ></text>
</g>
<g >
<title>isolate_freepages (233,995,569 samples, 0.02%)</title><rect x="515.5" y="1493" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="518.54" y="1503.5" ></text>
</g>
<g >
<title>execute_command (127,795,238 samples, 0.01%)</title><rect x="1181.9" y="1349" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1184.94" y="1359.5" ></text>
</g>
<g >
<title>__cond_resched (151,066,913 samples, 0.01%)</title><rect x="105.5" y="1477" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="108.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1333" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="725" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="735.5" ></text>
</g>
<g >
<title>asn1_template_noexp_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1413" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="568.30" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_select (601,127,267 samples, 0.06%)</title><rect x="1188.4" y="1541" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1191.39" y="1551.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1365" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1184.39" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (873,420,859 samples, 0.09%)</title><rect x="466.5" y="1461" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.45" y="1471.5" ></text>
</g>
<g >
<title>operator new (1,104,270,528 samples, 0.11%)</title><rect x="639.5" y="373" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="642.53" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="325" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="335.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="421" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,186,134,052 samples, 0.80%)</title><rect x="659.3" y="581" width="9.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="662.27" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="981" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="991.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1509" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="420.75" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (291,280,626 samples, 0.03%)</title><rect x="478.0" y="1541" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1551.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (302,083,280 samples, 0.03%)</title><rect x="159.5" y="1349" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="162.50" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (653,340,962 samples, 0.06%)</title><rect x="567.6" y="181" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="191.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (610,825,684 samples, 0.06%)</title><rect x="1168.0" y="1397" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1171.04" y="1407.5" ></text>
</g>
<g >
<title>worker_thread (182,367,887 samples, 0.02%)</title><rect x="1179.5" y="1589" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1182.54" y="1599.5" ></text>
</g>
<g >
<title>ksys_write (969,215,467 samples, 0.09%)</title><rect x="1175.6" y="1429" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1178.65" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (92,955,487 samples, 0.01%)</title><rect x="488.0" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.98" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1605" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.64" y="1615.5" ></text>
</g>
<g >
<title>__rcu_read_lock (351,406,171 samples, 0.03%)</title><rect x="117.9" y="1445" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="120.85" y="1455.5" ></text>
</g>
<g >
<title>from_kprojid (452,204,161 samples, 0.04%)</title><rect x="359.9" y="1221" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="362.85" y="1231.5" ></text>
</g>
<g >
<title>update_blocked_averages (156,730,161 samples, 0.02%)</title><rect x="516.6" y="1413" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="519.61" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (451,204,328 samples, 0.04%)</title><rect x="709.1" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="712.13" y="895.5" ></text>
</g>
<g >
<title>xas_start (701,137,714 samples, 0.07%)</title><rect x="284.3" y="1269" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="287.27" y="1279.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (328,750,411 samples, 0.03%)</title><rect x="449.4" y="1605" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="452.36" y="1615.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (100,735,844 samples, 0.01%)</title><rect x="377.2" y="1237" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="380.21" y="1247.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1589" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="420.92" y="1599.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (328,778,889 samples, 0.03%)</title><rect x="443.5" y="1477" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="446.50" y="1487.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (98,734,319 samples, 0.01%)</title><rect x="443.4" y="1461" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="446.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="933" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="943.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1573" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="565.54" y="1583.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1477" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="475.27" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="949" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="959.5" ></text>
</g>
<g >
<title>ossl_lib_ctx_get_data (102,035,405 samples, 0.01%)</title><rect x="565.3" y="1301" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="568.33" y="1311.5" ></text>
</g>
<g >
<title>ovl_override_creds (1,334,251,682 samples, 0.13%)</title><rect x="473.7" y="1381" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="476.73" y="1391.5" ></text>
</g>
<g >
<title>ep_poll (539,266,995 samples, 0.05%)</title><rect x="510.9" y="1541" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="513.89" y="1551.5" ></text>
</g>
<g >
<title>kswapd (121,840,169 samples, 0.01%)</title><rect x="515.8" y="1589" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="518.84" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="213" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="223.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>operator new (1,116,552,593 samples, 0.11%)</title><rect x="820.0" y="149" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="823.04" y="159.5" ></text>
</g>
<g >
<title>getdents64 (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1317" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="473.40" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,704,775,603 samples, 0.17%)</title><rect x="621.1" y="229" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="624.14" y="239.5" ></text>
</g>
<g >
<title>malloc (602,818,262 samples, 0.06%)</title><rect x="647.5" y="421" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="650.49" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1429" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1439.5" ></text>
</g>
<g >
<title>ext4_da_write_end (189,842,428 samples, 0.02%)</title><rect x="1176.5" y="1285" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1179.48" y="1295.5" ></text>
</g>
<g >
<title>__rcu_read_lock (155,046,274 samples, 0.02%)</title><rect x="75.7" y="1413" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="78.66" y="1423.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1541" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="487.82" y="1551.5" ></text>
</g>
<g >
<title>mas_store_prealloc (148,602,277 samples, 0.01%)</title><rect x="441.7" y="1461" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="444.74" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="837" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="847.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>fstatat64 (191,069,811 samples, 0.02%)</title><rect x="452.1" y="1621" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="455.05" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="789" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="799.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::enumerate_files_non_recursive (145,153,754 samples, 0.01%)</title><rect x="464.8" y="1445" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="467.82" y="1455.5" ></text>
</g>
<g >
<title>iput (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1365" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="93.81" y="1375.5" ></text>
</g>
<g >
<title>xas_start (100,289,616 samples, 0.01%)</title><rect x="285.1" y="1285" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="288.07" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (88,995,637 samples, 0.01%)</title><rect x="464.5" y="1381" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="467.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="613" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="623.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1509" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="421.38" y="1519.5" ></text>
</g>
<g >
<title>begin_new_exec (295,491,117 samples, 0.03%)</title><rect x="1179.1" y="1477" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1182.08" y="1487.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (170,714,405 samples, 0.02%)</title><rect x="479.5" y="1461" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="482.54" y="1471.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (188,681,766 samples, 0.02%)</title><rect x="486.2" y="1509" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="489.20" y="1519.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (20,917,202,911 samples, 2.04%)</title><rect x="338.1" y="1237" width="24.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="341.10" y="1247.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (753,531,379 samples, 0.07%)</title><rect x="1140.5" y="149" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1143.55" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1381" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.08" y="1391.5" ></text>
</g>
<g >
<title>__schedule (467,530,172 samples, 0.05%)</title><rect x="521.9" y="1541" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="524.94" y="1551.5" ></text>
</g>
<g >
<title>do_group_exit (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1573" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="518.00" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,246,239 samples, 0.01%)</title><rect x="595.1" y="1189" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="598.12" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,749,141 samples, 0.01%)</title><rect x="773.6" y="1413" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="776.60" y="1423.5" ></text>
</g>
<g >
<title>CExtResults&lt;CExtFullCodeItemResults, CFullCodeItem, code_store::full_code_items_set, IResults&lt;CFullCodeItem&gt; &gt;::MoveNext (654,952,786 samples, 0.06%)</title><rect x="457.4" y="1493" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="460.42" y="1503.5" ></text>
</g>
<g >
<title>__wake_up_common (451,191,859 samples, 0.04%)</title><rect x="210.7" y="1333" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="213.75" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="418.78" y="1583.5" ></text>
</g>
<g >
<title>vfs_read (313,423,154 samples, 0.03%)</title><rect x="86.8" y="1493" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="89.81" y="1503.5" ></text>
</g>
<g >
<title>do_futex (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1541" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="418.78" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector@plt (705,680,214 samples, 0.07%)</title><rect x="1139.2" y="69" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1142.16" y="79.5" ></text>
</g>
<g >
<title>vfs_getattr (114,796,372 samples, 0.01%)</title><rect x="477.4" y="1429" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="480.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="341" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="351.5" ></text>
</g>
<g >
<title>copy_p4d_range (470,293,790 samples, 0.05%)</title><rect x="482.5" y="1461" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="485.46" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (300,823,574 samples, 0.03%)</title><rect x="764.8" y="1269" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="767.83" y="1279.5" ></text>
</g>
<g >
<title>walk_component (855,379,462 samples, 0.08%)</title><rect x="798.5" y="1413" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="801.46" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="965" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_execve (236,105,163 samples, 0.02%)</title><rect x="1182.8" y="1589" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1185.82" y="1599.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (203,222,189 samples, 0.02%)</title><rect x="574.8" y="1525" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="577.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="293" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="303.5" ></text>
</g>
<g >
<title>copy_pte_range (1,019,675,711 samples, 0.10%)</title><rect x="563.9" y="1285" width="1.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="566.90" y="1295.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1541" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1176.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="421" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="421" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="431.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="949" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (803,178,908 samples, 0.08%)</title><rect x="814.5" y="133" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.50" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1573" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1583.5" ></text>
</g>
<g >
<title>walk_component (1,727,980,886 samples, 0.17%)</title><rect x="796.3" y="1397" width="2.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="799.30" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (254,909,999 samples, 0.02%)</title><rect x="465.9" y="1605" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="468.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="853" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="863.5" ></text>
</g>
<g >
<title>v8::internal::IncrementalMarking::Step (138,917,418 samples, 0.01%)</title><rect x="1167.7" y="1493" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1170.68" y="1503.5" ></text>
</g>
<g >
<title>[bash] (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1397" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1157" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1167.5" >std::__detail::..</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1605" width="9.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="817.03" y="1615.5" ></text>
</g>
<g >
<title>__entry_text_start (199,687,415 samples, 0.02%)</title><rect x="785.9" y="1541" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="788.93" y="1551.5" ></text>
</g>
<g >
<title>DirTree::update (1,260,780,283 samples, 0.12%)</title><rect x="574.4" y="1557" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="577.37" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector@plt (100,770,643 samples, 0.01%)</title><rect x="634.9" y="309" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="637.91" y="319.5" ></text>
</g>
<g >
<title>__filemap_get_folio (9,177,340,658 samples, 0.89%)</title><rect x="274.6" y="1301" width="10.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="277.63" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,388,882 samples, 0.02%)</title><rect x="488.5" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="491.51" y="1599.5" ></text>
</g>
<g >
<title>mark_page_accessed (201,158,913 samples, 0.02%)</title><rect x="375.8" y="1189" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="378.77" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="933" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (713,907,347 samples, 0.07%)</title><rect x="742.8" y="1109" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="745.76" y="1119.5" ></text>
</g>
<g >
<title>wb_writeback (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1525" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="519.11" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (105,895,215 samples, 0.01%)</title><rect x="465.7" y="1621" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="468.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1541" width="4.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="570.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="917" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="927.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,004,336,929 samples, 0.10%)</title><rect x="708.0" y="885" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="710.97" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1397" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,943,972,928 samples, 7.69%)</title><rect x="602.3" y="837" width="90.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="605.29" y="847.5" >std::__det..</text>
</g>
<g >
<title>poll_freewait (104,022,599 samples, 0.01%)</title><rect x="1175.3" y="1493" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1178.31" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,355,919,970 samples, 0.13%)</title><rect x="674.8" y="629" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="677.80" y="639.5" ></text>
</g>
<g >
<title>sqlite3Prepare (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1461" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="421.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="597" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="607.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,783,866,405 samples, 1.44%)</title><rect x="1141.7" y="149" width="17.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="159.5" ></text>
</g>
<g >
<title>evict (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1461" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="93.81" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="629" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="639.5" ></text>
</g>
<g >
<title>_copy_to_iter (206,493,563 samples, 0.02%)</title><rect x="57.2" y="1349" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="60.25" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,046,886,838 samples, 0.78%)</title><rect x="814.0" y="229" width="9.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1557" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1567.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (978,112,600 samples, 0.10%)</title><rect x="786.7" y="1445" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="789.73" y="1455.5" ></text>
</g>
<g >
<title>exec_mmap (723,974,279 samples, 0.07%)</title><rect x="484.8" y="1461" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="487.83" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,371,844,365 samples, 9.39%)</title><rect x="599.7" y="965" width="110.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="602.69" y="975.5" >std::__detail..</text>
</g>
<g >
<title>__x64_sys_execve (1,784,556,553 samples, 0.17%)</title><rect x="513.0" y="1589" width="2.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="515.95" y="1599.5" ></text>
</g>
<g >
<title>__vma_adjust (553,846,347 samples, 0.05%)</title><rect x="442.3" y="1493" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="445.25" y="1503.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (199,369,217 samples, 0.02%)</title><rect x="269.2" y="1349" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="272.21" y="1359.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (201,175,695 samples, 0.02%)</title><rect x="575.6" y="1541" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="578.59" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (233,210,568 samples, 0.02%)</title><rect x="1182.8" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1185.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1061" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1071.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (395,058,397 samples, 0.04%)</title><rect x="463.0" y="1381" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="466.01" y="1391.5" ></text>
</g>
<g >
<title>begin_new_exec (1,622,239,965 samples, 0.16%)</title><rect x="513.0" y="1477" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="515.95" y="1487.5" ></text>
</g>
<g >
<title>vfs_getattr (1,305,552,044 samples, 0.13%)</title><rect x="801.5" y="1413" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="804.52" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,230,450 samples, 0.07%)</title><rect x="656.9" y="501" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="659.90" y="511.5" ></text>
</g>
<g >
<title>revert_creds (100,769,635 samples, 0.01%)</title><rect x="803.0" y="1429" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="806.02" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1397" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (125,361,562 samples, 0.01%)</title><rect x="489.8" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="492.81" y="1519.5" ></text>
</g>
<g >
<title>operator new (251,674,617 samples, 0.02%)</title><rect x="676.8" y="613" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="679.77" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,911,723,653 samples, 1.26%)</title><rect x="611.7" y="309" width="14.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="614.65" y="319.5" ></text>
</g>
<g >
<title>refill_obj_stock (2,255,254,822 samples, 0.22%)</title><rect x="204.4" y="1301" width="2.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="207.41" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (251,546,983 samples, 0.02%)</title><rect x="641.4" y="341" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="644.43" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="293" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,937,899,159 samples, 3.50%)</title><rect x="609.1" y="469" width="41.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="612.11" y="479.5" >std..</text>
</g>
<g >
<title>nontrivial_free (198,226,157 samples, 0.02%)</title><rect x="455.1" y="1621" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="458.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1285" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1093" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1103.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>ovl_override_creds (159,393,076 samples, 0.02%)</title><rect x="477.2" y="1429" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="480.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1397" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1407.5" ></text>
</g>
<g >
<title>mnt_user_ns (205,128,351 samples, 0.02%)</title><rect x="45.9" y="1413" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="48.89" y="1423.5" ></text>
</g>
<g >
<title>__cond_resched (251,090,102 samples, 0.02%)</title><rect x="335.5" y="1237" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="338.50" y="1247.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (614,004,723 samples, 0.06%)</title><rect x="485.0" y="1349" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="487.95" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="917" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="927.5" ></text>
</g>
<g >
<title>malloc (440,502,147 samples, 0.04%)</title><rect x="569.8" y="181" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="572.82" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="725" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="261" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="271.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>ovl_dentry_upper (99,767,181 samples, 0.01%)</title><rect x="254.0" y="1317" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="256.96" y="1327.5" ></text>
</g>
<g >
<title>operator new (251,013,562 samples, 0.02%)</title><rect x="700.8" y="805" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="703.77" y="815.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (151,124,228 samples, 0.01%)</title><rect x="286.2" y="1301" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="289.22" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="245" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,301,766,306 samples, 0.13%)</title><rect x="696.1" y="805" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="699.13" y="815.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (258,970,766 samples, 0.03%)</title><rect x="423.3" y="1461" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="426.35" y="1471.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (124,145,470,701 samples, 12.10%)</title><rect x="244.8" y="1381" width="142.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="247.84" y="1391.5" >ext4_buffered_writ..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="821" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="831.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,824,635 samples, 0.10%)</title><rect x="648.2" y="437" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="651.19" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1589" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="518.00" y="1599.5" ></text>
</g>
<g >
<title>ovl_real_fdget (2,058,500,644 samples, 0.20%)</title><rect x="237.3" y="1445" width="2.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="240.27" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="133" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="693" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,241,408,171 samples, 0.22%)</title><rect x="420.3" y="1573" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="423.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (651,747,322 samples, 0.06%)</title><rect x="683.2" y="677" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="686.18" y="687.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (251,722,495 samples, 0.02%)</title><rect x="362.7" y="1237" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="365.68" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (170,545,017,128 samples, 16.62%)</title><rect x="587.2" y="1509" width="196.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="590.20" y="1519.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="725" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="735.5" ></text>
</g>
<g >
<title>do_filp_open (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1525" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="429.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (774,334,846 samples, 0.08%)</title><rect x="699.5" y="821" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="702.53" y="831.5" ></text>
</g>
<g >
<title>operator new (150,104,784 samples, 0.01%)</title><rect x="781.9" y="1381" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="784.87" y="1391.5" ></text>
</g>
<g >
<title>setlocale (970,486,414 samples, 0.09%)</title><rect x="466.4" y="1557" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="469.44" y="1567.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,417,930,984 samples, 0.14%)</title><rect x="513.2" y="1381" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="516.15" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,389,324,189 samples, 0.53%)</title><rect x="994.6" y="53" width="6.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="997.56" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1381" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1541" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1551.5" ></text>
</g>
<g >
<title>sqlite3BtreeIndexMoveto (148,033,670 samples, 0.01%)</title><rect x="463.3" y="1333" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="466.29" y="1343.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,766,146,965 samples, 0.17%)</title><rect x="1171.7" y="1381" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1174.69" y="1391.5" ></text>
</g>
<g >
<title>dget_parent (2,070,082,707 samples, 0.20%)</title><rect x="80.0" y="1397" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="83.02" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (465,305,108 samples, 0.05%)</title><rect x="441.6" y="1573" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="444.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,239,693,232 samples, 8.40%)</title><rect x="602.2" y="853" width="99.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="605.23" y="863.5" >std::__detai..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="645" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (328,750,411 samples, 0.03%)</title><rect x="449.4" y="1573" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="452.36" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (290,032,092 samples, 0.03%)</title><rect x="1177.1" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1180.10" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="597" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,823,327 samples, 0.01%)</title><rect x="693.1" y="837" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="696.07" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="565" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="575.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1589" width="9.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="817.03" y="1599.5" ></text>
</g>
<g >
<title>copy_event_to_user (2,562,353,109 samples, 0.25%)</title><rect x="808.1" y="1477" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="811.13" y="1487.5" ></text>
</g>
<g >
<title>_Fork (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1477" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="566.57" y="1487.5" ></text>
</g>
<g >
<title>isolate_freepages_block (150,743,440 samples, 0.01%)</title><rect x="515.6" y="1477" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="518.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1525" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1535.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,463,720,338 samples, 12.71%)</title><rect x="595.5" y="1173" width="150.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="598.47" y="1183.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (803,874,050 samples, 0.08%)</title><rect x="667.5" y="565" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="670.53" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,605,509,274 samples, 0.16%)</title><rect x="704.1" y="869" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="707.11" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="885" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="895.5" >std::__detail::..</text>
</g>
<g >
<title>[sleep] (468,535,724 samples, 0.05%)</title><rect x="1183.6" y="1573" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1186.58" y="1583.5" ></text>
</g>
<g >
<title>__pte_alloc (250,353,062 samples, 0.02%)</title><rect x="509.7" y="1413" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="512.70" y="1423.5" ></text>
</g>
<g >
<title>folio_unlock (1,607,804,097 samples, 0.16%)</title><rect x="379.1" y="1317" width="1.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="382.05" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (280,154,635 samples, 0.03%)</title><rect x="487.9" y="1589" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.91" y="1599.5" ></text>
</g>
<g >
<title>ovl_getattr (1,757,252,734 samples, 0.17%)</title><rect x="801.0" y="1429" width="2.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="804.00" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1093" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="373" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="383.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="229" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (178,951,488 samples, 0.02%)</title><rect x="509.1" y="1589" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="512.14" y="1599.5" ></text>
</g>
<g >
<title>cpu_startup_entry (610,590,709 samples, 0.06%)</title><rect x="486.1" y="1589" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="489.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="405" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (99,803,042 samples, 0.01%)</title><rect x="244.3" y="1397" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="247.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1285" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="853" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (103,130,947,504 samples, 10.05%)</title><rect x="599.6" y="981" width="118.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="602.57" y="991.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more@plt (100,624,439 samples, 0.01%)</title><rect x="635.1" y="357" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="638.08" y="367.5" ></text>
</g>
<g >
<title>mod_objcg_state (151,092,347 samples, 0.01%)</title><rect x="812.6" y="1413" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="815.58" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1093" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1103.5" ></text>
</g>
<g >
<title>ovl_d_real (251,738,929 samples, 0.02%)</title><rect x="232.1" y="1413" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="235.08" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (418,261,229 samples, 0.04%)</title><rect x="1183.6" y="1477" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.59" y="1487.5" ></text>
</g>
<g >
<title>[bash] (117,038,279 samples, 0.01%)</title><rect x="1182.1" y="1333" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.09" y="1343.5" ></text>
</g>
<g >
<title>sync_regs (98,680,756 samples, 0.01%)</title><rect x="449.7" y="1605" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="452.74" y="1615.5" ></text>
</g>
<g >
<title>operator new (1,957,706,313 samples, 0.19%)</title><rect x="760.8" y="1269" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="763.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1253" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1263.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1589" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="420.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="965" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,730,851,882 samples, 13.72%)</title><rect x="593.8" y="1269" width="161.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="596.79" y="1279.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1573" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="420.41" y="1583.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1,178,002,957 samples, 0.11%)</title><rect x="1175.5" y="1573" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1178.50" y="1583.5" ></text>
</g>
<g >
<title>complete_walk (349,629,519 samples, 0.03%)</title><rect x="788.7" y="1413" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="791.67" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (491,899,254 samples, 0.05%)</title><rect x="1183.6" y="1589" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.58" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,679,727,702 samples, 0.26%)</title><rect x="509.4" y="1605" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="512.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1477" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1487.5" >std::__detail::..</text>
</g>
<g >
<title>malloc (1,116,552,593 samples, 0.11%)</title><rect x="820.0" y="133" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="823.04" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="885" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (350,899,829 samples, 0.03%)</title><rect x="1146.3" y="37" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1149.27" y="47.5" ></text>
</g>
<g >
<title>operator new (1,753,867,555 samples, 0.17%)</title><rect x="631.3" y="309" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="634.28" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,737,486 samples, 0.01%)</title><rect x="657.7" y="501" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="660.71" y="511.5" ></text>
</g>
<g >
<title>d_hash_and_lookup (175,663,201 samples, 0.02%)</title><rect x="483.6" y="1493" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="486.61" y="1503.5" ></text>
</g>
<g >
<title>alloc_pages (205,565,301 samples, 0.02%)</title><rect x="509.7" y="1381" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="512.70" y="1391.5" ></text>
</g>
<g >
<title>epoll_wait (122,562,914 samples, 0.01%)</title><rect x="1167.4" y="1589" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1170.45" y="1599.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (299,157,165 samples, 0.03%)</title><rect x="396.3" y="1413" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="399.34" y="1423.5" ></text>
</g>
<g >
<title>sqlite3_step (395,058,397 samples, 0.04%)</title><rect x="463.0" y="1365" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="466.01" y="1375.5" ></text>
</g>
<g >
<title>fcntl (219,697,809 samples, 0.02%)</title><rect x="451.8" y="1621" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="454.80" y="1631.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (317,405,121 samples, 0.03%)</title><rect x="1189.6" y="1477" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1192.63" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1477" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="494.10" y="1487.5" ></text>
</g>
<g >
<title>memcmp (704,021,592 samples, 0.07%)</title><rect x="454.3" y="1621" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="457.34" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (685,040,778 samples, 0.07%)</title><rect x="1174.7" y="1541" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1177.69" y="1551.5" ></text>
</g>
<g >
<title>do_idle (5,423,890,376 samples, 0.53%)</title><rect x="516.3" y="1573" width="6.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="519.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="181" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (802,363,608 samples, 0.08%)</title><rect x="823.7" y="117" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (121,831,213 samples, 0.01%)</title><rect x="1167.4" y="1573" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1170.45" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1493" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="475.27" y="1503.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1413" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1171.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (546,266,535 samples, 0.05%)</title><rect x="463.7" y="1429" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="466.75" y="1439.5" ></text>
</g>
<g >
<title>kfree (14,609,208,132 samples, 1.42%)</title><rect x="191.6" y="1349" width="16.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="194.59" y="1359.5" ></text>
</g>
<g >
<title>try_to_free_buffers (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1189" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="94.05" y="1199.5" ></text>
</g>
<g >
<title>kcompactd (490,102,322 samples, 0.05%)</title><rect x="515.3" y="1589" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="518.27" y="1599.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (849,092,815 samples, 0.08%)</title><rect x="262.6" y="1301" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="265.60" y="1311.5" ></text>
</g>
<g >
<title>__entry_text_start (100,710,857 samples, 0.01%)</title><rect x="806.2" y="1573" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="809.22" y="1583.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (603,676,474 samples, 0.06%)</title><rect x="1168.7" y="1349" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1171.75" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (503,089,648 samples, 0.05%)</title><rect x="1149.9" y="53" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1152.90" y="63.5" ></text>
</g>
<g >
<title>exit_mmap (99,876,984 samples, 0.01%)</title><rect x="1182.9" y="1413" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1185.87" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1029" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1039.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1045" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1055.5" >std::__detail::..</text>
</g>
<g >
<title>unmap_vmas (1,766,146,965 samples, 0.17%)</title><rect x="1171.7" y="1397" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1174.69" y="1407.5" ></text>
</g>
<g >
<title>operator new (401,799,917 samples, 0.04%)</title><rect x="1158.2" y="69" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.24" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="421" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (2,785,340,782 samples, 0.27%)</title><rect x="394.5" y="1445" width="3.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="397.53" y="1455.5" ></text>
</g>
<g >
<title>do_nftw (1,281,839,943 samples, 0.12%)</title><rect x="418.7" y="1605" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="421.66" y="1615.5" ></text>
</g>
<g >
<title>v8::Object::SetAlignedPointerInInternalField (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1525" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="565.54" y="1535.5" ></text>
</g>
<g >
<title>process_one_work (182,367,887 samples, 0.02%)</title><rect x="1179.5" y="1573" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1182.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1157" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1167.5" ></text>
</g>
<g >
<title>__find_get_block (199,456,212 samples, 0.02%)</title><rect x="371.8" y="1221" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="374.84" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1445" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (552,090,259 samples, 0.05%)</title><rect x="649.5" y="437" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="652.45" y="447.5" ></text>
</g>
<g >
<title>vfs_iter_read (18,251,714,506 samples, 1.78%)</title><rect x="51.0" y="1445" width="21.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="54.03" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="629" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1221" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1231.5" ></text>
</g>
<g >
<title>operator delete (106,087,241 samples, 0.01%)</title><rect x="742.1" y="1141" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="745.05" y="1151.5" ></text>
</g>
<g >
<title>jbd2__journal_start (11,841,590,678 samples, 1.15%)</title><rect x="297.5" y="1269" width="13.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="300.54" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,904,525,028 samples, 0.19%)</title><rect x="776.6" y="1381" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="779.60" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, DirEntry&gt;, std::allocator&lt;std::pair&lt;std::string const, DirEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (203,366,301 samples, 0.02%)</title><rect x="575.1" y="1525" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="578.07" y="1535.5" ></text>
</g>
<g >
<title>vma_expand (148,602,277 samples, 0.01%)</title><rect x="441.7" y="1493" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="444.74" y="1503.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1525" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="469.28" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (400,818,978 samples, 0.04%)</title><rect x="732.7" y="1045" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="735.71" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1285" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1461" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="566.57" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::compiler::EffectGraphReducer::ReduceFrom (128,810,777 samples, 0.01%)</title><rect x="1169.6" y="1477" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1172.57" y="1487.5" ></text>
</g>
<g >
<title>iterate_dir (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1189" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.23" y="1199.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (310,986,098 samples, 0.03%)</title><rect x="1179.1" y="1573" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1182.06" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (206,234,396 samples, 0.02%)</title><rect x="512.1" y="1573" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="515.15" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,126,722,648 samples, 0.60%)</title><rect x="1141.7" y="85" width="7.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (751,289,299 samples, 0.07%)</title><rect x="716.9" y="949" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="719.90" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1333" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="474.21" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="101" width="8.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="111.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1365" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.08" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="885" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1589" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1599.5" ></text>
</g>
<g >
<title>__fsnotify_parent (94,824,225,229 samples, 9.24%)</title><rect x="114.7" y="1461" width="109.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="117.71" y="1471.5" >__fsnotify_pa..</text>
</g>
<g >
<title>msvc::directory_utf8_entry::directory_utf8_entry (1,084,457,408 samples, 0.11%)</title><rect x="418.8" y="1573" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="421.78" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="373" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="383.5" ></text>
</g>
<g >
<title>malloc (897,534,315 samples, 0.09%)</title><rect x="673.8" y="613" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="676.77" y="623.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (610,825,684 samples, 0.06%)</title><rect x="1168.0" y="1381" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1171.04" y="1391.5" ></text>
</g>
<g >
<title>filemap_get_pages (5,492,090,581 samples, 0.54%)</title><rect x="63.0" y="1349" width="6.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="65.98" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (641,097,774 samples, 0.06%)</title><rect x="423.1" y="1589" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="426.14" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_compare_groups (151,129,490 samples, 0.01%)</title><rect x="138.4" y="1429" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="141.44" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (99,884,517 samples, 0.01%)</title><rect x="463.5" y="1429" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="466.52" y="1439.5" ></text>
</g>
<g >
<title>v8::internal::compiler::EscapeAnalysisPhase::Run (128,810,777 samples, 0.01%)</title><rect x="1169.6" y="1493" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1172.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,031,385,174 samples, 2.05%)</title><rect x="610.9" y="341" width="24.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="613.90" y="351.5" >s..</text>
</g>
<g >
<title>__memcpy_fwd (5,310,868,684 samples, 0.52%)</title><rect x="406.9" y="1605" width="6.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="409.94" y="1615.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (1,377,760,668 samples, 0.13%)</title><rect x="264.1" y="1349" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="267.10" y="1359.5" ></text>
</g>
<g >
<title>command_substitute (116,325,567 samples, 0.01%)</title><rect x="1182.1" y="1253" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1185.09" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (603,415,017 samples, 0.06%)</title><rect x="691.2" y="741" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="694.17" y="751.5" ></text>
</g>
<g >
<title>sqlite3Prepare (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1445" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="420.92" y="1455.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (171,515,319 samples, 0.02%)</title><rect x="514.5" y="1285" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="517.54" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_futex (246,362,853 samples, 0.02%)</title><rect x="511.5" y="1573" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="514.51" y="1583.5" ></text>
</g>
<g >
<title>kmalloc_slab (501,934,009 samples, 0.05%)</title><rect x="215.1" y="1381" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="218.07" y="1391.5" ></text>
</g>
<g >
<title>stop_this_handle (99,447,917 samples, 0.01%)</title><rect x="323.4" y="1269" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="326.44" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="597" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="607.5" ></text>
</g>
<g >
<title>ext4_getattr (301,301,229 samples, 0.03%)</title><rect x="802.6" y="1365" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="805.62" y="1375.5" ></text>
</g>
<g >
<title>do_futex (246,362,853 samples, 0.02%)</title><rect x="511.5" y="1557" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="514.51" y="1567.5" ></text>
</g>
<g >
<title>[git] (434,136,064 samples, 0.04%)</title><rect x="469.6" y="1285" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.59" y="1295.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (266,804,653 samples, 0.03%)</title><rect x="486.8" y="1605" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="489.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (206,688,691 samples, 0.02%)</title><rect x="783.0" y="1461" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="786.03" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,674,998,029 samples, 0.55%)</title><rect x="612.2" y="261" width="6.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="615.18" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (295,848,275 samples, 0.03%)</title><rect x="484.4" y="1573" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="487.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,031,751 samples, 0.01%)</title><rect x="691.7" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="694.69" y="735.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1317" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="93.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="885" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="895.5" ></text>
</g>
<g >
<title>ovl_override_creds (496,614,194 samples, 0.05%)</title><rect x="425.3" y="1429" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="428.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1317" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1327.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>vfs_write (250,773,236,395 samples, 24.44%)</title><rect x="110.2" y="1477" width="288.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="113.16" y="1487.5" >vfs_write</text>
</g>
<g >
<title>getname_flags.part.0 (100,322,793 samples, 0.01%)</title><rect x="426.6" y="1493" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="429.65" y="1503.5" ></text>
</g>
<g >
<title>__fdget_pos (2,663,842,673 samples, 0.26%)</title><rect x="105.7" y="1477" width="3.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="108.71" y="1487.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (149,095,226 samples, 0.01%)</title><rect x="455.6" y="1413" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="458.60" y="1423.5" ></text>
</g>
<g >
<title>load_elf_binary (233,210,568 samples, 0.02%)</title><rect x="1182.8" y="1493" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1185.82" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="725" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="341" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (149,801,787 samples, 0.01%)</title><rect x="455.8" y="1413" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="458.77" y="1423.5" ></text>
</g>
<g >
<title>sqlite3LockAndPrepare (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1493" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="420.30" y="1503.5" ></text>
</g>
<g >
<title>CExtFullCodeItemResults::GetData (200,907,952 samples, 0.02%)</title><rect x="457.2" y="1493" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="460.18" y="1503.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::code_items_set&gt;::move_next (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1461" width="0.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="459.34" y="1471.5" ></text>
</g>
<g >
<title>cfree (1,956,188,178 samples, 0.19%)</title><rect x="687.4" y="757" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="690.40" y="767.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (501,870,892 samples, 0.05%)</title><rect x="281.1" y="1253" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="284.10" y="1263.5" ></text>
</g>
<g >
<title>do_mas_munmap (1,546,574,167 samples, 0.15%)</title><rect x="442.2" y="1541" width="1.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="445.20" y="1551.5" ></text>
</g>
<g >
<title>ext4_inode_csum (10,574,674,966 samples, 1.03%)</title><rect x="347.0" y="1205" width="12.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="350.00" y="1215.5" ></text>
</g>
<g >
<title>malloc (314,783,635 samples, 0.03%)</title><rect x="744.6" y="1109" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="747.62" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,591,824,715 samples, 0.64%)</title><rect x="806.3" y="1573" width="7.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="809.34" y="1583.5" ></text>
</g>
<g >
<title>cfree (1,607,354,744 samples, 0.16%)</title><rect x="730.1" y="1077" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="733.10" y="1087.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (401,756,079 samples, 0.04%)</title><rect x="377.8" y="1285" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="380.84" y="1295.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,183,553,175 samples, 0.21%)</title><rect x="1185.9" y="1541" width="2.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.88" y="1551.5" ></text>
</g>
<g >
<title>_IO_file_doallocate (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1477" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="469.28" y="1487.5" ></text>
</g>
<g >
<title>operator new (2,466,941,977 samples, 0.24%)</title><rect x="584.4" y="1509" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="587.36" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1285" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.40" y="1295.5" ></text>
</g>
<g >
<title>dget_parent (1,980,343,374 samples, 0.19%)</title><rect x="34.3" y="1445" width="2.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="37.31" y="1455.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (97,119,550 samples, 0.01%)</title><rect x="479.6" y="1445" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="482.62" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="421" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="431.5" ></text>
</g>
<g >
<title>ovl_permission (449,651,613 samples, 0.04%)</title><rect x="420.6" y="1429" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="423.64" y="1439.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (146,627,065 samples, 0.01%)</title><rect x="512.2" y="1541" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="515.20" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="725" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="735.5" ></text>
</g>
<g >
<title>mas_wr_node_store (98,587,269 samples, 0.01%)</title><rect x="442.7" y="1413" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="445.72" y="1423.5" ></text>
</g>
<g >
<title>file_modified (3,915,860,819 samples, 0.38%)</title><rect x="251.4" y="1365" width="4.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="254.42" y="1375.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1605" width="4.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="570.62" y="1615.5" ></text>
</g>
<g >
<title>vfs_statx (101,358,042 samples, 0.01%)</title><rect x="488.7" y="1541" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="491.66" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (851,477,913 samples, 0.08%)</title><rect x="753.1" y="1189" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="756.09" y="1199.5" ></text>
</g>
<g >
<title>uv__io_poll (1,912,901,176 samples, 0.19%)</title><rect x="1167.3" y="1605" width="2.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1170.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1093" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1103.5" ></text>
</g>
<g >
<title>[libc.so.6] (45,120,779,868 samples, 4.40%)</title><rect x="865.6" y="85" width="51.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="868.65" y="95.5" >[libc..</text>
</g>
<g >
<title>vfs_fstatat (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1429" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="494.10" y="1439.5" ></text>
</g>
<g >
<title>expand_string_assignment (116,325,567 samples, 0.01%)</title><rect x="1182.1" y="1285" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1185.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="645" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="655.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="661" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="671.5" ></text>
</g>
<g >
<title>ret_from_fork (129,777,488 samples, 0.01%)</title><rect x="1185.3" y="1621" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1188.30" y="1631.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (100,714,089 samples, 0.01%)</title><rect x="793.1" y="1349" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="796.06" y="1359.5" ></text>
</g>
<g >
<title>start_secondary (97,863,571 samples, 0.01%)</title><rect x="1185.5" y="1605" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1445" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1455.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1333" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (162,132,155 samples, 0.02%)</title><rect x="487.7" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.68" y="1503.5" ></text>
</g>
<g >
<title>get_stride (468,961,788 samples, 0.05%)</title><rect x="453.7" y="1621" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="456.74" y="1631.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (328,778,889 samples, 0.03%)</title><rect x="443.5" y="1429" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="446.50" y="1439.5" ></text>
</g>
<g >
<title>fsnotify (1,811,316,892 samples, 0.18%)</title><rect x="82.8" y="1397" width="2.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="85.76" y="1407.5" ></text>
</g>
<g >
<title>handle_mm_fault (240,792,338 samples, 0.02%)</title><rect x="449.4" y="1557" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="452.42" y="1567.5" ></text>
</g>
<g >
<title>perf-exec (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1637" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1176.96" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (579,678,689 samples, 0.06%)</title><rect x="510.8" y="1573" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="513.84" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (18,489,210,018 samples, 1.80%)</title><rect x="491.2" y="1621" width="21.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="494.25" y="1631.5" >[..</text>
</g>
<g >
<title>cfree (1,851,072,819 samples, 0.18%)</title><rect x="703.8" y="885" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="706.83" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (115,990,086 samples, 0.01%)</title><rect x="509.2" y="1541" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="512.18" y="1551.5" ></text>
</g>
<g >
<title>getdents64 (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1333" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="473.79" y="1343.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1477" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="458.55" y="1487.5" ></text>
</g>
<g >
<title>ext4_do_writepages (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1429" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1182.62" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1269" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1279.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1301" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1311.5" >std::__detail::..</text>
</g>
<g >
<title>__rcu_read_lock (102,207,489 samples, 0.01%)</title><rect x="64.3" y="1333" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="67.28" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1045" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1055.5" ></text>
</g>
<g >
<title>readdir64 (141,361,840 samples, 0.01%)</title><rect x="471.2" y="1365" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="474.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1573" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1583.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[libc.so.6] (263,281,370 samples, 0.03%)</title><rect x="478.0" y="1477" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="197" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="709" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,866,558,671 samples, 1.45%)</title><rect x="786.2" y="1541" width="17.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="789.21" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;char const*&gt;, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt; &gt;::operator= (149,419,422 samples, 0.01%)</title><rect x="464.2" y="1413" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="467.21" y="1423.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1573" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="454.59" y="1583.5" ></text>
</g>
<g >
<title>common_perm_cond (451,523,028 samples, 0.04%)</title><rect x="800.3" y="1413" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="803.25" y="1423.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1445" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="465.57" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (217,370,026 samples, 0.02%)</title><rect x="1179.8" y="1541" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1182.75" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,745,213 samples, 0.01%)</title><rect x="562.4" y="1605" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="565.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1429" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (98,747,216 samples, 0.01%)</title><rect x="1156.9" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1159.86" y="79.5" ></text>
</g>
<g >
<title>rest_init (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1557" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1192.63" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="677" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1429" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="309" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="319.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__unmap_and_move.constprop.0 (126,969,978 samples, 0.01%)</title><rect x="515.4" y="1509" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="518.39" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,052,018,555 samples, 0.10%)</title><rect x="706.8" y="853" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="709.76" y="863.5" ></text>
</g>
<g >
<title>__libc_start_main (225,290,088 samples, 0.02%)</title><rect x="487.6" y="1605" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="490.65" y="1615.5" ></text>
</g>
<g >
<title>cfree (1,004,336,327 samples, 0.10%)</title><rect x="1148.7" y="85" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.75" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="261" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1445" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1455.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,020,990 samples, 0.01%)</title><rect x="850.6" y="53" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.58" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="645" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="655.5" ></text>
</g>
<g >
<title>vma_mas_store (148,602,277 samples, 0.01%)</title><rect x="441.7" y="1477" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="444.74" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (494,729,541 samples, 0.05%)</title><rect x="455.4" y="1589" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="458.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,964,174 samples, 0.07%)</title><rect x="691.0" y="757" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="693.99" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="869" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="879.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1605" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1397" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1407.5" >std::__detail::..</text>
</g>
<g >
<title>try_to_unlazy (101,232,629 samples, 0.01%)</title><rect x="424.2" y="1461" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="427.24" y="1471.5" ></text>
</g>
<g >
<title>__do_sys_newstat (14,667,166,531 samples, 1.43%)</title><rect x="786.3" y="1493" width="16.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="789.27" y="1503.5" ></text>
</g>
<g >
<title>ksys_read (6,289,772,788 samples, 0.61%)</title><rect x="806.5" y="1525" width="7.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="809.45" y="1535.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (602,428,553 samples, 0.06%)</title><rect x="802.3" y="1397" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="805.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="949" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="959.5" >std::__detail::..</text>
</g>
<g >
<title>setlocale (291,280,626 samples, 0.03%)</title><rect x="478.0" y="1557" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="481.05" y="1567.5" ></text>
</g>
<g >
<title>readdir64 (641,097,774 samples, 0.06%)</title><rect x="423.1" y="1605" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="426.14" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="837" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="847.5" ></text>
</g>
<g >
<title>__fsnotify_parent (120,290,511 samples, 0.01%)</title><rect x="1175.7" y="1397" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1178.68" y="1407.5" ></text>
</g>
<g >
<title>exec_binprm (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1525" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1174.64" y="1535.5" ></text>
</g>
<g >
<title>exc_page_fault (328,750,411 samples, 0.03%)</title><rect x="449.4" y="1589" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="452.36" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,715,034,872 samples, 12.74%)</title><rect x="990.2" y="101" width="150.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="111.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1333" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1509" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1519.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,046,886,838 samples, 0.78%)</title><rect x="814.0" y="197" width="9.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1461" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (256,124,347,461 samples, 24.96%)</title><rect x="846.9" y="1605" width="294.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="849.88" y="1615.5" >std::__detail::_Executor&lt;__gnu_cxx::__n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="773" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="783.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="901" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="911.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="517" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1093" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1509" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="465.78" y="1519.5" ></text>
</g>
<g >
<title>operator delete@plt (100,541,131 samples, 0.01%)</title><rect x="617.4" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.37" y="191.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1573" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="487.82" y="1583.5" ></text>
</g>
<g >
<title>__kmem_cache_free (402,609,153 samples, 0.04%)</title><rect x="191.1" y="1349" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="194.13" y="1359.5" ></text>
</g>
<g >
<title>aa_file_perm (364,124,339 samples, 0.04%)</title><rect x="76.2" y="1413" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="79.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="597" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (151,033,964 samples, 0.01%)</title><rect x="805.1" y="1573" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="808.06" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1,393,657,619 samples, 0.14%)</title><rect x="10.0" y="1621" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (552,656,624 samples, 0.05%)</title><rect x="779.7" y="1365" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="782.73" y="1375.5" ></text>
</g>
<g >
<title>_raw_read_lock (1,205,889,995 samples, 0.12%)</title><rect x="298.6" y="1253" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="301.58" y="1263.5" ></text>
</g>
<g >
<title>copy_strings.isra.0 (185,201,371 samples, 0.02%)</title><rect x="1181.4" y="1349" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1184.41" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (301,609,099 samples, 0.03%)</title><rect x="773.2" y="1333" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="776.20" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1189" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1199.5" ></text>
</g>
<g >
<title>down_write (250,917,687 samples, 0.02%)</title><rect x="224.3" y="1461" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="227.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="453" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="325" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="229" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="239.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="277" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="287.5" ></text>
</g>
<g >
<title>malloc (2,441,866,936 samples, 0.24%)</title><rect x="835.4" y="1605" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="838.36" y="1615.5" ></text>
</g>
<g >
<title>path_init (100,652,828 samples, 0.01%)</title><rect x="798.3" y="1413" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="801.34" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (652,156,761 samples, 0.06%)</title><rect x="708.4" y="869" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="711.38" y="879.5" ></text>
</g>
<g >
<title>folio_alloc (251,425,502 samples, 0.02%)</title><rect x="281.7" y="1269" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="284.73" y="1279.5" ></text>
</g>
<g >
<title>std::string::insert (561,210,683 samples, 0.05%)</title><rect x="804.1" y="1557" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="807.07" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1301" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1311.5" ></text>
</g>
<g >
<title>compact_zone (490,102,322 samples, 0.05%)</title><rect x="515.3" y="1557" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="518.27" y="1567.5" ></text>
</g>
<g >
<title>pthread_rwlock_rdlock (102,035,405 samples, 0.01%)</title><rect x="565.3" y="1269" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="568.33" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,142,209,137 samples, 6.84%)</title><rect x="604.5" y="725" width="80.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="607.54" y="735.5" >std::__de..</text>
</g>
<g >
<title>vm_mmap_pgoff (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1125" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="492.15" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1125" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1135.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1189" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1199.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (11,235,402,444 samples, 1.09%)</title><rect x="273.6" y="1333" width="12.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="276.59" y="1343.5" ></text>
</g>
<g >
<title>dput (414,218,984 samples, 0.04%)</title><rect x="36.6" y="1445" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="39.58" y="1455.5" ></text>
</g>
<g >
<title>memcpy_erms (852,982,655 samples, 0.08%)</title><rect x="221.1" y="1445" width="1.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="224.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="997" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1007.5" >std::__detail::..</text>
</g>
<g >
<title>operator new (151,071,953 samples, 0.01%)</title><rect x="668.5" y="549" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="671.51" y="559.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1493" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1171.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1285" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1295.5" ></text>
</g>
<g >
<title>__poll (736,286,968 samples, 0.07%)</title><rect x="1174.7" y="1573" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1177.65" y="1583.5" ></text>
</g>
<g >
<title>[bash] (992,428,101 samples, 0.10%)</title><rect x="1181.3" y="1557" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.32" y="1567.5" ></text>
</g>
<g >
<title>lockref_put_return (201,258,854 samples, 0.02%)</title><rect x="799.7" y="1429" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="802.73" y="1439.5" ></text>
</g>
<g >
<title>cfree (1,254,494,130 samples, 0.12%)</title><rect x="680.3" y="693" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="683.29" y="703.5" ></text>
</g>
<g >
<title>walk_component (129,530,848 samples, 0.01%)</title><rect x="489.6" y="1397" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="492.61" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1301" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="549" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="559.5" ></text>
</g>
<g >
<title>malloc (100,757,667 samples, 0.01%)</title><rect x="785.7" y="1509" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="788.69" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_clone (591,391,637 samples, 0.06%)</title><rect x="482.4" y="1573" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="485.41" y="1583.5" ></text>
</g>
<g >
<title>do_readlinkat (125,361,562 samples, 0.01%)</title><rect x="489.8" y="1477" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="492.81" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (494,729,541 samples, 0.05%)</title><rect x="455.4" y="1605" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="458.43" y="1615.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (119,504,338 samples, 0.01%)</title><rect x="488.1" y="1525" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="491.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1269" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1279.5" ></text>
</g>
<g >
<title>fsnotify (104,666,641 samples, 0.01%)</title><rect x="1175.7" y="1381" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1178.69" y="1391.5" ></text>
</g>
<g >
<title>unmap_vmas (1,426,835,864 samples, 0.14%)</title><rect x="513.1" y="1397" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="516.14" y="1407.5" ></text>
</g>
<g >
<title>__pmd_alloc (168,919,693 samples, 0.02%)</title><rect x="509.5" y="1429" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="512.47" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1045" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="533" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (115,990,086 samples, 0.01%)</title><rect x="509.2" y="1557" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="512.18" y="1567.5" ></text>
</g>
<g >
<title>shell_execve (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1445" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1184.39" y="1455.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (3,736,236,671 samples, 0.36%)</title><rect x="458.3" y="1493" width="4.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="461.27" y="1503.5" ></text>
</g>
<g >
<title>touch_atime (2,697,498,797 samples, 0.26%)</title><rect x="43.0" y="1429" width="3.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="46.02" y="1439.5" ></text>
</g>
<g >
<title>ovl_dir_read_merged (356,833,037 samples, 0.03%)</title><rect x="423.3" y="1509" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="426.35" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (692,969,807 samples, 0.07%)</title><rect x="1174.7" y="1557" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1177.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1253" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1263.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (98,497,802 samples, 0.01%)</title><rect x="441.9" y="1509" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="444.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="757" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="767.5" >std::__detail::..</text>
</g>
<g >
<title>kmem_cache_free_bulk.part.0 (100,473,999 samples, 0.01%)</title><rect x="443.1" y="1461" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="446.12" y="1471.5" ></text>
</g>
<g >
<title>operator new (302,216,020 samples, 0.03%)</title><rect x="617.5" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="620.49" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (503,486,025 samples, 0.05%)</title><rect x="772.6" y="1333" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="775.56" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,128,369,371 samples, 0.50%)</title><rect x="472.0" y="1605" width="5.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="475.04" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (301,053,160 samples, 0.03%)</title><rect x="626.0" y="245" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="629.04" y="255.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,232,671,882 samples, 0.22%)</title><rect x="395.2" y="1429" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="398.16" y="1439.5" ></text>
</g>
<g >
<title>check_stack_object (100,712,469 samples, 0.01%)</title><rect x="809.4" y="1445" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="812.41" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (269,662,515 samples, 0.03%)</title><rect x="478.0" y="1493" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1503.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (199,179,837 samples, 0.02%)</title><rect x="514.5" y="1317" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="517.54" y="1327.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (251,553,640 samples, 0.02%)</title><rect x="385.0" y="1349" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="388.01" y="1359.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (99,657,050 samples, 0.01%)</title><rect x="786.6" y="1461" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="789.56" y="1471.5" ></text>
</g>
<g >
<title>lookup_fast (1,228,675,877 samples, 0.12%)</title><rect x="796.5" y="1381" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="799.53" y="1391.5" ></text>
</g>
<g >
<title>file_modified_flags (3,564,686,929 samples, 0.35%)</title><rect x="251.8" y="1349" width="4.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="254.83" y="1359.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (1,806,941,435 samples, 0.18%)</title><rect x="811.1" y="1477" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="814.08" y="1487.5" ></text>
</g>
<g >
<title>folio_memcg_unlock (293,978,435 samples, 0.03%)</title><rect x="467.7" y="1365" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="470.66" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="85" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="95.5" ></text>
</g>
<g >
<title>zap_pte_range (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1333" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="454.59" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,706,942,115 samples, 0.36%)</title><rect x="185.7" y="1381" width="4.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="188.65" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1349" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1359.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__wake_up_common_lock (752,451,482 samples, 0.07%)</title><rect x="210.7" y="1349" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="213.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="549" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="559.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>do_exit (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1557" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="518.00" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (351,950,996 samples, 0.03%)</title><rect x="571.4" y="197" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="574.37" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="197" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1013" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1023.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (558,094,826 samples, 0.05%)</title><rect x="461.8" y="1477" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="464.76" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,724,813 samples, 0.01%)</title><rect x="571.3" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="574.25" y="175.5" ></text>
</g>
<g >
<title>read (7,193,340,430 samples, 0.70%)</title><rect x="805.7" y="1589" width="8.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="808.70" y="1599.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1445" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="568.30" y="1455.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (550,784,406 samples, 0.05%)</title><rect x="376.4" y="1221" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="379.40" y="1231.5" ></text>
</g>
<g >
<title>wb_writeback (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1525" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1182.62" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="837" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="847.5" ></text>
</g>
<g >
<title>schedule (179,393,526 samples, 0.02%)</title><rect x="511.3" y="1493" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1365" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1375.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (98,162,058 samples, 0.01%)</title><rect x="460.6" y="1461" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="463.60" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1093" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1103.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (215,660,641 samples, 0.02%)</title><rect x="1183.3" y="1493" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.31" y="1503.5" ></text>
</g>
<g >
<title>operator new (804,314,679 samples, 0.08%)</title><rect x="826.9" y="101" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="829.93" y="111.5" ></text>
</g>
<g >
<title>generic_write_end (150,748,277 samples, 0.01%)</title><rect x="384.8" y="1349" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="387.83" y="1359.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,784,556,553 samples, 0.17%)</title><rect x="513.0" y="1573" width="2.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="515.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (179,840,985,922 samples, 17.53%)</title><rect x="578.0" y="1525" width="206.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="580.96" y="1535.5" >std::__detail::__regex_algo..</text>
</g>
<g >
<title>cpuidle_idle_call (2,784,680,442 samples, 0.27%)</title><rect x="1185.9" y="1557" width="3.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1188.88" y="1567.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (252,225,897 samples, 0.02%)</title><rect x="511.2" y="1509" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="514.22" y="1519.5" ></text>
</g>
<g >
<title>copy_page_range (1,094,884,354 samples, 0.11%)</title><rect x="563.8" y="1333" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="566.81" y="1343.5" ></text>
</g>
<g >
<title>docker (204,190,966 samples, 0.02%)</title><rect x="465.7" y="1637" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="468.67" y="1647.5" ></text>
</g>
<g >
<title>crypto_shash_update (7,316,656,000 samples, 0.71%)</title><rect x="350.7" y="1189" width="8.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="353.74" y="1199.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (197,450,273 samples, 0.02%)</title><rect x="422.1" y="1477" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="425.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="213" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (402,361,527 samples, 0.04%)</title><rect x="404.0" y="1541" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="406.96" y="1551.5" ></text>
</g>
<g >
<title>radix_tree_lookup (100,500,385 samples, 0.01%)</title><rect x="263.8" y="1333" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="266.75" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1493" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1503.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (301,279,713 samples, 0.03%)</title><rect x="850.6" y="69" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.58" y="79.5" ></text>
</g>
<g >
<title>inode_needs_update_time.part.0 (300,614,351 samples, 0.03%)</title><rect x="255.2" y="1333" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="258.23" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="885" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="917" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,531,379 samples, 0.07%)</title><rect x="1140.5" y="101" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1143.55" y="111.5" ></text>
</g>
<g >
<title>balance_pgdat (121,840,169 samples, 0.01%)</title><rect x="515.8" y="1573" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="518.84" y="1583.5" ></text>
</g>
<g >
<title>generic_write_checks (199,809,154 samples, 0.02%)</title><rect x="385.5" y="1365" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="388.47" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (408,361,326 samples, 0.04%)</title><rect x="404.4" y="1621" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="407.43" y="1631.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (110,074,937 samples, 0.01%)</title><rect x="488.0" y="1541" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="597" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="607.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (148,755,857 samples, 0.01%)</title><rect x="470.5" y="1141" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="473.49" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_clone (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1573" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1181.62" y="1583.5" ></text>
</g>
<g >
<title>cfree (1,800,591,816 samples, 0.18%)</title><rect x="629.1" y="309" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="632.09" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (740,859,323 samples, 0.07%)</title><rect x="1175.9" y="1349" width="0.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1178.89" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (518,818,576 samples, 0.05%)</title><rect x="1181.3" y="1477" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.34" y="1487.5" ></text>
</g>
<g >
<title>generic_perform_write (151,128,198 samples, 0.01%)</title><rect x="387.7" y="1381" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="390.72" y="1391.5" ></text>
</g>
<g >
<title>ext4_evict_inode (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1333" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="93.81" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="837" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="847.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (752,183,211 samples, 0.07%)</title><rect x="477.1" y="1461" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="480.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (36,239,603,524 samples, 3.53%)</title><rect x="608.8" y="485" width="41.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="611.82" y="495.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1381" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1391.5" ></text>
</g>
<g >
<title>operator new (300,893,875 samples, 0.03%)</title><rect x="822.6" y="133" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="825.59" y="143.5" ></text>
</g>
<g >
<title>step_into (87,797,000 samples, 0.01%)</title><rect x="421.4" y="1429" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="424.39" y="1439.5" ></text>
</g>
<g >
<title>malloc (1,055,870,645 samples, 0.10%)</title><rect x="732.0" y="1061" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="734.95" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (301,062,822 samples, 0.03%)</title><rect x="590.5" y="1429" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="593.55" y="1439.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1557" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="420.75" y="1567.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1221" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.15" y="1231.5" ></text>
</g>
<g >
<title>security_file_permission (1,084,023,804 samples, 0.11%)</title><rect x="70.3" y="1397" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="73.30" y="1407.5" ></text>
</g>
<g >
<title>begin_new_exec (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1477" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="454.59" y="1487.5" ></text>
</g>
<g >
<title>exec_mmap (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1461" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1174.64" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1141" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,627,232 samples, 0.07%)</title><rect x="743.6" y="1141" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="746.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="469" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="479.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="357" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (260,811,367,836 samples, 25.42%)</title><rect x="103.6" y="1525" width="299.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="106.57" y="1535.5" >do_syscall_64</text>
</g>
<g >
<title>ret_from_fork (257,352,640 samples, 0.03%)</title><rect x="1179.4" y="1621" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1182.45" y="1631.5" ></text>
</g>
<g >
<title>__alloc_pages (107,464,956 samples, 0.01%)</title><rect x="564.0" y="1221" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="567.02" y="1231.5" ></text>
</g>
<g >
<title>__mmput (295,491,117 samples, 0.03%)</title><rect x="1179.1" y="1429" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1182.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1045" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1055.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="181" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="853" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="373" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (203,140,702 samples, 0.02%)</title><rect x="852.7" y="85" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="855.66" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (651,558,424 samples, 0.06%)</title><rect x="726.2" y="1013" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.23" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1413" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1423.5" ></text>
</g>
<g >
<title>seq_read (89,343,705 samples, 0.01%)</title><rect x="484.3" y="1509" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="487.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="277" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="287.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (204,231,585 samples, 0.02%)</title><rect x="990.0" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="992.99" y="207.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (196,458,780 samples, 0.02%)</title><rect x="509.7" y="1349" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="512.70" y="1359.5" ></text>
</g>
<g >
<title>inode_permission (1,439,095,223 samples, 0.14%)</title><rect x="424.4" y="1461" width="1.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="427.42" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (551,596,406 samples, 0.05%)</title><rect x="625.4" y="245" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="628.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (86,339,741,010 samples, 8.41%)</title><rect x="602.1" y="869" width="99.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="605.11" y="879.5" >std::__detai..</text>
</g>
<g >
<title>pte_alloc_one (117,210,736 samples, 0.01%)</title><rect x="564.0" y="1253" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="567.02" y="1263.5" ></text>
</g>
<g >
<title>enframe (98,473,588 samples, 0.01%)</title><rect x="420.1" y="1605" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="423.14" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="197" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="207.5" ></text>
</g>
<g >
<title>ps (2,834,270,339 samples, 0.28%)</title><rect x="1176.9" y="1637" width="3.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1179.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="821" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="405" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="415.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>operator new (300,766,392 samples, 0.03%)</title><rect x="692.1" y="741" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="695.09" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,304,923,644 samples, 0.13%)</title><rect x="761.6" y="1237" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="764.60" y="1247.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (3,299,007,415 samples, 0.32%)</title><rect x="472.9" y="1429" width="3.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="475.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="453" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="463.5" >std::__detail::..</text>
</g>
<g >
<title>walk_component (148,387,341 samples, 0.01%)</title><rect x="426.5" y="1477" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="429.47" y="1487.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (178,951,488 samples, 0.02%)</title><rect x="509.1" y="1605" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="512.14" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (752,258,435 samples, 0.07%)</title><rect x="1118.0" y="69" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1120.99" y="79.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (300,800,464 samples, 0.03%)</title><rect x="456.6" y="1397" width="0.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="459.63" y="1407.5" ></text>
</g>
<g >
<title>operator new (1,018,474,904 samples, 0.10%)</title><rect x="689.8" y="757" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="692.82" y="767.5" ></text>
</g>
<g >
<title>copy_pte_range (206,989,605 samples, 0.02%)</title><rect x="1178.7" y="1429" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1181.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,599,119 samples, 0.03%)</title><rect x="823.3" y="181" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.29" y="191.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (766,981,682 samples, 0.07%)</title><rect x="420.6" y="1461" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="423.61" y="1471.5" ></text>
</g>
<g >
<title>do_idle (769,607,840 samples, 0.08%)</title><rect x="522.5" y="1525" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="525.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="949" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (250,707,490 samples, 0.02%)</title><rect x="618.0" y="181" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="620.95" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="309" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="319.5" >std::__detail::..</text>
</g>
<g >
<title>fcntl_setlk (198,219,989 samples, 0.02%)</title><rect x="451.8" y="1541" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="454.82" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (215,660,641 samples, 0.02%)</title><rect x="1183.3" y="1509" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.31" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1189" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="757" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="767.5" ></text>
</g>
<g >
<title>buffer_read_wri (344,789,883,326 samples, 33.60%)</title><rect x="10.0" y="1637" width="396.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.03" y="1647.5" >buffer_read_wri</text>
</g>
<g >
<title>PEM_ASN1_read_bio (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1541" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="568.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="997" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_futex (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1557" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="418.78" y="1567.5" ></text>
</g>
<g >
<title>_dl_catch_exception (183,912,765 samples, 0.02%)</title><rect x="489.1" y="1349" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.10" y="1359.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (255,844,957 samples, 0.02%)</title><rect x="512.5" y="1621" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="515.52" y="1631.5" ></text>
</g>
<g >
<title>exec_binprm (296,870,932 samples, 0.03%)</title><rect x="1179.1" y="1525" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1182.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="629" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="639.5" ></text>
</g>
<g >
<title>malloc (100,574,918 samples, 0.01%)</title><rect x="773.4" y="1301" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="776.43" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (88,380,256 samples, 0.01%)</title><rect x="1170.0" y="1525" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1172.99" y="1535.5" ></text>
</g>
<g >
<title>do_exit (344,649,091 samples, 0.03%)</title><rect x="467.6" y="1557" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="470.63" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1461" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1174.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="645" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,772,380 samples, 0.01%)</title><rect x="772.4" y="1333" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="775.45" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter (571,726,659 samples, 0.06%)</title><rect x="522.5" y="1493" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="525.54" y="1503.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (6,318,218,497 samples, 0.62%)</title><rect x="369.8" y="1237" width="7.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="372.77" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="949" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="117" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (781,363,731 samples, 0.08%)</title><rect x="716.0" y="949" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="719.00" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1493" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (58,435,541,767 samples, 5.69%)</title><rect x="23.4" y="1541" width="67.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.43" y="1551.5" >entry_S..</text>
</g>
<g >
<title>migrate_pages (434,625,122 samples, 0.04%)</title><rect x="515.3" y="1541" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="518.34" y="1551.5" ></text>
</g>
<g >
<title>operator new (897,534,315 samples, 0.09%)</title><rect x="673.8" y="629" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="676.77" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (386,575,931 samples, 0.04%)</title><rect x="1178.6" y="1605" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1181.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="533" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1253" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1263.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="277" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="287.5" ></text>
</g>
<g >
<title>setlocale (468,535,724 samples, 0.05%)</title><rect x="1183.6" y="1557" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1186.58" y="1567.5" ></text>
</g>
<g >
<title>unmap_page_range (616,144,290 samples, 0.06%)</title><rect x="485.0" y="1365" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="487.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1605" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="181" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="191.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (188,960,829 samples, 0.02%)</title><rect x="1180.8" y="1621" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1183.85" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,664,007,104 samples, 0.16%)</title><rect x="442.2" y="1589" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="445.20" y="1599.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (98,497,802 samples, 0.01%)</title><rect x="441.9" y="1477" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="444.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,569,650,125 samples, 0.25%)</title><rect x="1159.9" y="85" width="3.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1162.91" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector@plt (100,134,663 samples, 0.01%)</title><rect x="823.2" y="149" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="826.17" y="159.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (335,780,735 samples, 0.03%)</title><rect x="1179.7" y="1621" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1182.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (953,608,493 samples, 0.09%)</title><rect x="973.1" y="117" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.13" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="229" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="239.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1445" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1455.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1,404,151,422 samples, 0.14%)</title><rect x="390.4" y="1381" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="393.37" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (260,015,304 samples, 0.03%)</title><rect x="516.5" y="1477" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="519.50" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (468,535,724 samples, 0.05%)</title><rect x="1183.6" y="1541" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.58" y="1551.5" ></text>
</g>
<g >
<title>[git] (98,986,739 samples, 0.01%)</title><rect x="472.2" y="1541" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="475.15" y="1551.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,357,267,495 samples, 0.23%)</title><rect x="320.0" y="1189" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="323.04" y="1199.5" ></text>
</g>
<g >
<title>refill_obj_stock (245,684,170 samples, 0.02%)</title><rect x="812.8" y="1397" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="815.82" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="725" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="735.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,204,972,422 samples, 0.12%)</title><rect x="161.8" y="1349" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="164.81" y="1359.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (150,777,432 samples, 0.01%)</title><rect x="380.9" y="1317" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="383.90" y="1327.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::move_next (1,529,959,523 samples, 0.15%)</title><rect x="458.7" y="1445" width="1.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="461.73" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="453" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="463.5" ></text>
</g>
<g >
<title>do_filp_open (187,776,042 samples, 0.02%)</title><rect x="484.0" y="1541" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="487.05" y="1551.5" ></text>
</g>
<g >
<title>kthread (129,777,488 samples, 0.01%)</title><rect x="1185.3" y="1605" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.30" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1525" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="693" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="703.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (363,813,091 samples, 0.04%)</title><rect x="443.5" y="1493" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="446.50" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,469,541,446 samples, 0.14%)</title><rect x="1185.9" y="1525" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1188.88" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (401,799,917 samples, 0.04%)</title><rect x="1158.2" y="85" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.24" y="95.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (149,437,590 samples, 0.01%)</title><rect x="457.9" y="1413" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="460.94" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (338,479,031 samples, 0.03%)</title><rect x="1182.8" y="1621" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.80" y="1631.5" ></text>
</g>
<g >
<title>malloc (151,063,815 samples, 0.01%)</title><rect x="804.5" y="1509" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="807.54" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (375,827,669 samples, 0.04%)</title><rect x="467.0" y="1429" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="470.02" y="1439.5" ></text>
</g>
<g >
<title>free@plt (100,662,718 samples, 0.01%)</title><rect x="770.1" y="1333" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="773.14" y="1343.5" ></text>
</g>
<g >
<title>runc:[1:CHILD] (492,257,083 samples, 0.05%)</title><rect x="1180.1" y="1637" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1183.14" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_openat (322,543,611 samples, 0.03%)</title><rect x="479.1" y="1573" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="482.09" y="1583.5" ></text>
</g>
<g >
<title>unlock_page (100,761,622 samples, 0.01%)</title><rect x="381.1" y="1317" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="384.08" y="1327.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1429" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1171.04" y="1439.5" ></text>
</g>
<g >
<title>vfs_statx (141,833,362 samples, 0.01%)</title><rect x="452.1" y="1525" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="455.05" y="1535.5" ></text>
</g>
<g >
<title>malloc (201,269,050 samples, 0.02%)</title><rect x="772.9" y="1301" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="775.91" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="197" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="207.5" >std::__detail::..</text>
</g>
<g >
<title>sqlite3RunParser (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1445" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="421.38" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1333" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (953,608,493 samples, 0.09%)</title><rect x="973.1" y="181" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="976.13" y="191.5" ></text>
</g>
<g >
<title>lookup_bh_lru (2,309,306,010 samples, 0.23%)</title><rect x="373.1" y="1189" width="2.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="376.11" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="389" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,658,125,139 samples, 1.33%)</title><rect x="945.6" y="85" width="15.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="948.64" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="373" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="383.5" ></text>
</g>
<g >
<title>dup_mmap (589,388,407 samples, 0.06%)</title><rect x="482.4" y="1493" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="485.41" y="1503.5" ></text>
</g>
<g >
<title>ovl_path_realdata (156,736,135 samples, 0.02%)</title><rect x="50.1" y="1413" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="53.13" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (451,976,342 samples, 0.04%)</title><rect x="634.3" y="309" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="637.27" y="319.5" ></text>
</g>
<g >
<title>map_id_up (301,375,811 samples, 0.03%)</title><rect x="360.0" y="1205" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="363.02" y="1215.5" ></text>
</g>
<g >
<title>select_task_rq_fair (96,657,988 samples, 0.01%)</title><rect x="447.1" y="1493" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="450.13" y="1503.5" ></text>
</g>
<g >
<title>cfree (199,781,307 samples, 0.02%)</title><rect x="803.4" y="1557" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="806.37" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (107,619,579,649 samples, 10.49%)</title><rect x="850.5" y="1573" width="123.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1583.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (298,109,880 samples, 0.03%)</title><rect x="463.9" y="1413" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="466.86" y="1423.5" ></text>
</g>
<g >
<title>dput (199,091,012 samples, 0.02%)</title><rect x="799.5" y="1429" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="802.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,671,918 samples, 0.01%)</title><rect x="568.2" y="149" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="571.20" y="159.5" ></text>
</g>
<g >
<title>free@plt (98,743,726 samples, 0.01%)</title><rect x="639.2" y="373" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="642.24" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1061" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1071.5" ></text>
</g>
<g >
<title>seq_read_iter (514,524,037 samples, 0.05%)</title><rect x="479.5" y="1509" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="482.54" y="1519.5" ></text>
</g>
<g >
<title>__libc_start_main (341,563,447,618 samples, 33.29%)</title><rect x="11.6" y="1605" width="392.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.63" y="1615.5" >__libc_start_main</text>
</g>
<g >
<title>mas_preallocate (98,672,424 samples, 0.01%)</title><rect x="442.3" y="1477" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="445.31" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (298,858,768 samples, 0.03%)</title><rect x="436.0" y="1605" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="439.02" y="1615.5" ></text>
</g>
<g >
<title>iterate_dir (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1253" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.40" y="1263.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (757,618,232 samples, 0.07%)</title><rect x="460.9" y="1461" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="463.89" y="1471.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (603,676,474 samples, 0.06%)</title><rect x="1168.7" y="1381" width="0.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1171.75" y="1391.5" ></text>
</g>
<g >
<title>load_elf_binary (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1493" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="454.59" y="1503.5" ></text>
</g>
<g >
<title>cfree (1,355,702,875 samples, 0.13%)</title><rect x="637.7" y="373" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="640.68" y="383.5" ></text>
</g>
<g >
<title>__do_sys_newstat (141,833,362 samples, 0.01%)</title><rect x="452.1" y="1557" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="455.05" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="869" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (200,362,702 samples, 0.02%)</title><rect x="824.3" y="85" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="827.33" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1365" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1375.5" ></text>
</g>
<g >
<title>[git] (892,699,665 samples, 0.09%)</title><rect x="469.3" y="1333" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.31" y="1343.5" ></text>
</g>
<g >
<title>proc_tgid_stat (94,132,938 samples, 0.01%)</title><rect x="480.0" y="1477" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="483.02" y="1487.5" ></text>
</g>
<g >
<title>dup_mmap (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1493" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (902,229,005 samples, 0.09%)</title><rect x="1158.9" y="85" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="95.5" ></text>
</g>
<g >
<title>ksys_read (579,880,905 samples, 0.06%)</title><rect x="479.5" y="1557" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="482.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1541" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1551.5" ></text>
</g>
<g >
<title>d2i_X509_AUX (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1525" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="568.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1429" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1439.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__mmput (101,872,695 samples, 0.01%)</title><rect x="1182.9" y="1429" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1185.86" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (250,268,225 samples, 0.02%)</title><rect x="852.4" y="85" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="855.37" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1413" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1423.5" ></text>
</g>
<g >
<title>do_sys_openat2 (294,895,179 samples, 0.03%)</title><rect x="479.1" y="1557" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="482.12" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,594,907 samples, 0.03%)</title><rect x="772.0" y="1301" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="775.04" y="1311.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (740,859,323 samples, 0.07%)</title><rect x="1175.9" y="1333" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1178.89" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (301,353,929 samples, 0.03%)</title><rect x="102.4" y="1541" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="105.41" y="1551.5" ></text>
</g>
<g >
<title>__cond_resched (260,560,190 samples, 0.03%)</title><rect x="53.4" y="1365" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="56.36" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="917" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (149,061,546 samples, 0.01%)</title><rect x="1180.5" y="1621" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1183.52" y="1631.5" ></text>
</g>
<g >
<title>malloc (250,380,032 samples, 0.02%)</title><rect x="692.1" y="725" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="695.09" y="735.5" ></text>
</g>
<g >
<title>proc_readfd (476,422,868 samples, 0.05%)</title><rect x="483.3" y="1541" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="486.28" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,540,311,246 samples, 3.56%)</title><rect x="608.5" y="501" width="42.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="611.47" y="511.5" >std..</text>
</g>
<g >
<title>schedule_idle (104,026,595 samples, 0.01%)</title><rect x="486.7" y="1557" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="489.68" y="1567.5" ></text>
</g>
<g >
<title>copy_page_to_iter (414,938,088 samples, 0.04%)</title><rect x="53.7" y="1365" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="56.66" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="293" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1509" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1519.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (149,437,590 samples, 0.01%)</title><rect x="457.9" y="1397" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="460.94" y="1407.5" ></text>
</g>
<g >
<title>ext4_release_folio (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1221" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="94.05" y="1231.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1525" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1173" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1429" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1439.5" ></text>
</g>
<g >
<title>_dl_catch_exception (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1269" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.15" y="1279.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions (3,736,236,671 samples, 0.36%)</title><rect x="458.3" y="1509" width="4.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="461.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,037,776,527 samples, 1.08%)</title><rect x="853.0" y="85" width="12.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.95" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="245" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="255.5" ></text>
</g>
<g >
<title>[grep] (220,816,954 samples, 0.02%)</title><rect x="487.6" y="1573" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="490.65" y="1583.5" ></text>
</g>
<g >
<title>path_openat (273,433,925 samples, 0.03%)</title><rect x="479.1" y="1525" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="482.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="373" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1269" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.23" y="1279.5" ></text>
</g>
<g >
<title>exec_binprm (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1525" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="454.59" y="1535.5" ></text>
</g>
<g >
<title>malloc (1,105,473,815 samples, 0.11%)</title><rect x="664.9" y="549" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="667.93" y="559.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (6,910,974,553 samples, 0.67%)</title><rect x="369.5" y="1253" width="7.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="372.49" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_execve (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1381" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1184.39" y="1391.5" ></text>
</g>
<g >
<title>operator new (400,216,254 samples, 0.04%)</title><rect x="658.3" y="485" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="661.29" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,954,241,933 samples, 0.19%)</title><rect x="313.3" y="1253" width="2.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="316.29" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (100,464,412 samples, 0.01%)</title><rect x="784.8" y="1525" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="787.77" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (351,969,922 samples, 0.03%)</title><rect x="755.2" y="1205" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="758.23" y="1215.5" ></text>
</g>
<g >
<title>__rcu_read_lock (415,300,915 samples, 0.04%)</title><rect x="79.4" y="1397" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="82.42" y="1407.5" ></text>
</g>
<g >
<title>__fget_light (1,865,983,005 samples, 0.18%)</title><rect x="27.0" y="1461" width="2.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.02" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (344,649,091 samples, 0.03%)</title><rect x="467.6" y="1589" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="470.63" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (198,219,989 samples, 0.02%)</title><rect x="451.8" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="454.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="709" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="719.5" >std::__detail::..</text>
</g>
<g >
<title>[libc.so.6] (273,221,192 samples, 0.03%)</title><rect x="478.0" y="1509" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (753,531,379 samples, 0.07%)</title><rect x="1140.5" y="133" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1143.55" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1013" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,876,521 samples, 0.01%)</title><rect x="487.7" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (78,188,648,060 samples, 7.62%)</title><rect x="603.1" y="805" width="89.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="606.10" y="815.5" >std::__det..</text>
</g>
<g >
<title>inotify_handle_inode_event (251,796,569 samples, 0.02%)</title><rect x="218.2" y="1413" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="221.25" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="405" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="415.5" ></text>
</g>
<g >
<title>[git] (320,335,677 samples, 0.03%)</title><rect x="472.1" y="1573" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="475.09" y="1583.5" ></text>
</g>
<g >
<title>ttwu_do_activate (200,733,249 samples, 0.02%)</title><rect x="521.6" y="1509" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="524.64" y="1519.5" ></text>
</g>
<g >
<title>sqlite3_step (654,952,786 samples, 0.06%)</title><rect x="457.4" y="1445" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="460.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="437" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="447.5" ></text>
</g>
<g >
<title>operator new (24,436,244,401 samples, 2.38%)</title><rect x="917.5" y="101" width="28.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="920.53" y="111.5" >o..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator=@plt (100,560,932 samples, 0.01%)</title><rect x="764.7" y="1269" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="767.71" y="1279.5" ></text>
</g>
<g >
<title>stop_this_handle (6,569,076,324 samples, 0.64%)</title><rect x="315.5" y="1253" width="7.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="318.54" y="1263.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1573" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="420.92" y="1583.5" ></text>
</g>
<g >
<title>path_lookupat (2,088,598,832 samples, 0.20%)</title><rect x="424.2" y="1493" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="427.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="677" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="687.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (282,752,865 samples, 0.03%)</title><rect x="521.6" y="1541" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="524.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1525" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,102,210,827 samples, 0.11%)</title><rect x="1164.6" y="101" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.60" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (450,382,044 samples, 0.04%)</title><rect x="807.6" y="1461" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="810.56" y="1471.5" ></text>
</g>
<g >
<title>code_store::statement_t::step1 (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1461" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="465.57" y="1471.5" ></text>
</g>
<g >
<title>sqlite3_step (1,335,836,429 samples, 0.13%)</title><rect x="458.9" y="1413" width="1.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="461.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="309" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="319.5" ></text>
</g>
<g >
<title>__kmalloc (29,054,838,348 samples, 2.83%)</title><rect x="152.1" y="1381" width="33.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="155.06" y="1391.5" >__..</text>
</g>
<g >
<title>malloc (1,018,474,904 samples, 0.10%)</title><rect x="689.8" y="741" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="692.82" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1,255,523,084 samples, 0.12%)</title><rect x="552.2" y="1605" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="555.19" y="1615.5" ></text>
</g>
<g >
<title>lookup_fast (99,025,474 samples, 0.01%)</title><rect x="426.5" y="1461" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="429.53" y="1471.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (154,412,639 samples, 0.02%)</title><rect x="38.6" y="1445" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="41.61" y="1455.5" ></text>
</g>
<g >
<title>inode_to_bdi (502,284,339 samples, 0.05%)</title><rect x="387.9" y="1381" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="390.89" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (555,208,148 samples, 0.05%)</title><rect x="682.4" y="661" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="685.37" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1589" width="1.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="569.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,046,886,838 samples, 0.78%)</title><rect x="814.0" y="213" width="9.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="223.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1493" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="568.30" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,134,119,414 samples, 0.21%)</title><rect x="512.8" y="1605" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="515.82" y="1615.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (198,893,336 samples, 0.02%)</title><rect x="470.4" y="1173" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="473.43" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,862,624,345 samples, 5.25%)</title><rect x="606.7" y="597" width="62.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="609.74" y="607.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,721,351,902 samples, 0.46%)</title><rect x="613.2" y="229" width="5.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="616.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="341" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="613" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="623.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>jbd2__journal_start (99,746,325 samples, 0.01%)</title><rect x="378.3" y="1285" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="381.30" y="1295.5" ></text>
</g>
<g >
<title>proc_reg_read (89,343,705 samples, 0.01%)</title><rect x="484.3" y="1525" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="487.29" y="1535.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (217,809,740 samples, 0.02%)</title><rect x="486.8" y="1477" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="489.81" y="1487.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (1,719,600,222 samples, 0.17%)</title><rect x="34.6" y="1429" width="2.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="37.61" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,169,308,566 samples, 0.41%)</title><rect x="823.7" y="181" width="4.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="191.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (6,208,829,463 samples, 0.61%)</title><rect x="516.3" y="1621" width="7.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="519.29" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,306,113,063 samples, 0.13%)</title><rect x="730.5" y="1061" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="733.45" y="1071.5" ></text>
</g>
<g >
<title>mod_objcg_state (302,108,154 samples, 0.03%)</title><rect x="208.0" y="1333" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="210.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,842,385,172 samples, 3.59%)</title><rect x="608.1" y="517" width="42.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="611.13" y="527.5" >std..</text>
</g>
<g >
<title>asn1_template_ex_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1477" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="568.30" y="1487.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,559,944,038 samples, 0.35%)</title><rect x="399.4" y="1509" width="4.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="402.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="981" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="165" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (200,717,048 samples, 0.02%)</title><rect x="716.6" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="719.61" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="581" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="591.5" ></text>
</g>
<g >
<title>CRYPTO_THREAD_read_lock (102,035,405 samples, 0.01%)</title><rect x="565.3" y="1285" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="568.33" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (142,770,000 samples, 0.01%)</title><rect x="464.4" y="1461" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="467.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1269" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1279.5" ></text>
</g>
<g >
<title>evict (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1349" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="93.81" y="1359.5" ></text>
</g>
<g >
<title>do_writepages (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1461" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1182.62" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="693" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="703.5" ></text>
</g>
<g >
<title>start_kernel (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1589" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.63" y="1599.5" ></text>
</g>
<g >
<title>override_creds (149,965,672 samples, 0.01%)</title><rect x="232.5" y="1445" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="235.48" y="1455.5" ></text>
</g>
<g >
<title>DirTree::_find (507,262,323 samples, 0.05%)</title><rect x="574.7" y="1541" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="577.72" y="1551.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::enumerate_files_non_recursive (145,153,754 samples, 0.01%)</title><rect x="464.8" y="1429" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="467.82" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1541" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,003,891,456 samples, 0.10%)</title><rect x="484.8" y="1621" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="487.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="901" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="911.5" ></text>
</g>
<g >
<title>ovl_permission (96,978,887 samples, 0.01%)</title><rect x="472.3" y="1365" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="475.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1525" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1535.5" ></text>
</g>
<g >
<title>should_failslab (100,594,264 samples, 0.01%)</title><rect x="304.2" y="1237" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="307.24" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="549" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="559.5" ></text>
</g>
<g >
<title>operator new (150,326,190 samples, 0.01%)</title><rect x="726.8" y="997" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="729.80" y="1007.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (156,604,591 samples, 0.02%)</title><rect x="90.1" y="1525" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="93.09" y="1535.5" ></text>
</g>
<g >
<title>cp_new_stat (250,306,103 samples, 0.02%)</title><rect x="786.4" y="1477" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="789.44" y="1487.5" ></text>
</g>
<g >
<title>ksys_write (100,680,189 samples, 0.01%)</title><rect x="399.1" y="1509" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="402.06" y="1519.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1541" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="454.59" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1141" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1151.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (208,906,940 samples, 0.02%)</title><rect x="87.5" y="1509" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="90.47" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="517" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="527.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1125" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="677" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="687.5" >std::__detail::..</text>
</g>
<g >
<title>[libc.so.6] (100,235,291 samples, 0.01%)</title><rect x="725.3" y="965" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="728.32" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (158,274,924,454 samples, 15.42%)</title><rect x="591.6" y="1397" width="182.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="594.59" y="1407.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="245" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="255.5" ></text>
</g>
<g >
<title>operator new (351,485,550 samples, 0.03%)</title><rect x="649.7" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="652.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1397" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (704,335,487 samples, 0.07%)</title><rect x="566.8" y="133" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="569.81" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_free (12,900,690,583 samples, 1.26%)</title><rect x="192.4" y="1333" width="14.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="195.40" y="1343.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1269" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="94.05" y="1279.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (947,283,461 samples, 0.09%)</title><rect x="457.2" y="1509" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="460.18" y="1519.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (603,676,474 samples, 0.06%)</title><rect x="1168.7" y="1317" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1171.75" y="1327.5" ></text>
</g>
<g >
<title>CExtStore::GetFiles (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1525" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="420.41" y="1535.5" ></text>
</g>
<g >
<title>__srcu_read_lock (200,488,412 samples, 0.02%)</title><rect x="118.5" y="1445" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="121.49" y="1455.5" ></text>
</g>
<g >
<title>security_inode_getattr (652,797,064 samples, 0.06%)</title><rect x="800.0" y="1445" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="803.02" y="1455.5" ></text>
</g>
<g >
<title>msvc::path_utf8::filename (197,794,050 samples, 0.02%)</title><rect x="418.9" y="1557" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="421.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="565" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="575.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1061" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,107,201 samples, 0.01%)</title><rect x="633.1" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="636.12" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="261" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="293" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="303.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1141" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="181" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_read (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1509" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1171.75" y="1519.5" ></text>
</g>
<g >
<title>operator new (200,280,836 samples, 0.02%)</title><rect x="642.3" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="645.30" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1621" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.64" y="1631.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (502,753,703 samples, 0.05%)</title><rect x="147.9" y="1397" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="150.91" y="1407.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (954,961,925 samples, 0.09%)</title><rect x="250.1" y="1365" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="253.09" y="1375.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (117,378,171 samples, 0.01%)</title><rect x="1179.8" y="1509" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1182.78" y="1519.5" ></text>
</g>
<g >
<title>cfree (1,658,501,891 samples, 0.16%)</title><rect x="768.2" y="1333" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="771.23" y="1343.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2,813,762,231 samples, 0.27%)</title><rect x="179.0" y="1349" width="3.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="181.96" y="1359.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (155,557,696 samples, 0.02%)</title><rect x="45.5" y="1397" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="48.47" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,154,770,652 samples, 0.11%)</title><rect x="646.1" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="649.11" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1045" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1055.5" ></text>
</g>
<g >
<title>wb_do_writeback (120,683,625 samples, 0.01%)</title><rect x="516.1" y="1541" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="519.11" y="1551.5" ></text>
</g>
<g >
<title>cfree (2,010,245,924 samples, 0.20%)</title><rect x="662.3" y="565" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="665.33" y="575.5" ></text>
</g>
<g >
<title>sqlite3GetVarint (249,443,938 samples, 0.02%)</title><rect x="460.1" y="1349" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="463.09" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (266,804,653 samples, 0.03%)</title><rect x="486.8" y="1541" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="489.81" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (99,752,027 samples, 0.01%)</title><rect x="690.9" y="709" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="693.88" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="853" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,836,811,128 samples, 7.59%)</title><rect x="603.4" y="789" width="89.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="606.44" y="799.5" >std::__det..</text>
</g>
<g >
<title>kthread (257,352,640 samples, 0.03%)</title><rect x="1179.4" y="1605" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1182.45" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (351,676,568 samples, 0.03%)</title><rect x="567.2" y="117" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="570.16" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="757" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="767.5" ></text>
</g>
<g >
<title>sqlite3_step (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1429" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="465.57" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,823,680,812 samples, 0.57%)</title><rect x="828.7" y="1605" width="6.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="831.66" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="197" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="207.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>Glob::isIgnored (180,042,113,051 samples, 17.55%)</title><rect x="577.8" y="1541" width="207.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="580.84" y="1551.5" >Glob::isIgnored</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="933" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (151,107,802 samples, 0.01%)</title><rect x="805.5" y="1557" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="808.52" y="1567.5" ></text>
</g>
<g >
<title>vfs_read (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1477" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1171.75" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1509" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,571,640,356 samples, 0.74%)</title><rect x="701.5" y="901" width="8.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="704.46" y="911.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,081,536,510 samples, 0.11%)</title><rect x="1175.5" y="1557" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1178.53" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1157" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,403,609,894 samples, 0.14%)</title><rect x="733.5" y="1061" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="736.51" y="1071.5" ></text>
</g>
<g >
<title>crypto_shash_update (1,155,112,622 samples, 0.11%)</title><rect x="345.7" y="1205" width="1.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="348.67" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (553,540,568 samples, 0.05%)</title><rect x="614.1" y="165" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="617.14" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (752,420,564 samples, 0.07%)</title><rect x="641.7" y="373" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="644.72" y="383.5" ></text>
</g>
<g >
<title>malloc (251,013,562 samples, 0.02%)</title><rect x="700.8" y="789" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="703.77" y="799.5" ></text>
</g>
<g >
<title>do_sys_openat2 (204,852,393 samples, 0.02%)</title><rect x="484.0" y="1557" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="487.05" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="325" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="335.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>unlock_page_memcg (293,978,435 samples, 0.03%)</title><rect x="467.7" y="1381" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="470.66" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (57,033,380,350 samples, 5.56%)</title><rect x="24.5" y="1525" width="65.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.50" y="1535.5" >do_sysc..</text>
</g>
<g >
<title>__check_object_size.part.0 (652,801,307 samples, 0.06%)</title><rect x="808.7" y="1445" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="811.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="213" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="223.5" ></text>
</g>
<g >
<title>inode_permission (155,423,189 samples, 0.02%)</title><rect x="472.3" y="1381" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="475.28" y="1391.5" ></text>
</g>
<g >
<title>ovl_d_real (251,754,229 samples, 0.02%)</title><rect x="239.1" y="1413" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="242.12" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,112,165,948 samples, 0.11%)</title><rect x="585.9" y="1477" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.86" y="1487.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (200,213,010 samples, 0.02%)</title><rect x="363.5" y="1253" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="366.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="821" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="831.5" ></text>
</g>
<g >
<title>security_inode_getattr (342,734,421 samples, 0.03%)</title><rect x="422.5" y="1445" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="425.46" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1109" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1119.5" ></text>
</g>
<g >
<title>__fget_light (2,212,908,591 samples, 0.22%)</title><rect x="106.2" y="1461" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="109.23" y="1471.5" ></text>
</g>
<g >
<title>aa_file_perm (208,403,332 samples, 0.02%)</title><rect x="74.9" y="1429" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="77.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="981" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="991.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="709" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="719.5" ></text>
</g>
<g >
<title>seq_read (514,524,037 samples, 0.05%)</title><rect x="479.5" y="1525" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="482.54" y="1535.5" ></text>
</g>
<g >
<title>do_iter_read (17,888,257,973 samples, 1.74%)</title><rect x="51.0" y="1429" width="20.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="54.03" y="1439.5" ></text>
</g>
<g >
<title>resolveSelectStep (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1413" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="420.75" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="613" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="623.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1205" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1215.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>up_write (451,026,335 samples, 0.04%)</title><rect x="388.5" y="1381" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="391.47" y="1391.5" ></text>
</g>
<g >
<title>__gmpz_out_str (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1557" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="469.28" y="1567.5" ></text>
</g>
<g >
<title>sqlite3Select (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1413" width="0.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="420.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (953,608,493 samples, 0.09%)</title><rect x="973.1" y="133" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.13" y="143.5" ></text>
</g>
<g >
<title>__kmalloc (301,723,447 samples, 0.03%)</title><rect x="147.3" y="1397" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="150.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="805" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="815.5" ></text>
</g>
<g >
<title>msvc::path_utf8::get_part_of_path_under (150,146,371 samples, 0.01%)</title><rect x="463.5" y="1461" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="466.46" y="1471.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (147,887,595 samples, 0.01%)</title><rect x="418.9" y="1541" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="421.95" y="1551.5" ></text>
</g>
<g >
<title>uv__read (1,231,853,873 samples, 0.12%)</title><rect x="1168.0" y="1573" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1171.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1349" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (135,632,532 samples, 0.01%)</title><rect x="1180.9" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1183.87" y="1567.5" ></text>
</g>
<g >
<title>malloc (352,456,368 samples, 0.03%)</title><rect x="684.5" y="661" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="687.45" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,103,628,440 samples, 0.11%)</title><rect x="680.5" y="677" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="683.47" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1301" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1311.5" ></text>
</g>
<g >
<title>iterate_dir (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1237" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.23" y="1247.5" ></text>
</g>
<g >
<title>malloc (350,352,315 samples, 0.03%)</title><rect x="784.4" y="1477" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="787.37" y="1487.5" ></text>
</g>
<g >
<title>copy_process (591,391,637 samples, 0.06%)</title><rect x="482.4" y="1525" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="485.41" y="1535.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (163,123,200 samples, 0.02%)</title><rect x="512.2" y="1557" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="515.20" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1605" width="3.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="471.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (904,405,755 samples, 0.09%)</title><rect x="613.7" y="197" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="616.74" y="207.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (207,166,257 samples, 0.02%)</title><rect x="41.1" y="1461" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="44.06" y="1471.5" ></text>
</g>
<g >
<title>malloc (1,554,992,352 samples, 0.15%)</title><rect x="706.2" y="869" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="709.18" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (604,975,060 samples, 0.06%)</title><rect x="781.0" y="1381" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="784.00" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,375,098,821 samples, 0.62%)</title><rect x="982.7" y="133" width="7.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="985.66" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (182,749,173 samples, 0.02%)</title><rect x="490.7" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.74" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (928,355,193 samples, 0.09%)</title><rect x="751.7" y="1173" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="754.68" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1077" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1087.5" ></text>
</g>
<g >
<title>inotify_merge (200,470,453 samples, 0.02%)</title><rect x="211.8" y="1365" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="214.79" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (855,311,329 samples, 0.08%)</title><rect x="490.0" y="1461" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.03" y="1471.5" ></text>
</g>
<g >
<title>record__pushfn (1,002,307,030 samples, 0.10%)</title><rect x="1175.6" y="1541" width="1.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1178.62" y="1551.5" ></text>
</g>
<g >
<title>unmap_vmas (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1397" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1176.96" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,052,951,111 samples, 0.10%)</title><rect x="724.2" y="981" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="727.22" y="991.5" ></text>
</g>
<g >
<title>browse_engine::query_include_path_suggestions_impl (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1557" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="420.41" y="1567.5" ></text>
</g>
<g >
<title>__mmap (560,063,263 samples, 0.05%)</title><rect x="441.6" y="1621" width="0.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="444.55" y="1631.5" ></text>
</g>
<g >
<title>__lock (237,271,679 samples, 0.02%)</title><rect x="406.7" y="1605" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="409.66" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (6,675,291,529 samples, 0.65%)</title><rect x="1131.5" y="69" width="7.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1134.48" y="79.5" ></text>
</g>
<g >
<title>do_ovl_get_acl (100,732,272 samples, 0.01%)</title><rect x="792.1" y="1317" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="795.08" y="1327.5" ></text>
</g>
<g >
<title>write (272,346,758,104 samples, 26.54%)</title><rect x="91.2" y="1557" width="313.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="94.23" y="1567.5" >write</text>
</g>
<g >
<title>sqlite3_prepare_v3 (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1509" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="420.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1445" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1045" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (452,240,540 samples, 0.04%)</title><rect x="973.1" y="101" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.13" y="111.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1461" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="420.41" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="837" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="847.5" >std::__detail::..</text>
</g>
<g >
<title>[ls] (159,994,071 samples, 0.02%)</title><rect x="488.8" y="1525" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="491.80" y="1535.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (300,800,464 samples, 0.03%)</title><rect x="456.6" y="1381" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="459.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="981" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="991.5" ></text>
</g>
<g >
<title>copy_pte_range (878,629,036 samples, 0.09%)</title><rect x="509.7" y="1429" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="512.66" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (197,666,528 samples, 0.02%)</title><rect x="415.0" y="1605" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="417.96" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="965" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="837" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="997" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (648,763,984 samples, 0.06%)</title><rect x="735.7" y="1077" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="738.71" y="1087.5" ></text>
</g>
<g >
<title>leave_mm (714,011,729 samples, 0.07%)</title><rect x="1187.6" y="1525" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1190.57" y="1535.5" ></text>
</g>
<g >
<title>__virt_addr_valid (185,201,371 samples, 0.02%)</title><rect x="1181.4" y="1285" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1184.41" y="1295.5" ></text>
</g>
<g >
<title>filemap_get_pages (103,950,906 samples, 0.01%)</title><rect x="54.1" y="1365" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="57.14" y="1375.5" ></text>
</g>
<g >
<title>operator new (1,379,717,550 samples, 0.13%)</title><rect x="751.2" y="1205" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="754.22" y="1215.5" ></text>
</g>
<g >
<title>operator new (200,966,712 samples, 0.02%)</title><rect x="736.2" y="1061" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="739.16" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1477" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1487.5" ></text>
</g>
<g >
<title>futex_wait (249,512,285 samples, 0.02%)</title><rect x="436.0" y="1541" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="439.02" y="1551.5" ></text>
</g>
<g >
<title>__alloc_file (97,862,271 samples, 0.01%)</title><rect x="423.6" y="1445" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="426.64" y="1455.5" ></text>
</g>
<g >
<title>zap_pte_range (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1333" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1176.96" y="1343.5" ></text>
</g>
<g >
<title>insert_string_simd (673,760,319 samples, 0.07%)</title><rect x="1170.3" y="1509" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1173.26" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (351,407,787 samples, 0.03%)</title><rect x="189.9" y="1381" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="192.91" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1029" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator=@plt (352,179,095 samples, 0.03%)</title><rect x="1131.1" y="69" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1134.08" y="79.5" ></text>
</g>
<g >
<title>copy_process (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1381" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="566.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,987,988,262 samples, 13.74%)</title><rect x="593.5" y="1285" width="162.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="596.50" y="1295.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>free@plt (100,716,941 samples, 0.01%)</title><rect x="689.6" y="757" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="692.65" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,816,223,754 samples, 1.44%)</title><rect x="786.2" y="1525" width="17.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="789.21" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1413" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.39" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,333,685 samples, 0.01%)</title><rect x="610.0" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="612.97" y="431.5" ></text>
</g>
<g >
<title>malloc (250,510,868 samples, 0.02%)</title><rect x="625.7" y="213" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="628.69" y="223.5" ></text>
</g>
<g >
<title>ovl_write_iter (144,931,867,618 samples, 14.12%)</title><rect x="225.7" y="1461" width="166.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="228.67" y="1471.5" >ovl_write_iter</text>
</g>
<g >
<title>free@plt (150,722,473 samples, 0.01%)</title><rect x="664.6" y="565" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="667.64" y="575.5" ></text>
</g>
<g >
<title>operator new (150,606,532 samples, 0.01%)</title><rect x="571.8" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="574.77" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,761,289 samples, 0.01%)</title><rect x="981.0" y="37" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="983.99" y="47.5" ></text>
</g>
<g >
<title>amd_clear_divider (258,520,097 samples, 0.03%)</title><rect x="87.2" y="1509" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="90.17" y="1519.5" ></text>
</g>
<g >
<title>begin_new_exec (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1477" width="2.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1174.64" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_futex (483,113,741 samples, 0.05%)</title><rect x="446.7" y="1573" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="449.74" y="1583.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1573" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="420.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,900,837 samples, 0.01%)</title><rect x="709.0" y="853" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="711.96" y="863.5" ></text>
</g>
<g >
<title>seq_read_iter (144,195,785 samples, 0.01%)</title><rect x="1171.1" y="1413" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1174.06" y="1423.5" ></text>
</g>
<g >
<title>[[heap]] (215,903,691 samples, 0.02%)</title><rect x="523.4" y="1621" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="526.43" y="1631.5" ></text>
</g>
<g >
<title>code_store::store_t::get_files (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1525" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.92" y="1535.5" ></text>
</g>
<g >
<title>generic_file_read_iter (14,420,877,981 samples, 1.41%)</title><rect x="53.1" y="1381" width="16.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="56.12" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (99,884,517 samples, 0.01%)</title><rect x="463.5" y="1445" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="466.52" y="1455.5" ></text>
</g>
<g >
<title>execute_command_internal (427,926,634 samples, 0.04%)</title><rect x="1181.9" y="1477" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.94" y="1487.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (230,873,585 samples, 0.02%)</title><rect x="1179.8" y="1557" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1182.75" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (602,849,851 samples, 0.06%)</title><rect x="822.2" y="149" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="825.25" y="159.5" ></text>
</g>
<g >
<title>folio_wait_stable (100,660,908 samples, 0.01%)</title><rect x="286.4" y="1301" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="289.40" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (304,342,926 samples, 0.03%)</title><rect x="1184.2" y="1621" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.15" y="1631.5" ></text>
</g>
<g >
<title>sqlite3RunParser (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1429" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.92" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (6,729,510,346 samples, 0.66%)</title><rect x="457.0" y="1541" width="7.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="459.97" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="149" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="159.5" ></text>
</g>
<g >
<title>malloc (251,654,091 samples, 0.02%)</title><rect x="727.1" y="981" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="730.15" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="341" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="351.5" >std::__detail::..</text>
</g>
<g >
<title>_raw_spin_lock (278,321,173 samples, 0.03%)</title><rect x="483.3" y="1509" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="486.29" y="1519.5" ></text>
</g>
<g >
<title>memcg_account_kmem (177,691,282 samples, 0.02%)</title><rect x="509.7" y="1333" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="512.72" y="1343.5" ></text>
</g>
<g >
<title>vfs_statx (2,055,385,621 samples, 0.20%)</title><rect x="420.5" y="1509" width="2.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="423.54" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_statx (391,836,928 samples, 0.04%)</title><rect x="489.3" y="1477" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="492.34" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (854,031,618 samples, 0.08%)</title><rect x="734.1" y="1045" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="737.09" y="1055.5" ></text>
</g>
<g >
<title>v8::internal::Heap::NotifyObjectLayoutChange (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1509" width="0.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="565.54" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,038,789,268 samples, 10.14%)</title><rect x="598.6" y="1029" width="119.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.64" y="1039.5" >std::__detail:..</text>
</g>
<g >
<title>[perf-3932779.map] (2,732,947,894 samples, 0.27%)</title><rect x="563.3" y="1621" width="3.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="566.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (78,692,103,313 samples, 7.67%)</title><rect x="602.5" y="821" width="90.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="605.52" y="831.5" >std::__det..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="341" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (97,863,571 samples, 0.01%)</title><rect x="1185.5" y="1589" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="677" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="687.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>mark_page_accessed (100,580,692 samples, 0.01%)</title><rect x="376.2" y="1205" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="379.17" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,173,267,528 samples, 0.50%)</title><rect x="612.8" y="245" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="615.76" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="453" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,713,456,776 samples, 1.34%)</title><rect x="974.2" y="149" width="15.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="159.5" ></text>
</g>
<g >
<title>setlocale (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1541" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1185.46" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="517" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="527.5" ></text>
</g>
<g >
<title>msvc::string_to_guid (99,423,103 samples, 0.01%)</title><rect x="458.4" y="1429" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="461.44" y="1439.5" ></text>
</g>
<g >
<title>sqlite3GetToken (148,924,980 samples, 0.01%)</title><rect x="417.6" y="1397" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="420.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="245" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="255.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>proc_pid_readdir (193,843,664 samples, 0.02%)</title><rect x="483.8" y="1525" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="486.82" y="1535.5" ></text>
</g>
<g >
<title>__fsnotify_parent (7,923,555,781 samples, 0.77%)</title><rect x="77.2" y="1413" width="9.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="80.22" y="1423.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (104,555,473 samples, 0.01%)</title><rect x="79.9" y="1397" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="82.90" y="1407.5" ></text>
</g>
<g >
<title>malloc (150,606,532 samples, 0.01%)</title><rect x="571.8" y="165" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="574.77" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (159,292,278 samples, 0.02%)</title><rect x="442.5" y="1429" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="445.48" y="1439.5" ></text>
</g>
<g >
<title>dput (550,469,577 samples, 0.05%)</title><rect x="123.4" y="1445" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="126.39" y="1455.5" ></text>
</g>
<g >
<title>quiet_vmstat (317,405,121 samples, 0.03%)</title><rect x="1189.6" y="1461" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1192.63" y="1471.5" ></text>
</g>
<g >
<title>mod_objcg_state (4,365,556,057 samples, 0.43%)</title><rect x="199.3" y="1317" width="5.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="202.28" y="1327.5" ></text>
</g>
<g >
<title>cfree (1,707,542,524 samples, 0.17%)</title><rect x="818.0" y="149" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="820.96" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1445" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (1,562,002,592 samples, 0.15%)</title><rect x="560.6" y="1605" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="563.59" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1493" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.46" y="1503.5" ></text>
</g>
<g >
<title>lookup_fast (105,927,666 samples, 0.01%)</title><rect x="489.6" y="1381" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="492.61" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1461" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="494.10" y="1471.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1573" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1176.96" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,725,535 samples, 0.01%)</title><rect x="741.9" y="1109" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="744.94" y="1119.5" ></text>
</g>
<g >
<title>consume_obj_stock (602,824,263 samples, 0.06%)</title><rect x="163.2" y="1349" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="166.20" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (407,047,770 samples, 0.04%)</title><rect x="850.5" y="101" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (391,836,928 samples, 0.04%)</title><rect x="489.3" y="1493" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="492.34" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,659,000 samples, 0.01%)</title><rect x="604.2" y="741" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="607.20" y="751.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (47,006,261,001 samples, 4.58%)</title><rect x="323.6" y="1285" width="54.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="326.55" y="1295.5" >__ext..</text>
</g>
<g >
<title>[libc.so.6] (418,261,229 samples, 0.04%)</title><rect x="1183.6" y="1493" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,102,389,075 samples, 0.30%)</title><rect x="568.4" y="213" width="3.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="571.38" y="223.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (105,631,594 samples, 0.01%)</title><rect x="1176.6" y="1253" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1179.57" y="1263.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (257,246,327 samples, 0.03%)</title><rect x="516.5" y="1461" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="519.50" y="1471.5" ></text>
</g>
<g >
<title>proactive_compact_node (490,102,322 samples, 0.05%)</title><rect x="515.3" y="1573" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="518.27" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_read (6,289,772,788 samples, 0.61%)</title><rect x="806.5" y="1541" width="7.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="809.45" y="1551.5" ></text>
</g>
<g >
<title>malloc (452,400,689 samples, 0.04%)</title><rect x="667.9" y="533" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="670.93" y="543.5" ></text>
</g>
<g >
<title>unmap_page_range (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1365" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1176.96" y="1375.5" ></text>
</g>
<g >
<title>ovl_d_real (208,114,123 samples, 0.02%)</title><rect x="49.9" y="1413" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="52.89" y="1423.5" ></text>
</g>
<g >
<title>generic_file_read_iter (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1461" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="458.55" y="1471.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (450,382,044 samples, 0.04%)</title><rect x="807.6" y="1445" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="810.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (87,142,861,664 samples, 8.49%)</title><rect x="601.2" y="901" width="100.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="604.25" y="911.5" >std::__detai..</text>
</g>
<g >
<title>sqlite3LockAndPrepare (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1461" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="420.92" y="1471.5" ></text>
</g>
<g >
<title>override_creds (103,312,381 samples, 0.01%)</title><rect x="41.9" y="1445" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="44.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="949" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="959.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,073,689,565 samples, 0.10%)</title><rect x="478.9" y="1605" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="481.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="309" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="319.5" ></text>
</g>
<g >
<title>CExtStore::GetFile (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1493" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="465.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1161.70" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (338,479,031 samples, 0.03%)</title><rect x="1182.8" y="1605" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.80" y="1615.5" ></text>
</g>
<g >
<title>exit_mmap (310,788,856 samples, 0.03%)</title><rect x="467.6" y="1493" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="470.64" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (2,408,770,730 samples, 0.23%)</title><rect x="970.4" y="101" width="2.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="973.36" y="111.5" ></text>
</g>
<g >
<title>cache_from_obj (502,436,342 samples, 0.05%)</title><rect x="315.0" y="1237" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="317.96" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1189" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1199.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (98,497,802 samples, 0.01%)</title><rect x="441.9" y="1493" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="444.91" y="1503.5" ></text>
</g>
<g >
<title>ovl_i_path_real (100,753,602 samples, 0.01%)</title><rect x="792.2" y="1317" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="795.19" y="1327.5" ></text>
</g>
<g >
<title>begin_new_exec (724,938,075 samples, 0.07%)</title><rect x="484.8" y="1477" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="487.83" y="1487.5" ></text>
</g>
<g >
<title>sqlite3WhereBegin (198,953,787 samples, 0.02%)</title><rect x="418.1" y="1397" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="421.09" y="1407.5" ></text>
</g>
<g >
<title>OSSL_DECODER_CTX_new_for_pkey (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1365" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="568.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1109" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1119.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__cond_resched (150,550,104 samples, 0.01%)</title><rect x="117.7" y="1445" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="120.68" y="1455.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (151,115,201 samples, 0.01%)</title><rect x="377.4" y="1253" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="380.44" y="1263.5" ></text>
</g>
<g >
<title>parser::update_file_if_needed (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1509" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="465.57" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,798,725,261 samples, 10.99%)</title><rect x="597.8" y="1077" width="129.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="600.84" y="1087.5" >std::__detail::_..</text>
</g>
<g >
<title>memcg_account_kmem (150,357,204 samples, 0.01%)</title><rect x="182.0" y="1333" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="184.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="357" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (301,628,820 samples, 0.03%)</title><rect x="642.6" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="645.59" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (149,061,546 samples, 0.01%)</title><rect x="1180.5" y="1605" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1183.52" y="1615.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,579,240,576 samples, 0.35%)</title><rect x="1185.9" y="1621" width="4.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1188.88" y="1631.5" ></text>
</g>
<g >
<title>malloc (249,845,877 samples, 0.02%)</title><rect x="764.4" y="1237" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="767.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="677" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,728,427 samples, 0.01%)</title><rect x="852.3" y="69" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="855.26" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1477" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,473,348,039 samples, 4.33%)</title><rect x="608.0" y="533" width="51.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="611.01" y="543.5" >std::..</text>
</g>
<g >
<title>__writeback_single_inode (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1477" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="519.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,467,740,919 samples, 5.31%)</title><rect x="606.1" y="645" width="62.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="609.10" y="655.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="901" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="911.5" ></text>
</g>
<g >
<title>__kmem_cache_free (1,703,097,352 samples, 0.17%)</title><rect x="811.2" y="1429" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="814.20" y="1439.5" ></text>
</g>
<g >
<title>fsnotify_insert_event (4,156,983,689 samples, 0.41%)</title><rect x="209.1" y="1381" width="4.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="212.14" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1349" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="475.27" y="1535.5" ></text>
</g>
<g >
<title>__check_heap_object (99,746,032 samples, 0.01%)</title><rect x="809.2" y="1413" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="812.17" y="1423.5" ></text>
</g>
<g >
<title>__wake_up (4,063,170,179 samples, 0.40%)</title><rect x="318.4" y="1237" width="4.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="321.36" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="773" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="783.5" ></text>
</g>
<g >
<title>iterate_dir (198,893,336 samples, 0.02%)</title><rect x="470.4" y="1205" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.43" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (133,118,333 samples, 0.01%)</title><rect x="1181.8" y="1365" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.75" y="1375.5" ></text>
</g>
<g >
<title>mnt_user_ns (300,992,514 samples, 0.03%)</title><rect x="234.7" y="1429" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="237.73" y="1439.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (336,818,704 samples, 0.03%)</title><rect x="516.4" y="1493" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="519.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1333" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1343.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (251,425,502 samples, 0.02%)</title><rect x="281.7" y="1285" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="284.73" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,522,246,362 samples, 0.34%)</title><rect x="1158.9" y="117" width="4.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,713,456,776 samples, 1.34%)</title><rect x="974.2" y="181" width="15.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (200,739,560 samples, 0.02%)</title><rect x="762.9" y="1221" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="765.87" y="1231.5" ></text>
</g>
<g >
<title>_IO_fwrite (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1541" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="469.28" y="1551.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (195,568,168 samples, 0.02%)</title><rect x="1183.3" y="1461" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.31" y="1471.5" ></text>
</g>
<g >
<title>dput (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1413" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="93.81" y="1423.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (101,928,090 samples, 0.01%)</title><rect x="69.8" y="1413" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="72.77" y="1423.5" ></text>
</g>
<g >
<title>down_write (2,359,525,412 samples, 0.23%)</title><rect x="246.8" y="1365" width="2.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="249.80" y="1375.5" ></text>
</g>
<g >
<title>perf_poll (190,560,735 samples, 0.02%)</title><rect x="1174.9" y="1477" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1177.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1253" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="405" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="597" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1285" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1295.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>override_creds (1,212,372,255 samples, 0.12%)</title><rect x="793.5" y="1349" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="796.52" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="789" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="799.5" ></text>
</g>
<g >
<title>uv_cond_wait (114,642,546 samples, 0.01%)</title><rect x="1171.4" y="1573" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1174.37" y="1583.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (200,682,190 samples, 0.02%)</title><rect x="297.3" y="1269" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="300.31" y="1279.5" ></text>
</g>
<g >
<title>unlock_page_memcg (136,713,534 samples, 0.01%)</title><rect x="485.5" y="1301" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="488.47" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="245" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (261,607,519 samples, 0.03%)</title><rect x="478.0" y="1461" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.05" y="1471.5" ></text>
</g>
<g >
<title>vfs_fstatat (14,266,702,023 samples, 1.39%)</title><rect x="786.7" y="1477" width="16.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="789.73" y="1487.5" ></text>
</g>
<g >
<title>expand_string_assignment (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1381" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1185.28" y="1391.5" ></text>
</g>
<g >
<title>do_readlinkat (2,405,991,042 samples, 0.23%)</title><rect x="424.0" y="1541" width="2.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="427.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (158,627,004,718 samples, 15.46%)</title><rect x="591.2" y="1413" width="182.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="594.18" y="1423.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>check_heap_object (163,956,909 samples, 0.02%)</title><rect x="787.6" y="1381" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="790.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1061" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62,299,941,065 samples, 6.07%)</title><rect x="605.7" y="677" width="71.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="608.70" y="687.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,470,192,001 samples, 0.44%)</title><rect x="613.4" y="213" width="5.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="616.39" y="223.5" ></text>
</g>
<g >
<title>kernel_clone (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1557" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="515.82" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1221" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1231.5" ></text>
</g>
<g >
<title>wb_workfn (120,683,625 samples, 0.01%)</title><rect x="516.1" y="1557" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="519.11" y="1567.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1541" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="420.41" y="1551.5" ></text>
</g>
<g >
<title>kfree (1,756,858,178 samples, 0.17%)</title><rect x="811.1" y="1445" width="2.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="814.14" y="1455.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (199,822,203 samples, 0.02%)</title><rect x="281.4" y="1237" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="284.38" y="1247.5" ></text>
</g>
<g >
<title>iterate_dir (236,629,477 samples, 0.02%)</title><rect x="470.8" y="1221" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="473.82" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="133" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="143.5" ></text>
</g>
<g >
<title>lockref_put_return (1,762,572,830 samples, 0.17%)</title><rect x="219.0" y="1445" width="2.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="222.00" y="1455.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (236,629,477 samples, 0.02%)</title><rect x="470.8" y="1189" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="473.82" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,145,544,926 samples, 0.70%)</title><rect x="693.2" y="837" width="8.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="696.19" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1237" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1253" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.15" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (337,615,076 samples, 0.03%)</title><rect x="1179.1" y="1621" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.06" y="1631.5" ></text>
</g>
<g >
<title>touch_atime (260,328,199 samples, 0.03%)</title><rect x="50.7" y="1445" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="53.73" y="1455.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1573" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1174.64" y="1583.5" ></text>
</g>
<g >
<title>[git] (5,128,369,371 samples, 0.50%)</title><rect x="472.0" y="1589" width="5.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="475.04" y="1599.5" ></text>
</g>
<g >
<title>msvc::path_utf8::folder (906,957,154 samples, 0.09%)</title><rect x="460.7" y="1477" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="463.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (54,016,161,002 samples, 5.26%)</title><rect x="606.6" y="613" width="62.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="609.62" y="623.5" >std::_..</text>
</g>
<g >
<title>uv__fs_read (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1557" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1174.05" y="1567.5" ></text>
</g>
<g >
<title>mas_wr_modify (147,936,563 samples, 0.01%)</title><rect x="442.7" y="1429" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="445.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (704,818,636 samples, 0.07%)</title><rect x="570.6" y="181" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="573.56" y="191.5" ></text>
</g>
<g >
<title>glob_matcher::match (1,087,496,774 samples, 0.11%)</title><rect x="463.5" y="1493" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="466.46" y="1503.5" ></text>
</g>
<g >
<title>[anon] (87,958,100 samples, 0.01%)</title><rect x="487.5" y="1621" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="490.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="821" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="831.5" ></text>
</g>
<g >
<title>strlen (99,580,671 samples, 0.01%)</title><rect x="465.6" y="1621" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="468.55" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,159,579,250 samples, 0.11%)</title><rect x="466.2" y="1589" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.22" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="261" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="271.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (98,708,646 samples, 0.01%)</title><rect x="464.6" y="1477" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="467.60" y="1487.5" ></text>
</g>
<g >
<title>seq_read_iter (132,106,614 samples, 0.01%)</title><rect x="1177.2" y="1509" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1180.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1493" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="325" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (133,118,333 samples, 0.01%)</title><rect x="1181.8" y="1349" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="821" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="831.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (201,329,602 samples, 0.02%)</title><rect x="262.3" y="1317" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="265.26" y="1327.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (1,152,007,011 samples, 0.11%)</title><rect x="138.6" y="1429" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="141.62" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (211,936,522 samples, 0.02%)</title><rect x="419.8" y="1525" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="422.78" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (125,966,493 samples, 0.01%)</title><rect x="426.8" y="1573" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="429.82" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1461" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1471.5" ></text>
</g>
<g >
<title>malloc (24,436,244,401 samples, 2.38%)</title><rect x="917.5" y="85" width="28.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="920.53" y="95.5" >m..</text>
</g>
<g >
<title>iterate_dir (132,053,223 samples, 0.01%)</title><rect x="1181.8" y="1317" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1184.75" y="1327.5" ></text>
</g>
<g >
<title>pid_revalidate (92,377,217 samples, 0.01%)</title><rect x="484.1" y="1461" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="487.07" y="1471.5" ></text>
</g>
<g >
<title>free@plt (1,505,264,544 samples, 0.15%)</title><rect x="1090.0" y="69" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1092.97" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1285" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.23" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1365" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1365" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1375.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>do_mmap (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1109" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="492.15" y="1119.5" ></text>
</g>
<g >
<title>mas_preallocate (98,684,737 samples, 0.01%)</title><rect x="442.9" y="1509" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="445.95" y="1519.5" ></text>
</g>
<g >
<title>memset_erms (1,755,496,537 samples, 0.17%)</title><rect x="304.5" y="1253" width="2.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="307.53" y="1263.5" ></text>
</g>
<g >
<title>rest_init (266,804,653 samples, 0.03%)</title><rect x="486.8" y="1557" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="489.81" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_open (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1557" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="429.82" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1429" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,414,749,619 samples, 0.72%)</title><rect x="626.5" y="325" width="8.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="629.50" y="335.5" ></text>
</g>
<g >
<title>operator new@plt (100,741,994 samples, 0.01%)</title><rect x="782.0" y="1381" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="785.04" y="1391.5" ></text>
</g>
<g >
<title>vfs_statx (127,109,334 samples, 0.01%)</title><rect x="478.9" y="1525" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="481.95" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1061" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1071.5" >std::__detail::..</text>
</g>
<g >
<title>dentry_open (97,862,271 samples, 0.01%)</title><rect x="423.6" y="1477" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="426.64" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1301" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1311.5" ></text>
</g>
<g >
<title>record__write (1,002,307,030 samples, 0.10%)</title><rect x="1175.6" y="1525" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1178.62" y="1535.5" ></text>
</g>
<g >
<title>memset_erms (201,508,653 samples, 0.02%)</title><rect x="786.9" y="1429" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="789.91" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (183,912,765 samples, 0.02%)</title><rect x="489.1" y="1285" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.10" y="1295.5" ></text>
</g>
<g >
<title>pagecache_get_page (252,804,276 samples, 0.02%)</title><rect x="1176.2" y="1253" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1179.19" y="1263.5" ></text>
</g>
<g >
<title>operator new (7,838,080,112 samples, 0.76%)</title><rect x="961.3" y="85" width="9.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="964.34" y="95.5" ></text>
</g>
<g >
<title>kernel_clone (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1397" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="566.57" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,047,149,216 samples, 0.78%)</title><rect x="773.7" y="1413" width="9.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="776.72" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="661" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="517" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="527.5" ></text>
</g>
<g >
<title>aa_file_perm (903,810,513 samples, 0.09%)</title><rect x="396.7" y="1413" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="399.69" y="1423.5" ></text>
</g>
<g >
<title>menu_select (601,127,267 samples, 0.06%)</title><rect x="1188.4" y="1525" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1191.39" y="1535.5" ></text>
</g>
<g >
<title>__do_sys_clone (591,391,637 samples, 0.06%)</title><rect x="482.4" y="1557" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="485.41" y="1567.5" ></text>
</g>
<g >
<title>_copy_to_iter (625,628,284 samples, 0.06%)</title><rect x="58.1" y="1333" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="61.08" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,153,421 samples, 0.01%)</title><rect x="1164.5" y="101" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.49" y="111.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1,741,220,017 samples, 0.17%)</title><rect x="424.4" y="1477" width="2.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="427.36" y="1487.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (74,700,574,407 samples, 7.28%)</title><rect x="292.8" y="1317" width="85.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="295.80" y="1327.5" >__mark_ino..</text>
</g>
<g >
<title>ext4_readdir (258,970,766 samples, 0.03%)</title><rect x="423.3" y="1477" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="426.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,375,098,821 samples, 0.62%)</title><rect x="982.7" y="85" width="7.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="985.66" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="421" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="431.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (955,489,853 samples, 0.09%)</title><rect x="165.4" y="1333" width="1.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="168.39" y="1343.5" ></text>
</g>
<g >
<title>override_creds (159,393,076 samples, 0.02%)</title><rect x="477.2" y="1413" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="480.19" y="1423.5" ></text>
</g>
<g >
<title>ovl_write_iter (784,744,514 samples, 0.08%)</title><rect x="1175.8" y="1397" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1178.84" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (99,756,907 samples, 0.01%)</title><rect x="760.6" y="1237" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="763.61" y="1247.5" ></text>
</g>
<g >
<title>malloc (100,739,151 samples, 0.01%)</title><rect x="735.4" y="1045" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="738.42" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (803,071,438 samples, 0.08%)</title><rect x="754.2" y="1205" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="757.25" y="1215.5" ></text>
</g>
<g >
<title>ksys_read (159,459,593 samples, 0.02%)</title><rect x="1177.2" y="1557" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1180.19" y="1567.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1141" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="492.15" y="1151.5" ></text>
</g>
<g >
<title>send_to_group (904,706,539 samples, 0.09%)</title><rect x="222.1" y="1445" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="225.06" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::_M_default_append (456,797,265 samples, 0.04%)</title><rect x="783.3" y="1509" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="786.33" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1573" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1583.5" ></text>
</g>
<g >
<title>PageHeadHuge (150,452,682 samples, 0.01%)</title><rect x="274.5" y="1301" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="277.46" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator=@plt (100,700,407 samples, 0.01%)</title><rect x="684.9" y="693" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="687.86" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (352,065,117 samples, 0.03%)</title><rect x="814.1" y="133" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.09" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (969,215,467 samples, 0.09%)</title><rect x="1175.6" y="1445" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.65" y="1455.5" ></text>
</g>
<g >
<title>__x64_sys_execve (310,986,098 samples, 0.03%)</title><rect x="1179.1" y="1589" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1182.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1349" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,778,523 samples, 0.01%)</title><rect x="591.6" y="1381" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="594.65" y="1391.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1541" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (251,375,116 samples, 0.02%)</title><rect x="1179.7" y="1589" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1182.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,142,815,472 samples, 14.63%)</title><rect x="592.7" y="1333" width="172.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="595.74" y="1343.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="981" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="991.5" ></text>
</g>
<g >
<title>call_filldir (98,353,948 samples, 0.01%)</title><rect x="423.3" y="1445" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="426.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="485" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="495.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (354,494,296 samples, 0.03%)</title><rect x="791.9" y="1349" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="794.90" y="1359.5" ></text>
</g>
<g >
<title>fsnotify (82,185,583,107 samples, 8.01%)</title><rect x="124.0" y="1445" width="94.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="127.02" y="1455.5" >fsnotify</text>
</g>
<g >
<title>code_store::statement_t::prepare (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1541" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="420.75" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="613" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="517" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (653,340,962 samples, 0.06%)</title><rect x="567.6" y="165" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1109" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1119.5" ></text>
</g>
<g >
<title>sqlite3Select (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1461" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="420.75" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (142,982,859 samples, 0.01%)</title><rect x="1182.5" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="485" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="495.5" ></text>
</g>
<g >
<title>Glob::isIgnored (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1605" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="569.53" y="1615.5" ></text>
</g>
<g >
<title>operator new (6,081,555,216 samples, 0.59%)</title><rect x="838.2" y="1605" width="7.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="841.21" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_execve (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1589" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="454.59" y="1599.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (401,751,275 samples, 0.04%)</title><rect x="183.6" y="1365" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="186.57" y="1375.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1413" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="459.34" y="1423.5" ></text>
</g>
<g >
<title>__dentry_kill (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1397" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="93.81" y="1407.5" ></text>
</g>
<g >
<title>page_remove_rmap (293,978,435 samples, 0.03%)</title><rect x="467.7" y="1397" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="470.66" y="1407.5" ></text>
</g>
<g >
<title>__cond_resched (150,163,139 samples, 0.01%)</title><rect x="364.2" y="1253" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="367.23" y="1263.5" ></text>
</g>
<g >
<title>ext4_writepages (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1445" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="519.11" y="1455.5" ></text>
</g>
<g >
<title>filename_lookup (97,427,531 samples, 0.01%)</title><rect x="452.1" y="1509" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="455.05" y="1519.5" ></text>
</g>
<g >
<title>cfree (100,670,698 samples, 0.01%)</title><rect x="523.4" y="1605" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="526.43" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (100,749,865 samples, 0.01%)</title><rect x="634.8" y="309" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="637.79" y="319.5" ></text>
</g>
<g >
<title>exit_mmap (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1413" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="454.59" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="485" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="495.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (616,855,840 samples, 0.06%)</title><rect x="1168.0" y="1541" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1171.04" y="1551.5" ></text>
</g>
<g >
<title>malloc (1,401,476,048 samples, 0.14%)</title><rect x="723.8" y="997" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="726.82" y="1007.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (100,603,750 samples, 0.01%)</title><rect x="403.5" y="1525" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="406.50" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_wait (114,642,546 samples, 0.01%)</title><rect x="1171.4" y="1557" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1174.37" y="1567.5" ></text>
</g>
<g >
<title>xas_start (257,409,493 samples, 0.03%)</title><rect x="68.9" y="1301" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="71.94" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (114,260,228 samples, 0.01%)</title><rect x="487.4" y="1605" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.36" y="1615.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,363,634,957 samples, 0.43%)</title><rect x="516.4" y="1541" width="5.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="519.38" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;true&gt; (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1557" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="565.54" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="645" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1157" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1167.5" ></text>
</g>
<g >
<title>__virt_addr_valid (103,848,408 samples, 0.01%)</title><rect x="787.4" y="1381" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="790.43" y="1391.5" ></text>
</g>
<g >
<title>strncpy_from_user (619,721,270 samples, 0.06%)</title><rect x="787.1" y="1429" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="790.14" y="1439.5" ></text>
</g>
<g >
<title>iterate_dir (148,031,486 samples, 0.01%)</title><rect x="423.2" y="1509" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="426.18" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1205" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.15" y="1215.5" ></text>
</g>
<g >
<title>__do_softirq (257,080,048 samples, 0.03%)</title><rect x="516.5" y="1445" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="519.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,530,564,246 samples, 16.42%)</title><rect x="589.2" y="1461" width="193.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="592.22" y="1471.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>_raw_spin_unlock (100,747,247 samples, 0.01%)</title><rect x="211.7" y="1365" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="214.67" y="1375.5" ></text>
</g>
<g >
<title>mas_replace (98,587,269 samples, 0.01%)</title><rect x="442.7" y="1397" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="445.72" y="1407.5" ></text>
</g>
<g >
<title>[bash] (969,179,473 samples, 0.09%)</title><rect x="1181.3" y="1509" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.32" y="1519.5" ></text>
</g>
<g >
<title>__lock (4,256,514,681 samples, 0.41%)</title><rect x="431.5" y="1621" width="4.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="434.47" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1381" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1391.5" ></text>
</g>
<g >
<title>vfs_statx (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1445" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="475.27" y="1455.5" ></text>
</g>
<g >
<title>__filemap_get_folio (149,880,024 samples, 0.01%)</title><rect x="273.8" y="1317" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="276.77" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="325" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="549" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="559.5" ></text>
</g>
<g >
<title>grep (7,923,251,241 samples, 0.77%)</title><rect x="478.0" y="1637" width="9.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="481.01" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.70" y="159.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (1,488,905,552 samples, 0.15%)</title><rect x="563.6" y="1525" width="1.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="566.56" y="1535.5" ></text>
</g>
<g >
<title>operator new (1,168,159,887 samples, 0.11%)</title><rect x="742.2" y="1141" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="745.23" y="1151.5" ></text>
</g>
<g >
<title>fault_in_readable (301,685,087 samples, 0.03%)</title><rect x="384.5" y="1349" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="387.49" y="1359.5" ></text>
</g>
<g >
<title>zap_pte_range (1,209,975,017 samples, 0.12%)</title><rect x="513.4" y="1333" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="516.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (690,638,899 samples, 0.07%)</title><rect x="725.4" y="1013" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="728.43" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,062,250 samples, 0.01%)</title><rect x="575.1" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="578.13" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1413" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1423.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,368,400,807 samples, 0.33%)</title><rect x="58.8" y="1333" width="3.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="61.80" y="1343.5" ></text>
</g>
<g >
<title>proc_fill_cache (99,995,196 samples, 0.01%)</title><rect x="1181.8" y="1269" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1184.78" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="965" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="975.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,361,862 samples, 0.01%)</title><rect x="592.9" y="1317" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="595.92" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1429" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (14,716,555,150 samples, 1.43%)</title><rect x="786.3" y="1509" width="16.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="789.27" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1189" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="492.15" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,473,546 samples, 0.01%)</title><rect x="699.4" y="773" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="702.41" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1461" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="293" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,658,348,563 samples, 0.65%)</title><rect x="710.5" y="965" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="713.51" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="789" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1477" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (700,741,001 samples, 0.07%)</title><rect x="821.4" y="149" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="824.38" y="159.5" ></text>
</g>
<g >
<title>__do_sys_clone (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1413" width="1.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="566.57" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (386,575,931 samples, 0.04%)</title><rect x="1178.6" y="1589" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1181.62" y="1599.5" ></text>
</g>
<g >
<title>pte_alloc_one (250,353,062 samples, 0.02%)</title><rect x="509.7" y="1397" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="512.70" y="1407.5" ></text>
</g>
<g >
<title>operator new (250,325,771 samples, 0.02%)</title><rect x="717.5" y="933" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="720.48" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,599,119 samples, 0.03%)</title><rect x="823.3" y="213" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.29" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.46" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (153,304,359 samples, 0.01%)</title><rect x="828.5" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="831.49" y="159.5" ></text>
</g>
<g >
<title>vfs_write (953,845,824 samples, 0.09%)</title><rect x="1175.7" y="1413" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1178.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="869" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="879.5" ></text>
</g>
<g >
<title>rw_verify_area (2,934,798,975 samples, 0.29%)</title><rect x="394.4" y="1461" width="3.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="397.35" y="1471.5" ></text>
</g>
<g >
<title>do_readlinkat (117,302,247 samples, 0.01%)</title><rect x="488.5" y="1557" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="491.53" y="1567.5" ></text>
</g>
<g >
<title>update_curr (98,427,949 samples, 0.01%)</title><rect x="436.1" y="1429" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="439.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="549" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="629" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="639.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,713,456,776 samples, 1.34%)</title><rect x="974.2" y="197" width="15.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="613" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="623.5" ></text>
</g>
<g >
<title>swapper (3,831,704,936 samples, 0.37%)</title><rect x="1185.6" y="1637" width="4.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1188.59" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (402,598,074 samples, 0.04%)</title><rect x="745.0" y="1141" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="748.04" y="1151.5" ></text>
</g>
<g >
<title>malloc (150,104,784 samples, 0.01%)</title><rect x="781.9" y="1365" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="784.87" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="485" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,088,114,719 samples, 1.08%)</title><rect x="852.9" y="101" width="12.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="111.5" ></text>
</g>
<g >
<title>__handle_mm_fault (191,439,761 samples, 0.02%)</title><rect x="449.4" y="1541" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="452.42" y="1551.5" ></text>
</g>
<g >
<title>zap_pte_range (268,487,058 samples, 0.03%)</title><rect x="1179.1" y="1333" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1182.11" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1157" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1167.5" ></text>
</g>
<g >
<title>__libc_malloc_impl (1,588,254,296 samples, 0.15%)</title><rect x="429.6" y="1621" width="1.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="432.64" y="1631.5" ></text>
</g>
<g >
<title>exec_binprm (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1525" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="487.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,678,102,027 samples, 0.65%)</title><rect x="618.7" y="261" width="7.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="621.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (349,860,161 samples, 0.03%)</title><rect x="667.0" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="670.01" y="543.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (199,179,837 samples, 0.02%)</title><rect x="514.5" y="1301" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="517.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="789" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="799.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>do_futex (483,113,741 samples, 0.05%)</title><rect x="446.7" y="1557" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="449.74" y="1567.5" ></text>
</g>
<g >
<title>dequeue_entity (98,427,949 samples, 0.01%)</title><rect x="436.1" y="1445" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="439.07" y="1455.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (26,950,142,541 samples, 2.63%)</title><rect x="332.0" y="1253" width="31.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="334.97" y="1263.5" >ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,585,624,212 samples, 2.10%)</title><rect x="610.4" y="373" width="24.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="613.38" y="383.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,134,119,414 samples, 0.21%)</title><rect x="512.8" y="1621" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="515.82" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="853" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="863.5" ></text>
</g>
<g >
<title>do_mmap (268,169,719 samples, 0.03%)</title><rect x="441.6" y="1525" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="444.60" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="533" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1301" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task_fair (154,145,188 samples, 0.02%)</title><rect x="521.6" y="1477" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="524.65" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1301" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.40" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="533" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="543.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (103,835,633,715 samples, 10.12%)</title><rect x="598.9" y="1013" width="119.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.88" y="1023.5" >std::__detail:..</text>
</g>
<g >
<title>kmem_cache_alloc (2,763,119,355 samples, 0.27%)</title><rect x="301.2" y="1253" width="3.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="304.18" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="501" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,415,138,030 samples, 1.31%)</title><rect x="611.1" y="325" width="15.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="614.07" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,758,850 samples, 0.02%)</title><rect x="781.4" y="1365" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="784.41" y="1375.5" ></text>
</g>
<g >
<title>copy_present_pte (123,320,486 samples, 0.01%)</title><rect x="482.9" y="1413" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="485.86" y="1423.5" ></text>
</g>
<g >
<title>create_empty_buffers (150,680,257 samples, 0.01%)</title><rect x="273.0" y="1317" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="276.02" y="1327.5" ></text>
</g>
<g >
<title>pid_nr_ns (98,187,608 samples, 0.01%)</title><rect x="483.9" y="1493" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="486.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,769,021,967 samples, 0.37%)</title><rect x="990.2" y="53" width="4.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1429" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,267,737,901 samples, 12.79%)</title><rect x="594.7" y="1221" width="150.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="597.66" y="1231.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>destroy_inode (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1445" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="93.81" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="709" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="741" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1589" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1599.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (261,771,285,728 samples, 25.51%)</title><rect x="102.8" y="1541" width="301.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="105.76" y="1551.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>operator new (1,000,891,609 samples, 0.10%)</title><rect x="770.4" y="1333" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="773.37" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="997" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1007.5" ></text>
</g>
<g >
<title>ovl_path_realdata (201,109,473 samples, 0.02%)</title><rect x="239.4" y="1413" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="242.41" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="917" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="927.5" >std::__detail::..</text>
</g>
<g >
<title>obj_cgroup_charge (350,466,932 samples, 0.03%)</title><rect x="185.0" y="1365" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="188.02" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="629" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_free (152,582,774 samples, 0.01%)</title><rect x="787.9" y="1445" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="790.91" y="1455.5" ></text>
</g>
<g >
<title>map_id_up (553,334,142 samples, 0.05%)</title><rect x="359.2" y="1205" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="362.21" y="1215.5" ></text>
</g>
<g >
<title>release_pages (97,604,001 samples, 0.01%)</title><rect x="1173.5" y="1269" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1176.54" y="1279.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (200,178,887 samples, 0.02%)</title><rect x="365.2" y="1221" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="368.16" y="1231.5" ></text>
</g>
<g >
<title>__libc_start_main (491,899,254 samples, 0.05%)</title><rect x="1183.6" y="1605" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1186.58" y="1615.5" ></text>
</g>
<g >
<title>check_heap_object (652,801,307 samples, 0.06%)</title><rect x="808.7" y="1429" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="811.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="773" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="783.5" >std::__detail::..</text>
</g>
<g >
<title>cfree (1,655,308,544 samples, 0.16%)</title><rect x="653.0" y="501" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="656.04" y="511.5" ></text>
</g>
<g >
<title>malloc (1,104,270,528 samples, 0.11%)</title><rect x="639.5" y="357" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="642.53" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,768,129,143 samples, 0.76%)</title><rect x="736.6" y="1157" width="8.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="739.57" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1013" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1023.5" ></text>
</g>
<g >
<title>exit_mmap (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1493" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="518.00" y="1503.5" ></text>
</g>
<g >
<title>operator new (1,504,848,587 samples, 0.15%)</title><rect x="655.2" y="501" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="658.17" y="511.5" ></text>
</g>
<g >
<title>code_store::store_t::get_file (182,434,789 samples, 0.02%)</title><rect x="462.6" y="1477" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="465.57" y="1487.5" ></text>
</g>
<g >
<title>sshd (781,870,750 samples, 0.08%)</title><rect x="1184.7" y="1637" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1187.69" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1253" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (290,032,092 samples, 0.03%)</title><rect x="1177.1" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1180.10" y="1615.5" ></text>
</g>
<g >
<title>rw_verify_area (1,442,899,299 samples, 0.14%)</title><rect x="69.9" y="1413" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="72.88" y="1423.5" ></text>
</g>
<g >
<title>memset (100,730,656 samples, 0.01%)</title><rect x="184.0" y="1365" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="187.04" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1541" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.75" y="1551.5" ></text>
</g>
<g >
<title>symbol_search_engine::internal::cache_t::load_file_ids (493,783,960 samples, 0.05%)</title><rect x="462.9" y="1413" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="465.89" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (117,038,279 samples, 0.01%)</title><rect x="1182.1" y="1349" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1185.09" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (183,912,765 samples, 0.02%)</title><rect x="489.1" y="1333" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.10" y="1343.5" ></text>
</g>
<g >
<title>generic_fillattr (151,144,617 samples, 0.01%)</title><rect x="802.8" y="1349" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="805.79" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,612,228,962 samples, 1.23%)</title><rect x="611.9" y="293" width="14.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="614.94" y="303.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (1,448,843,290 samples, 0.14%)</title><rect x="80.7" y="1381" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="83.73" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (603,721,473 samples, 0.06%)</title><rect x="624.7" y="229" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="627.65" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1269" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="473.40" y="1279.5" ></text>
</g>
<g >
<title>nd_jump_root (100,652,828 samples, 0.01%)</title><rect x="798.3" y="1397" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="801.34" y="1407.5" ></text>
</g>
<g >
<title>mas_destroy (159,292,278 samples, 0.02%)</title><rect x="442.5" y="1445" width="0.2" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="445.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,048,096,339 samples, 6.05%)</title><rect x="605.9" y="661" width="71.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.87" y="671.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="565" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="373" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="383.5" >std::__detail::..</text>
</g>
<g >
<title>readdir64 (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1349" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="473.79" y="1359.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (150,035,093 samples, 0.01%)</title><rect x="807.3" y="1461" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="810.33" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_futex (249,512,285 samples, 0.02%)</title><rect x="436.0" y="1573" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="439.02" y="1583.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (251,202,275 samples, 0.02%)</title><rect x="378.4" y="1285" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="381.42" y="1295.5" ></text>
</g>
<g >
<title>worker_thread (255,421,089 samples, 0.02%)</title><rect x="516.0" y="1589" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="518.99" y="1599.5" ></text>
</g>
<g >
<title>ksys_read (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1477" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1174.05" y="1487.5" ></text>
</g>
<g >
<title>schedule (187,885,748 samples, 0.02%)</title><rect x="436.0" y="1509" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="439.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="389" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="399.5" >std::__detail::..</text>
</g>
<g >
<title>operator new (1,101,194,026 samples, 0.11%)</title><rect x="623.2" y="245" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="626.21" y="255.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1445" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="459.34" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,706,684,671 samples, 0.17%)</title><rect x="159.8" y="1349" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="162.85" y="1359.5" ></text>
</g>
<g >
<title>__find_get_block (2,962,355,916 samples, 0.29%)</title><rect x="372.6" y="1205" width="3.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="375.59" y="1215.5" ></text>
</g>
<g >
<title>operator new (251,654,091 samples, 0.02%)</title><rect x="727.1" y="997" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="730.15" y="1007.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (236,105,163 samples, 0.02%)</title><rect x="1182.8" y="1541" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1185.82" y="1551.5" ></text>
</g>
<g >
<title>sleep (1,294,478,650 samples, 0.13%)</title><rect x="1183.2" y="1637" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1186.21" y="1647.5" ></text>
</g>
<g >
<title>kthread (128,464,410 samples, 0.01%)</title><rect x="485.9" y="1605" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="488.95" y="1615.5" ></text>
</g>
<g >
<title>symbol_search_engine::internal::cache_t::flush_changes (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1429" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="465.78" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (187,939,340 samples, 0.02%)</title><rect x="1181.1" y="1621" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1184.10" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.70" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1285" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1295.5" ></text>
</g>
<g >
<title>dup_mmap (1,291,089,749 samples, 0.13%)</title><rect x="509.4" y="1493" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="512.36" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1589" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="471.07" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,205,044,729 samples, 0.12%)</title><rect x="814.0" y="149" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="159.5" ></text>
</g>
<g >
<title>msvc::path_utf8::path_utf8 (96,866,859 samples, 0.01%)</title><rect x="465.2" y="1429" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="468.22" y="1439.5" ></text>
</g>
<g >
<title>ovl_iterate (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1221" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.23" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="485" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="495.5" >std::__detail::..</text>
</g>
<g >
<title>getdents64 (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1301" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="473.23" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="949" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="229" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1221" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1493" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="494.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="277" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (150,070,443 samples, 0.01%)</title><rect x="574.9" y="1509" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="577.90" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (99,632,707 samples, 0.01%)</title><rect x="414.7" y="1605" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="417.68" y="1615.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1541" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="421.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="389" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="399.5" ></text>
</g>
<g >
<title>malloc (251,674,617 samples, 0.02%)</title><rect x="676.8" y="597" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="679.77" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1237" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (716,904,680 samples, 0.07%)</title><rect x="690.2" y="725" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="693.17" y="735.5" ></text>
</g>
<g >
<title>copy_present_pte (106,109,562 samples, 0.01%)</title><rect x="1178.9" y="1413" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1181.86" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_read (579,880,905 samples, 0.06%)</title><rect x="479.5" y="1573" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="482.46" y="1583.5" ></text>
</g>
<g >
<title>copy_page_range (252,616,199 samples, 0.02%)</title><rect x="1178.7" y="1477" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1181.70" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_poll (652,280,569 samples, 0.06%)</title><rect x="1174.7" y="1525" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1177.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1285" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1295.5" ></text>
</g>
<g >
<title>operator new (1,119,295,713 samples, 0.11%)</title><rect x="779.1" y="1397" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="782.08" y="1407.5" ></text>
</g>
<g >
<title>inode_permission (630,783,955 samples, 0.06%)</title><rect x="420.6" y="1445" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="423.61" y="1455.5" ></text>
</g>
<g >
<title>ovl_i_path_real (200,285,968 samples, 0.02%)</title><rect x="790.6" y="1381" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="793.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1365" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1375.5" ></text>
</g>
<g >
<title>do_futex (249,512,285 samples, 0.02%)</title><rect x="436.0" y="1557" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="439.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="709" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="549" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="559.5" ></text>
</g>
<g >
<title>operator new (203,407,892 samples, 0.02%)</title><rect x="782.7" y="1381" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="785.74" y="1391.5" ></text>
</g>
<g >
<title>operator new (151,063,815 samples, 0.01%)</title><rect x="804.5" y="1525" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="807.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1141" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1151.5" ></text>
</g>
<g >
<title>mnt_user_ns (100,733,828 samples, 0.01%)</title><rect x="232.4" y="1445" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="235.37" y="1455.5" ></text>
</g>
<g >
<title>search_binary_handler (296,870,932 samples, 0.03%)</title><rect x="1179.1" y="1509" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1182.08" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1237" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="492.15" y="1247.5" ></text>
</g>
<g >
<title>schedule (94,729,770 samples, 0.01%)</title><rect x="1175.1" y="1445" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1178.13" y="1455.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1493" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="421.38" y="1503.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (271,750,417 samples, 0.03%)</title><rect x="487.9" y="1573" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (522,726,389 samples, 0.05%)</title><rect x="699.7" y="805" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="702.70" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (844,073,069 samples, 0.08%)</title><rect x="559.5" y="1605" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="562.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1397" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1407.5" ></text>
</g>
<g >
<title>ksys_read (107,656,707 samples, 0.01%)</title><rect x="511.8" y="1557" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="514.84" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="277" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (702,121,374 samples, 0.07%)</title><rect x="1146.7" y="37" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1149.67" y="47.5" ></text>
</g>
<g >
<title>ovl_iterate (580,810,411 samples, 0.06%)</title><rect x="423.1" y="1525" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="426.14" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="469" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="479.5" ></text>
</g>
<g >
<title>operator new (100,759,456 samples, 0.01%)</title><rect x="755.0" y="1189" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="758.00" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.46" y="1519.5" ></text>
</g>
<g >
<title>take_dentry_name_snapshot (201,367,972 samples, 0.02%)</title><rect x="398.1" y="1461" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="401.14" y="1471.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (318,195,824 samples, 0.03%)</title><rect x="787.4" y="1397" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="790.37" y="1407.5" ></text>
</g>
<g >
<title>__get_task_ioprio (156,648,877 samples, 0.02%)</title><rect x="52.4" y="1397" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="55.41" y="1407.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (351,508,191 samples, 0.03%)</title><rect x="319.2" y="1205" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="322.17" y="1215.5" ></text>
</g>
<g >
<title>read (64,923,379,974 samples, 6.33%)</title><rect x="16.1" y="1557" width="74.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="19.15" y="1567.5" >read</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (803,042,650 samples, 0.08%)</title><rect x="771.5" y="1333" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="774.52" y="1343.5" ></text>
</g>
<g >
<title>do_statx (357,285,630 samples, 0.03%)</title><rect x="489.3" y="1461" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="492.34" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (231,609,500 samples, 0.02%)</title><rect x="451.5" y="1621" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="454.53" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,313,477,369 samples, 2.86%)</title><rect x="609.3" y="453" width="33.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="612.34" y="463.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,675,047,123 samples, 0.55%)</title><rect x="1141.7" y="53" width="6.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="709" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="719.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="901" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="911.5" ></text>
</g>
<g >
<title>vfs_read (579,880,905 samples, 0.06%)</title><rect x="479.5" y="1541" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="482.46" y="1551.5" ></text>
</g>
<g >
<title>copy_process (1,291,527,872 samples, 0.13%)</title><rect x="509.4" y="1525" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="512.36" y="1535.5" ></text>
</g>
<g >
<title>__rcu_read_lock (310,263,042 samples, 0.03%)</title><rect x="33.7" y="1445" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="36.71" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (180,902,274 samples, 0.02%)</title><rect x="478.1" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.07" y="1455.5" ></text>
</g>
<g >
<title>ovl_d_real (351,797,723 samples, 0.03%)</title><rect x="253.6" y="1317" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="256.56" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1,456,725,990 samples, 0.14%)</title><rect x="845.2" y="1605" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="848.20" y="1615.5" ></text>
</g>
<g >
<title>unmap_single_vma (302,246,375 samples, 0.03%)</title><rect x="467.6" y="1461" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="470.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="773" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="783.5" ></text>
</g>
<g >
<title>ovl_copyattr (2,108,637,713 samples, 0.21%)</title><rect x="232.7" y="1445" width="2.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="235.65" y="1455.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (135,610,646 samples, 0.01%)</title><rect x="485.5" y="1285" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="488.47" y="1295.5" ></text>
</g>
<g >
<title>code_store::store_t::get_files (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1509" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.41" y="1519.5" ></text>
</g>
<g >
<title>iterate_dir (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1285" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="474.21" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_read (159,459,593 samples, 0.02%)</title><rect x="1177.2" y="1573" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1180.19" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (99,948,191 samples, 0.01%)</title><rect x="322.9" y="1221" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="325.92" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1285" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1295.5" ></text>
</g>
<g >
<title>vfs_read (107,656,707 samples, 0.01%)</title><rect x="511.8" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="514.84" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (401,869,460 samples, 0.04%)</title><rect x="781.7" y="1397" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="784.70" y="1407.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (154,875,283 samples, 0.02%)</title><rect x="1173.5" y="1317" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1176.54" y="1327.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (150,071,907 samples, 0.01%)</title><rect x="812.4" y="1397" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="815.41" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1253" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.05" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1413" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1423.5" ></text>
</g>
<g >
<title>asn1_item_embed_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1397" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="568.30" y="1407.5" ></text>
</g>
<g >
<title>__mmput (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1429" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="454.59" y="1439.5" ></text>
</g>
<g >
<title>page_remove_rmap (501,223,643 samples, 0.05%)</title><rect x="1173.0" y="1317" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1175.96" y="1327.5" ></text>
</g>
<g >
<title>filemap_read (13,434,973,241 samples, 1.31%)</title><rect x="54.3" y="1365" width="15.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="57.26" y="1375.5" ></text>
</g>
<g >
<title>malloc (1,753,867,555 samples, 0.17%)</title><rect x="631.3" y="293" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="634.28" y="303.5" ></text>
</g>
<g >
<title>mmput (1,590,437,450 samples, 0.15%)</title><rect x="513.0" y="1445" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="515.95" y="1455.5" ></text>
</g>
<g >
<title>moveToChild (144,886,909 samples, 0.01%)</title><rect x="459.9" y="1349" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="462.92" y="1359.5" ></text>
</g>
<g >
<title>cfree (1,751,926,755 samples, 0.17%)</title><rect x="721.5" y="1013" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="724.52" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (125,361,562 samples, 0.01%)</title><rect x="489.8" y="1493" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="492.81" y="1503.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (97,983,390 samples, 0.01%)</title><rect x="74.0" y="1445" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="76.99" y="1455.5" ></text>
</g>
<g >
<title>wb_workfn (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1557" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1182.62" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (99,507,965 samples, 0.01%)</title><rect x="462.3" y="1445" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="465.28" y="1455.5" ></text>
</g>
<g >
<title>ext4_inode_table (100,292,315 samples, 0.01%)</title><rect x="377.3" y="1237" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="380.32" y="1247.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (297,660,964 samples, 0.03%)</title><rect x="1183.2" y="1621" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.22" y="1631.5" ></text>
</g>
<g >
<title>apparmor_file_permission (102,120,652 samples, 0.01%)</title><rect x="70.0" y="1397" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="73.00" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1509" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="93.81" y="1519.5" ></text>
</g>
<g >
<title>task_dump_owner (90,002,484 samples, 0.01%)</title><rect x="484.1" y="1445" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="487.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1125" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="677" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="687.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (9,483,373,467 samples, 0.92%)</title><rect x="167.6" y="1349" width="10.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="170.59" y="1359.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (115,806,083 samples, 0.01%)</title><rect x="515.8" y="1541" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="518.84" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (601,759,097 samples, 0.06%)</title><rect x="715.3" y="917" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="718.31" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="421" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="431.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="261" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="271.5" >std::__detail::..</text>
</g>
<g >
<title>sqlite3LockAndPrepare (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1477" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="421.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (302,008,119 samples, 0.03%)</title><rect x="567.9" y="149" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.86" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,709,560,765 samples, 0.85%)</title><rect x="745.6" y="1221" width="10.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="748.62" y="1231.5" ></text>
</g>
<g >
<title>malloc (1,060,045,261 samples, 0.10%)</title><rect x="681.8" y="677" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="684.79" y="687.5" ></text>
</g>
<g >
<title>[[stack]] (92,085,550 samples, 0.01%)</title><rect x="523.7" y="1621" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="526.68" y="1631.5" ></text>
</g>
<g >
<title>cfree (2,206,484,480 samples, 0.22%)</title><rect x="776.3" y="1397" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="779.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1541" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1551.5" ></text>
</g>
<g >
<title>msvc::split_string&lt;char, std::back_insert_iterator&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (645,627,533 samples, 0.06%)</title><rect x="463.6" y="1445" width="0.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="466.63" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="469" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="479.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (200,736,571 samples, 0.02%)</title><rect x="399.2" y="1509" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="402.18" y="1519.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1605" width="5.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="826.69" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1557" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1567.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1,106,307,487 samples, 0.11%)</title><rect x="336.5" y="1221" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="339.54" y="1231.5" ></text>
</g>
<g >
<title>Glob::isIgnored (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1589" width="5.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="826.69" y="1599.5" ></text>
</g>
<g >
<title>[git] (89,600,939 samples, 0.01%)</title><rect x="469.7" y="1205" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.70" y="1215.5" ></text>
</g>
<g >
<title>_IO_file_overflow (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1509" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="469.28" y="1519.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (280,154,635 samples, 0.03%)</title><rect x="487.9" y="1605" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.91" y="1615.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (160,616,818 samples, 0.02%)</title><rect x="423.5" y="1445" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="426.46" y="1455.5" ></text>
</g>
<g >
<title>rest_init (774,378,980 samples, 0.08%)</title><rect x="522.5" y="1557" width="0.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="525.54" y="1567.5" ></text>
</g>
<g >
<title>execute_command (244,833,517 samples, 0.02%)</title><rect x="1181.9" y="1397" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1184.94" y="1407.5" ></text>
</g>
<g >
<title>security_file_permission (10,784,312,674 samples, 1.05%)</title><rect x="74.1" y="1445" width="12.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="77.11" y="1455.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1525" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="420.30" y="1535.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (113,139,296 samples, 0.01%)</title><rect x="423.5" y="1429" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="426.51" y="1439.5" ></text>
</g>
<g >
<title>unmap_single_vma (268,487,058 samples, 0.03%)</title><rect x="1179.1" y="1381" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.11" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1013" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1029" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1039.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (10,578,622,772 samples, 1.03%)</title><rect x="311.4" y="1285" width="12.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="314.39" y="1295.5" ></text>
</g>
<g >
<title>cpptools_context::handle_parse_file (6,778,871,853 samples, 0.66%)</title><rect x="457.0" y="1557" width="7.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="459.97" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1157" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="492.15" y="1167.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1573" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="420.75" y="1583.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (451,845,529 samples, 0.04%)</title><rect x="363.0" y="1253" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="365.96" y="1263.5" ></text>
</g>
<g >
<title>free_unref_page_commit (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1397" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="518.06" y="1407.5" ></text>
</g>
<g >
<title>getname_flags (102,142,681 samples, 0.01%)</title><rect x="472.6" y="1477" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="475.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1381" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="533" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="543.5" ></text>
</g>
<g >
<title>[bash] (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1429" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.28" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="613" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="623.5" ></text>
</g>
<g >
<title>malloc (100,722,782 samples, 0.01%)</title><rect x="718.1" y="917" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="721.05" y="927.5" ></text>
</g>
<g >
<title>generic_permission (301,394,493 samples, 0.03%)</title><rect x="792.7" y="1349" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="795.71" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="853" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (198,219,989 samples, 0.02%)</title><rect x="451.8" y="1589" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="454.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="981" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,587,783 samples, 0.01%)</title><rect x="814.3" y="117" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.32" y="127.5" ></text>
</g>
<g >
<title>write (1,030,985,342 samples, 0.10%)</title><rect x="10.4" y="1605" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.45" y="1615.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1573" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1583.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (100,045,419 samples, 0.01%)</title><rect x="364.4" y="1253" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="367.41" y="1263.5" ></text>
</g>
<g >
<title>do_user_addr_fault (178,951,488 samples, 0.02%)</title><rect x="509.1" y="1573" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="512.14" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (552,509,401 samples, 0.05%)</title><rect x="691.9" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="694.86" y="767.5" ></text>
</g>
<g >
<title>v8::internal::JSReceiver::DefineProperties (111,649,859 samples, 0.01%)</title><rect x="565.5" y="1573" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="568.55" y="1583.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1061" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="492.15" y="1071.5" ></text>
</g>
<g >
<title>filename_lookup (155,423,189 samples, 0.02%)</title><rect x="472.3" y="1429" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="475.28" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="661" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="757" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="767.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (154,350,394 samples, 0.02%)</title><rect x="1180.9" y="1573" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1183.87" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (100,678,924 samples, 0.01%)</title><rect x="815.2" y="101" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="818.25" y="111.5" ></text>
</g>
<g >
<title>__fsnotify_parent (6,805,228,097 samples, 0.66%)</title><rect x="32.6" y="1461" width="7.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="35.64" y="1471.5" ></text>
</g>
<g >
<title>strnlen_user (149,895,270 samples, 0.01%)</title><rect x="514.8" y="1477" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="517.83" y="1487.5" ></text>
</g>
<g >
<title>malloc (251,247,367 samples, 0.02%)</title><rect x="642.6" y="341" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="645.65" y="351.5" ></text>
</g>
<g >
<title>radix_tree_lookup (898,808,343 samples, 0.09%)</title><rect x="262.5" y="1317" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="265.54" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="261" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="271.5" ></text>
</g>
<g >
<title>memset_erms (751,721,502 samples, 0.07%)</title><rect x="184.2" y="1365" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="187.15" y="1375.5" ></text>
</g>
<g >
<title>mas_store_prealloc (356,580,965 samples, 0.03%)</title><rect x="442.5" y="1461" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="445.48" y="1471.5" ></text>
</g>
<g >
<title>unmap_vmas (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1397" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="454.59" y="1407.5" ></text>
</g>
<g >
<title>poll_idle (98,061,253 samples, 0.01%)</title><rect x="486.9" y="1461" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="489.95" y="1471.5" ></text>
</g>
<g >
<title>__strchrnul (347,106,027 samples, 0.03%)</title><rect x="413.0" y="1605" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="416.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1381" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1391.5" ></text>
</g>
<g >
<title>_IO_doallocbuf (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1493" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="469.28" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="965" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="975.5" ></text>
</g>
<g >
<title>security_inode_getattr (101,643,039 samples, 0.01%)</title><rect x="477.4" y="1413" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="480.43" y="1423.5" ></text>
</g>
<g >
<title>ovl_d_real (201,464,706 samples, 0.02%)</title><rect x="255.7" y="1333" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="258.69" y="1343.5" ></text>
</g>
<g >
<title>file_remove_privs (855,624,882 samples, 0.08%)</title><rect x="231.4" y="1445" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="234.38" y="1455.5" ></text>
</g>
<g >
<title>security_inode_getattr (142,121,526 samples, 0.01%)</title><rect x="420.4" y="1509" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="423.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,783,866,405 samples, 1.44%)</title><rect x="1141.7" y="133" width="17.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="143.5" ></text>
</g>
<g >
<title>getname_flags (103,913,550 samples, 0.01%)</title><rect x="426.6" y="1509" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="429.64" y="1519.5" ></text>
</g>
<g >
<title>__entry_text_start (98,704,324 samples, 0.01%)</title><rect x="423.9" y="1589" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="426.94" y="1599.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (127,304,169 samples, 0.01%)</title><rect x="565.8" y="1605" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="568.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="709" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="719.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::move_next (444,421,569 samples, 0.04%)</title><rect x="463.0" y="1397" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="465.95" y="1407.5" ></text>
</g>
<g >
<title>inode_permission (568,740,034 samples, 0.06%)</title><rect x="473.0" y="1381" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="476.02" y="1391.5" ></text>
</g>
<g >
<title>operator new (2,408,770,730 samples, 0.23%)</title><rect x="970.4" y="85" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="973.36" y="95.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::operator++ (145,153,754 samples, 0.01%)</title><rect x="464.8" y="1461" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="467.82" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,708,808,417 samples, 0.17%)</title><rect x="850.9" y="101" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="853.93" y="111.5" ></text>
</g>
<g >
<title>security_file_permission (157,455,046 samples, 0.02%)</title><rect x="813.5" y="1477" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="816.51" y="1487.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (395,058,397 samples, 0.04%)</title><rect x="463.0" y="1349" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="466.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="661" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (294,737,505 samples, 0.03%)</title><rect x="449.9" y="1621" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="452.86" y="1631.5" ></text>
</g>
<g >
<title>vfs_getattr (342,734,421 samples, 0.03%)</title><rect x="422.5" y="1461" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="425.46" y="1471.5" ></text>
</g>
<g >
<title>mod_memcg_state (150,357,204 samples, 0.01%)</title><rect x="182.0" y="1317" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="184.96" y="1327.5" ></text>
</g>
<g >
<title>unlock_page_memcg (101,787,645 samples, 0.01%)</title><rect x="514.4" y="1301" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="517.42" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,206,367,646 samples, 0.12%)</title><rect x="1181.3" y="1589" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1184.32" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1,054,434,983 samples, 0.10%)</title><rect x="1091.7" y="69" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1094.70" y="79.5" ></text>
</g>
<g >
<title>__cond_resched (251,095,074 samples, 0.02%)</title><rect x="246.4" y="1365" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="249.40" y="1375.5" ></text>
</g>
<g >
<title>lookup_fast (149,403,896 samples, 0.01%)</title><rect x="476.8" y="1413" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="479.75" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="805" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="815.5" ></text>
</g>
<g >
<title>start (7,963,097,504 samples, 0.78%)</title><rect x="456.3" y="1621" width="9.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="459.34" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (721,158,005 samples, 0.07%)</title><rect x="483.2" y="1573" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="486.22" y="1583.5" ></text>
</g>
<g >
<title>revert_creds (1,237,137,178 samples, 0.12%)</title><rect x="475.3" y="1397" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="478.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="309" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="293" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="303.5" ></text>
</g>
<g >
<title>start_secondary (610,590,709 samples, 0.06%)</title><rect x="486.1" y="1605" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="489.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (802,363,608 samples, 0.08%)</title><rect x="823.7" y="101" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="773" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (140,378,960,679 samples, 13.68%)</title><rect x="594.2" y="1253" width="161.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="597.20" y="1263.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (201,047,474 samples, 0.02%)</title><rect x="295.1" y="1301" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="298.12" y="1311.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (342,734,421 samples, 0.03%)</title><rect x="422.5" y="1429" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="425.46" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_select (124,469,486 samples, 0.01%)</title><rect x="521.4" y="1541" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="524.40" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="581" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="591.5" >std::__detail::..</text>
</g>
<g >
<title>[git] (403,676,507 samples, 0.04%)</title><rect x="469.6" y="1269" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.59" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="645" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (465,305,108 samples, 0.05%)</title><rect x="441.6" y="1605" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="444.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="805" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="815.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__d_lookup_rcu (98,090,723 samples, 0.01%)</title><rect x="426.2" y="1429" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="429.19" y="1439.5" ></text>
</g>
<g >
<title>__schedule (187,885,748 samples, 0.02%)</title><rect x="436.0" y="1493" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="439.02" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (3,960,264,742 samples, 0.39%)</title><rect x="480.2" y="1621" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="483.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,379,959,581 samples, 0.72%)</title><rect x="668.7" y="645" width="8.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="671.74" y="655.5" ></text>
</g>
<g >
<title>cfree (2,110,495,946 samples, 0.21%)</title><rect x="581.9" y="1509" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="584.88" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (298,858,768 samples, 0.03%)</title><rect x="436.0" y="1589" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="439.02" y="1599.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (96,866,859 samples, 0.01%)</title><rect x="465.2" y="1413" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="468.22" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="981" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="991.5" >std::__detail::..</text>
</g>
<g >
<title>cpuidle_enter_state (566,857,993 samples, 0.06%)</title><rect x="522.5" y="1477" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="525.55" y="1487.5" ></text>
</g>
<g >
<title>code_store::files_set_t::get_data (297,485,231 samples, 0.03%)</title><rect x="458.4" y="1445" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="461.38" y="1455.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,469,541,446 samples, 0.14%)</title><rect x="1185.9" y="1509" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1188.88" y="1519.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (4,687,862,096 samples, 0.46%)</title><rect x="472.5" y="1509" width="5.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="475.55" y="1519.5" ></text>
</g>
<g >
<title>do_idle (264,531,745 samples, 0.03%)</title><rect x="486.8" y="1525" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="489.81" y="1535.5" ></text>
</g>
<g >
<title>msvc::log (93,729,137 samples, 0.01%)</title><rect x="414.0" y="1605" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="417.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1237" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1247.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (112,296,913,020 samples, 10.94%)</title><rect x="598.4" y="1061" width="129.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="601.36" y="1071.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,749,769 samples, 0.01%)</title><rect x="700.3" y="805" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="703.31" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (600,705,592 samples, 0.06%)</title><rect x="863.5" y="37" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="866.45" y="47.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (100,637,152 samples, 0.01%)</title><rect x="255.6" y="1333" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="258.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1573" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="773" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1381" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1391.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1477" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1171.04" y="1487.5" ></text>
</g>
<g >
<title>readlink (125,361,562 samples, 0.01%)</title><rect x="489.8" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="492.81" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="693" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="703.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1365" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1375.5" ></text>
</g>
<g >
<title>start_secondary (251,375,116 samples, 0.02%)</title><rect x="1179.7" y="1605" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1182.75" y="1615.5" ></text>
</g>
<g >
<title>rw_verify_area (452,923,706 samples, 0.04%)</title><rect x="109.6" y="1477" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="112.64" y="1487.5" ></text>
</g>
<g >
<title>filename_lookup (9,623,174,705 samples, 0.94%)</title><rect x="788.4" y="1445" width="11.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="791.38" y="1455.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1461" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="513.67" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1093" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1103.5" >std::__detail::..</text>
</g>
<g >
<title>symbol_search_engine::search_results_t::impl::smart_search_t::initialize (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1445" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="465.78" y="1455.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (12,382,829,114 samples, 1.21%)</title><rect x="344.9" y="1221" width="14.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="347.92" y="1231.5" ></text>
</g>
<g >
<title>__get_task_ioprio (503,396,957 samples, 0.05%)</title><rect x="243.7" y="1397" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="246.68" y="1407.5" ></text>
</g>
<g >
<title>mas_wr_modify (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1445" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="513.67" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (424,387,827 samples, 0.04%)</title><rect x="1183.6" y="1509" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1509" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1519.5" >std::__detail::..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (97,964,802 samples, 0.01%)</title><rect x="1175.1" y="1461" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1178.13" y="1471.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (272,767,404 samples, 0.03%)</title><rect x="1183.2" y="1557" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.24" y="1567.5" ></text>
</g>
<g >
<title>check_heap_object (185,201,371 samples, 0.02%)</title><rect x="1181.4" y="1301" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1184.41" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,459,644 samples, 0.01%)</title><rect x="634.0" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="637.04" y="287.5" ></text>
</g>
<g >
<title>operator new (201,269,050 samples, 0.02%)</title><rect x="772.9" y="1317" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="775.91" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (151,101,202 samples, 0.01%)</title><rect x="618.3" y="181" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="621.30" y="191.5" ></text>
</g>
<g >
<title>mmput (295,491,117 samples, 0.03%)</title><rect x="1179.1" y="1445" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.08" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (921,697,421 samples, 0.09%)</title><rect x="490.0" y="1509" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.00" y="1519.5" ></text>
</g>
<g >
<title>alloc_page_buffers (150,680,257 samples, 0.01%)</title><rect x="273.0" y="1301" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="276.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (399,967,955 samples, 0.04%)</title><rect x="1000.3" y="37" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1003.30" y="47.5" ></text>
</g>
<g >
<title>asn1_template_noexp_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1461" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="568.30" y="1471.5" ></text>
</g>
<g >
<title>copy_pte_range (372,058,110 samples, 0.04%)</title><rect x="482.6" y="1429" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="485.57" y="1439.5" ></text>
</g>
<g >
<title>malloc (251,468,967 samples, 0.02%)</title><rect x="571.4" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="574.37" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1333" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1343.5" >std::__detail::..</text>
</g>
<g >
<title>ovl_iterate (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1253" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.79" y="1263.5" ></text>
</g>
<g >
<title>__vm_munmap (1,615,453,611 samples, 0.16%)</title><rect x="442.2" y="1557" width="1.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="445.20" y="1567.5" ></text>
</g>
<g >
<title>malloc (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1461" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="469.28" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="869" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="879.5" ></text>
</g>
<g >
<title>uv__async_io (385,510,620 samples, 0.04%)</title><rect x="1167.6" y="1589" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1170.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="277" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (451,675,525 samples, 0.04%)</title><rect x="1148.2" y="53" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1151.23" y="63.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (620,493,768 samples, 0.06%)</title><rect x="1169.5" y="1589" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1172.55" y="1599.5" ></text>
</g>
<g >
<title>malloc@plt (100,482,029 samples, 0.01%)</title><rect x="571.7" y="165" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="574.66" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_lock (753,746,920 samples, 0.07%)</title><rect x="166.5" y="1333" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="169.49" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,163,637,903 samples, 0.31%)</title><rect x="614.8" y="197" width="3.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="617.83" y="207.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (154,875,283 samples, 0.02%)</title><rect x="1173.5" y="1301" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1176.54" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (125,361,562 samples, 0.01%)</title><rect x="489.8" y="1525" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="492.81" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1125" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1135.5" ></text>
</g>
<g >
<title>menu_select (117,144,883 samples, 0.01%)</title><rect x="521.4" y="1525" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="524.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="933" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (804,604,421 samples, 0.08%)</title><rect x="613.9" y="181" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="616.85" y="191.5" ></text>
</g>
<g >
<title>malloc (351,676,568 samples, 0.03%)</title><rect x="567.2" y="85" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="570.16" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="485" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,103,814,076 samples, 0.11%)</title><rect x="1165.9" y="133" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1168.87" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1141" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1541" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="1551.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (1,487,853,920 samples, 0.15%)</title><rect x="563.6" y="1509" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="566.56" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="869" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="879.5" >std::__detail::..</text>
</g>
<g >
<title>do_fcntl (198,219,989 samples, 0.02%)</title><rect x="451.8" y="1557" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="454.82" y="1567.5" ></text>
</g>
<g >
<title>operator new (2,711,955,481 samples, 0.26%)</title><rect x="549.1" y="1605" width="3.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="552.07" y="1615.5" ></text>
</g>
<g >
<title>size_to_class (292,629,107 samples, 0.03%)</title><rect x="456.0" y="1621" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="459.00" y="1631.5" ></text>
</g>
<g >
<title>[bash] (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1413" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="885" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="895.5" ></text>
</g>
<g >
<title>filename_lookup (106,495,398 samples, 0.01%)</title><rect x="478.9" y="1509" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="481.95" y="1519.5" ></text>
</g>
<g >
<title>__get_task_ioprio (362,964,632 samples, 0.04%)</title><rect x="40.5" y="1461" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="43.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (121,792,400,390 samples, 11.87%)</title><rect x="596.5" y="1141" width="140.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="599.51" y="1151.5" >std::__detail::_E..</text>
</g>
<g >
<title>__skb_datagram_iter (603,676,474 samples, 0.06%)</title><rect x="1168.7" y="1365" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1171.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1061" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1071.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,987,296,741 samples, 0.19%)</title><rect x="563.5" y="1605" width="2.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="566.53" y="1615.5" ></text>
</g>
<g >
<title>exit_mmap (1,808,203,916 samples, 0.18%)</title><rect x="1171.6" y="1413" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1174.64" y="1423.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1621" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="293" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="303.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="741" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="751.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (151,089,412 samples, 0.01%)</title><rect x="185.5" y="1381" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="188.48" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (100,758,451 samples, 0.01%)</title><rect x="281.8" y="1205" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="284.79" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,540,846,079 samples, 14.57%)</title><rect x="593.3" y="1301" width="172.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="596.32" y="1311.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>__x64_sys_getdents64 (133,118,333 samples, 0.01%)</title><rect x="1181.8" y="1333" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1184.75" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,366,944,958 samples, 0.33%)</title><rect x="824.6" y="117" width="3.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="827.61" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,841,842,109 samples, 0.67%)</title><rect x="815.4" y="165" width="7.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="818.42" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1269" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1279.5" ></text>
</g>
<g >
<title>fsnotify (103,587,674 samples, 0.01%)</title><rect x="40.9" y="1461" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="43.94" y="1471.5" ></text>
</g>
<g >
<title>search_binary_handler (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1509" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="454.59" y="1519.5" ></text>
</g>
<g >
<title>operator new (440,502,147 samples, 0.04%)</title><rect x="569.8" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="572.82" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="917" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="927.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,094,884,354 samples, 0.11%)</title><rect x="563.8" y="1317" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="566.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (95,317,051,774 samples, 9.29%)</title><rect x="600.6" y="917" width="109.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="603.61" y="927.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,376,048,586 samples, 4.42%)</title><rect x="607.1" y="581" width="52.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="610.09" y="591.5" >std::..</text>
</g>
<g >
<title>uv_spawn (1,490,808,770 samples, 0.15%)</title><rect x="563.6" y="1541" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="566.56" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (337,615,076 samples, 0.03%)</title><rect x="1179.1" y="1605" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="581" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="591.5" ></text>
</g>
<g >
<title>lru_add_drain (98,734,319 samples, 0.01%)</title><rect x="443.4" y="1493" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="446.39" y="1503.5" ></text>
</g>
<g >
<title>[ls] (2,141,319,983 samples, 0.21%)</title><rect x="488.8" y="1621" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="491.78" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (92,530,933 samples, 0.01%)</title><rect x="464.5" y="1445" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="467.49" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1205" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1215.5" ></text>
</g>
<g >
<title>operator new (148,875,993 samples, 0.01%)</title><rect x="785.3" y="1541" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="788.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (201,447,931 samples, 0.02%)</title><rect x="1159.6" y="53" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1162.63" y="63.5" ></text>
</g>
<g >
<title>load_elf_binary (296,870,932 samples, 0.03%)</title><rect x="1179.1" y="1493" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1182.08" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;InotifySubscription&gt;, std::shared_ptr&lt;InotifySubscription&gt;, std::allocator&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::hash&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (352,434,060 samples, 0.03%)</title><rect x="805.3" y="1573" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="808.29" y="1583.5" ></text>
</g>
<g >
<title>sqlite3Prepare (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1477" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="420.30" y="1487.5" ></text>
</g>
<g >
<title>generic_permission (568,740,034 samples, 0.06%)</title><rect x="473.0" y="1365" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="476.02" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,710,157,852 samples, 0.17%)</title><rect x="582.3" y="1493" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.34" y="1503.5" ></text>
</g>
<g >
<title>__legitimize_path (101,232,629 samples, 0.01%)</title><rect x="424.2" y="1445" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="427.24" y="1455.5" ></text>
</g>
<g >
<title>vfs_fstatat (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1461" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="475.27" y="1471.5" ></text>
</g>
<g >
<title>mmput (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1445" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1176.96" y="1455.5" ></text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (676,486,663 samples, 0.07%)</title><rect x="1170.3" y="1573" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1173.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,783,866,405 samples, 1.44%)</title><rect x="1141.7" y="165" width="17.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="175.5" ></text>
</g>
<g >
<title>thread_pool::do_work (7,963,097,504 samples, 0.78%)</title><rect x="456.3" y="1589" width="9.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="459.34" y="1599.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (295,386,810 samples, 0.03%)</title><rect x="1169.5" y="1525" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1172.55" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (201,142,254 samples, 0.02%)</title><rect x="650.1" y="437" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="653.09" y="447.5" ></text>
</g>
<g >
<title>msvc::split_string&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (695,871,757 samples, 0.07%)</title><rect x="463.6" y="1461" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="466.63" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,661,267,023 samples, 0.36%)</title><rect x="1162.9" y="149" width="4.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1165.93" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (922,486,156 samples, 0.09%)</title><rect x="466.4" y="1477" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.44" y="1487.5" ></text>
</g>
<g >
<title>read (362,672,277 samples, 0.04%)</title><rect x="10.0" y="1605" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.03" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,255,617,631 samples, 6.16%)</title><rect x="604.7" y="709" width="72.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="607.72" y="719.5" >std::__d..</text>
</g>
<g >
<title>msvc::path_utf8::split_path (98,021,008 samples, 0.01%)</title><rect x="465.3" y="1429" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="468.33" y="1439.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (150,787,906 samples, 0.01%)</title><rect x="324.8" y="1269" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="327.82" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,522,246,362 samples, 0.34%)</title><rect x="1158.9" y="101" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (96,899,239 samples, 0.01%)</title><rect x="461.3" y="1445" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="464.30" y="1455.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (252,225,897 samples, 0.02%)</title><rect x="511.2" y="1525" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="514.22" y="1535.5" ></text>
</g>
<g >
<title>cpptools_context::handle_create_decl_def_scan (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1557" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="459.34" y="1567.5" ></text>
</g>
<g >
<title>xas_load (2,654,136,245 samples, 0.26%)</title><rect x="282.0" y="1285" width="3.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="285.02" y="1295.5" ></text>
</g>
<g >
<title>malloc (150,463,444 samples, 0.01%)</title><rect x="755.5" y="1173" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="758.46" y="1183.5" ></text>
</g>
<g >
<title>filemap_release_folio (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1237" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="94.05" y="1247.5" ></text>
</g>
<g >
<title>page_copy_sane (257,776,909 samples, 0.03%)</title><rect x="69.4" y="1349" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="72.41" y="1359.5" ></text>
</g>
<g >
<title>operator new (1,554,992,352 samples, 0.15%)</title><rect x="706.2" y="885" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="709.18" y="895.5" ></text>
</g>
<g >
<title>vfs_iter_write (100,747,930 samples, 0.01%)</title><rect x="398.4" y="1461" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="401.43" y="1471.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (655,336,987 samples, 0.06%)</title><rect x="798.6" y="1381" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="801.57" y="1391.5" ></text>
</g>
<g >
<title>operator new (452,400,689 samples, 0.04%)</title><rect x="667.9" y="549" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="670.93" y="559.5" ></text>
</g>
<g >
<title>mmput (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1445" width="2.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1174.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,772,425 samples, 0.01%)</title><rect x="596.9" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="599.91" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1221" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1231.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>sqlite3LockAndPrepare (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1445" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="420.41" y="1455.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (199,527,096 samples, 0.02%)</title><rect x="788.8" y="1365" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="791.78" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="325" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="373" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,126,722,648 samples, 0.60%)</title><rect x="1141.7" y="101" width="7.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="111.5" ></text>
</g>
<g >
<title>operator new (150,463,444 samples, 0.01%)</title><rect x="755.5" y="1189" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="758.46" y="1199.5" ></text>
</g>
<g >
<title>execute_command_internal (127,303,918 samples, 0.01%)</title><rect x="1181.9" y="1333" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.94" y="1343.5" ></text>
</g>
<g >
<title>generic_write_end (152,535,495 samples, 0.01%)</title><rect x="1176.5" y="1269" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1179.52" y="1279.5" ></text>
</g>
<g >
<title>path_lookupat (1,244,174,940 samples, 0.12%)</title><rect x="420.6" y="1477" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="423.60" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1013" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1023.5" >std::__detail::..</text>
</g>
<g >
<title>dup_mm.constprop.0 (589,388,407 samples, 0.06%)</title><rect x="482.4" y="1509" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="485.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1317" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (465,586,933 samples, 0.05%)</title><rect x="744.4" y="1141" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="747.44" y="1151.5" ></text>
</g>
<g >
<title>command_substitute (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1349" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1185.28" y="1359.5" ></text>
</g>
<g >
<title>schedule (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1493" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="418.78" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1349" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1359.5" ></text>
</g>
<g >
<title>kthread (880,305,995 samples, 0.09%)</title><rect x="515.3" y="1605" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="518.27" y="1615.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (363,149,282 samples, 0.04%)</title><rect x="45.1" y="1381" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="48.05" y="1391.5" ></text>
</g>
<g >
<title>revert_creds (140,957,016 samples, 0.01%)</title><rect x="425.9" y="1445" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="428.91" y="1455.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (72,485,071,531 samples, 7.06%)</title><rect x="295.4" y="1301" width="83.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="298.35" y="1311.5" >ext4_dirt..</text>
</g>
<g >
<title>__fdget_pos (100,709,467 samples, 0.01%)</title><rect x="104.3" y="1493" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="107.32" y="1503.5" ></text>
</g>
<g >
<title>__clone (1,767,898,356 samples, 0.17%)</title><rect x="1169.5" y="1621" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1172.47" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,713,456,776 samples, 1.34%)</title><rect x="974.2" y="165" width="15.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="175.5" ></text>
</g>
<g >
<title>__wake_up (752,451,482 samples, 0.07%)</title><rect x="210.7" y="1365" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="213.69" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1221" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1231.5" >std::__detail::..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (150,606,532 samples, 0.01%)</title><rect x="571.8" y="197" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="574.77" y="207.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (231,711,290 samples, 0.02%)</title><rect x="1167.6" y="1541" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1170.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (149,842,152,066 samples, 14.60%)</title><rect x="593.0" y="1317" width="172.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="596.03" y="1327.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>node::PerIsolatePlatformData::RunForegroundTask (231,711,290 samples, 0.02%)</title><rect x="1167.6" y="1557" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1170.63" y="1567.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (203,264,714,987 samples, 19.81%)</title><rect x="571.9" y="1589" width="233.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="574.95" y="1599.5" >InotifyBackend::handleEvent</text>
</g>
<g >
<title>__d_lookup_rcu (99,025,474 samples, 0.01%)</title><rect x="426.5" y="1445" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="429.53" y="1455.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,217,803,660 samples, 0.31%)</title><rect x="163.9" y="1349" width="3.7" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="166.89" y="1359.5" ></text>
</g>
<g >
<title>seq_read_iter (89,343,705 samples, 0.01%)</title><rect x="484.3" y="1493" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="487.29" y="1503.5" ></text>
</g>
<g >
<title>ksys_read (53,603,392,570 samples, 5.22%)</title><rect x="25.2" y="1493" width="61.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="28.17" y="1503.5" >ksys_r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="245" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="255.5" ></text>
</g>
<g >
<title>__lock (552,880,150 samples, 0.05%)</title><rect x="415.3" y="1605" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="418.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1109" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1119.5" ></text>
</g>
<g >
<title>malloc (4,615,596,619 samples, 0.45%)</title><rect x="543.8" y="1605" width="5.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="546.76" y="1615.5" ></text>
</g>
<g >
<title>mas_commit_b_node.isra.0 (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1413" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="513.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1253" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1263.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1557" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,957,933,572 samples, 0.19%)</title><rect x="119.0" y="1445" width="2.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="122.00" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="869" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="879.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (148,031,486 samples, 0.01%)</title><rect x="423.2" y="1477" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="426.18" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (121,189,886,548 samples, 11.81%)</title><rect x="597.2" y="1125" width="139.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="600.20" y="1135.5" >std::__detail::_E..</text>
</g>
<g >
<title>cpuidle_idle_call (605,759,907 samples, 0.06%)</title><rect x="522.5" y="1509" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="525.54" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1029" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (449,712,992 samples, 0.04%)</title><rect x="764.2" y="1269" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="767.19" y="1279.5" ></text>
</g>
<g >
<title>dequeue_task (98,427,949 samples, 0.01%)</title><rect x="436.1" y="1477" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="439.07" y="1487.5" ></text>
</g>
<g >
<title>lookup_fast (655,336,987 samples, 0.06%)</title><rect x="798.6" y="1397" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="801.57" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="981" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="373" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="485" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="495.5" ></text>
</g>
<g >
<title>ovl_path_open (97,862,271 samples, 0.01%)</title><rect x="423.6" y="1493" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="426.64" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1253" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1263.5" ></text>
</g>
<g >
<title>do_idle (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1525" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.63" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (501,367,953 samples, 0.05%)</title><rect x="973.6" y="85" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.65" y="95.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ZlibContext::DoThreadPoolWork (676,486,663 samples, 0.07%)</title><rect x="1170.3" y="1557" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1173.26" y="1567.5" ></text>
</g>
<g >
<title>__cond_resched (200,498,458 samples, 0.02%)</title><rect x="296.2" y="1285" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="299.21" y="1295.5" ></text>
</g>
<g >
<title>ovl_d_real (208,860,889 samples, 0.02%)</title><rect x="42.0" y="1445" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="45.01" y="1455.5" ></text>
</g>
<g >
<title>do_idle (251,375,116 samples, 0.02%)</title><rect x="1179.7" y="1573" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1182.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="325" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="335.5" ></text>
</g>
<g >
<title>__cond_resched (352,406,361 samples, 0.03%)</title><rect x="153.2" y="1365" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="156.22" y="1375.5" ></text>
</g>
<g >
<title>do_unlinkat (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1493" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="93.81" y="1503.5" ></text>
</g>
<g >
<title>cpp_properties::resolve_current_config (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1509" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="467.77" y="1519.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (99,686,107 samples, 0.01%)</title><rect x="387.6" y="1381" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="390.60" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (103,332,369,527 samples, 10.07%)</title><rect x="599.5" y="997" width="118.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="602.46" y="1007.5" >std::__detail:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="213" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,004,336,327 samples, 0.10%)</title><rect x="1148.7" y="69" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.75" y="79.5" ></text>
</g>
<g >
<title>malloc (1,605,145,715 samples, 0.16%)</title><rect x="697.7" y="805" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="700.68" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_read (54,230,297,228 samples, 5.29%)</title><rect x="24.8" y="1509" width="62.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="27.80" y="1519.5" >__x64_..</text>
</g>
<g >
<title>mas_alloc_nodes (98,672,424 samples, 0.01%)</title><rect x="442.3" y="1461" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="445.31" y="1471.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1509" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1519.5" ></text>
</g>
<g >
<title>setlocale (1,082,638,524 samples, 0.11%)</title><rect x="490.0" y="1557" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="493.00" y="1567.5" ></text>
</g>
<g >
<title>vfs_fstatat (141,833,362 samples, 0.01%)</title><rect x="452.1" y="1541" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="455.05" y="1551.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (8,598,940,992 samples, 0.84%)</title><rect x="76.6" y="1429" width="9.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="79.62" y="1439.5" ></text>
</g>
<g >
<title>override_creds (150,876,334 samples, 0.01%)</title><rect x="793.3" y="1365" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="796.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (121,139,497,236 samples, 11.81%)</title><rect x="597.3" y="1109" width="139.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="600.26" y="1119.5" >std::__detail::_E..</text>
</g>
<g >
<title>unmap_page_range (1,712,710,824 samples, 0.17%)</title><rect x="1171.8" y="1365" width="1.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1174.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="357" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="501" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="511.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1205" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1215.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (151,132,229 samples, 0.01%)</title><rect x="304.4" y="1253" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="307.36" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_read (91,020,590 samples, 0.01%)</title><rect x="484.3" y="1573" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="487.29" y="1583.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1477" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="420.92" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1541" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="93.81" y="1551.5" ></text>
</g>
<g >
<title>inotify_merge (798,428,403 samples, 0.08%)</title><rect x="214.2" y="1381" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="217.15" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1525" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1535.5" ></text>
</g>
<g >
<title>override_creds (1,089,122,038 samples, 0.11%)</title><rect x="46.4" y="1429" width="1.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="49.36" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="293" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (948,388,742 samples, 0.09%)</title><rect x="466.4" y="1509" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.44" y="1519.5" ></text>
</g>
<g >
<title>ovl_path_realdata (573,009,942 samples, 0.06%)</title><rect x="48.4" y="1429" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="51.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1317" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1327.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (100,287,725 samples, 0.01%)</title><rect x="241.9" y="1429" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="244.89" y="1439.5" ></text>
</g>
<g >
<title>block_invalidate_folio (156,789,818 samples, 0.02%)</title><rect x="91.1" y="1253" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="94.05" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1541" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1509" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,055,808 samples, 0.01%)</title><rect x="614.0" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="617.03" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (653,340,962 samples, 0.06%)</title><rect x="567.6" y="197" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (909,765,452 samples, 0.09%)</title><rect x="490.0" y="1493" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,205,044,729 samples, 0.12%)</title><rect x="814.0" y="165" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="175.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (285,124,850 samples, 0.03%)</title><rect x="1183.2" y="1605" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.24" y="1615.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (100,420,769 samples, 0.01%)</title><rect x="489.2" y="1045" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="492.19" y="1055.5" ></text>
</g>
<g >
<title>path_openat (187,776,042 samples, 0.02%)</title><rect x="484.0" y="1525" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="487.05" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,662,458 samples, 0.01%)</title><rect x="784.9" y="1541" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="787.89" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1525" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1109" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1119.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,605,945,527 samples, 0.16%)</title><rect x="88.2" y="1509" width="1.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="91.25" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (7,838,080,112 samples, 0.76%)</title><rect x="961.3" y="101" width="9.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="964.34" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (169,633,622 samples, 0.02%)</title><rect x="522.0" y="1525" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="525.03" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,471,198 samples, 0.01%)</title><rect x="681.6" y="661" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="684.56" y="671.5" ></text>
</g>
<g >
<title>filename_lookup (243,477,964 samples, 0.02%)</title><rect x="489.5" y="1429" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="492.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,037,776,527 samples, 1.08%)</title><rect x="853.0" y="69" width="12.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.95" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1349" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,169,308,566 samples, 0.41%)</title><rect x="823.7" y="165" width="4.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="175.5" ></text>
</g>
<g >
<title>send_to_group (68,344,520,866 samples, 6.66%)</title><rect x="139.9" y="1429" width="78.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="142.94" y="1439.5" >send_to_g..</text>
</g>
<g >
<title>malloc (200,238,620 samples, 0.02%)</title><rect x="822.6" y="117" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="825.59" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="709" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="741" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (134,726,329 samples, 0.01%)</title><rect x="466.3" y="1445" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.28" y="1455.5" ></text>
</g>
<g >
<title>anon_vma_fork (172,603,979 samples, 0.02%)</title><rect x="563.6" y="1333" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="566.61" y="1343.5" ></text>
</g>
<g >
<title>wait_for_stable_page (100,730,240 samples, 0.01%)</title><rect x="385.4" y="1349" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="388.35" y="1359.5" ></text>
</g>
<g >
<title>path_lookupat (106,495,398 samples, 0.01%)</title><rect x="478.9" y="1493" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="481.95" y="1503.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1493" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="459.34" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1141" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1151.5" ></text>
</g>
<g >
<title>fstatat64 (2,316,194,966 samples, 0.23%)</title><rect x="420.3" y="1605" width="2.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="423.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1493" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1503.5" ></text>
</g>
<g >
<title>Builtins_BaselineOutOfLinePrologue (610,825,684 samples, 0.06%)</title><rect x="1168.0" y="1365" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1171.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1205" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="309" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="319.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (249,787,475 samples, 0.02%)</title><rect x="381.3" y="1349" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="384.31" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,305,076,211 samples, 0.13%)</title><rect x="864.1" y="53" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="867.15" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="597" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="607.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="693" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1509" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="837" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,375,098,821 samples, 0.62%)</title><rect x="982.7" y="117" width="7.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="985.66" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,511,668,496 samples, 1.22%)</title><rect x="612.1" y="277" width="14.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="615.05" y="287.5" ></text>
</g>
<g >
<title>free_pgtables (139,361,764 samples, 0.01%)</title><rect x="513.0" y="1397" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="515.96" y="1407.5" ></text>
</g>
<g >
<title>vfs_statx (12,934,739,992 samples, 1.26%)</title><rect x="788.3" y="1461" width="14.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="791.26" y="1471.5" ></text>
</g>
<g >
<title>search_binary_handler (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1509" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="487.82" y="1519.5" ></text>
</g>
<g >
<title>__schedule (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1477" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="418.78" y="1487.5" ></text>
</g>
<g >
<title>__filemap_get_folio (246,244,753 samples, 0.02%)</title><rect x="1176.2" y="1237" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1179.19" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="693" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="703.5" ></text>
</g>
<g >
<title>[git] (3,246,330,122 samples, 0.32%)</title><rect x="468.1" y="1477" width="3.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1205" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1215.5" ></text>
</g>
<g >
<title>unmap_single_vma (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1381" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="454.59" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (86,591,465,512 samples, 8.44%)</title><rect x="601.8" y="885" width="99.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="604.82" y="895.5" >std::__detai..</text>
</g>
<g >
<title>apparmor_file_permission (301,594,138 samples, 0.03%)</title><rect x="389.5" y="1397" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="392.51" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="757" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="767.5" ></text>
</g>
<g >
<title>std::string::reserve (351,178,109 samples, 0.03%)</title><rect x="785.5" y="1541" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="788.46" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (200,800,528 samples, 0.02%)</title><rect x="575.4" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="578.36" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1077" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1087.5" >std::__detail::..</text>
</g>
<g >
<title>ext4_file_write_iter (451,327,512 samples, 0.04%)</title><rect x="389.0" y="1413" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="391.99" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,197,545,512 samples, 10.93%)</title><rect x="598.5" y="1045" width="129.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.47" y="1055.5" >std::__detail::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (153,304,359 samples, 0.01%)</title><rect x="828.5" y="133" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="831.49" y="143.5" ></text>
</g>
<g >
<title>execute_command_internal (969,179,473 samples, 0.09%)</title><rect x="1181.3" y="1525" width="1.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.32" y="1535.5" ></text>
</g>
<g >
<title>uv__work_done (98,736,194 samples, 0.01%)</title><rect x="1167.9" y="1573" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1170.92" y="1583.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,088,189,153 samples, 0.11%)</title><rect x="88.6" y="1493" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="91.61" y="1503.5" ></text>
</g>
<g >
<title>fsnotify (155,765,419 samples, 0.02%)</title><rect x="86.3" y="1413" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="89.33" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="357" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1557" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1567.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>bprm_execve.part.0 (1,784,267,804 samples, 0.17%)</title><rect x="513.0" y="1541" width="2.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="515.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1157" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1525" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1535.5" ></text>
</g>
<g >
<title>release_pages (171,515,319 samples, 0.02%)</title><rect x="514.5" y="1269" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="517.54" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (263,579,855 samples, 0.03%)</title><rect x="470.8" y="1285" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="473.79" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (201,272,673 samples, 0.02%)</title><rect x="668.5" y="565" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="671.45" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (150,995,684 samples, 0.01%)</title><rect x="803.7" y="1557" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="806.65" y="1567.5" ></text>
</g>
<g >
<title>vfs_statx (4,465,110,040 samples, 0.44%)</title><rect x="472.8" y="1477" width="5.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="475.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,747,917,865 samples, 0.66%)</title><rect x="1150.5" y="85" width="7.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1153.48" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,736,513 samples, 0.01%)</title><rect x="597.1" y="1125" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="600.09" y="1135.5" ></text>
</g>
<g >
<title>operator new (1,401,476,048 samples, 0.14%)</title><rect x="723.8" y="1013" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="726.82" y="1023.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (154,350,394 samples, 0.02%)</title><rect x="1180.9" y="1605" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1183.87" y="1615.5" ></text>
</g>
<g >
<title>mas_destroy (149,821,626 samples, 0.01%)</title><rect x="443.1" y="1493" width="0.1" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="446.06" y="1503.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (609,407,406 samples, 0.06%)</title><rect x="562.5" y="1589" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="565.54" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1605" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1176.96" y="1615.5" ></text>
</g>
<g >
<title>cfree (1,603,003,016 samples, 0.16%)</title><rect x="695.8" y="821" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="698.78" y="831.5" ></text>
</g>
<g >
<title>__file_remove_privs (805,249,850 samples, 0.08%)</title><rect x="231.4" y="1429" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="234.44" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="229" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="239.5" ></text>
</g>
<g >
<title>security_inode_getattr (100,600,883 samples, 0.01%)</title><rect x="788.1" y="1461" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="791.09" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1077" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="341" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="351.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[bash] (130,482,714 samples, 0.01%)</title><rect x="1182.3" y="1365" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.28" y="1375.5" ></text>
</g>
<g >
<title>rw_verify_area (207,714,716 samples, 0.02%)</title><rect x="813.4" y="1493" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="816.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (803,299,104 samples, 0.08%)</title><rect x="960.4" y="69" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="963.42" y="79.5" ></text>
</g>
<g >
<title>[anon] (7,599,059,817 samples, 0.74%)</title><rect x="406.6" y="1621" width="8.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="409.55" y="1631.5" ></text>
</g>
<g >
<title>sqlite3RunParser (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1413" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.41" y="1423.5" ></text>
</g>
<g >
<title>__fdget_pos (2,438,563,050 samples, 0.24%)</title><rect x="26.4" y="1477" width="2.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="29.36" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,808,019,759 samples, 0.18%)</title><rect x="758.6" y="1253" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="761.65" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_write (255,997,887,281 samples, 24.95%)</title><rect x="104.2" y="1509" width="294.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="107.21" y="1519.5" >__x64_sys_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1205" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1215.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (417,098,762 samples, 0.04%)</title><rect x="87.8" y="1509" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="90.77" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,715,034,872 samples, 12.74%)</title><rect x="990.2" y="149" width="150.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="159.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (100,697,795 samples, 0.01%)</title><rect x="813.7" y="1541" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="816.74" y="1551.5" ></text>
</g>
<g >
<title>ovl_get_inode_acl (201,485,874 samples, 0.02%)</title><rect x="792.1" y="1333" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="795.08" y="1343.5" ></text>
</g>
<g >
<title>ext4_readdir (198,893,336 samples, 0.02%)</title><rect x="470.4" y="1189" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="473.43" y="1199.5" ></text>
</g>
<g >
<title>cfree (1,708,713,551 samples, 0.17%)</title><rect x="712.7" y="949" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="715.65" y="959.5" ></text>
</g>
<g >
<title>page_copy_sane (251,713,078 samples, 0.02%)</title><rect x="265.4" y="1333" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="268.39" y="1343.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (201,505,646 samples, 0.02%)</title><rect x="118.3" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="121.26" y="1455.5" ></text>
</g>
<g >
<title>poll_idle (322,630,833 samples, 0.03%)</title><rect x="522.8" y="1461" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="525.82" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="53" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,556,066,739 samples, 0.15%)</title><rect x="330.0" y="1253" width="1.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="333.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="501" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="511.5" ></text>
</g>
<g >
<title>mmput (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1445" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="454.59" y="1455.5" ></text>
</g>
<g >
<title>vfs_iter_write (742,150,101 samples, 0.07%)</title><rect x="1175.9" y="1381" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1178.89" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1429" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="566.57" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="389" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (191,439,761 samples, 0.02%)</title><rect x="449.4" y="1525" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="452.42" y="1535.5" ></text>
</g>
<g >
<title>[perf-3857750.map] (611,126,315 samples, 0.06%)</title><rect x="562.5" y="1621" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="565.54" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,254,113,209 samples, 0.12%)</title><rect x="568.4" y="181" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="571.38" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1077" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1087.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>_compound_head (236,408,006 samples, 0.02%)</title><rect x="482.6" y="1413" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="485.59" y="1423.5" ></text>
</g>
<g >
<title>fsnotify (1,350,068,830 samples, 0.13%)</title><rect x="37.1" y="1445" width="1.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="40.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1013" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1023.5" ></text>
</g>
<g >
<title>__nss_next2 (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1493" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="492.08" y="1503.5" ></text>
</g>
<g >
<title>bprm_execve (310,233,968 samples, 0.03%)</title><rect x="1179.1" y="1557" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1182.06" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1301" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="405" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="415.5" ></text>
</g>
<g >
<title>rw_verify_area (467,060,092 samples, 0.05%)</title><rect x="30.0" y="1477" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="33.00" y="1487.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (545,876,301 samples, 0.05%)</title><rect x="419.4" y="1541" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="422.40" y="1551.5" ></text>
</g>
<g >
<title>cfree (7,430,654,126 samples, 0.72%)</title><rect x="535.2" y="1605" width="8.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="538.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="517" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="757" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="767.5" ></text>
</g>
<g >
<title>malloc (250,325,771 samples, 0.02%)</title><rect x="717.5" y="917" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="720.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,652,468 samples, 0.01%)</title><rect x="605.5" y="677" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.53" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1221" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="565" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1,410,603,822 samples, 0.14%)</title><rect x="513.2" y="1365" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="516.16" y="1375.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (876,130,023 samples, 0.09%)</title><rect x="796.9" y="1365" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="799.93" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (239,075,324 samples, 0.02%)</title><rect x="490.3" y="1429" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1189" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1199.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>node::InternalCallbackScope::Close (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1461" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1171.04" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (463,401,115 samples, 0.05%)</title><rect x="1183.6" y="1525" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.58" y="1535.5" ></text>
</g>
<g >
<title>copy_p4d_range (1,050,719,539 samples, 0.10%)</title><rect x="509.5" y="1461" width="1.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="512.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="469" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="479.5" ></text>
</g>
<g >
<title>bprm_execve (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1557" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1176.96" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead@plt (653,393,593 samples, 0.06%)</title><rect x="1147.5" y="37" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1150.48" y="47.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprListNames (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1397" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="420.75" y="1407.5" ></text>
</g>
<g >
<title>cpp_properties::parse_includes (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1477" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="467.77" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1173" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="821" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="831.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1205" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1215.5" ></text>
</g>
<g >
<title>__fsnotify_parent (450,954,177 samples, 0.04%)</title><rect x="108.8" y="1477" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="111.83" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="533" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,732,700,316 samples, 0.95%)</title><rect x="853.0" y="53" width="11.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.95" y="63.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v3 (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1525" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="420.75" y="1535.5" ></text>
</g>
<g >
<title>deflate_slow (676,174,507 samples, 0.07%)</title><rect x="1170.3" y="1525" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1173.26" y="1535.5" ></text>
</g>
<g >
<title>[git] (2,948,493,431 samples, 0.29%)</title><rect x="468.1" y="1397" width="3.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.14" y="1407.5" ></text>
</g>
<g >
<title>malloc (1,000,891,609 samples, 0.10%)</title><rect x="770.4" y="1317" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="773.37" y="1327.5" ></text>
</g>
<g >
<title>all (1,026,101,779,853 samples, 100%)</title><rect x="10.0" y="1653" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1509" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1181.62" y="1519.5" ></text>
</g>
<g >
<title>Glob::isIgnored (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1573" width="9.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="817.03" y="1583.5" ></text>
</g>
<g >
<title>malloc (1,957,706,313 samples, 0.19%)</title><rect x="760.8" y="1253" width="2.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="763.85" y="1263.5" ></text>
</g>
<g >
<title>operator new (200,435,741 samples, 0.02%)</title><rect x="709.4" y="869" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="712.42" y="879.5" ></text>
</g>
<g >
<title>operator new (1,102,210,827 samples, 0.11%)</title><rect x="1164.6" y="133" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.60" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="469" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="501" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="511.5" ></text>
</g>
<g >
<title>readdir64 (134,970,036 samples, 0.01%)</title><rect x="1181.8" y="1397" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1184.75" y="1407.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (100,732,272 samples, 0.01%)</title><rect x="792.1" y="1301" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="795.08" y="1311.5" ></text>
</g>
<g >
<title>[bash] (117,038,279 samples, 0.01%)</title><rect x="1182.1" y="1317" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.09" y="1327.5" ></text>
</g>
<g >
<title>__rcu_read_lock (251,825,720 samples, 0.02%)</title><rect x="207.2" y="1333" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="210.24" y="1343.5" ></text>
</g>
<g >
<title>__cond_resched (99,732,165 samples, 0.01%)</title><rect x="228.7" y="1445" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="231.73" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (93,462,000,250 samples, 9.11%)</title><rect x="865.6" y="117" width="107.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="868.65" y="127.5" >std::__detail..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="565" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="575.5" ></text>
</g>
<g >
<title>_start (341,563,447,618 samples, 33.29%)</title><rect x="11.6" y="1621" width="392.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="14.63" y="1631.5" >_start</text>
</g>
<g >
<title>operator new (1,105,473,815 samples, 0.11%)</title><rect x="664.9" y="565" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="667.93" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="709" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="719.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (100,794,522 samples, 0.01%)</title><rect x="513.0" y="1381" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="516.01" y="1391.5" ></text>
</g>
<g >
<title>__entry_text_start (3,945,304,136 samples, 0.38%)</title><rect x="18.6" y="1541" width="4.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1381" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="389" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="399.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>v8::internal::ConcurrentMarking::JobTask::Run (233,477,851 samples, 0.02%)</title><rect x="1169.9" y="1557" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1172.89" y="1567.5" ></text>
</g>
<g >
<title>malloc (2,416,732,126 samples, 0.24%)</title><rect x="584.4" y="1493" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="587.36" y="1503.5" ></text>
</g>
<g >
<title>strcmp (1,657,416,067 samples, 0.16%)</title><rect x="212.0" y="1365" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="215.02" y="1375.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (15,876,358,239 samples, 1.55%)</title><rect x="51.5" y="1413" width="18.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="54.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="533" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="543.5" ></text>
</g>
<g >
<title>alloc_empty_file (97,862,271 samples, 0.01%)</title><rect x="423.6" y="1461" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="426.64" y="1471.5" ></text>
</g>
<g >
<title>operator delete (200,816,006 samples, 0.02%)</title><rect x="723.5" y="1013" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="726.53" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="437" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="447.5" ></text>
</g>
<g >
<title>shrink_node (121,840,169 samples, 0.01%)</title><rect x="515.8" y="1557" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="518.84" y="1567.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (328,778,889 samples, 0.03%)</title><rect x="443.5" y="1461" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="446.50" y="1471.5" ></text>
</g>
<g >
<title>set_root (100,652,828 samples, 0.01%)</title><rect x="798.3" y="1381" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="801.34" y="1391.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1477" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="757" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="767.5" ></text>
</g>
<g >
<title>__check_object_size (185,201,371 samples, 0.02%)</title><rect x="1181.4" y="1333" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1184.41" y="1343.5" ></text>
</g>
<g >
<title>override_creds (1,654,085,485 samples, 0.16%)</title><rect x="235.4" y="1429" width="1.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="238.37" y="1439.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (268,287,875 samples, 0.03%)</title><rect x="487.9" y="1557" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="490.91" y="1567.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1541" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1174.64" y="1551.5" ></text>
</g>
<g >
<title>operator new (100,574,918 samples, 0.01%)</title><rect x="773.4" y="1317" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="776.43" y="1327.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (88,364,498 samples, 0.01%)</title><rect x="470.9" y="1157" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="473.93" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (88,995,637 samples, 0.01%)</title><rect x="464.5" y="1397" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="467.50" y="1407.5" ></text>
</g>
<g >
<title>x509_pubkey_ex_d2i_ex (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1381" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="568.30" y="1391.5" ></text>
</g>
<g >
<title>__alloc_pages (205,565,301 samples, 0.02%)</title><rect x="509.7" y="1365" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="512.70" y="1375.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (517,141,823 samples, 0.05%)</title><rect x="422.3" y="1493" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="425.31" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,434,450,483 samples, 0.53%)</title><rect x="516.3" y="1589" width="6.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="519.29" y="1599.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (155,423,189 samples, 0.02%)</title><rect x="472.3" y="1397" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="475.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,655,417,413 samples, 0.16%)</title><rect x="733.2" y="1077" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="736.22" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="293" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (200,463,398 samples, 0.02%)</title><rect x="806.0" y="1573" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="808.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1109" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1119.5" ></text>
</g>
<g >
<title>iterate_dir (630,170,256 samples, 0.06%)</title><rect x="423.1" y="1541" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="426.14" y="1551.5" ></text>
</g>
<g >
<title>exec_binprm (1,781,137,071 samples, 0.17%)</title><rect x="513.0" y="1525" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="515.95" y="1535.5" ></text>
</g>
<g >
<title>write (993,237,442 samples, 0.10%)</title><rect x="1175.6" y="1493" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1178.62" y="1503.5" ></text>
</g>
<g >
<title>filemap_read (348,484,380 samples, 0.03%)</title><rect x="455.5" y="1445" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="458.55" y="1455.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (256,451,070 samples, 0.02%)</title><rect x="1176.2" y="1269" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1179.18" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1157" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1167.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>inotify_free_event (201,506,421 samples, 0.02%)</title><rect x="213.9" y="1381" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="216.92" y="1391.5" ></text>
</g>
<g >
<title>browse_engine::query_cik_in_file (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1557" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="421.38" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="965" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1349" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="725" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="735.5" ></text>
</g>
<g >
<title>malloc (150,182,395 samples, 0.01%)</title><rect x="709.4" y="853" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="712.42" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="357" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="367.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1269" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1279.5" ></text>
</g>
<g >
<title>start_secondary (3,259,286,935 samples, 0.32%)</title><rect x="1185.9" y="1605" width="3.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.88" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="805" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="815.5" ></text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (742,652,707 samples, 0.07%)</title><rect x="459.5" y="1365" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="462.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="821" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="831.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (383,366,671 samples, 0.04%)</title><rect x="1176.0" y="1285" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1179.04" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1141" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1151.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1573" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1583.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (150,427,266 samples, 0.01%)</title><rect x="403.6" y="1525" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="406.62" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,423,908,387 samples, 0.14%)</title><rect x="563.6" y="1445" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="566.57" y="1455.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::files_set_t, code_store::schema::files::read_statement_t, code_store::files_set&gt;::create_statement (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1509" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="420.92" y="1519.5" ></text>
</g>
<g >
<title>malloc (452,598,661 samples, 0.04%)</title><rect x="851.4" y="69" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="854.45" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,338,357,955 samples, 0.72%)</title><rect x="974.2" y="69" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1381" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (553,103,470 samples, 0.05%)</title><rect x="700.4" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="703.42" y="831.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1,256,058,747 samples, 0.12%)</title><rect x="135.3" y="1429" width="1.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="138.32" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88,995,637 samples, 0.01%)</title><rect x="464.5" y="1413" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="467.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="229" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1189" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1199.5" >std::__detail::..</text>
</g>
<g >
<title>__rcu_read_unlock (208,143,233 samples, 0.02%)</title><rect x="34.1" y="1445" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="37.07" y="1455.5" ></text>
</g>
<g >
<title>[git] (136,114,722 samples, 0.01%)</title><rect x="469.6" y="1237" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.65" y="1247.5" ></text>
</g>
<g >
<title>node (565,681,734,367 samples, 55.13%)</title><rect x="523.4" y="1637" width="650.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="526.43" y="1647.5" >node</text>
</g>
<g >
<title>InotifyBackend::handleEvents (210,515,830,580 samples, 20.52%)</title><rect x="571.9" y="1605" width="242.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="574.94" y="1615.5" >InotifyBackend::handleEvents</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="341" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,141,319,983 samples, 0.21%)</title><rect x="488.8" y="1589" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="491.78" y="1599.5" ></text>
</g>
<g >
<title>[git] (89,600,939 samples, 0.01%)</title><rect x="469.7" y="1221" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.70" y="1231.5" ></text>
</g>
<g >
<title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (231,711,290 samples, 0.02%)</title><rect x="1167.6" y="1573" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1170.63" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (402,082,417 samples, 0.04%)</title><rect x="709.6" y="885" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="712.65" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (153,304,359 samples, 0.01%)</title><rect x="828.5" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="831.49" y="175.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1557" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="949" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="959.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (250,406,374 samples, 0.02%)</title><rect x="294.7" y="1301" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="297.72" y="1311.5" ></text>
</g>
<g >
<title>fstatat64 (120,474,377 samples, 0.01%)</title><rect x="491.1" y="1509" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="494.10" y="1519.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (1,335,836,429 samples, 0.13%)</title><rect x="458.9" y="1429" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="461.89" y="1439.5" ></text>
</g>
<g >
<title>security_file_permission (208,650,993 samples, 0.02%)</title><rect x="86.5" y="1461" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="89.51" y="1471.5" ></text>
</g>
<g >
<title>readdir64 (231,991,897 samples, 0.02%)</title><rect x="470.4" y="1333" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="473.40" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="261" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (251,081,592 samples, 0.02%)</title><rect x="753.8" y="1173" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="756.78" y="1183.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4,775,754,646 samples, 0.47%)</title><rect x="57.5" y="1349" width="5.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="60.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="869" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1445" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="485" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="495.5" ></text>
</g>
<g >
<title>zap_pte_range (600,737,866 samples, 0.06%)</title><rect x="485.0" y="1333" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="487.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="757" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="767.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="581" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,687,384,278 samples, 0.75%)</title><rect x="727.6" y="1093" width="8.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="730.61" y="1103.5" ></text>
</g>
<g >
<title>exec_mmap (101,872,695 samples, 0.01%)</title><rect x="1182.9" y="1461" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1185.86" y="1471.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (305,690,001 samples, 0.03%)</title><rect x="71.2" y="1381" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="74.19" y="1391.5" ></text>
</g>
<g >
<title>zap_pte_range (302,246,375 samples, 0.03%)</title><rect x="467.6" y="1413" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="470.65" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="421" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1429" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1439.5" >std::__detail::..</text>
</g>
<g >
<title>__tfind (100,300,694 samples, 0.01%)</title><rect x="466.9" y="1445" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="469.89" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (97,726,102 samples, 0.01%)</title><rect x="466.9" y="1429" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1413" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1423.5" ></text>
</g>
<g >
<title>revert_creds (853,007,052 samples, 0.08%)</title><rect x="795.0" y="1381" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="797.97" y="1391.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (285,124,850 samples, 0.03%)</title><rect x="1183.2" y="1589" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1186.24" y="1599.5" ></text>
</g>
<g >
<title>__filemap_add_folio (700,592,606 samples, 0.07%)</title><rect x="280.9" y="1269" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="283.87" y="1279.5" ></text>
</g>
<g >
<title>readdir64 (91,943,883 samples, 0.01%)</title><rect x="470.2" y="1317" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="473.23" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="117" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,715,034,872 samples, 12.74%)</title><rect x="990.2" y="133" width="150.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="143.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>code_store::statement_t::step (654,952,786 samples, 0.06%)</title><rect x="457.4" y="1461" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="460.42" y="1471.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,063,728,063 samples, 0.30%)</title><rect x="265.7" y="1349" width="3.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="268.68" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (150,993,740 samples, 0.01%)</title><rect x="705.8" y="853" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="708.78" y="863.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (185,201,371 samples, 0.02%)</title><rect x="1181.4" y="1317" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1184.41" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="917" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="927.5" ></text>
</g>
<g >
<title>operator new (1,060,045,261 samples, 0.10%)</title><rect x="681.8" y="693" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="684.79" y="703.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (87,323,784 samples, 0.01%)</title><rect x="522.4" y="1525" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="525.38" y="1535.5" ></text>
</g>
<g >
<title>folio_alloc (88,024,408 samples, 0.01%)</title><rect x="1176.4" y="1205" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1179.36" y="1215.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1445" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.08" y="1455.5" ></text>
</g>
<g >
<title>vfs_read (397,847,697 samples, 0.04%)</title><rect x="455.5" y="1557" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="458.49" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (351,699,922 samples, 0.03%)</title><rect x="665.8" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="668.79" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1397" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1407.5" ></text>
</g>
<g >
<title>arch_call_rest_init (774,378,980 samples, 0.08%)</title><rect x="522.5" y="1573" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="525.54" y="1583.5" ></text>
</g>
<g >
<title>ovl_override_creds (1,193,708,077 samples, 0.12%)</title><rect x="46.2" y="1445" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="49.24" y="1455.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (149,305,281 samples, 0.01%)</title><rect x="403.2" y="1477" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="406.16" y="1487.5" ></text>
</g>
<g >
<title>refactoring::get_counterparts (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1541" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="459.34" y="1551.5" ></text>
</g>
<g >
<title>__wake_up (100,733,806 samples, 0.01%)</title><rect x="313.1" y="1253" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="316.12" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="981" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="991.5" ></text>
</g>
<g >
<title>proc_readfd_common (476,422,868 samples, 0.05%)</title><rect x="483.3" y="1525" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="486.28" y="1535.5" ></text>
</g>
<g >
<title>main (1,206,367,646 samples, 0.12%)</title><rect x="1181.3" y="1573" width="1.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1184.32" y="1583.5" ></text>
</g>
<g >
<title>cpu_startup_entry (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1541" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.63" y="1551.5" ></text>
</g>
<g >
<title>[git] (3,310,919,450 samples, 0.32%)</title><rect x="468.1" y="1493" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.07" y="1503.5" ></text>
</g>
<g >
<title>statx (413,061,222 samples, 0.04%)</title><rect x="489.3" y="1525" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="492.32" y="1535.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,712,710,824 samples, 0.17%)</title><rect x="1171.8" y="1349" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1174.75" y="1359.5" ></text>
</g>
<g >
<title>uv__stream_io (1,231,853,873 samples, 0.12%)</title><rect x="1168.0" y="1589" width="1.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1171.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (600,917,277 samples, 0.06%)</title><rect x="821.5" y="133" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="824.50" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (953,608,493 samples, 0.09%)</title><rect x="973.1" y="149" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.13" y="159.5" ></text>
</g>
<g >
<title>cpptools (51,408,601,309 samples, 5.01%)</title><rect x="406.5" y="1637" width="59.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="409.55" y="1647.5" >cpptools</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="501" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="511.5" ></text>
</g>
<g >
<title>malloc (1,101,194,026 samples, 0.11%)</title><rect x="623.2" y="229" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="626.21" y="239.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (347,538,488 samples, 0.03%)</title><rect x="417.9" y="1493" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="420.92" y="1503.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1349" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="454.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (653,064,543 samples, 0.06%)</title><rect x="771.7" y="1317" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="774.69" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="677" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="687.5" ></text>
</g>
<g >
<title>ovl_getattr (467,811,293 samples, 0.05%)</title><rect x="422.3" y="1477" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="425.31" y="1487.5" ></text>
</g>
<g >
<title>sqlite3Prepare (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1429" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="420.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1173" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk.part.0 (159,292,278 samples, 0.02%)</title><rect x="442.5" y="1413" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="445.48" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (774,181,894 samples, 0.08%)</title><rect x="522.5" y="1541" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="525.54" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,443,780,908 samples, 14.66%)</title><rect x="592.4" y="1349" width="173.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="595.40" y="1359.5" >std::__detail::_Execut..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (391,836,928 samples, 0.04%)</title><rect x="489.3" y="1509" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="492.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="213" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="223.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="373" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (149,458,193 samples, 0.01%)</title><rect x="394.4" y="1445" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="397.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1285" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1295.5" >std::__detail::..</text>
</g>
<g >
<title>walk_component (95,275,831 samples, 0.01%)</title><rect x="484.1" y="1493" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="487.06" y="1503.5" ></text>
</g>
<g >
<title>browse_engine::query_include_files (1,975,203,026 samples, 0.19%)</title><rect x="458.3" y="1477" width="2.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="461.33" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,639,709,514 samples, 0.26%)</title><rect x="509.4" y="1589" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="512.35" y="1599.5" ></text>
</g>
<g >
<title>start_this_handle (4,008,360,912 samples, 0.39%)</title><rect x="306.5" y="1253" width="4.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="309.55" y="1263.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1509" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="459.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1093" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1103.5" ></text>
</g>
<g >
<title>__munmap (1,664,007,104 samples, 0.16%)</title><rect x="442.2" y="1621" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="445.20" y="1631.5" ></text>
</g>
<g >
<title>copy_pmd_range (1,094,884,354 samples, 0.11%)</title><rect x="563.8" y="1301" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="566.81" y="1311.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (3,464,958,126 samples, 0.34%)</title><rect x="365.4" y="1221" width="4.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="368.39" y="1231.5" ></text>
</g>
<g >
<title>glob_matcher::match (988,788,128 samples, 0.10%)</title><rect x="463.5" y="1477" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="466.46" y="1487.5" ></text>
</g>
<g >
<title>operator delete (200,389,114 samples, 0.02%)</title><rect x="706.0" y="885" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="708.95" y="895.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1525" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="515.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (703,547,180 samples, 0.07%)</title><rect x="1159.0" y="69" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1162.05" y="79.5" ></text>
</g>
<g >
<title>copy_pmd_range (239,813,673 samples, 0.02%)</title><rect x="1178.7" y="1445" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1181.71" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="805" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (503,668,716 samples, 0.05%)</title><rect x="1140.0" y="85" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.97" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="501" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="511.5" ></text>
</g>
<g >
<title>ksys_read (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1493" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1171.75" y="1503.5" ></text>
</g>
<g >
<title>compaction_alloc (233,995,569 samples, 0.02%)</title><rect x="515.5" y="1509" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="518.54" y="1519.5" ></text>
</g>
<g >
<title>CExtResults&lt;CExtFileResults, CStoreFile, code_store::files_set, IResults&lt;CStoreFile&gt; &gt;::MoveNext (1,529,959,523 samples, 0.15%)</title><rect x="458.7" y="1461" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="461.73" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1525" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="93.81" y="1535.5" ></text>
</g>
<g >
<title>pagecache_get_page (151,094,370 samples, 0.01%)</title><rect x="286.5" y="1333" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="289.51" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (121,537,268,010 samples, 11.84%)</title><rect x="850.5" y="1589" width="139.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1599.5" >std::__detail::_E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="693" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,802,472,786 samples, 6.12%)</title><rect x="605.2" y="693" width="72.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.18" y="703.5" >std::__d..</text>
</g>
<g >
<title>mmap_region (241,230,461 samples, 0.02%)</title><rect x="441.6" y="1509" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="444.63" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (102,681,349 samples, 0.01%)</title><rect x="1167.5" y="1557" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1170.47" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (351,283,456 samples, 0.03%)</title><rect x="852.0" y="85" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="854.97" y="95.5" ></text>
</g>
<g >
<title>override_creds (1,334,251,682 samples, 0.13%)</title><rect x="473.7" y="1365" width="1.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="476.73" y="1375.5" ></text>
</g>
<g >
<title>msvc::recursive_directory_iterator_utf8::on_ftw (1,183,160,717 samples, 0.12%)</title><rect x="418.8" y="1589" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="421.78" y="1599.5" ></text>
</g>
<g >
<title>ovl_real_fdget (100,268,714 samples, 0.01%)</title><rect x="225.6" y="1461" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="228.55" y="1471.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,088,443 samples, 0.02%)</title><rect x="487.7" y="1541" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.68" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,697,604 samples, 0.01%)</title><rect x="683.9" y="677" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="686.93" y="687.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ObjectDefineProperties (111,649,859 samples, 0.01%)</title><rect x="565.5" y="1589" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="568.55" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1189" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1199.5" ></text>
</g>
<g >
<title>futex_wake (107,491,130 samples, 0.01%)</title><rect x="511.7" y="1541" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="514.67" y="1551.5" ></text>
</g>
<g >
<title>fstatat64 (4,762,155,782 samples, 0.46%)</title><rect x="472.5" y="1573" width="5.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="475.46" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="261" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="271.5" ></text>
</g>
<g >
<title>poll_idle (2,720,055,113 samples, 0.27%)</title><rect x="518.2" y="1509" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="521.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,958,571,909 samples, 0.19%)</title><rect x="1115.7" y="69" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1118.74" y="79.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (4,268,760,640 samples, 0.42%)</title><rect x="364.5" y="1253" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="367.52" y="1263.5" ></text>
</g>
<g >
<title>malloc (203,407,892 samples, 0.02%)</title><rect x="782.7" y="1365" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="785.74" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1173" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (99,720,149 samples, 0.01%)</title><rect x="754.1" y="1189" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="757.07" y="1199.5" ></text>
</g>
<g >
<title>take_dentry_name_snapshot (570,900,991 samples, 0.06%)</title><rect x="223.1" y="1445" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="226.10" y="1455.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (100,465,826 samples, 0.01%)</title><rect x="801.5" y="1397" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="804.52" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (201,500,249 samples, 0.02%)</title><rect x="822.9" y="149" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="825.94" y="159.5" ></text>
</g>
<g >
<title>lookup_fast (147,377,911 samples, 0.01%)</title><rect x="426.1" y="1445" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="429.13" y="1455.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (625,711,281 samples, 0.06%)</title><rect x="1168.0" y="1557" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1171.03" y="1567.5" ></text>
</g>
<g >
<title>malloc (1,102,210,827 samples, 0.11%)</title><rect x="1164.6" y="117" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1167.60" y="127.5" ></text>
</g>
<g >
<title>__mmput (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1509" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="518.00" y="1519.5" ></text>
</g>
<g >
<title>[grep] (300,861,442 samples, 0.03%)</title><rect x="478.0" y="1573" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="481.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="437" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="965" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="975.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="437" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1173" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1183.5" ></text>
</g>
<g >
<title>load_elf_binary (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1493" width="2.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1174.64" y="1503.5" ></text>
</g>
<g >
<title>asn1_template_ex_d2i (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1429" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="568.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1333" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (70,293,221,149 samples, 6.85%)</title><rect x="604.4" y="741" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="607.37" y="751.5" >std::__de..</text>
</g>
<g >
<title>add_transaction_credits (1,203,834,164 samples, 0.12%)</title><rect x="309.8" y="1237" width="1.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="312.77" y="1247.5" ></text>
</g>
<g >
<title>exec_mmap (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1461" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1176.96" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="325" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="335.5" ></text>
</g>
<g >
<title>_compound_head (253,808,739 samples, 0.02%)</title><rect x="510.0" y="1413" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="512.99" y="1423.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (98,558,583 samples, 0.01%)</title><rect x="470.5" y="1125" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="473.55" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1029" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1333" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (130,715,034,872 samples, 12.74%)</title><rect x="990.2" y="117" width="150.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="127.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>up_write (1,604,239,116 samples, 0.16%)</title><rect x="239.9" y="1445" width="1.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="242.87" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (99,507,965 samples, 0.01%)</title><rect x="462.3" y="1461" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="465.28" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,664,007,104 samples, 0.16%)</title><rect x="442.2" y="1605" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="445.20" y="1615.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (602,657,665 samples, 0.06%)</title><rect x="801.6" y="1381" width="0.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="804.64" y="1391.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (319,606,732 samples, 0.03%)</title><rect x="1189.6" y="1509" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.63" y="1519.5" ></text>
</g>
<g >
<title>ovl_permission (3,526,303,075 samples, 0.34%)</title><rect x="790.9" y="1381" width="4.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="793.92" y="1391.5" ></text>
</g>
<g >
<title>zap_pte_range (1,629,709,039 samples, 0.16%)</title><rect x="1171.8" y="1333" width="1.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1174.85" y="1343.5" ></text>
</g>
<g >
<title>inotify_free_event (1,756,858,178 samples, 0.17%)</title><rect x="811.1" y="1461" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="814.14" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,783,866,405 samples, 1.44%)</title><rect x="1141.7" y="117" width="17.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="127.5" ></text>
</g>
<g >
<title>_compound_head (439,964,606 samples, 0.04%)</title><rect x="564.2" y="1269" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="567.16" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (234,388,882 samples, 0.02%)</title><rect x="488.5" y="1605" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="491.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="357" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="367.5" ></text>
</g>
<g >
<title>process_one_work (123,547,636 samples, 0.01%)</title><rect x="486.0" y="1573" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="488.96" y="1583.5" ></text>
</g>
<g >
<title>__tsearch (263,700,321 samples, 0.03%)</title><rect x="490.7" y="1445" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="493.70" y="1455.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (616,855,840 samples, 0.06%)</title><rect x="1168.0" y="1525" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1171.04" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1061" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1071.5" ></text>
</g>
<g >
<title>exit_mmap (723,974,279 samples, 0.07%)</title><rect x="484.8" y="1413" width="0.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="487.83" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (401,594,225 samples, 0.04%)</title><rect x="640.3" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="643.34" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,732,107 samples, 0.01%)</title><rect x="602.0" y="869" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="605.00" y="879.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (396,621,339 samples, 0.04%)</title><rect x="417.3" y="1589" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="420.30" y="1599.5" ></text>
</g>
<g >
<title>operator new (1,055,870,645 samples, 0.10%)</title><rect x="732.0" y="1077" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="734.95" y="1087.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (743,746,171 samples, 0.07%)</title><rect x="259.3" y="1333" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="262.33" y="1343.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (328,778,889 samples, 0.03%)</title><rect x="443.5" y="1445" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="446.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (250,976,465 samples, 0.02%)</title><rect x="1141.4" y="1605" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1144.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="213" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (222,482,581 samples, 0.02%)</title><rect x="700.0" y="789" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="703.05" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (100,473,999 samples, 0.01%)</title><rect x="443.1" y="1477" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="446.12" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,352,482,228 samples, 0.13%)</title><rect x="998.7" y="37" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1001.74" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="293" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,156,364,122 samples, 0.11%)</title><rect x="780.4" y="1397" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="783.37" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1445" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1455.5" ></text>
</g>
<g >
<title>put_cpu_partial (98,044,161 samples, 0.01%)</title><rect x="443.1" y="1429" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="446.12" y="1439.5" ></text>
</g>
<g >
<title>mmput (101,872,695 samples, 0.01%)</title><rect x="1182.9" y="1445" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1185.86" y="1455.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (4,204,039,354 samples, 0.41%)</title><rect x="64.5" y="1333" width="4.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="67.46" y="1343.5" ></text>
</g>
<g >
<title>__getblk_gfp (151,032,010 samples, 0.01%)</title><rect x="377.0" y="1237" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="380.03" y="1247.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (282,299,948 samples, 0.03%)</title><rect x="521.6" y="1525" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="524.60" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1045" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1055.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (12,994,882,640 samples, 1.27%)</title><rect x="296.4" y="1285" width="15.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="299.44" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,963,041,003 samples, 2.82%)</title><rect x="609.7" y="437" width="33.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="612.68" y="447.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="405" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="415.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="837" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (252,123,184 samples, 0.02%)</title><rect x="566.9" y="117" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.87" y="127.5" ></text>
</g>
<g >
<title>bprm_execve (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1557" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1174.64" y="1567.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1461" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="518.06" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist&lt; (138,917,418 samples, 0.01%)</title><rect x="1167.7" y="1477" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.68" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (347,453,272 samples, 0.03%)</title><rect x="1183.6" y="1461" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.64" y="1471.5" ></text>
</g>
<g >
<title>proc_reg_read (144,195,785 samples, 0.01%)</title><rect x="1171.1" y="1445" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1174.06" y="1455.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1,254,945,644 samples, 0.12%)</title><rect x="291.4" y="1301" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="294.36" y="1311.5" ></text>
</g>
<g >
<title>readlink (2,553,210,838 samples, 0.25%)</title><rect x="423.9" y="1605" width="2.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="426.88" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1125" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1135.5" ></text>
</g>
<g >
<title>vfs_iter_write (130,977,795,958 samples, 12.76%)</title><rect x="241.7" y="1445" width="150.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="244.71" y="1455.5" >vfs_iter_write</text>
</g>
<g >
<title>execute_command_internal (292,789,686 samples, 0.03%)</title><rect x="1181.9" y="1429" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1184.94" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="229" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="239.5" ></text>
</g>
<g >
<title>__memcpy_fwd (1,087,656,568 samples, 0.11%)</title><rect x="416.0" y="1605" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="418.95" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3,711,814,228 samples, 0.36%)</title><rect x="318.6" y="1221" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="321.60" y="1231.5" ></text>
</g>
<g >
<title>malloc@plt (100,655,255 samples, 0.01%)</title><rect x="822.8" y="117" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="825.82" y="127.5" ></text>
</g>
<g >
<title>copy_process (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1525" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1181.62" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,555,469,083 samples, 0.15%)</title><rect x="687.9" y="741" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="690.86" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="405" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1477" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1487.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>mas_store_prealloc (283,437,286 samples, 0.03%)</title><rect x="443.1" y="1509" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="446.06" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,491,105,610 samples, 0.63%)</title><rect x="806.4" y="1557" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="809.40" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="629" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,103,814,076 samples, 0.11%)</title><rect x="1165.9" y="117" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1168.87" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7,963,097,504 samples, 0.78%)</title><rect x="456.3" y="1573" width="9.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="459.34" y="1583.5" ></text>
</g>
<g >
<title>[git] (2,994,244,765 samples, 0.29%)</title><rect x="468.1" y="1429" width="3.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.14" y="1439.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (350,165,176 samples, 0.03%)</title><rect x="398.7" y="1509" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="401.66" y="1519.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (102,562,071 samples, 0.01%)</title><rect x="406.4" y="1621" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="409.42" y="1631.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (201,392,128 samples, 0.02%)</title><rect x="239.6" y="1445" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="242.64" y="1455.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (14,887,723,053 samples, 1.45%)</title><rect x="52.6" y="1397" width="17.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="55.59" y="1407.5" ></text>
</g>
<g >
<title>aa_file_perm (752,914,792 samples, 0.07%)</title><rect x="391.1" y="1365" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="394.12" y="1375.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;msvc::directory_utf8_node&gt;*, std::vector&lt;std::shared_ptr&lt;msvc::directory_utf8_node&gt;, std::allocator&lt;std::shared_ptr&lt;msvc::directory_utf8_node&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;msvc::recursive_directory_iterator_utf8::enumerate_files_non_recursive (95,975,535 samples, 0.01%)</title><rect x="464.9" y="1413" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="467.87" y="1423.5" ></text>
</g>
<g >
<title>revert_creds (319,719,105 samples, 0.03%)</title><rect x="477.6" y="1445" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="480.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (158,124,817,974 samples, 15.41%)</title><rect x="591.8" y="1381" width="181.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="594.76" y="1391.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1157" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1167.5" ></text>
</g>
<g >
<title>__file_remove_privs (1,055,068,445 samples, 0.10%)</title><rect x="252.9" y="1333" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="255.86" y="1343.5" ></text>
</g>
<g >
<title>generic_permission (958,253,714 samples, 0.09%)</title><rect x="791.2" y="1365" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="794.21" y="1375.5" ></text>
</g>
<g >
<title>malloc (1,052,209,718 samples, 0.10%)</title><rect x="714.8" y="933" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="717.79" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1509" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1519.5" ></text>
</g>
<g >
<title>__mmput (723,974,279 samples, 0.07%)</title><rect x="484.8" y="1429" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="487.83" y="1439.5" ></text>
</g>
<g >
<title>malloc (7,838,080,112 samples, 0.76%)</title><rect x="961.3" y="69" width="9.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="964.34" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (194,088,443 samples, 0.02%)</title><rect x="487.7" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.68" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1589" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,082,638,524 samples, 0.11%)</title><rect x="490.0" y="1541" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.00" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1349" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1359.5" >std::__detail::..</text>
</g>
<g >
<title>ext4_da_write_end (82,228,924,664 samples, 8.01%)</title><rect x="286.7" y="1349" width="94.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="289.75" y="1359.5" >ext4_da_wri..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="789" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="799.5" ></text>
</g>
<g >
<title>__mmput (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1429" width="2.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1174.64" y="1439.5" ></text>
</g>
<g >
<title>__file_remove_privs (150,585,307 samples, 0.01%)</title><rect x="251.7" y="1349" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="254.65" y="1359.5" ></text>
</g>
<g >
<title>operator new (99,755,244 samples, 0.01%)</title><rect x="804.9" y="1573" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="807.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="869" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="879.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (100,589,626 samples, 0.01%)</title><rect x="813.3" y="1445" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="816.27" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4,353,993,480 samples, 0.42%)</title><rect x="516.4" y="1525" width="5.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="519.38" y="1535.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (295,386,810 samples, 0.03%)</title><rect x="1169.5" y="1557" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1172.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,748,337,673 samples, 6.89%)</title><rect x="603.8" y="757" width="81.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="606.85" y="767.5" >std::__de..</text>
</g>
<g >
<title>ovl_write_iter (148,704,359 samples, 0.01%)</title><rect x="109.5" y="1477" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="112.47" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (113,808,898 samples, 0.01%)</title><rect x="521.7" y="1461" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="524.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1461" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1471.5" ></text>
</g>
<g >
<title>cfree (1,356,209,535 samples, 0.13%)</title><rect x="645.9" y="437" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="648.88" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1269" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1279.5" ></text>
</g>
<g >
<title>[bash] (541,252,839 samples, 0.05%)</title><rect x="1181.3" y="1493" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1184.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1269" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1205" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="629" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,521,912,252 samples, 1.03%)</title><rect x="415.3" y="1621" width="12.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="418.29" y="1631.5" ></text>
</g>
<g >
<title>_dl_catch_exception (119,504,338 samples, 0.01%)</title><rect x="488.1" y="1541" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="491.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1333" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1343.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__srcu_read_unlock (1,457,174,910 samples, 0.14%)</title><rect x="136.8" y="1429" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="139.77" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="661" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="671.5" >std::__detail::..</text>
</g>
<g >
<title>do_mas_align_munmap (1,546,574,167 samples, 0.15%)</title><rect x="442.2" y="1525" width="1.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="445.20" y="1535.5" ></text>
</g>
<g >
<title>iput (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1477" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="93.81" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (213,939,545 samples, 0.02%)</title><rect x="1182.5" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.46" y="1471.5" ></text>
</g>
<g >
<title>operator new (250,510,868 samples, 0.02%)</title><rect x="625.7" y="229" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="628.69" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (341,563,447,618 samples, 33.29%)</title><rect x="11.6" y="1589" width="392.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.63" y="1599.5" >[libc.so.6]</text>
</g>
<g >
<title>malloc (17,835,824,067 samples, 1.74%)</title><rect x="1095.2" y="53" width="20.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1098.17" y="63.5" ></text>
</g>
<g >
<title>do_idle (608,421,884 samples, 0.06%)</title><rect x="486.1" y="1573" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="489.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="357" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="367.5" ></text>
</g>
<g >
<title>malloc@plt (99,953,644 samples, 0.01%)</title><rect x="726.9" y="981" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="729.86" y="991.5" ></text>
</g>
<g >
<title>__schedule (179,393,526 samples, 0.02%)</title><rect x="511.3" y="1477" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="514.30" y="1487.5" ></text>
</g>
<g >
<title>workspace_folder_context::is_file_excluded (293,576,420 samples, 0.03%)</title><rect x="465.2" y="1461" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="468.16" y="1471.5" ></text>
</g>
<g >
<title>__get_task_ioprio (100,710,413 samples, 0.01%)</title><rect x="109.4" y="1477" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="112.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (652,604,302 samples, 0.06%)</title><rect x="763.4" y="1253" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="766.39" y="1263.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (101,643,039 samples, 0.01%)</title><rect x="477.4" y="1397" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="480.43" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1173" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1183.5" ></text>
</g>
<g >
<title>kernel_clone (339,799,695 samples, 0.03%)</title><rect x="1178.6" y="1541" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1181.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1381" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="1391.5" >std::__detail::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,241,408,171 samples, 0.22%)</title><rect x="420.3" y="1589" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="423.33" y="1599.5" ></text>
</g>
<g >
<title>operator delete@plt (1,956,211,509 samples, 0.19%)</title><rect x="1092.9" y="69" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1095.92" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1477" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="821" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="831.5" ></text>
</g>
<g >
<title>ovl_iterate (121,265,606 samples, 0.01%)</title><rect x="471.2" y="1269" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="474.21" y="1279.5" ></text>
</g>
<g >
<title>operator new (314,783,635 samples, 0.03%)</title><rect x="744.6" y="1125" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="747.62" y="1135.5" ></text>
</g>
<g >
<title>walk_component (473,639,535 samples, 0.05%)</title><rect x="421.5" y="1461" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="424.49" y="1471.5" ></text>
</g>
<g >
<title>unmap_vmas (268,487,058 samples, 0.03%)</title><rect x="1179.1" y="1397" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1182.11" y="1407.5" ></text>
</g>
<g >
<title>copy_page_range (1,050,719,539 samples, 0.10%)</title><rect x="509.5" y="1477" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="512.46" y="1487.5" ></text>
</g>
<g >
<title>do_group_exit (344,649,091 samples, 0.03%)</title><rect x="467.6" y="1573" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="470.63" y="1583.5" ></text>
</g>
<g >
<title>ktime_get (474,606,493 samples, 0.05%)</title><rect x="1189.1" y="1557" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1192.09" y="1567.5" ></text>
</g>
<g >
<title>v8::Function::Call (613,941,583 samples, 0.06%)</title><rect x="1168.0" y="1445" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1171.04" y="1455.5" ></text>
</g>
<g >
<title>dput (103,077,737 samples, 0.01%)</title><rect x="224.6" y="1461" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="227.62" y="1471.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (97,427,531 samples, 0.01%)</title><rect x="452.1" y="1477" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="455.05" y="1487.5" ></text>
</g>
<g >
<title>alloc_pages (113,980,293 samples, 0.01%)</title><rect x="564.0" y="1237" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="567.02" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1493" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (774,378,980 samples, 0.08%)</title><rect x="522.5" y="1605" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="525.54" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (100,658,183 samples, 0.01%)</title><rect x="718.2" y="981" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="721.17" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="901" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,550,114,969 samples, 10.19%)</title><rect x="852.9" y="181" width="120.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="191.5" >std::__detail:..</text>
</g>
<g >
<title>ovl_inode_upper (103,114,719 samples, 0.01%)</title><rect x="46.1" y="1445" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="49.13" y="1455.5" ></text>
</g>
<g >
<title>_dl_catch_exception (199,439,030 samples, 0.02%)</title><rect x="489.1" y="1397" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="492.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="1109" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="1119.5" >std::__detail::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (125,966,493 samples, 0.01%)</title><rect x="426.8" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="429.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="565" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="575.5" ></text>
</g>
<g >
<title>current_time (777,452,431 samples, 0.08%)</title><rect x="44.6" y="1397" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="47.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="437" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="447.5" >std::__detail::..</text>
</g>
<g >
<title>operator new (201,214,356 samples, 0.02%)</title><rect x="634.5" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="637.50" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1317" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (200,624,227 samples, 0.02%)</title><rect x="211.3" y="1333" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="214.27" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1269" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="1279.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3,062,006,757 samples, 0.30%)</title><rect x="289.3" y="1317" width="3.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="292.28" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,550,114,969 samples, 10.19%)</title><rect x="852.9" y="149" width="120.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="159.5" >std::__detail:..</text>
</g>
<g >
<title>down_write_killable (98,497,802 samples, 0.01%)</title><rect x="441.9" y="1525" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="444.91" y="1535.5" ></text>
</g>
<g >
<title>revert_creds (150,901,331 samples, 0.01%)</title><rect x="421.2" y="1429" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="424.16" y="1439.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (877,395,362 samples, 0.09%)</title><rect x="486.1" y="1621" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="489.11" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (803,331,961 samples, 0.08%)</title><rect x="640.8" y="373" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="643.80" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="645" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1045" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="341" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="351.5" ></text>
</g>
<g >
<title>CExtStore::GetCodeItems (99,447,837 samples, 0.01%)</title><rect x="417.3" y="1557" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="420.30" y="1567.5" ></text>
</g>
<g >
<title>next_tgid (129,059,991 samples, 0.01%)</title><rect x="483.8" y="1509" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="486.82" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (134,174,286 samples, 0.01%)</title><rect x="563.7" y="1317" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="566.66" y="1327.5" ></text>
</g>
<g >
<title>malloc (100,759,456 samples, 0.01%)</title><rect x="755.0" y="1173" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="758.00" y="1183.5" ></text>
</g>
<g >
<title>__entry_text_start (180,593,778 samples, 0.02%)</title><rect x="1185.6" y="1621" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1188.60" y="1631.5" ></text>
</g>
<g >
<title>map_id_up (802,403,938 samples, 0.08%)</title><rect x="361.2" y="1221" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="364.23" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,939,011,338 samples, 0.97%)</title><rect x="523.8" y="1605" width="11.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="526.79" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (465,305,108 samples, 0.05%)</title><rect x="441.6" y="1589" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="444.60" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages (251,425,502 samples, 0.02%)</title><rect x="281.7" y="1237" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="284.73" y="1247.5" ></text>
</g>
<g >
<title>__count_memcg_events (100,571,070 samples, 0.01%)</title><rect x="281.2" y="1221" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="284.21" y="1231.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (133,615,660 samples, 0.01%)</title><rect x="443.2" y="1493" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="446.23" y="1503.5" ></text>
</g>
<g >
<title>do_filp_open (294,895,179 samples, 0.03%)</title><rect x="479.1" y="1541" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="482.12" y="1551.5" ></text>
</g>
<g >
<title>code_store::statement_t::prepare (297,173,502 samples, 0.03%)</title><rect x="417.4" y="1477" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="420.41" y="1487.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,154,006,875 samples, 0.11%)</title><rect x="516.9" y="1509" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="519.86" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="901" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="911.5" ></text>
</g>
<g >
<title>[libc.so.6] (193,477,818 samples, 0.02%)</title><rect x="1183.7" y="1445" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.75" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="645" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="655.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>sqlite3VdbeExec (654,952,786 samples, 0.06%)</title><rect x="457.4" y="1429" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="460.42" y="1439.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (893,190,212 samples, 0.09%)</title><rect x="417.3" y="1605" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="420.30" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,742,206 samples, 0.07%)</title><rect x="716.1" y="933" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="719.12" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,455,242,120 samples, 0.14%)</title><rect x="1162.9" y="117" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.93" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1461" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1493" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (952,380,665 samples, 0.09%)</title><rect x="655.8" y="469" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="658.81" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (113,100,710,008 samples, 11.02%)</title><rect x="597.5" y="1093" width="130.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="600.55" y="1103.5" >std::__detail::_..</text>
</g>
<g >
<title>[libc.so.6] (91,072,045 samples, 0.01%)</title><rect x="469.8" y="1253" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="472.80" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (183,081,106 samples, 0.02%)</title><rect x="451.6" y="1605" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="454.59" y="1615.5" ></text>
</g>
<g >
<title>futex_wait (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1525" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="418.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="917" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="373" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="383.5" ></text>
</g>
<g >
<title>__clone (5,128,369,371 samples, 0.50%)</title><rect x="472.0" y="1621" width="5.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="475.04" y="1631.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (446,228,628 samples, 0.04%)</title><rect x="1174.7" y="1493" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1177.73" y="1503.5" ></text>
</g>
<g >
<title>resolveExprStep (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1365" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="420.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="773" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="783.5" ></text>
</g>
<g >
<title>copy_p4d_range (252,616,199 samples, 0.02%)</title><rect x="1178.7" y="1461" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1181.70" y="1471.5" ></text>
</g>
<g >
<title>ossl_namemap_stored (102,035,405 samples, 0.01%)</title><rect x="565.3" y="1317" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="568.33" y="1327.5" ></text>
</g>
<g >
<title>exit_mm (217,387,120 samples, 0.02%)</title><rect x="515.0" y="1541" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="518.00" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_free (301,168,510 samples, 0.03%)</title><rect x="323.1" y="1269" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="326.09" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1237" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (28,561,665,362 samples, 2.78%)</title><rect x="610.1" y="421" width="32.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="613.15" y="431.5" >st..</text>
</g>
<g >
<title>writeback_sb_inodes (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1493" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1182.62" y="1503.5" ></text>
</g>
<g >
<title>charge_memcg (201,312,970 samples, 0.02%)</title><rect x="281.2" y="1237" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="284.15" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,009,821,238 samples, 0.20%)</title><rect x="915.2" y="69" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="918.22" y="79.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (154,350,394 samples, 0.02%)</title><rect x="1180.9" y="1589" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1183.87" y="1599.5" ></text>
</g>
<g >
<title>complete_walk (101,232,629 samples, 0.01%)</title><rect x="424.2" y="1477" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="427.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1253" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1263.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1573" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="421.38" y="1583.5" ></text>
</g>
<g >
<title>proc_root_readdir (193,843,664 samples, 0.02%)</title><rect x="483.8" y="1541" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="486.82" y="1551.5" ></text>
</g>
<g >
<title>revert_creds (1,604,553,975 samples, 0.16%)</title><rect x="392.5" y="1461" width="1.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="395.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1349" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1173" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1183.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,166,203,867 samples, 5.28%)</title><rect x="606.5" y="629" width="62.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="609.45" y="639.5" >std::_..</text>
</g>
<g >
<title>cfree (200,454,319 samples, 0.02%)</title><rect x="785.0" y="1541" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="788.00" y="1551.5" ></text>
</g>
<g >
<title>malloc (1,329,350,937 samples, 0.13%)</title><rect x="751.2" y="1189" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="754.22" y="1199.5" ></text>
</g>
<g >
<title>path_openat (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1509" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="429.82" y="1519.5" ></text>
</g>
<g >
<title>uv__fs_work (281,799,136 samples, 0.03%)</title><rect x="1171.0" y="1573" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1174.04" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,748,840 samples, 0.01%)</title><rect x="804.7" y="1573" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="807.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1141" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1151.5" ></text>
</g>
<g >
<title>start_secondary (5,434,450,483 samples, 0.53%)</title><rect x="516.3" y="1605" width="6.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="519.29" y="1615.5" ></text>
</g>
<g >
<title>get_sigframe_size (95,163,925 samples, 0.01%)</title><rect x="1183.0" y="1477" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1185.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1557" width="9.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="817.03" y="1567.5" ></text>
</g>
<g >
<title>cfree (8,035,524,109 samples, 0.78%)</title><rect x="1080.7" y="69" width="9.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1083.73" y="79.5" ></text>
</g>
<g >
<title>getPageNormal (144,886,909 samples, 0.01%)</title><rect x="459.9" y="1333" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="462.92" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Event&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Event&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Event&gt; &gt; &gt;::find (151,948,936 samples, 0.01%)</title><rect x="803.8" y="1557" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="806.83" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1221" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (351,437,417 samples, 0.03%)</title><rect x="735.1" y="1077" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="738.13" y="1087.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (740,859,323 samples, 0.07%)</title><rect x="1175.9" y="1317" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1178.89" y="1327.5" ></text>
</g>
<g >
<title>inode_permission (5,283,948,039 samples, 0.51%)</title><rect x="789.9" y="1397" width="6.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="792.93" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="229" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="239.5" ></text>
</g>
<g >
<title>ext4_writepages (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1445" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1182.62" y="1455.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (110,377,596 samples, 0.01%)</title><rect x="479.2" y="1509" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="482.24" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (670,166,041 samples, 0.07%)</title><rect x="484.9" y="1397" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="487.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="261" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="853.46" y="271.5" ></text>
</g>
<g >
<title>[git] (2,948,493,431 samples, 0.29%)</title><rect x="468.1" y="1413" width="3.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="471.14" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,046,886,838 samples, 0.78%)</title><rect x="814.0" y="181" width="9.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="191.5" ></text>
</g>
<g >
<title>read (151,741,680 samples, 0.01%)</title><rect x="1171.0" y="1541" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1174.05" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (105,895,215 samples, 0.01%)</title><rect x="465.7" y="1605" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="468.75" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (260,169,563 samples, 0.03%)</title><rect x="23.1" y="1541" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.13" y="1551.5" ></text>
</g>
<g >
<title>malloc (99,755,244 samples, 0.01%)</title><rect x="804.9" y="1557" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="807.95" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (1,159,579,250 samples, 0.11%)</title><rect x="466.2" y="1605" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="469.22" y="1615.5" ></text>
</g>
<g >
<title>wb_do_writeback (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1541" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1182.62" y="1551.5" ></text>
</g>
<g >
<title>psi_task_switch (108,588,151 samples, 0.01%)</title><rect x="522.3" y="1525" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="525.25" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,405,991,042 samples, 0.23%)</title><rect x="424.0" y="1589" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="427.05" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1077" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1087.5" ></text>
</g>
<g >
<title>__writeback_single_inode (105,786,156 samples, 0.01%)</title><rect x="1179.6" y="1477" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.62" y="1487.5" ></text>
</g>
<g >
<title>[expr] (1,159,579,250 samples, 0.11%)</title><rect x="466.2" y="1621" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="469.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="613" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,680,101 samples, 0.01%)</title><rect x="599.3" y="997" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="602.34" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="213" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="223.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (114,381,783 samples, 0.01%)</title><rect x="515.1" y="1445" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="518.06" y="1455.5" ></text>
</g>
<g >
<title>__libc_start_main (2,141,319,983 samples, 0.21%)</title><rect x="488.8" y="1605" width="2.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="491.78" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1,384,302,673 samples, 0.13%)</title><rect x="1177.5" y="1621" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.47" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_execve (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1589" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1176.96" y="1599.5" ></text>
</g>
<g >
<title>vfs_open (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1477" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="429.82" y="1487.5" ></text>
</g>
<g >
<title>enframe (1,085,581,740 samples, 0.11%)</title><rect x="450.3" y="1621" width="1.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="453.28" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (351,421,346 samples, 0.03%)</title><rect x="658.7" y="501" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="661.75" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="901" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="911.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[git] (183,609,344 samples, 0.02%)</title><rect x="469.6" y="1253" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.59" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,723,590,019 samples, 0.46%)</title><rect x="472.5" y="1541" width="5.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="475.51" y="1551.5" ></text>
</g>
<g >
<title>__mmput (1,590,437,450 samples, 0.15%)</title><rect x="513.0" y="1429" width="1.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="515.95" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,685,351,221 samples, 2.11%)</title><rect x="610.3" y="389" width="24.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="613.26" y="399.5" >s..</text>
</g>
<g >
<title>lockref_put_return (1,452,877,140 samples, 0.14%)</title><rect x="38.8" y="1445" width="1.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="41.79" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="741" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="751.5" >std::__detail::..</text>
</g>
<g >
<title>proc_pid_status (225,768,281 samples, 0.02%)</title><rect x="479.8" y="1477" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="482.76" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_execve (866,369,811 samples, 0.08%)</title><rect x="484.8" y="1589" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="487.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="949" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="959.5" ></text>
</g>
<g >
<title>CExtFileResults::GetData (297,485,231 samples, 0.03%)</title><rect x="458.4" y="1461" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="461.38" y="1471.5" ></text>
</g>
<g >
<title>operator new (251,711,081 samples, 0.02%)</title><rect x="745.2" y="1125" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="748.21" y="1135.5" ></text>
</g>
<g >
<title>__check_object_size (418,533,067 samples, 0.04%)</title><rect x="787.4" y="1413" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="790.37" y="1423.5" ></text>
</g>
<g >
<title>exit_mmap (295,491,117 samples, 0.03%)</title><rect x="1179.1" y="1413" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1182.08" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="629" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (225,290,088 samples, 0.02%)</title><rect x="487.6" y="1589" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.65" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="901" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="911.5" ></text>
</g>
<g >
<title>ovl_path_realdata (499,866,565 samples, 0.05%)</title><rect x="238.0" y="1429" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="241.02" y="1439.5" ></text>
</g>
<g >
<title>dup_mmap (112,006,694 samples, 0.01%)</title><rect x="512.8" y="1509" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="515.82" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_statx (101,358,042 samples, 0.01%)</title><rect x="488.7" y="1573" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="491.66" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (802,724,661 samples, 0.08%)</title><rect x="657.8" y="501" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="660.83" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,159,077,076 samples, 0.21%)</title><rect x="748.7" y="1189" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="751.68" y="1199.5" ></text>
</g>
<g >
<title>arch_call_rest_init (319,953,641 samples, 0.03%)</title><rect x="1189.6" y="1573" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.63" y="1583.5" ></text>
</g>
<g >
<title>ovl_read_iter (208,932,970 samples, 0.02%)</title><rect x="29.8" y="1477" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="32.76" y="1487.5" ></text>
</g>
<g >
<title>cfree (151,088,810 samples, 0.01%)</title><rect x="804.4" y="1525" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="807.36" y="1535.5" ></text>
</g>
<g >
<title>rw_verify_area (11,193,157,770 samples, 1.09%)</title><rect x="73.6" y="1461" width="12.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="76.64" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="581" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (201,085,073 samples, 0.02%)</title><rect x="566.5" y="85" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (141,833,362 samples, 0.01%)</title><rect x="452.1" y="1573" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="455.05" y="1583.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (3,367,923,782 samples, 0.33%)</title><rect x="42.3" y="1445" width="3.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="45.25" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,353,485,276 samples, 0.13%)</title><rect x="653.4" y="485" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="656.38" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="805" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="469" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="479.5" ></text>
</g>
<g >
<title>inotify_free_event (15,063,865,362 samples, 1.47%)</title><rect x="191.1" y="1365" width="17.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="194.07" y="1375.5" ></text>
</g>
<g >
<title>execve (206,772,512 samples, 0.02%)</title><rect x="1181.4" y="1429" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1184.39" y="1439.5" ></text>
</g>
<g >
<title>__check_object_size (603,676,474 samples, 0.06%)</title><rect x="1168.7" y="1333" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1171.75" y="1343.5" ></text>
</g>
<g >
<title>__cmd_record (1,934,643,307 samples, 0.19%)</title><rect x="1174.6" y="1605" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1177.63" y="1615.5" ></text>
</g>
<g >
<title>exec_binprm (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1525" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1176.96" y="1535.5" ></text>
</g>
<g >
<title>[git] (652,803,746 samples, 0.06%)</title><rect x="469.5" y="1301" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="472.45" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (154,383,600 samples, 0.02%)</title><rect x="726.0" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="728.99" y="991.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1477" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="459.34" y="1487.5" ></text>
</g>
<g >
<title>enqueue_task (197,757,434 samples, 0.02%)</title><rect x="521.6" y="1493" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="524.64" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (447,263,311 samples, 0.04%)</title><rect x="771.0" y="1301" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="774.01" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,129,151,615 samples, 0.69%)</title><rect x="765.4" y="1349" width="8.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="768.40" y="1359.5" ></text>
</g>
<g >
<title>pcache1Fetch (144,886,909 samples, 0.01%)</title><rect x="459.9" y="1317" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="462.92" y="1327.5" ></text>
</g>
<g >
<title>cfree (1,455,242,120 samples, 0.14%)</title><rect x="1162.9" y="133" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1165.93" y="143.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (3,916,512,760 samples, 0.38%)</title><rect x="364.9" y="1237" width="4.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="367.87" y="1247.5" ></text>
</g>
<g >
<title>walk_component (149,403,896 samples, 0.01%)</title><rect x="476.8" y="1429" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="479.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1205" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1215.5" ></text>
</g>
<g >
<title>fsnotify_peek_first_event (98,177,722 samples, 0.01%)</title><rect x="807.0" y="1493" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="809.98" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (347,385,144 samples, 0.03%)</title><rect x="466.5" y="1445" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.47" y="1455.5" ></text>
</g>
<g >
<title>ls (31,574,982,387 samples, 3.08%)</title><rect x="487.1" y="1637" width="36.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="490.12" y="1647.5" >ls</text>
</g>
<g >
<title>[ls] (866,511,375 samples, 0.08%)</title><rect x="488.8" y="1541" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="491.80" y="1551.5" ></text>
</g>
<g >
<title>free@plt (100,749,116 samples, 0.01%)</title><rect x="778.8" y="1397" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="781.79" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="165" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,615,453,611 samples, 0.16%)</title><rect x="442.2" y="1573" width="1.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="445.20" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1109" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1119.5" ></text>
</g>
<g >
<title>ovl_d_real (250,703,727 samples, 0.02%)</title><rect x="235.1" y="1445" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="238.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="933" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,457,314,245 samples, 0.14%)</title><rect x="768.5" y="1317" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="771.46" y="1327.5" ></text>
</g>
<g >
<title>lookup_bh_lru (145,417,409 samples, 0.01%)</title><rect x="376.0" y="1205" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="379.00" y="1215.5" ></text>
</g>
<g >
<title>getdents64 (133,118,333 samples, 0.01%)</title><rect x="1181.8" y="1381" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1184.75" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,998,895,547 samples, 6.92%)</title><rect x="603.6" y="773" width="81.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="606.56" y="783.5" >std::__de..</text>
</g>
<g >
<title>ovl_permission (990,546,147 samples, 0.10%)</title><rect x="424.8" y="1445" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="427.77" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (402,174,036 samples, 0.04%)</title><rect x="624.0" y="213" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="627.02" y="223.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (444,929,037 samples, 0.04%)</title><rect x="421.5" y="1429" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="424.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,169,308,566 samples, 0.41%)</title><rect x="823.7" y="133" width="4.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="143.5" ></text>
</g>
<g >
<title>mas_wr_bnode (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1429" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="513.67" y="1439.5" ></text>
</g>
<g >
<title>walk_component (136,197,727 samples, 0.01%)</title><rect x="421.3" y="1445" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="424.33" y="1455.5" ></text>
</g>
<g >
<title>do_open (125,653,093 samples, 0.01%)</title><rect x="426.8" y="1493" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="429.82" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (903,361,822 samples, 0.09%)</title><rect x="666.4" y="549" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="669.43" y="559.5" ></text>
</g>
<g >
<title>path_lookupat (9,471,472,069 samples, 0.92%)</title><rect x="788.6" y="1429" width="10.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="791.55" y="1439.5" ></text>
</g>
<g >
<title>generic_write_check_limits (301,457,716 samples, 0.03%)</title><rect x="250.6" y="1349" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="253.55" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (127,109,334 samples, 0.01%)</title><rect x="478.9" y="1573" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="481.95" y="1583.5" ></text>
</g>
<g >
<title>kernel_clone (591,391,637 samples, 0.06%)</title><rect x="482.4" y="1541" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="485.41" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,073,689,565 samples, 0.10%)</title><rect x="478.9" y="1589" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="481.91" y="1599.5" ></text>
</g>
<g >
<title>dequeue_task_fair (98,427,949 samples, 0.01%)</title><rect x="436.1" y="1461" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="439.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1237" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1247.5" ></text>
</g>
<g >
<title>aa_file_perm (150,793,668 samples, 0.01%)</title><rect x="390.2" y="1381" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="393.20" y="1391.5" ></text>
</g>
<g >
<title>execute_command (292,789,686 samples, 0.03%)</title><rect x="1181.9" y="1445" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1184.94" y="1455.5" ></text>
</g>
<g >
<title>__check_object_size (753,513,776 samples, 0.07%)</title><rect x="808.7" y="1461" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="811.65" y="1471.5" ></text>
</g>
<g >
<title>malloc (100,048,361 samples, 0.01%)</title><rect x="692.7" y="725" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="695.67" y="735.5" ></text>
</g>
<g >
<title>from_kuid (751,621,090 samples, 0.07%)</title><rect x="360.4" y="1221" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="363.37" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,522,246,362 samples, 0.34%)</title><rect x="1158.9" y="149" width="4.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="159.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (465,305,108 samples, 0.05%)</title><rect x="441.6" y="1541" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="444.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,747,611 samples, 0.01%)</title><rect x="611.8" y="293" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="614.82" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (169,842,848,880 samples, 16.55%)</title><rect x="588.0" y="1493" width="195.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="590.95" y="1503.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (953,608,493 samples, 0.09%)</title><rect x="973.1" y="165" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="976.13" y="175.5" ></text>
</g>
<g >
<title>sqlite3RunParser (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1477" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="420.75" y="1487.5" ></text>
</g>
<g >
<title>malloc (201,214,356 samples, 0.02%)</title><rect x="634.5" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="637.50" y="287.5" ></text>
</g>
<g >
<title>malloc (804,314,679 samples, 0.08%)</title><rect x="826.9" y="85" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="829.93" y="95.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (143,408,334 samples, 0.01%)</title><rect x="447.0" y="1509" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="449.97" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1509" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4,561,333,269 samples, 0.44%)</title><rect x="516.3" y="1557" width="5.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="519.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="997" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1007.5" ></text>
</g>
<g >
<title>do_idle (95,935,669 samples, 0.01%)</title><rect x="1185.5" y="1573" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.45" y="1583.5" ></text>
</g>
<g >
<title>call_filldir (98,248,016 samples, 0.01%)</title><rect x="470.8" y="1173" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="473.82" y="1183.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (1,715,424,107 samples, 0.17%)</title><rect x="563.5" y="1589" width="2.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="566.53" y="1599.5" ></text>
</g>
<g >
<title>iterate_dir (670,266,532 samples, 0.07%)</title><rect x="483.3" y="1557" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="486.28" y="1567.5" ></text>
</g>
<g >
<title>browse_engine::query_symbols (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1477" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="465.78" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (750,880,220 samples, 0.07%)</title><rect x="648.5" y="421" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="651.48" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="789" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="799.5" ></text>
</g>
<g >
<title>sqlite3_step (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1429" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="459.34" y="1439.5" ></text>
</g>
<g >
<title>malloc (302,216,020 samples, 0.03%)</title><rect x="617.5" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="620.49" y="175.5" ></text>
</g>
<g >
<title>run_rebalance_domains (175,480,167 samples, 0.02%)</title><rect x="516.6" y="1429" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="519.59" y="1439.5" ></text>
</g>
<g >
<title>apparmor_file_permission (103,660,257 samples, 0.01%)</title><rect x="813.5" y="1461" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="816.51" y="1471.5" ></text>
</g>
<g >
<title>aa_file_perm (362,062,869 samples, 0.04%)</title><rect x="70.8" y="1365" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="73.78" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="437" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="447.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>[libc.so.6] (478,456,115 samples, 0.05%)</title><rect x="1176.9" y="1621" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1179.88" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,550,114,969 samples, 10.19%)</title><rect x="852.9" y="165" width="120.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="175.5" >std::__detail:..</text>
</g>
<g >
<title>futex_wait_queue (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1509" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="418.78" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1621" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1176.96" y="1631.5" ></text>
</g>
<g >
<title>__legitimize_path (249,192,903 samples, 0.02%)</title><rect x="788.7" y="1381" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="791.73" y="1391.5" ></text>
</g>
<g >
<title>symbol_search_engine::search_results_t::get_next_result (592,509,894 samples, 0.06%)</title><rect x="462.8" y="1461" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="465.78" y="1471.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (1,291,089,749 samples, 0.13%)</title><rect x="509.4" y="1509" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="512.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="757" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="767.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (97,964,802 samples, 0.01%)</title><rect x="1175.1" y="1477" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1178.13" y="1487.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (8,013,763,261 samples, 0.78%)</title><rect x="789.1" y="1413" width="9.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="792.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1237" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="981" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (169,340,220,618 samples, 16.50%)</title><rect x="588.5" y="1477" width="194.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="591.53" y="1487.5" >std::__detail::_Executor&lt;..</text>
</g>
<g >
<title>__cond_resched (150,008,888 samples, 0.01%)</title><rect x="297.1" y="1269" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="300.14" y="1279.5" ></text>
</g>
<g >
<title>[bash] (116,325,567 samples, 0.01%)</title><rect x="1182.1" y="1269" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.09" y="1279.5" ></text>
</g>
<g >
<title>__libc_free (1,956,705,097 samples, 0.19%)</title><rect x="427.4" y="1621" width="2.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="430.39" y="1631.5" ></text>
</g>
<g >
<title>step_into (298,708,226 samples, 0.03%)</title><rect x="797.9" y="1381" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="800.94" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (149,772,896 samples, 0.01%)</title><rect x="677.1" y="629" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="680.06" y="639.5" ></text>
</g>
<g >
<title>execute_command_internal (132,381,823 samples, 0.01%)</title><rect x="1182.3" y="1445" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1185.28" y="1455.5" ></text>
</g>
<g >
<title>alloc_pages (251,425,502 samples, 0.02%)</title><rect x="281.7" y="1253" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="284.73" y="1263.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (4,497,289,541 samples, 0.44%)</title><rect x="258.7" y="1349" width="5.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="261.70" y="1359.5" ></text>
</g>
<g >
<title>path_lookupat (3,590,285,271 samples, 0.35%)</title><rect x="472.8" y="1445" width="4.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="475.80" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (100,589,626 samples, 0.01%)</title><rect x="813.3" y="1461" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="816.27" y="1471.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (451,593,038 samples, 0.04%)</title><rect x="254.7" y="1317" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="257.71" y="1327.5" ></text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::full_code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::full_code_items_set&gt;::move_next (654,952,786 samples, 0.06%)</title><rect x="457.4" y="1477" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="460.42" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,054,293,023 samples, 0.20%)</title><rect x="482.4" y="1589" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="485.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,958,279,956 samples, 0.78%)</title><rect x="718.3" y="1029" width="9.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="721.29" y="1039.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (2,513,868,007 samples, 0.24%)</title><rect x="381.6" y="1349" width="2.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="384.59" y="1359.5" ></text>
</g>
<g >
<title>user_path_at_empty (2,290,046,719 samples, 0.22%)</title><rect x="424.2" y="1525" width="2.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="427.18" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="629" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="639.5" ></text>
</g>
<g >
<title>generic_perform_write (112,647,874,063 samples, 10.98%)</title><rect x="255.9" y="1365" width="129.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="258.92" y="1375.5" >generic_perform_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="309" width="4.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="570.62" y="319.5" ></text>
</g>
<g >
<title>msvc::path_utf8::split_path (362,802,434 samples, 0.04%)</title><rect x="461.9" y="1461" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="464.87" y="1471.5" ></text>
</g>
<g >
<title>begin_new_exec (110,631,263 samples, 0.01%)</title><rect x="1182.9" y="1477" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1185.86" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1,945,220,862 samples, 0.19%)</title><rect x="1174.6" y="1621" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1177.63" y="1631.5" ></text>
</g>
<g >
<title>[bash] (117,038,279 samples, 0.01%)</title><rect x="1182.1" y="1301" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.09" y="1311.5" ></text>
</g>
<g >
<title>[[heap]] (265,678,258 samples, 0.03%)</title><rect x="465.9" y="1621" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="468.91" y="1631.5" ></text>
</g>
<g >
<title>[libc.so.6] (930,519,559 samples, 0.09%)</title><rect x="466.4" y="1493" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.44" y="1503.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (16,368,737,564 samples, 1.60%)</title><rect x="190.3" y="1381" width="18.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="193.32" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1525" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,403,310,289 samples, 0.14%)</title><rect x="478.5" y="1621" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.55" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (121,053,020,000 samples, 11.80%)</title><rect x="1000.8" y="85" width="139.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1003.76" y="95.5" >std::__detail::_E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="1365" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,608,081,306 samples, 0.16%)</title><rect x="662.8" y="549" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="665.79" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="389" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="399.5" ></text>
</g>
<g >
<title>operator delete (100,654,844 samples, 0.01%)</title><rect x="778.9" y="1397" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="781.91" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (369,168,849 samples, 0.04%)</title><rect x="486.1" y="1541" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="489.13" y="1551.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,259,286,935 samples, 0.32%)</title><rect x="1185.9" y="1589" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="773" width="17.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1144.70" y="783.5" ></text>
</g>
<g >
<title>ovl_override_creds (200,564,145 samples, 0.02%)</title><rect x="801.3" y="1413" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="804.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (351,599,119 samples, 0.03%)</title><rect x="823.3" y="229" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="826.29" y="239.5" ></text>
</g>
<g >
<title>__pte_alloc (117,210,736 samples, 0.01%)</title><rect x="564.0" y="1269" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="567.02" y="1279.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (302,246,375 samples, 0.03%)</title><rect x="467.6" y="1429" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="470.65" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="101" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="885" width="16.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="977.22" y="895.5" ></text>
</g>
<g >
<title>malloc (200,280,836 samples, 0.02%)</title><rect x="642.3" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="645.30" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="229" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="1077" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="1087.5" ></text>
</g>
<g >
<title>[libc.so.6] (335,119,930 samples, 0.03%)</title><rect x="466.5" y="1429" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.49" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (602,310,528 samples, 0.06%)</title><rect x="820.6" y="117" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="823.63" y="127.5" ></text>
</g>
<g >
<title>cfree (451,517,373 samples, 0.04%)</title><rect x="850.9" y="85" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="853.93" y="95.5" ></text>
</g>
<g >
<title>do_sys_poll (646,748,915 samples, 0.06%)</title><rect x="1174.7" y="1509" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1177.70" y="1519.5" ></text>
</g>
<g >
<title>inode_permission (803,919,881 samples, 0.08%)</title><rect x="792.3" y="1365" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="795.31" y="1375.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (200,624,227 samples, 0.02%)</title><rect x="211.3" y="1317" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="214.27" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="885" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="895.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>pagecache_get_page (10,934,904,009 samples, 1.07%)</title><rect x="273.9" y="1317" width="12.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="276.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="501" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (167,239,329 samples, 0.02%)</title><rect x="472.3" y="1509" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="475.27" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="357" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="367.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1413" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="789" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,843,878 samples, 0.02%)</title><rect x="763.8" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="766.85" y="1247.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,741,070 samples, 0.01%)</title><rect x="640.7" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="643.68" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1541" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="1157" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="901" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="1317" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1327.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (148,755,857 samples, 0.01%)</title><rect x="470.5" y="1157" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="473.49" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="421" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="431.5" ></text>
</g>
<g >
<title>OSSL_DECODER_CTX_add_extra (132,832,642 samples, 0.01%)</title><rect x="565.3" y="1349" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="568.30" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (204,231,585 samples, 0.02%)</title><rect x="990.0" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="992.99" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (153,779,442 samples, 0.01%)</title><rect x="415.8" y="1589" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="418.78" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="613" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="623.5" ></text>
</g>
<g >
<title>exec_mmap (1,590,437,450 samples, 0.15%)</title><rect x="513.0" y="1461" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="515.95" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="741" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="709" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="853" width="121.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="855.89" y="863.5" >std::__detail::..</text>
</g>
<g >
<title>[libc.so.6] (970,486,414 samples, 0.09%)</title><rect x="466.4" y="1525" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="469.44" y="1535.5" ></text>
</g>
<g >
<title>operator delete@plt (99,633,373 samples, 0.01%)</title><rect x="639.4" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="642.41" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="149" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,757,367 samples, 0.01%)</title><rect x="487.7" y="1461" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="490.69" y="1471.5" ></text>
</g>
<g >
<title>__rcu_read_lock (500,526,568 samples, 0.05%)</title><rect x="258.8" y="1333" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="261.75" y="1343.5" ></text>
</g>
<g >
<title>inode_to_bdi (150,862,575 samples, 0.01%)</title><rect x="263.6" y="1333" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="266.58" y="1343.5" ></text>
</g>
<g >
<title>malloc@plt (401,799,917 samples, 0.04%)</title><rect x="1158.2" y="53" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1161.24" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (601,594,156 samples, 0.06%)</title><rect x="1166.4" y="101" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1169.45" y="111.5" ></text>
</g>
<g >
<title>__alloc_pages (94,686,113 samples, 0.01%)</title><rect x="509.5" y="1397" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="512.52" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,607,617 samples, 0.01%)</title><rect x="715.9" y="901" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="718.89" y="911.5" ></text>
</g>
<g >
<title>strcpy (2,257,493,484 samples, 0.22%)</title><rect x="215.6" y="1397" width="2.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="218.65" y="1407.5" ></text>
</g>
<g >
<title>release_dentry_name_snapshot (150,378,808 samples, 0.01%)</title><rect x="392.3" y="1461" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="395.34" y="1471.5" ></text>
</g>
<g >
<title>[anon] (33,684,568,071 samples, 3.28%)</title><rect x="523.8" y="1621" width="38.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="526.79" y="1631.5" >[an..</text>
</g>
<g >
<title>security_inode_getattr (197,450,273 samples, 0.02%)</title><rect x="422.1" y="1493" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="425.09" y="1503.5" ></text>
</g>
<g >
<title>unmap_page_range (129,893,859 samples, 0.01%)</title><rect x="451.6" y="1365" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="454.59" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="629" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="639.5" >std::__detail::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,917,688,361 samples, 1.36%)</title><rect x="974.2" y="997" width="16.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="977.22" y="1007.5" ></text>
</g>
<g >
<title>proc_readfd_common (132,053,223 samples, 0.01%)</title><rect x="1181.8" y="1285" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1184.75" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="469" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="479.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1013" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1023.5" ></text>
</g>
<g >
<title>worker_thread (124,117,002 samples, 0.01%)</title><rect x="486.0" y="1589" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="488.95" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (100,207,583 samples, 0.01%)</title><rect x="806.9" y="1493" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="809.86" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (908,269,683 samples, 0.09%)</title><rect x="490.0" y="1477" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.00" y="1487.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (365,883,057 samples, 0.04%)</title><rect x="90.8" y="1381" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="93.81" y="1391.5" ></text>
</g>
<g >
<title>load_elf_binary (1,781,137,071 samples, 0.17%)</title><rect x="513.0" y="1493" width="2.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="515.95" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (134,690,221 samples, 0.01%)</title><rect x="489.2" y="1173" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="492.15" y="1183.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,082,638,524 samples, 0.11%)</title><rect x="490.0" y="1525" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="581" width="9.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="817.03" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1397" width="151.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="993.23" y="1407.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>vma_mas_store (356,580,965 samples, 0.03%)</title><rect x="442.5" y="1477" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="445.48" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (130,714,869,146 samples, 12.74%)</title><rect x="595.2" y="1189" width="150.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="598.24" y="1199.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>__ext4fs_dirhash (98,558,583 samples, 0.01%)</title><rect x="470.5" y="1109" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="473.55" y="1119.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (268,487,058 samples, 0.03%)</title><rect x="1179.1" y="1349" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1182.11" y="1359.5" ></text>
</g>
<g >
<title>cpp_properties::resolve_includes (632,274,187 samples, 0.06%)</title><rect x="464.8" y="1493" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="467.77" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="997" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1429" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,795,797 samples, 0.01%)</title><rect x="1158.7" y="117" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.70" y="127.5" ></text>
</g>
<g >
<title>memchr_inv (317,405,121 samples, 0.03%)</title><rect x="1189.6" y="1445" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.63" y="1455.5" ></text>
</g>
<g >
<title>mnt_user_ns (99,744,573 samples, 0.01%)</title><rect x="790.5" y="1381" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="793.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (954,909,849 samples, 0.09%)</title><rect x="566.5" y="997" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="569.53" y="1007.5" ></text>
</g>
<g >
<title>copy_page_to_iter (298,897,013 samples, 0.03%)</title><rect x="455.6" y="1429" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="458.60" y="1439.5" ></text>
</g>
<g >
<title>walkExpr (149,030,385 samples, 0.01%)</title><rect x="417.8" y="1381" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="420.75" y="1391.5" ></text>
</g>
<g >
<title>mas_split.isra.0 (96,939,230 samples, 0.01%)</title><rect x="510.7" y="1397" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="513.67" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (524,306,142,400 samples, 51.10%)</title><rect x="566.5" y="1621" width="603.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="569.53" y="1631.5" >[unknown]</text>
</g>
<g >
<title>[libc.so.6] (99,086,099 samples, 0.01%)</title><rect x="803.5" y="1541" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="806.48" y="1551.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1,178,002,957 samples, 0.11%)</title><rect x="1175.5" y="1589" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1178.50" y="1599.5" ></text>
</g>
<g >
<title>_compound_head (97,174,327 samples, 0.01%)</title><rect x="1178.8" y="1413" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1181.75" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="821" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="831.5" ></text>
</g>
<g >
<title>browse_engine::parse_file (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1589" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="421.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="997" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1007.5" ></text>
</g>
<g >
<title>override_creds (496,614,194 samples, 0.05%)</title><rect x="425.3" y="1413" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="428.34" y="1423.5" ></text>
</g>
<g >
<title>rw_verify_area (2,156,782,766 samples, 0.21%)</title><rect x="389.5" y="1413" width="2.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="392.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="341" width="5.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="826.69" y="351.5" ></text>
</g>
<g >
<title>strnlen_user (135,328,736 samples, 0.01%)</title><rect x="485.7" y="1477" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="488.66" y="1487.5" ></text>
</g>
<g >
<title>rw_verify_area (311,212,621 samples, 0.03%)</title><rect x="71.7" y="1429" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="74.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,075,502,581 samples, 4.39%)</title><rect x="607.4" y="565" width="51.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="610.43" y="575.5" >std::..</text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (100,642,063 samples, 0.01%)</title><rect x="206.9" y="1285" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="209.89" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (157,923,501,933 samples, 15.39%)</title><rect x="592.0" y="1365" width="181.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="594.99" y="1375.5" >std::__detail::_Executo..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,321,854,692 samples, 0.13%)</title><rect x="404.9" y="1621" width="1.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="407.89" y="1631.5" ></text>
</g>
<g >
<title>lookup_fast (444,929,037 samples, 0.04%)</title><rect x="421.5" y="1445" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="424.52" y="1455.5" ></text>
</g>
<g >
<title>rw_verify_area (200,496,139 samples, 0.02%)</title><rect x="392.1" y="1429" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="395.10" y="1439.5" ></text>
</g>
<g >
<title>generic_perform_write (646,097,140 samples, 0.06%)</title><rect x="1176.0" y="1301" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1178.99" y="1311.5" ></text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (742,652,707 samples, 0.07%)</title><rect x="459.5" y="1381" width="0.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="462.52" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (975,436,036 samples, 0.10%)</title><rect x="1175.6" y="1461" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.64" y="1471.5" ></text>
</g>
<g >
<title>unmap_single_vma (579,767,948 samples, 0.06%)</title><rect x="1174.0" y="1381" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1176.96" y="1391.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (300,999,984 samples, 0.03%)</title><rect x="378.7" y="1317" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="381.71" y="1327.5" ></text>
</g>
<g >
<title>filemap_add_folio (136,073,608 samples, 0.01%)</title><rect x="1176.2" y="1221" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.20" y="1231.5" ></text>
</g>
<g >
<title>code_store::store_t::get_code_items (247,098,206 samples, 0.02%)</title><rect x="418.4" y="1525" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="421.38" y="1535.5" ></text>
</g>
<g >
<title>[ls] (92,395,121 samples, 0.01%)</title><rect x="508.9" y="1589" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="511.95" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (201,390,672 samples, 0.02%)</title><rect x="147.7" y="1397" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="150.67" y="1407.5" ></text>
</g>
<g >
<title>override_creds (200,564,145 samples, 0.02%)</title><rect x="801.3" y="1397" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="804.29" y="1407.5" ></text>
</g>
<g >
<title>operator new (251,247,367 samples, 0.02%)</title><rect x="642.6" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="645.65" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1029" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1039.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="1077" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (141,833,362 samples, 0.01%)</title><rect x="452.1" y="1589" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="455.05" y="1599.5" ></text>
</g>
<g >
<title>putname (152,582,774 samples, 0.01%)</title><rect x="787.9" y="1461" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="790.91" y="1471.5" ></text>
</g>
<g >
<title>ovl_read_iter (397,847,697 samples, 0.04%)</title><rect x="455.5" y="1541" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="458.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="1317" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="1327.5" ></text>
</g>
<g >
<title>execute_command (427,926,634 samples, 0.04%)</title><rect x="1181.9" y="1493" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1184.94" y="1503.5" ></text>
</g>
<g >
<title>folio_account_dirtied (150,172,924 samples, 0.01%)</title><rect x="292.6" y="1269" width="0.1" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="295.57" y="1279.5" ></text>
</g>
<g >
<title>operator new (100,048,361 samples, 0.01%)</title><rect x="692.7" y="741" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="695.67" y="751.5" ></text>
</g>
<g >
<title>inode_permission (145,307,013 samples, 0.01%)</title><rect x="425.1" y="1429" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="428.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,178,705,233 samples, 13.66%)</title><rect x="594.4" y="1237" width="161.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="597.43" y="1247.5" >std::__detail::_Exec..</text>
</g>
<g >
<title>futex_wait_queue (187,885,748 samples, 0.02%)</title><rect x="436.0" y="1525" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="439.02" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,588,333,442 samples, 0.64%)</title><rect x="685.3" y="773" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="688.26" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1477" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="1487.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (119,854,584 samples, 0.01%)</title><rect x="516.1" y="1493" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="519.11" y="1503.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,400,276,358 samples, 0.14%)</title><rect x="629.6" y="293" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="632.55" y="303.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (98,685,359 samples, 0.01%)</title><rect x="423.2" y="1461" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="426.23" y="1471.5" ></text>
</g>
<g >
<title>start_kernel (774,378,980 samples, 0.08%)</title><rect x="522.5" y="1589" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="525.54" y="1599.5" ></text>
</g>
<g >
<title>__memcpy_fwd (4,511,390,218 samples, 0.44%)</title><rect x="436.4" y="1621" width="5.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="439.36" y="1631.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (97,604,001 samples, 0.01%)</title><rect x="1173.5" y="1285" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1176.54" y="1295.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (103,995,912 samples, 0.01%)</title><rect x="90.7" y="1541" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="93.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,115,856,187 samples, 0.21%)</title><rect x="850.5" y="165" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="853.46" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,468,566,251 samples, 12.81%)</title><rect x="990.2" y="1381" width="151.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="993.23" y="1391.5" >std::__detail::_Exe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (653,340,962 samples, 0.06%)</title><rect x="567.6" y="213" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="570.62" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="821" width="8.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.88" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (300,516,924 samples, 0.03%)</title><rect x="676.0" y="597" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="679.01" y="607.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (551,586,273 samples, 0.05%)</title><rect x="456.3" y="1525" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="459.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,398,485,957 samples, 0.82%)</title><rect x="814.0" y="469" width="9.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="817.03" y="479.5" ></text>
</g>
<g >
<title>security_file_permission (100,666,758 samples, 0.01%)</title><rect x="392.0" y="1413" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="394.99" y="1423.5" ></text>
</g>
<g >
<title>vfs_read (159,459,593 samples, 0.02%)</title><rect x="1177.2" y="1541" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1180.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,183,513,385 samples, 0.70%)</title><rect x="1158.9" y="453" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1161.88" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (578,639,151 samples, 0.06%)</title><rect x="446.7" y="1605" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="449.68" y="1615.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1573" width="4.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="570.62" y="1583.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,392,259,128 samples, 0.14%)</title><rect x="513.2" y="1349" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="516.18" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (250,799,553 samples, 0.02%)</title><rect x="824.0" y="85" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="827.04" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,933,662,202 samples, 1.46%)</title><rect x="1141.7" y="341" width="17.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1144.70" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (954,909,849 samples, 0.09%)</title><rect x="566.5" y="1221" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="569.53" y="1231.5" ></text>
</g>
<g >
<title>[libc.so.6] (300,861,442 samples, 0.03%)</title><rect x="478.0" y="1589" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.04" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (702,844,837 samples, 0.07%)</title><rect x="640.9" y="357" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="643.91" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,503,723,462 samples, 10.28%)</title><rect x="852.9" y="565" width="121.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.89" y="575.5" >std::__detail::..</text>
</g>
<g >
<title>sock_read_iter (606,142,592 samples, 0.06%)</title><rect x="1168.7" y="1461" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1171.75" y="1471.5" ></text>
</g>
<g >
<title>cfree (1,865,486,235 samples, 0.18%)</title><rect x="739.9" y="1141" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="742.91" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,960,541,948 samples, 0.48%)</title><rect x="553.7" y="1605" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="556.75" y="1615.5" ></text>
</g>
<g >
<title>search_binary_handler (1,810,623,299 samples, 0.18%)</title><rect x="1171.6" y="1509" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1174.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,322,612,925 samples, 0.42%)</title><rect x="823.7" y="581" width="5.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="826.69" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,732,231 samples, 0.01%)</title><rect x="821.2" y="101" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="824.21" y="111.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (127,109,334 samples, 0.01%)</title><rect x="478.9" y="1557" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="481.95" y="1567.5" ></text>
</g>
<g >
<title>poll_idle (103,175,730 samples, 0.01%)</title><rect x="486.4" y="1509" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="489.42" y="1519.5" ></text>
</g>
<g >
<title>__fdget (97,076,010 samples, 0.01%)</title><rect x="1174.8" y="1477" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1177.76" y="1487.5" ></text>
</g>
<g >
<title>enframe (188,116,574 samples, 0.02%)</title><rect x="413.5" y="1605" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="416.50" y="1615.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (3,755,730,037 samples, 0.37%)</title><rect x="567.6" y="1589" width="4.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="570.62" y="1599.5" ></text>
</g>
</g>
</svg>
