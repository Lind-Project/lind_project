<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>free_pages_and_swap_cache (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1445" width="6.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="298.62" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="469" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="197" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="207.5" ></text>
</g>
<g >
<title>copy_page_to_iter (251,060,426 samples, 2.46%)</title><rect x="319.5" y="1413" width="29.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="322.46" y="1423.5" >co..</text>
</g>
<g >
<title>zap_pte_range (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1317" width="70.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="613.99" y="1327.5" >zap_pte..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="309" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="319.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="741" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1317" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1327.5" >std::__de..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1541" width="50.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="684.34" y="1551.5" >entry..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1109" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1119.5" ></text>
</g>
<g >
<title>kmem_cache_free (72,392,709 samples, 0.71%)</title><rect x="246.5" y="1269" width="8.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="249.47" y="1279.5" ></text>
</g>
<g >
<title>filemap_read (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1429" width="54.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="322.46" y="1439.5" >filem..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="277" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="287.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="917" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="927.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="357" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="367.5" >std::__de..</text>
</g>
<g >
<title>pagecache_get_page (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1333" width="35.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="151.50" y="1343.5" >pag..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="517" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="527.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="949" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="959.5" ></text>
</g>
<g >
<title>do_anonymous_page (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1493" width="5.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="310.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1093" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1103.5" >std:..</text>
</g>
<g >
<title>do_user_addr_fault (101,097,690 samples, 0.99%)</title><rect x="307.8" y="1557" width="11.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="310.76" y="1567.5" ></text>
</g>
<g >
<title>create_empty_buffers (106,774,728 samples, 1.05%)</title><rect x="130.3" y="1333" width="12.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="133.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (647,752,020 samples, 6.35%)</title><rect x="530.2" y="117" width="75.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="127.5" >std::__d..</text>
</g>
<g >
<title>unmap_single_vma (53,628,514 samples, 0.53%)</title><rect x="301.6" y="1461" width="6.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="304.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (321,684,187 samples, 3.15%)</title><rect x="467.8" y="997" width="37.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1007.5" >std..</text>
</g>
<g >
<title>filemap_release_folio (154,958,032 samples, 1.52%)</title><rect x="87.2" y="1253" width="18.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="90.25" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1557" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1269" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1279.5" >std::__de..</text>
</g>
<g >
<title>__alloc_pages (50,370,930 samples, 0.49%)</title><rect x="342.7" y="1237" width="5.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="345.68" y="1247.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1397" width="148.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="133.26" y="1407.5" >ext4_buffered_writ..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1045" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1055.5" ></text>
</g>
<g >
<title>__folio_alloc (50,370,930 samples, 0.49%)</title><rect x="342.7" y="1253" width="5.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="345.68" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1557" width="38.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="994.68" y="1567.5" >__x..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="549" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="559.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1109" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1119.5" >std:..</text>
</g>
<g >
<title>block_invalidate_folio (154,958,032 samples, 1.52%)</title><rect x="87.2" y="1269" width="18.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="90.25" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1221" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1231.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="389" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="917" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="927.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (114,910,933 samples, 1.13%)</title><rect x="265.0" y="1269" width="13.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="267.97" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="325" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1349" width="11.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="339.82" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1285" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1295.5" >std:..</text>
</g>
<g >
<title>do_poll.constprop.0 (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1477" width="50.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="684.34" y="1487.5" >do_po..</text>
</g>
<g >
<title>ksys_read (50,700,440 samples, 0.50%)</title><rect x="57.3" y="1525" width="5.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="60.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,484,899 samples, 0.50%)</title><rect x="505.0" y="1013" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="508.04" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1397" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1407.5" >std:..</text>
</g>
<g >
<title>handle_pte_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1301" width="11.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="339.82" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1397" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1525" width="42.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="66.18" y="1535.5" >__x..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,784,872 samples, 0.50%)</title><rect x="467.8" y="181" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="470.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="533" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,430,100 samples, 0.49%)</title><rect x="605.2" y="133" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="608.15" y="143.5" ></text>
</g>
<g >
<title>cpptools (1,326,244,776 samples, 13.01%)</title><rect x="278.3" y="1621" width="153.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="281.27" y="1631.5" >cpptools</text>
</g>
<g >
<title>__mod_lruvec_page_state (51,637,387 samples, 0.51%)</title><rect x="93.3" y="1141" width="5.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="96.27" y="1151.5" ></text>
</g>
<g >
<title>__poll (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1557" width="50.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="684.34" y="1567.5" >__poll</text>
</g>
<g >
<title>ext4_file_read_iter (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1461" width="54.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="322.46" y="1471.5" >ext4_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1141" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1151.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1285" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1295.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1525" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1535.5" ></text>
</g>
<g >
<title>__memcpy_fwd (50,423,563 samples, 0.49%)</title><rect x="289.8" y="1605" width="5.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="292.78" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1429" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1439.5" >std::__de..</text>
</g>
<g >
<title>grab_cache_page_write_begin (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1349" width="35.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="151.50" y="1359.5" >gra..</text>
</g>
<g >
<title>cpu_startup_entry (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1573" width="116.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1032.90" y="1583.5" >cpu_startup_en..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (271,049,927 samples, 2.66%)</title><rect x="467.8" y="853" width="31.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="863.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1429" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1439.5" >std:..</text>
</g>
<g >
<title>vfs_iter_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1461" width="47.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >vfs_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="357" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="885" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="895.5" >st..</text>
</g>
<g >
<title>perf (431,933,025 samples, 4.24%)</title><rect x="681.3" y="1621" width="50.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="684.34" y="1631.5" >perf</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1173" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1183.5" >std::__de..</text>
</g>
<g >
<title>iput (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1381" width="42.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="66.18" y="1391.5" >iput</text>
</g>
<g >
<title>operator new (57,364,419 samples, 0.56%)</title><rect x="473.7" y="293" width="6.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="476.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="805" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1253" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1263.5" >std:..</text>
</g>
<g >
<title>__handle_mm_fault (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1525" width="5.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="310.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="421" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="431.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (210,225,070 samples, 2.06%)</title><rect x="467.8" y="789" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="799.5" >s..</text>
</g>
<g >
<title>malloc (76,972,461 samples, 0.75%)</title><rect x="589.9" y="37" width="8.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="592.87" y="47.5" ></text>
</g>
<g >
<title>sqlite3_step (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1413" width="58.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="376.47" y="1423.5" >sqlite..</text>
</g>
<g >
<title>hrtimer_update_next_event (548,939,984 samples, 5.38%)</title><rect x="1029.9" y="1429" width="63.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1032.90" y="1439.5" >hrtime..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1413" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1423.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (51,715,910 samples, 0.51%)</title><rect x="480.3" y="437" width="6.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="483.33" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (271,049,927 samples, 2.66%)</title><rect x="467.8" y="917" width="31.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="927.5" >st..</text>
</g>
<g >
<title>unmap_vmas (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1381" width="70.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="613.99" y="1391.5" >unmap_v..</text>
</g>
<g >
<title>sleep (3,963,566,643 samples, 38.87%)</title><rect x="731.3" y="1621" width="458.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="734.33" y="1631.5" >sleep</text>
</g>
<g >
<title>fdarray__poll (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1573" width="50.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="684.34" y="1583.5" >fdarr..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1413" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1509" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1519.5" ></text>
</g>
<g >
<title>__count_memcg_events (77,954,146 samples, 0.76%)</title><rect x="160.6" y="1237" width="9.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="163.57" y="1247.5" ></text>
</g>
<g >
<title>read (459,589,439 samples, 4.51%)</title><rect x="10.0" y="1573" width="53.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >read</text>
</g>
<g >
<title>ext4_inode_csum_set (63,275,919 samples, 0.62%)</title><rect x="270.9" y="1237" width="7.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="273.95" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1461" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1509" width="38.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="994.68" y="1519.5" >hrt..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="789" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="799.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1237" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1247.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="661" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="229" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="239.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="341" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="661" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="671.5" >std::__de..</text>
</g>
<g >
<title>ext4_file_write_iter (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1413" width="148.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="133.26" y="1423.5" >ext4_file_write_iter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="197" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="207.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="741" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="751.5" >s..</text>
</g>
<g >
<title>thread_pool::do_work (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1573" width="58.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="376.47" y="1583.5" >thread..</text>
</g>
<g >
<title>__x64_sys_execve (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1573" width="70.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="613.99" y="1583.5" >__x64_s..</text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (536,649,626 samples, 5.26%)</title><rect x="184.4" y="1333" width="62.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="187.37" y="1343.5" >__bloc..</text>
</g>
<g >
<title>filemap_get_read_batch (215,720,568 samples, 2.12%)</title><rect x="348.5" y="1397" width="25.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="351.51" y="1407.5" >f..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (116,322,822 samples, 1.14%)</title><rect x="516.7" y="85" width="13.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="519.73" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="789" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="373" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="383.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (104,218,900 samples, 1.02%)</title><rect x="69.2" y="1301" width="12.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="72.18" y="1311.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (57,625,757 samples, 0.57%)</title><rect x="184.4" y="1269" width="6.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="187.37" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1093" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="453" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="463.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="965" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="975.5" ></text>
</g>
<g >
<title>[anon] (209,880,122 samples, 2.06%)</title><rect x="431.7" y="1605" width="24.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="434.74" y="1615.5" >[..</text>
</g>
<g >
<title>enframe (101,097,690 samples, 0.99%)</title><rect x="307.8" y="1605" width="11.7" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="310.76" y="1615.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1333" width="42.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="66.18" y="1343.5" >tru..</text>
</g>
<g >
<title>__x64_sys_pread64 (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1557" width="54.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="322.46" y="1567.5" >__x64..</text>
</g>
<g >
<title>hrtimer_interrupt (548,939,984 samples, 5.38%)</title><rect x="1029.9" y="1445" width="63.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1032.90" y="1455.5" >hrtime..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="261" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1365" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1375.5" >std::__de..</text>
</g>
<g >
<title>jbd2_journal_stop (159,860,872 samples, 1.57%)</title><rect x="246.5" y="1285" width="18.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="249.47" y="1295.5" ></text>
</g>
<g >
<title>try_to_free_buffers (102,955,616 samples, 1.01%)</title><rect x="93.3" y="1205" width="11.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="96.27" y="1215.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1461" width="6.0" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="298.62" y="1471.5" ></text>
</g>
<g >
<title>vfs_write (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1493" width="173.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="108.18" y="1503.5" >vfs_write</text>
</g>
<g >
<title>vfs_iter_write (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1461" width="148.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="133.26" y="1471.5" >vfs_iter_write</text>
</g>
<g >
<title>exit_mmap (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1397" width="70.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="613.99" y="1407.5" >exit_mmap</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (210,225,070 samples, 2.06%)</title><rect x="467.8" y="597" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="607.5" >s..</text>
</g>
<g >
<title>sqlite3VdbeFinishMoveto (202,559,443 samples, 1.99%)</title><rect x="402.4" y="1381" width="23.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="405.45" y="1391.5" >s..</text>
</g>
<g >
<title>fsnotify (162,604,091 samples, 1.59%)</title><rect x="105.2" y="1461" width="18.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="108.18" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1029" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1039.5" >std::__de..</text>
</g>
<g >
<title>ext4_da_get_block_prep (50,826,407 samples, 0.50%)</title><rect x="142.6" y="1333" width="5.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="145.62" y="1343.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,407,627 samples, 0.49%)</title><rect x="462.0" y="1461" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="464.98" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="869" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="879.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1493" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1503.5" >std::__de..</text>
</g>
<g >
<title>ovl_read_iter (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1525" width="54.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="322.46" y="1535.5" >ovl_r..</text>
</g>
<g >
<title>__fsnotify_parent (216,760,423 samples, 2.13%)</title><rect x="105.2" y="1477" width="25.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="108.18" y="1487.5" >_..</text>
</g>
<g >
<title>all (10,196,842,582 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (50,593,405 samples, 0.50%)</title><rect x="336.8" y="1269" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="339.82" y="1279.5" ></text>
</g>
<g >
<title>unmap_region (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1493" width="12.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="298.62" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="773" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="783.5" ></text>
</g>
<g >
<title>__wake_up (87,468,163 samples, 0.86%)</title><rect x="254.8" y="1253" width="10.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="257.85" y="1263.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (114,910,933 samples, 1.13%)</title><rect x="265.0" y="1301" width="13.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="267.97" y="1311.5" ></text>
</g>
<g >
<title>cpu_startup_entry (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1525" width="44.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1148.99" y="1535.5" >cpu_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1221" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="165" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="175.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="357" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="741" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="751.5" >std::__de..</text>
</g>
<g >
<title>strcpy (52,286,359 samples, 0.51%)</title><rect x="117.9" y="1413" width="6.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="120.95" y="1423.5" ></text>
</g>
<g >
<title>operator new (50,407,627 samples, 0.49%)</title><rect x="462.0" y="1493" width="5.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="464.98" y="1503.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1477" width="58.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="376.47" y="1487.5" >CExtSt..</text>
</g>
<g >
<title>__mem_cgroup_charge (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1269" width="35.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="151.50" y="1279.5" >__m..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1589" width="12.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="298.62" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="325" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="335.5" >std::__de..</text>
</g>
<g >
<title>_raw_spin_trylock (50,370,930 samples, 0.49%)</title><rect x="342.7" y="1205" width="5.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="345.68" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1013" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1023.5" ></text>
</g>
<g >
<title>dput (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1429" width="42.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="66.18" y="1439.5" >dput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1301" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1311.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (57,364,419 samples, 0.56%)</title><rect x="473.7" y="309" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="476.69" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="805" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="815.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="821" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="831.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="773" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="783.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="981" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="991.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="485" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="495.5" >std::__de..</text>
</g>
<g >
<title>free_pcp_prepare (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1397" width="6.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="298.62" y="1407.5" ></text>
</g>
<g >
<title>start_kernel (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1573" width="44.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1148.99" y="1583.5" >star..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1541" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1551.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="501" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="869" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="879.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1429" width="148.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="133.26" y="1439.5" >do_iter_readv_writev</text>
</g>
<g >
<title>mark_buffer_dirty (536,649,626 samples, 5.26%)</title><rect x="184.4" y="1317" width="62.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="187.37" y="1327.5" >mark_b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="581" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="591.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1589" width="38.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="994.68" y="1599.5" >ent..</text>
</g>
<g >
<title>do_nanosleep (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1525" width="38.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="994.68" y="1535.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (647,752,020 samples, 6.35%)</title><rect x="530.2" y="85" width="75.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="95.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1301" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1311.5" ></text>
</g>
<g >
<title>release_pages (51,772,039 samples, 0.51%)</title><rect x="63.2" y="1285" width="6.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="66.18" y="1295.5" ></text>
</g>
<g >
<title>sqlite3VdbeSerialGet (50,585,581 samples, 0.50%)</title><rect x="425.9" y="1381" width="5.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="428.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="901" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1413" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1423.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="949" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="959.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="693" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="965" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="975.5" >std::__de..</text>
</g>
<g >
<title>cpuidle_enter_state (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1509" width="116.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1032.90" y="1519.5" >cpuidle_enter_..</text>
</g>
<g >
<title>[unknown] (99,476,974 samples, 0.98%)</title><rect x="278.3" y="1605" width="11.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="281.27" y="1615.5" ></text>
</g>
<g >
<title>operator new (116,322,822 samples, 1.14%)</title><rect x="516.7" y="69" width="13.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="519.73" y="79.5" ></text>
</g>
<g >
<title>charge_memcg (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1461" width="5.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="310.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="885" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="895.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (548,939,984 samples, 5.38%)</title><rect x="1029.9" y="1461" width="63.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1032.90" y="1471.5" >__sysv..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="645" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="655.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (50,593,405 samples, 0.50%)</title><rect x="336.8" y="1237" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="339.82" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1173" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1183.5" >std:..</text>
</g>
<g >
<title>unmap_vmas (53,628,514 samples, 0.53%)</title><rect x="301.6" y="1477" width="6.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="304.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1189" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1199.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="629" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="639.5" >std::__de..</text>
</g>
<g >
<title>mt_find (50,333,868 samples, 0.49%)</title><rect x="313.6" y="1509" width="5.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="316.63" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (159,865,201 samples, 1.57%)</title><rect x="467.8" y="501" width="18.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1429" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1189" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (431,933,025 samples, 4.24%)</title><rect x="681.3" y="1605" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="684.34" y="1615.5" >[unkn..</text>
</g>
<g >
<title>Watcher::isIgnored (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1541" width="54.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="459.03" y="1551.5" >Watch..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="901" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="911.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1205" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1215.5" >std:..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (454,254,851 samples, 4.45%)</title><rect x="1093.4" y="1493" width="52.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1096.42" y="1503.5" >mwait..</text>
</g>
<g >
<title>get_page_from_freelist (50,370,930 samples, 0.49%)</title><rect x="342.7" y="1221" width="5.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="345.68" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1557" width="42.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="66.18" y="1567.5" >ent..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1093" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1103.5" >std::__de..</text>
</g>
<g >
<title>__x64_sys_poll (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1509" width="50.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="684.34" y="1519.5" >__x64..</text>
</g>
<g >
<title>__dentry_kill (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1413" width="42.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="66.18" y="1423.5" >__d..</text>
</g>
<g >
<title>do_sys_poll (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1493" width="50.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="684.34" y="1503.5" >do_sy..</text>
</g>
<g >
<title>free_pcppages_bulk (51,772,039 samples, 0.51%)</title><rect x="63.2" y="1237" width="6.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="66.18" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1205" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1215.5" >std::__de..</text>
</g>
<g >
<title>msvc::thread_helper_t::thread_entry (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1589" width="58.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="376.47" y="1599.5" >msvc::..</text>
</g>
<g >
<title>ext4_dirty_inode (274,771,805 samples, 2.69%)</title><rect x="246.5" y="1317" width="31.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="249.47" y="1327.5" >ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="597" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="607.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="565" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1,339,016,638 samples, 13.13%)</title><rect x="456.0" y="1605" width="155.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="459.03" y="1615.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="229" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="239.5" ></text>
</g>
<g >
<title>ksys_write (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1509" width="173.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="108.18" y="1519.5" >ksys_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="869" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="879.5" >std::__de..</text>
</g>
<g >
<title>refactoring::get_counterparts (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1525" width="58.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="376.47" y="1535.5" >refact..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (87,468,163 samples, 0.86%)</title><rect x="254.8" y="1221" width="10.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="257.85" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_enter (892,950 samples, 0.01%)</title><rect x="1146.0" y="1477" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1148.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="293" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="565" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="575.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1237" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1247.5" ></text>
</g>
<g >
<title>generic_file_read_iter (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1397" width="47.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >gene..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="309" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="997" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1007.5" >std::__de..</text>
</g>
<g >
<title>ext4_release_folio (154,958,032 samples, 1.52%)</title><rect x="87.2" y="1237" width="18.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="90.25" y="1247.5" ></text>
</g>
<g >
<title>send_to_group (52,286,359 samples, 0.51%)</title><rect x="117.9" y="1445" width="6.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="120.95" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="389" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="399.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,856,698 samples, 0.52%)</title><rect x="449.9" y="1589" width="6.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="452.92" y="1599.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (52,286,359 samples, 0.51%)</title><rect x="117.9" y="1429" width="6.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="120.95" y="1439.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (53,628,514 samples, 0.53%)</title><rect x="301.6" y="1429" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="304.55" y="1439.5" ></text>
</g>
<g >
<title>unlink (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1573" width="42.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="66.18" y="1583.5" >unl..</text>
</g>
<g >
<title>__mmput (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1413" width="70.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="613.99" y="1423.5" >__mmput</text>
</g>
<g >
<title>tlb_finish_mmu (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1477" width="6.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="298.62" y="1487.5" ></text>
</g>
<g >
<title>ext4_da_write_end (811,421,431 samples, 7.96%)</title><rect x="184.4" y="1365" width="93.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="187.37" y="1375.5" >ext4_da_wri..</text>
</g>
<g >
<title>sqlite3BtreeTableMoveto (202,559,443 samples, 1.99%)</title><rect x="402.4" y="1365" width="23.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="405.45" y="1375.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1269" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1279.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1381" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1391.5" ></text>
</g>
<g >
<title>malloc (50,407,627 samples, 0.49%)</title><rect x="462.0" y="1477" width="5.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="464.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="805" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="815.5" >std::__de..</text>
</g>
<g >
<title>__wake_up_common_lock (87,468,163 samples, 0.86%)</title><rect x="254.8" y="1237" width="10.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="257.85" y="1247.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1445" width="42.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="66.18" y="1455.5" >ovl..</text>
</g>
<g >
<title>code_store::results_statement_t&lt;code_store::code_items_set_t, code_store::schema::code_items::read_statement_t, code_store::code_items_set&gt;::move_next (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1445" width="58.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="376.47" y="1455.5" >code_s..</text>
</g>
<g >
<title>ext4_da_write_begin (467,545,746 samples, 4.59%)</title><rect x="130.3" y="1365" width="54.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="133.26" y="1375.5" >ext4_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="725" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (108,149,291 samples, 1.06%)</title><rect x="467.8" y="405" width="12.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="613" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="623.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1349" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1359.5" >std:..</text>
</g>
<g >
<title>filemap_unaccount_folio (52,134,141 samples, 0.51%)</title><rect x="75.2" y="1285" width="6.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="78.20" y="1295.5" ></text>
</g>
<g >
<title>charge_memcg (190,148,470 samples, 1.86%)</title><rect x="154.7" y="1253" width="22.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="157.67" y="1263.5" >c..</text>
</g>
<g >
<title>getCellInfo (50,854,804 samples, 0.50%)</title><rect x="396.6" y="1381" width="5.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="399.56" y="1391.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1589" width="44.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1148.99" y="1599.5" >x86_..</text>
</g>
<g >
<title>do_iter_readv_writev (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1429" width="47.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >do_i..</text>
</g>
<g >
<title>handle_mm_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1333" width="11.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="339.82" y="1343.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,383,505,601 samples, 13.57%)</title><rect x="1029.9" y="1605" width="160.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1032.90" y="1615.5" >secondary_startup_64..</text>
</g>
<g >
<title>__cmd_record (431,933,025 samples, 4.24%)</title><rect x="681.3" y="1589" width="50.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="684.34" y="1599.5" >__cmd..</text>
</g>
<g >
<title>write (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1573" width="173.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="108.18" y="1583.5" >write</text>
</g>
<g >
<title>folio_mark_accessed (51,257,343 samples, 0.50%)</title><rect x="51.4" y="1365" width="5.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="54.39" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1029" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1039.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="693" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="703.5" >s..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (548,939,984 samples, 5.38%)</title><rect x="1029.9" y="1493" width="63.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1032.90" y="1503.5" >asm_sy..</text>
</g>
<g >
<title>exec_binprm (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1509" width="70.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="613.99" y="1519.5" >exec_bi..</text>
</g>
<g >
<title>InotifyBackend::handleEvents (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1589" width="54.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="459.03" y="1599.5" >Inoti..</text>
</g>
<g >
<title>alloc_buffer_head (50,666,058 samples, 0.50%)</title><rect x="136.8" y="1301" width="5.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="139.76" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="821" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="831.5" ></text>
</g>
<g >
<title>bprm_execve (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1541" width="70.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="613.99" y="1551.5" >bprm_ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="293" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1141" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1151.5" >std:..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (66,536,827 samples, 0.65%)</title><rect x="176.7" y="1253" width="7.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="179.67" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1173" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1183.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (548,939,984 samples, 5.38%)</title><rect x="1029.9" y="1477" width="63.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1032.90" y="1487.5" >sysvec..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1605" width="70.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="613.99" y="1615.5" >entry_S..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1445" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1455.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,634,260 samples, 0.50%)</title><rect x="499.2" y="949" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="502.18" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1525" width="50.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="684.34" y="1535.5" >do_sy..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="485" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="213" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="437" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="421" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1509" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1519.5" >std::__de..</text>
</g>
<g >
<title>start (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1605" width="58.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="376.47" y="1615.5" >start</text>
</g>
<g >
<title>vma_alloc_folio (50,370,930 samples, 0.49%)</title><rect x="342.7" y="1269" width="5.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="345.68" y="1279.5" ></text>
</g>
<g >
<title>mtree_range_walk (50,333,868 samples, 0.49%)</title><rect x="313.6" y="1493" width="5.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="316.63" y="1503.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloadsHelper (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1461" width="58.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="376.47" y="1471.5" >CExtSt..</text>
</g>
<g >
<title>cpuidle_idle_call (380,173,755 samples, 3.73%)</title><rect x="1146.0" y="1493" width="44.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1148.99" y="1503.5" >cpui..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1045" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1055.5" >std::__de..</text>
</g>
<g >
<title>vfs_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1493" width="47.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >vfs_..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1557" width="58.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="376.47" y="1567.5" >std::_..</text>
</g>
<g >
<title>sqlite3VdbeExec (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1397" width="58.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="376.47" y="1407.5" >sqlite..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (865,041,663 samples, 8.48%)</title><rect x="510.9" y="1589" width="100.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1599.5" >std::__detai..</text>
</g>
<g >
<title>do_iter_read (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1493" width="54.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="322.46" y="1503.5" >do_it..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="757" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="309" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1573" width="38.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="994.68" y="1583.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1157" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1167.5" >std::__de..</text>
</g>
<g >
<title>__munmap (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1605" width="12.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="298.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="613" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (459,589,439 samples, 4.51%)</title><rect x="10.0" y="1541" width="53.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >do_sy..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="853" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="863.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="293" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="303.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="389" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="399.5" ></text>
</g>
<g >
<title>__vm_munmap (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1541" width="12.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="298.62" y="1551.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1557" width="70.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="613.99" y="1567.5" >do_exec..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="325" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (51,318,229 samples, 0.50%)</title><rect x="99.2" y="1189" width="6.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="102.24" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (647,752,020 samples, 6.35%)</title><rect x="530.2" y="69" width="75.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="533.19" y="79.5" >std::__d..</text>
</g>
<g >
<title>ext4_invalidate_folio (206,905,898 samples, 2.03%)</title><rect x="81.2" y="1285" width="24.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="84.24" y="1295.5" >e..</text>
</g>
<g >
<title>take_dentry_name_snapshot (54,156,332 samples, 0.53%)</title><rect x="124.0" y="1461" width="6.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="127.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1029" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1039.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (50,666,058 samples, 0.50%)</title><rect x="136.8" y="1269" width="5.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="139.76" y="1279.5" ></text>
</g>
<g >
<title>release_pages (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1429" width="6.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="298.62" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1509" width="54.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="459.03" y="1519.5" >std::..</text>
</g>
<g >
<title>kmem_cache_alloc (50,666,058 samples, 0.50%)</title><rect x="136.8" y="1285" width="5.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="139.76" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="549" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="559.5" >std::__de..</text>
</g>
<g >
<title>generic_file_read_iter (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1445" width="54.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="322.46" y="1455.5" >gener..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1445" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1455.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="245" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="255.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (321,684,187 samples, 3.15%)</title><rect x="467.8" y="965" width="37.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="975.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1221" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1231.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="949" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="959.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="757" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="767.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (166,859,543 samples, 1.64%)</title><rect x="510.9" y="101" width="19.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="513.88" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (210,225,070 samples, 2.06%)</title><rect x="467.8" y="725" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="735.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="181" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="191.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1301" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1311.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1461" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1471.5" >std::__de..</text>
</g>
<g >
<title>search_binary_handler (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1493" width="70.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="613.99" y="1503.5" >search_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1061" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1071.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (50,359,869 samples, 0.49%)</title><rect x="486.3" y="501" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="489.31" y="511.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1477" width="5.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="310.76" y="1487.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1477" width="54.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="322.46" y="1487.5" >do_it..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1365" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1253" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1263.5" ></text>
</g>
<g >
<title>destroy_inode (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1461" width="42.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="66.18" y="1471.5" >des..</text>
</g>
<g >
<title>exc_page_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1365" width="11.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="339.82" y="1375.5" ></text>
</g>
<g >
<title>memcg_check_events (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1445" width="5.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="310.76" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1189" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1199.5" >std::__de..</text>
</g>
<g >
<title>bprm_execve.part.0 (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1525" width="70.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="613.99" y="1535.5" >bprm_ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="197" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1525" width="116.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1032.90" y="1535.5" >cpuidle_enter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1349" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1359.5" >std::__de..</text>
</g>
<g >
<title>mod_lruvec_page_state (51,637,387 samples, 0.51%)</title><rect x="93.3" y="1157" width="5.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="96.27" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1365" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1375.5" >std:..</text>
</g>
<g >
<title>consume_stock (61,202,990 samples, 0.60%)</title><rect x="169.6" y="1221" width="7.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="172.59" y="1231.5" ></text>
</g>
<g >
<title>alloc_page_buffers (106,774,728 samples, 1.05%)</title><rect x="130.3" y="1317" width="12.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="133.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (210,225,070 samples, 2.06%)</title><rect x="467.8" y="533" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="543.5" >s..</text>
</g>
<g >
<title>try_charge_memcg (61,202,990 samples, 0.60%)</title><rect x="169.6" y="1237" width="7.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="172.59" y="1247.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (159,860,872 samples, 1.57%)</title><rect x="246.5" y="1301" width="18.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="249.47" y="1311.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (114,910,933 samples, 1.13%)</title><rect x="265.0" y="1253" width="13.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="267.97" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (159,865,201 samples, 1.57%)</title><rect x="467.8" y="485" width="18.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="495.5" ></text>
</g>
<g >
<title>do_mas_munmap (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1525" width="12.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="298.62" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1333" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1343.5" >std::__de..</text>
</g>
<g >
<title>asm_exc_page_fault (101,097,690 samples, 0.99%)</title><rect x="307.8" y="1589" width="11.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="310.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="533" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="543.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1013" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1023.5" >std::__de..</text>
</g>
<g >
<title>do_syscall_64 (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1573" width="54.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="322.46" y="1583.5" >do_sy..</text>
</g>
<g >
<title>__x64_sys_munmap (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1557" width="12.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="298.62" y="1567.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (306,458,631 samples, 3.01%)</title><rect x="15.9" y="1349" width="35.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="18.92" y="1359.5" >cop..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="629" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="405" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1493" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1503.5" >std:..</text>
</g>
<g >
<title>evict (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1365" width="42.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="66.18" y="1375.5" >evict</text>
</g>
<g >
<title>do_unlinkat (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1509" width="42.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="66.18" y="1519.5" >do_..</text>
</g>
<g >
<title>node (1,548,896,760 samples, 15.19%)</title><rect x="431.7" y="1621" width="179.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="434.74" y="1631.5" >node</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (159,865,201 samples, 1.57%)</title><rect x="467.8" y="469" width="18.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1381" width="11.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="339.82" y="1391.5" ></text>
</g>
<g >
<title>perf-exec (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1621" width="70.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="613.99" y="1631.5" >perf-exec</text>
</g>
<g >
<title>vfs_iter_read (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1509" width="54.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="322.46" y="1519.5" >vfs_i..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1589" width="54.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="322.46" y="1599.5" >entry..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="149" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="159.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1557" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1567.5" >std::__de..</text>
</g>
<g >
<title>free_unref_page_list (51,285,993 samples, 0.50%)</title><rect x="295.6" y="1413" width="6.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="298.62" y="1423.5" ></text>
</g>
<g >
<title>generic_perform_write (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1381" width="148.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="133.26" y="1391.5" >generic_perform_wr..</text>
</g>
<g >
<title>exec_mmap (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1445" width="70.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="613.99" y="1455.5" >exec_mmap</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="837" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="847.5" >std::__de..</text>
</g>
<g >
<title>truncate_inode_pages_range (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1317" width="42.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="66.18" y="1327.5" >tru..</text>
</g>
<g >
<title>[libc.so.6] (51,035,251 samples, 0.50%)</title><rect x="431.7" y="1589" width="6.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="434.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1109" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1119.5" >std::__de..</text>
</g>
<g >
<title>rest_init (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1541" width="44.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1148.99" y="1551.5" >rest..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="165" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="175.5" ></text>
</g>
<g >
<title>CExtStore::GetOverloads (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1509" width="58.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="376.47" y="1519.5" >CExtSt..</text>
</g>
<g >
<title>do_idle (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1509" width="44.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1148.99" y="1519.5" >do_i..</text>
</g>
<g >
<title>zap_pte_range (53,628,514 samples, 0.53%)</title><rect x="301.6" y="1413" width="6.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="304.55" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="581" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="501" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="511.5" >std::__de..</text>
</g>
<g >
<title>Glob::isIgnored (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1525" width="54.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="459.03" y="1535.5" >Glob:..</text>
</g>
<g >
<title>start_secondary (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1589" width="116.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1032.90" y="1599.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="421" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="133" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="143.5" ></text>
</g>
<g >
<title>__folio_cancel_dirty (51,637,387 samples, 0.51%)</title><rect x="93.3" y="1189" width="5.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="96.27" y="1199.5" ></text>
</g>
<g >
<title>ksys_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1509" width="47.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >ksys..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="405" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="415.5" >std::__de..</text>
</g>
<g >
<title>folio_account_cleaned (51,637,387 samples, 0.51%)</title><rect x="93.3" y="1173" width="5.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="96.27" y="1183.5" ></text>
</g>
<g >
<title>unmap_page_range (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1349" width="70.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="613.99" y="1359.5" >unmap_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,784,872 samples, 0.50%)</title><rect x="467.8" y="277" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="287.5" ></text>
</g>
<g >
<title>arch_call_rest_init (380,310,766 samples, 3.73%)</title><rect x="1146.0" y="1557" width="44.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1148.99" y="1567.5" >arch..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,057,044 samples, 0.54%)</title><rect x="598.8" y="53" width="6.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.78" y="63.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (50,826,407 samples, 0.50%)</title><rect x="142.6" y="1317" width="5.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="145.62" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="453" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="261" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="271.5" ></text>
</g>
<g >
<title>ovl_write_iter (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1477" width="148.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="133.26" y="1487.5" >ovl_write_iter</text>
</g>
<g >
<title>ovl_read_iter (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1477" width="47.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >ovl_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1333" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1343.5" >std:..</text>
</g>
<g >
<title>_copy_to_iter (51,173,025 samples, 0.50%)</title><rect x="10.0" y="1349" width="5.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="933" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="943.5" >st..</text>
</g>
<g >
<title>__folio_mark_dirty (57,625,757 samples, 0.57%)</title><rect x="184.4" y="1301" width="6.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="187.37" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="149" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="159.5" ></text>
</g>
<g >
<title>ext4_evict_inode (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1349" width="42.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="66.18" y="1359.5" >ext..</text>
</g>
<g >
<title>mmput (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1429" width="70.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="613.99" y="1439.5" >mmput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="277" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1477" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1487.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (114,910,933 samples, 1.13%)</title><rect x="265.0" y="1285" width="13.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="267.97" y="1295.5" ></text>
</g>
<g >
<title>cfree (105,988,173 samples, 1.04%)</title><rect x="437.7" y="1589" width="12.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="440.65" y="1599.5" ></text>
</g>
<g >
<title>malloc (116,322,822 samples, 1.14%)</title><rect x="516.7" y="53" width="13.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="519.73" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="725" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="735.5" >std::__de..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (379,115,480 samples, 3.72%)</title><rect x="1146.1" y="1477" width="43.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1149.11" y="1487.5" >tick..</text>
</g>
<g >
<title>crypto_shash_update (63,275,919 samples, 0.62%)</title><rect x="270.9" y="1205" width="7.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="273.95" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="757" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="767.5" >std::__de..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (459,589,439 samples, 4.51%)</title><rect x="10.0" y="1557" width="53.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >entry..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,430,100 samples, 0.49%)</title><rect x="605.2" y="69" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.15" y="79.5" ></text>
</g>
<g >
<title>buffer_read_wri (2,318,213,876 samples, 22.73%)</title><rect x="10.0" y="1621" width="268.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >buffer_read_wri</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="677" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="687.5" ></text>
</g>
<g >
<title>load_elf_binary (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1477" width="70.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="613.99" y="1487.5" >load_el..</text>
</g>
<g >
<title>__mark_inode_dirty (274,771,805 samples, 2.69%)</title><rect x="246.5" y="1333" width="31.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="249.47" y="1343.5" >__..</text>
</g>
<g >
<title>[unknown] (2,318,213,876 samples, 22.73%)</title><rect x="10.0" y="1605" width="268.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >[unknown]</text>
</g>
<g >
<title>__mod_lruvec_page_state (52,134,141 samples, 0.51%)</title><rect x="75.2" y="1269" width="6.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="78.20" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1317" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1327.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1077" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1087.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="373" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="383.5" >std::__de..</text>
</g>
<g >
<title>stop_this_handle (87,468,163 samples, 0.86%)</title><rect x="254.8" y="1269" width="10.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="257.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="709" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (53,628,514 samples, 0.53%)</title><rect x="301.6" y="1445" width="6.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="304.55" y="1455.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1573" width="54.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="459.03" y="1583.5" >Inoti..</text>
</g>
<g >
<title>exc_page_fault (101,097,690 samples, 0.99%)</title><rect x="307.8" y="1573" width="11.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="310.76" y="1583.5" ></text>
</g>
<g >
<title>__filemap_get_folio (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1317" width="35.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="151.50" y="1327.5" >__f..</text>
</g>
<g >
<title>cfree (50,536,721 samples, 0.50%)</title><rect x="510.9" y="85" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="513.88" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (159,865,201 samples, 1.57%)</title><rect x="467.8" y="453" width="18.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="469" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="479.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1381" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1391.5" >std:..</text>
</g>
<g >
<title>perf_poll (431,933,010 samples, 4.24%)</title><rect x="681.3" y="1461" width="50.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="684.34" y="1471.5" >perf_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1557" width="173.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="108.18" y="1567.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1461" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1471.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="581" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="591.5" >std::__de..</text>
</g>
<g >
<title>__handle_mm_fault (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1317" width="11.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="339.82" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (271,049,927 samples, 2.66%)</title><rect x="467.8" y="837" width="31.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="847.5" >st..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (154,958,032 samples, 1.52%)</title><rect x="87.2" y="1221" width="18.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="90.25" y="1231.5" ></text>
</g>
<g >
<title>do_iter_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1445" width="47.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >do_i..</text>
</g>
<g >
<title>do_idle (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1557" width="116.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1032.90" y="1567.5" >do_idle</text>
</g>
<g >
<title>do_iter_write (1,278,967,177 samples, 12.54%)</title><rect x="130.3" y="1445" width="148.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="133.26" y="1455.5" >do_iter_write</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (251,060,426 samples, 2.46%)</title><rect x="319.5" y="1397" width="29.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="322.46" y="1407.5" >co..</text>
</g>
<g >
<title>folio_account_dirtied (479,023,869 samples, 4.70%)</title><rect x="191.0" y="1301" width="55.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="194.04" y="1311.5" >folio..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1333" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1343.5" ></text>
</g>
<g >
<title>find_vma (50,333,868 samples, 0.49%)</title><rect x="313.6" y="1525" width="5.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="316.63" y="1535.5" ></text>
</g>
<g >
<title>sccp (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1605" width="54.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="322.46" y="1615.5" >sccp</text>
</g>
<g >
<title>CExtStore::GetOverloads (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1493" width="58.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="376.47" y="1503.5" >CExtSt..</text>
</g>
<g >
<title>do_anonymous_page (100,964,335 samples, 0.99%)</title><rect x="336.8" y="1285" width="11.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="339.82" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="613" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="623.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1573" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1583.5" >std::__de..</text>
</g>
<g >
<title>operator delete@plt (50,377,985 samples, 0.49%)</title><rect x="584.0" y="53" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="587.04" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="597" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1541" width="173.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.18" y="1551.5" >do_syscall_64</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="437" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="853" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="629" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="639.5" >s..</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (473,974,975 samples, 4.65%)</title><rect x="456.0" y="1557" width="54.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="459.03" y="1567.5" >Inoti..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="517" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="527.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (77,954,146 samples, 0.76%)</title><rect x="160.6" y="1221" width="9.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="163.57" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1045" width="43.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="1055.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="901" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="911.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1493" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (108,149,291 samples, 1.06%)</title><rect x="467.8" y="341" width="12.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="351.5" ></text>
</g>
<g >
<title>pcache1Fetch (50,424,057 samples, 0.49%)</title><rect x="283.9" y="1589" width="5.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="286.95" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="677" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="687.5" >std::__de..</text>
</g>
<g >
<title>cpptools_context::handle_create_decl_def_scan (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1541" width="58.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="376.47" y="1551.5" >cpptoo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="213" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="223.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1061" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1071.5" >std::__de..</text>
</g>
<g >
<title>copy_page_to_iter (357,631,656 samples, 3.51%)</title><rect x="10.0" y="1365" width="41.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >cop..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1269" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,536,721 samples, 0.50%)</title><rect x="510.9" y="69" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="513.88" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1141" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1151.5" ></text>
</g>
<g >
<title>code_store::statement_t::step (503,551,048 samples, 4.94%)</title><rect x="373.5" y="1429" width="58.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="376.47" y="1439.5" >code_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (647,752,020 samples, 6.35%)</title><rect x="530.2" y="101" width="75.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="111.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="565" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="575.5" >s..</text>
</g>
<g >
<title>main (2,318,213,876 samples, 22.73%)</title><rect x="10.0" y="1589" width="268.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >main</text>
</g>
<g >
<title>binCollFunc (49,052,917 samples, 0.48%)</title><rect x="278.3" y="1589" width="5.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="281.27" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2,580,061,042 samples, 25.30%)</title><rect x="731.3" y="1605" width="298.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="734.33" y="1615.5" >[unknown]</text>
</g>
<g >
<title>filemap_get_pages (215,720,568 samples, 2.12%)</title><rect x="348.5" y="1413" width="25.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="351.51" y="1423.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="773" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="783.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="933" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="943.5" ></text>
</g>
<g >
<title>__filemap_add_folio (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1285" width="35.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="151.50" y="1295.5" >__f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="517" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="527.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1381" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1391.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1573" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1583.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (52,134,141 samples, 0.51%)</title><rect x="75.2" y="1253" width="6.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="78.20" y="1263.5" ></text>
</g>
<g >
<title>begin_new_exec (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1461" width="70.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="613.99" y="1471.5" >begin_n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="181" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1397" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1407.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="837" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="847.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1333" width="70.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="613.99" y="1343.5" >zap_pmd..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="117" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1205" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,430,100 samples, 0.49%)</title><rect x="605.2" y="85" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.15" y="95.5" ></text>
</g>
<g >
<title>ext4_inode_csum (63,275,919 samples, 0.62%)</title><rect x="270.9" y="1221" width="7.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="273.95" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1541" width="42.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="66.18" y="1551.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,430,100 samples, 0.49%)</title><rect x="605.2" y="101" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.15" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1077" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,430,100 samples, 0.49%)</title><rect x="605.2" y="117" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="608.15" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="549" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="559.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1413" width="47.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >ext4..</text>
</g>
<g >
<title>do_syscall_64 (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1573" width="12.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="298.62" y="1583.5" ></text>
</g>
<g >
<title>iput (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1493" width="42.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="66.18" y="1503.5" >iput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1157" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1167.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (157,601,135 samples, 1.55%)</title><rect x="130.3" y="1349" width="18.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="133.26" y="1359.5" ></text>
</g>
<g >
<title>operator new (76,972,461 samples, 0.75%)</title><rect x="589.9" y="53" width="8.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="592.87" y="63.5" ></text>
</g>
<g >
<title>generic_write_end (811,421,431 samples, 7.96%)</title><rect x="184.4" y="1349" width="93.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="187.37" y="1359.5" >generic_wri..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1525" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1535.5" >std::__de..</text>
</g>
<g >
<title>__x64_sys_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1525" width="47.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >__x6..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="821" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="831.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (60,824,857 samples, 0.60%)</title><rect x="492.1" y="821" width="7.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="495.14" y="831.5" ></text>
</g>
<g >
<title>evict (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1477" width="42.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="66.18" y="1487.5" >evict</text>
</g>
<g >
<title>unmap_single_vma (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1365" width="70.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="613.99" y="1375.5" >unmap_s..</text>
</g>
<g >
<title>sqlite3GetVarint (101,130,128 samples, 0.99%)</title><rect x="414.2" y="1349" width="11.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="417.19" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1477" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1487.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="645" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="655.5" >std::__de..</text>
</g>
<g >
<title>lock_mm_and_find_vma (50,333,868 samples, 0.49%)</title><rect x="313.6" y="1541" width="5.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="316.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1125" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1135.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,003,194,835 samples, 9.84%)</title><rect x="1029.9" y="1541" width="116.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1032.90" y="1551.5" >cpuidle_idle_c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="933" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="943.5" >std::__de..</text>
</g>
<g >
<title>malloc (57,364,419 samples, 0.56%)</title><rect x="473.7" y="277" width="6.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="476.69" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,495,727,600 samples, 14.67%)</title><rect x="105.2" y="1525" width="173.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="108.18" y="1535.5" >__x64_sys_write</text>
</g>
<g >
<title>[libc.so.6] (60,824,857 samples, 0.60%)</title><rect x="492.1" y="789" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="495.14" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1541" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1551.5" ></text>
</g>
<g >
<title>filemap_read (408,888,999 samples, 4.01%)</title><rect x="10.0" y="1381" width="47.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >file..</text>
</g>
<g >
<title>handle_mm_fault (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1541" width="5.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="310.76" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1125" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1135.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (321,684,187 samples, 3.15%)</title><rect x="467.8" y="1013" width="37.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1023.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="229" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="239.5" ></text>
</g>
<g >
<title>cfree (60,824,857 samples, 0.60%)</title><rect x="492.1" y="805" width="7.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="495.14" y="815.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (104,914,507 samples, 1.03%)</title><rect x="295.6" y="1509" width="12.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="298.62" y="1519.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (87,468,163 samples, 0.86%)</title><rect x="254.8" y="1205" width="10.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="257.85" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,149,291 samples, 1.06%)</title><rect x="467.8" y="373" width="12.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="437" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="447.5" >std::__de..</text>
</g>
<g >
<title>folio_account_dirtied (57,625,757 samples, 0.57%)</title><rect x="184.4" y="1285" width="6.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="187.37" y="1295.5" ></text>
</g>
<g >
<title>filemap_free_folio (52,084,759 samples, 0.51%)</title><rect x="69.2" y="1285" width="6.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="72.18" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="981" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="885" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="895.5" >std::__de..</text>
</g>
<g >
<title>handle_pte_fault (50,763,822 samples, 0.50%)</title><rect x="307.8" y="1509" width="5.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="310.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="245" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="255.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (63,275,919 samples, 0.62%)</title><rect x="270.9" y="1189" width="7.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="273.95" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1317" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,784,872 samples, 0.50%)</title><rect x="467.8" y="245" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="693" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="703.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1253" width="80.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="533.19" y="1263.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1125" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1135.5" >std:..</text>
</g>
<g >
<title>drop_buffers.constprop.0 (52,002,416 samples, 0.51%)</title><rect x="87.2" y="1205" width="6.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="90.25" y="1215.5" ></text>
</g>
<g >
<title>up_read (50,826,407 samples, 0.50%)</title><rect x="142.6" y="1301" width="5.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="145.62" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (607,987,502 samples, 5.96%)</title><rect x="611.0" y="1589" width="70.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="613.99" y="1599.5" >do_sysc..</text>
</g>
<g >
<title>charge_memcg (50,593,405 samples, 0.50%)</title><rect x="336.8" y="1253" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="339.82" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1077" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1087.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (647,752,020 samples, 6.35%)</title><rect x="530.2" y="133" width="75.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="143.5" >std::__d..</text>
</g>
<g >
<title>filemap_add_folio (309,944,611 samples, 3.04%)</title><rect x="148.5" y="1301" width="35.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="151.50" y="1311.5" >fil..</text>
</g>
<g >
<title>dentry_unlink_inode (362,896,837 samples, 3.56%)</title><rect x="63.2" y="1397" width="42.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="66.18" y="1407.5" >den..</text>
</g>
<g >
<title>free_unref_page_list (51,772,039 samples, 0.51%)</title><rect x="63.2" y="1269" width="6.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="66.18" y="1279.5" ></text>
</g>
<g >
<title>__pagevec_release (51,772,039 samples, 0.51%)</title><rect x="63.2" y="1301" width="6.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="66.18" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1157" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1167.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,784,872 samples, 0.50%)</title><rect x="467.8" y="213" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_commit (51,772,039 samples, 0.51%)</title><rect x="63.2" y="1253" width="6.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="66.18" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="709" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="719.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="677" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="687.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (210,225,070 samples, 2.06%)</title><rect x="467.8" y="661" width="24.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="671.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="261" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="271.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1445" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1455.5" ></text>
</g>
<g >
<title>truncate_cleanup_folio (206,905,898 samples, 2.03%)</title><rect x="81.2" y="1301" width="24.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="84.24" y="1311.5" >t..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="341" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="351.5" >std::__de..</text>
</g>
<g >
<title>hrtimer_nanosleep (330,297,150 samples, 3.24%)</title><rect x="991.7" y="1541" width="38.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="994.68" y="1551.5" >hrt..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1349" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (698,182,120 samples, 6.85%)</title><rect x="530.2" y="1237" width="80.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="533.19" y="1247.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1285" width="19.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="513.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="997" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1007.5" ></text>
</g>
<g >
<title>vfs_read (466,780,994 samples, 4.58%)</title><rect x="319.5" y="1541" width="54.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="322.46" y="1551.5" >vfs_r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (321,684,187 samples, 3.15%)</title><rect x="467.8" y="981" width="37.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="470.81" y="991.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (372,169,086 samples, 3.65%)</title><rect x="467.8" y="1477" width="43.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="1487.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="709" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="719.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (166,859,543 samples, 1.64%)</title><rect x="510.9" y="1061" width="19.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.88" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (210,225,070 samples, 2.06%)</title><rect x="467.8" y="645" width="24.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.81" y="655.5" >s..</text>
</g>
</g>
</svg>
