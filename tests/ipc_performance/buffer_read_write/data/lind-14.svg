<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1461" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,557,673 samples, 0.03%)</title><rect x="83.5" y="1429" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1493" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (416,436,396 samples, 4.06%)</title><rect x="1142.0" y="1461" width="48.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1145.00" y="1471.5" >cpui..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,106,527 samples, 0.06%)</title><rect x="86.8" y="757" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="89.81" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,825,432 samples, 0.03%)</title><rect x="86.1" y="565" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="89.12" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1493" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="244.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="511.5" ></text>
</g>
<g >
<title>proc_root_readdir (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1253" width="85.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="569.34" y="1263.5" >proc_root_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1541" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1509" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1519.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1429" width="11.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="534.07" y="1439.5" ></text>
</g>
<g >
<title>copy_page_range (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1317" width="3.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="81.47" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1285" width="85.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="569.34" y="1295.5" >__x64_sys_..</text>
</g>
<g >
<title>[bash] (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1477" width="85.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="569.34" y="1487.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="405" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1349" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1365" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1375.5" ></text>
</g>
<g >
<title>drop_buffers.constprop.0 (51,534,210 samples, 0.50%)</title><rect x="392.0" y="1093" width="5.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="394.99" y="1103.5" ></text>
</g>
<g >
<title>malloc (2,661,488 samples, 0.03%)</title><rect x="83.2" y="1477" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="86.17" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,699,627 samples, 0.06%)</title><rect x="87.5" y="1013" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="90.52" y="1023.5" ></text>
</g>
<g >
<title>alloc_pages (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1253" width="3.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="81.47" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1301" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1311.5" ></text>
</g>
<g >
<title>evict (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1253" width="41.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="365.64" y="1263.5" >evict</text>
</g>
<g >
<title>NaClSysUnlink (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1557" width="41.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="365.64" y="1567.5" >NaC..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="853" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1109" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (2,784,080 samples, 0.03%)</title><rect x="87.9" y="997" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="90.85" y="1007.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (51,395,850 samples, 0.50%)</title><rect x="380.2" y="1141" width="5.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="383.19" y="1151.5" ></text>
</g>
<g >
<title>unmap_page_range (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1349" width="7.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="244.70" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="949" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="725" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="735.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1557" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="167.30" y="1567.5" ></text>
</g>
<g >
<title>proc_reg_read (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1429" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="244.10" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="101" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="111.5" ></text>
</g>
<g >
<title>cpu_startup_entry (416,849,382 samples, 4.07%)</title><rect x="1142.0" y="1525" width="48.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1145.00" y="1535.5" >cpu_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="741" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="213" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1285" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1295.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="245" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="255.5" ></text>
</g>
<g >
<title>block_dirty_folio (51,242,425 samples, 0.50%)</title><rect x="327.7" y="1205" width="5.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="330.71" y="1215.5" ></text>
</g>
<g >
<title>copy_pmd_range (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1285" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="81.47" y="1295.5" ></text>
</g>
<g >
<title>all (10,247,795,910 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>folio_alloc (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1253" width="5.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="418.44" y="1263.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1461" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1072.05" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1477" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="165" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="175.5" ></text>
</g>
<g >
<title>update_load_avg (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1429" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1072.05" y="1439.5" ></text>
</g>
<g >
<title>folio_mark_dirty (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1237" width="11.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="324.78" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,962,803 samples, 0.03%)</title><rect x="85.8" y="373" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="88.78" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (52,752,550 samples, 0.51%)</title><rect x="471.3" y="1333" width="6.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="474.31" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="709" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (676,223,159 samples, 6.60%)</title><rect x="84.4" y="1269" width="77.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1279.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="901" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (676,223,159 samples, 6.60%)</title><rect x="84.4" y="1221" width="77.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1231.5" >std::__d..</text>
</g>
<g >
<title>Watcher::notify (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1573" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="167.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="453" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="463.5" ></text>
</g>
<g >
<title>charge_memcg (264,166,586 samples, 2.58%)</title><rect x="433.1" y="1237" width="30.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="436.06" y="1247.5" >ch..</text>
</g>
<g >
<title>__xstat64 (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1541" width="0.3" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="165.96" y="1551.5" ></text>
</g>
<g >
<title>prepare_task_switch (1,553,807 samples, 0.02%)</title><rect x="1141.8" y="1509" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1144.82" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1349" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1359.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1365" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1375.5" ></text>
</g>
<g >
<title>zap_pte_range (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1269" width="11.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="324.78" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1221" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1231.5" ></text>
</g>
<g >
<title>proc_fd_link (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1413" width="4.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="75.85" y="1423.5" ></text>
</g>
<g >
<title>__mod_node_page_state (50,404,685 samples, 0.49%)</title><rect x="494.8" y="1317" width="5.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="497.80" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="773" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="783.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,918,412,074 samples, 18.72%)</title><rect x="321.8" y="1589" width="220.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="324.78" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>create_page_buffers (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1317" width="5.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="486.19" y="1327.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1573" width="67.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="251.69" y="1583.5" >evlist_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,755,780 samples, 1.16%)</title><rect x="164.7" y="1589" width="13.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="917" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1429" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1439.5" ></text>
</g>
<g >
<title>__block_write_begin_int (100,857,244 samples, 0.98%)</title><rect x="483.2" y="1333" width="11.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="486.19" y="1343.5" ></text>
</g>
<g >
<title>[ls] (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1541" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="75.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1285" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="917" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="927.5" ></text>
</g>
<g >
<title>unmap_single_vma (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1317" width="11.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="324.78" y="1327.5" ></text>
</g>
<g >
<title>block_page_mkwrite (151,237,052 samples, 1.48%)</title><rect x="477.4" y="1349" width="17.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="480.39" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1605" width="67.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="251.69" y="1615.5" >[unknown]</text>
</g>
<g >
<title>page_cache_ra_order (382,629,978 samples, 3.73%)</title><rect x="427.3" y="1317" width="44.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="430.25" y="1327.5" >page..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1365" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="949" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1061" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1071.5" ></text>
</g>
<g >
<title>unmap_vmas (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1333" width="11.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="324.78" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (676,223,159 samples, 6.60%)</title><rect x="84.4" y="1253" width="77.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1263.5" >std::__d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="709" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="213" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1509" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1519.5" ></text>
</g>
<g >
<title>read_pages (68,066,423 samples, 0.66%)</title><rect x="463.5" y="1285" width="7.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="466.47" y="1295.5" ></text>
</g>
<g >
<title>futex_wake_mark (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1413" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="167.30" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (3,171,897 samples, 0.03%)</title><rect x="85.4" y="293" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="88.41" y="303.5" ></text>
</g>
<g >
<title>alloc_page_buffers (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1285" width="5.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="486.19" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1093" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="661" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="885" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="693" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="773" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1253" width="5.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="486.19" y="1263.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1509" width="11.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="534.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="821" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,225,301 samples, 0.03%)</title><rect x="86.4" y="629" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="89.44" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,638,765 samples, 0.06%)</title><rect x="165.0" y="101" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="111.5" ></text>
</g>
<g >
<title>cfree (2,925,366 samples, 0.03%)</title><rect x="162.3" y="1381" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="165.29" y="1391.5" ></text>
</g>
<g >
<title>proc_pid_readdir (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1237" width="85.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="569.34" y="1247.5" >proc_pid_r..</text>
</g>
<g >
<title>__do_sys_newstat (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1477" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="165.96" y="1487.5" ></text>
</g>
<g >
<title>alloc_buffer_head (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1269" width="5.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="486.19" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1509" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="181.96" y="1519.5" ></text>
</g>
<g >
<title>copy_process (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1365" width="3.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="81.47" y="1375.5" ></text>
</g>
<g >
<title>iterate_dir (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1269" width="85.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="569.34" y="1279.5" >iterate_dir</text>
</g>
<g >
<title>InotifyBackend::handleEvent (710,613,099 samples, 6.93%)</title><rect x="82.5" y="1573" width="81.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="85.48" y="1583.5" >InotifyBa..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (2,867,822 samples, 0.03%)</title><rect x="162.6" y="1493" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="165.63" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="469" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,054,279 samples, 0.03%)</title><rect x="85.1" y="277" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="88.06" y="287.5" ></text>
</g>
<g >
<title>radix_tree_next_chunk (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1157" width="85.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="569.34" y="1167.5" >radix_tree..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="485" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="773" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="949" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,504,243 samples, 0.05%)</title><rect x="165.6" y="101" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="168.63" y="111.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (51,395,850 samples, 0.50%)</title><rect x="380.2" y="1157" width="5.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="383.19" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="693" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="703.5" ></text>
</g>
<g >
<title>Glob::isIgnored (698,969,078 samples, 6.82%)</title><rect x="82.5" y="1525" width="80.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="85.48" y="1535.5" >Glob::isI..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="437" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1045" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1055.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1541" width="3.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="81.47" y="1551.5" ></text>
</g>
<g >
<title>sync_regs (159,076,591 samples, 1.55%)</title><rect x="512.8" y="1493" width="18.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="515.75" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1525" width="67.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="251.69" y="1535.5" >entry_S..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1301" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1311.5" ></text>
</g>
<g >
<title>cfree (2,390,514 samples, 0.02%)</title><rect x="178.7" y="117" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="181.67" y="127.5" ></text>
</g>
<g >
<title>rmqueue (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1205" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="81.47" y="1215.5" ></text>
</g>
<g >
<title>expand_string_assignment (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1269" width="66.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="655.22" y="1279.5" >expand_..</text>
</g>
<g >
<title>ext4_page_mkwrite (151,237,052 samples, 1.48%)</title><rect x="477.4" y="1365" width="17.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="480.39" y="1375.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1205" width="41.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="365.64" y="1215.5" >tru..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1253" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="341" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="741" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="901" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="911.5" ></text>
</g>
<g >
<title>__schedule (1,553,807 samples, 0.02%)</title><rect x="1141.8" y="1525" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1144.82" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="181" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="191.5" ></text>
</g>
<g >
<title>__munmap (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1461" width="11.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="324.78" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1509" width="41.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="365.64" y="1519.5" >rus..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1109" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1061" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,905,647 samples, 0.35%)</title><rect x="84.4" y="1061" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1071.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,390,514 samples, 0.02%)</title><rect x="178.7" y="101" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="181.67" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,770,752 samples, 0.38%)</title><rect x="84.4" y="1125" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1135.5" ></text>
</g>
<g >
<title>page_add_file_rmap (50,404,685 samples, 0.49%)</title><rect x="494.8" y="1349" width="5.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="497.80" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="933" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,905,647 samples, 0.35%)</title><rect x="84.4" y="1077" width="4.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="357" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="367.5" ></text>
</g>
<g >
<title>filemap_release_folio (102,889,870 samples, 1.00%)</title><rect x="392.0" y="1141" width="11.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="394.99" y="1151.5" ></text>
</g>
<g >
<title>filename_lookup (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1429" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="165.96" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1317" width="85.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="569.34" y="1327.5" >entry_SYSC..</text>
</g>
<g >
<title>__mmput (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1413" width="7.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="244.70" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="213" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="149" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="645" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="655.5" ></text>
</g>
<g >
<title>cfree (5,504,243 samples, 0.05%)</title><rect x="165.6" y="85" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="168.63" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1285" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1445" width="3.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="81.47" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="581" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="213" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1221" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="453" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="463.5" ></text>
</g>
<g >
<title>[bash] (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1445" width="85.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="569.34" y="1455.5" >[bash]</text>
</g>
<g >
<title>bprm_execve (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1461" width="67.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="251.69" y="1471.5" >bprm_ex..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="629" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="69" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="79.5" ></text>
</g>
<g >
<title>inode_permission (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1381" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="165.96" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (683,860,769 samples, 6.67%)</title><rect x="83.9" y="1413" width="78.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1423.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="101" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1397" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="373" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="485" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1269" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="837" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="847.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (50,919,315 samples, 0.50%)</title><rect x="368.5" y="1093" width="5.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="371.48" y="1103.5" ></text>
</g>
<g >
<title>unmap_single_vma (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1365" width="7.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="244.70" y="1375.5" ></text>
</g>
<g >
<title>do_user_addr_fault (840,477,587 samples, 8.20%)</title><rect x="409.6" y="1461" width="96.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="412.64" y="1471.5" >do_user_add..</text>
</g>
<g >
<title>__alloc_pages (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1237" width="3.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="81.47" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1509" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1173" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1183.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1589" width="62.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >[ld-li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1429" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="853" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_read (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1477" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="243.71" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,824,865 samples, 0.26%)</title><rect x="84.4" y="981" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="965" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1301" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1525" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1535.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1477" width="11.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="324.78" y="1487.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,390,514 samples, 0.02%)</title><rect x="82.2" y="1589" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="85.20" y="1599.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1333" width="41.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="365.64" y="1343.5" >ovl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="901" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1541" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="293" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,524,492 samples, 0.32%)</title><rect x="84.4" y="1045" width="3.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_futex (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1573" width="58.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="820.72" y="1583.5" >__x64_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1317" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="677" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="687.5" ></text>
</g>
<g >
<title>dequeue_task_fair (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1461" width="58.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="820.72" y="1471.5" >dequeu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="517" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (629,103,554 samples, 6.14%)</title><rect x="1069.4" y="1525" width="72.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1072.38" y="1535.5" >_nohz_id..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="661" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="671.5" ></text>
</g>
<g >
<title>deflate_slow (533,235,003 samples, 5.20%)</title><rect x="179.3" y="1509" width="61.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="182.31" y="1519.5" >deflat..</text>
</g>
<g >
<title>cgroup_rstat_updated (60,736,780 samples, 0.59%)</title><rect x="450.7" y="1221" width="7.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="453.68" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1109" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1029" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1509" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="165.96" y="1519.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1509" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1072.05" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1093" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="997" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="341" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="351.5" ></text>
</g>
<g >
<title>__clone (544,900,270 samples, 5.32%)</title><rect x="179.0" y="1605" width="62.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="181.96" y="1615.5" >__clone</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1013" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1477" width="4.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="75.85" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,229,392 samples, 0.03%)</title><rect x="82.8" y="1477" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="85.80" y="1487.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,968,857,052 samples, 19.21%)</title><rect x="316.0" y="1605" width="226.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="318.97" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>filemap_unaccount_folio (51,395,850 samples, 0.50%)</title><rect x="380.2" y="1173" width="5.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="383.19" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1029" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1397" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="501" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="485" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (789,969,145 samples, 7.71%)</title><rect x="409.6" y="1413" width="91.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="412.64" y="1423.5" >handle_pte..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1365" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="997" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,911,295 samples, 0.14%)</title><rect x="164.7" y="1573" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (38,770,752 samples, 0.38%)</title><rect x="84.4" y="1109" width="4.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="1119.5" ></text>
</g>
<g >
<title>sched_clock (416,083,037 samples, 4.06%)</title><rect x="1142.0" y="1429" width="48.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1145.04" y="1439.5" >sche..</text>
</g>
<g >
<title>uv__fs_readlink (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1541" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="244.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="197" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,824,865 samples, 0.26%)</title><rect x="84.4" y="853" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (2,892,490 samples, 0.03%)</title><rect x="163.6" y="1557" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="166.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="581" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="591.5" ></text>
</g>
<g >
<title>vfs_fstatat (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1461" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="165.96" y="1471.5" ></text>
</g>
<g >
<title>__libc_fork (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1477" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="81.47" y="1487.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1509" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="167.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="661" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1493" width="4.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="75.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="549" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (676,223,159 samples, 6.60%)</title><rect x="84.4" y="1237" width="77.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="1247.5" >std::__d..</text>
</g>
<g >
<title>asm_exc_page_fault (205,476,611 samples, 2.01%)</title><rect x="542.7" y="1605" width="23.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="545.68" y="1615.5" >a..</text>
</g>
<g >
<title>ext4_dirty_folio (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1221" width="11.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="324.78" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,938,241 samples, 0.09%)</title><rect x="84.7" y="373" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.75" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1573" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="949" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="959.5" ></text>
</g>
<g >
<title>schedule (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1509" width="58.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="820.72" y="1519.5" >schedule</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="485" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1269" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1279.5" ></text>
</g>
<g >
<title>sched_clock_cpu (416,083,037 samples, 4.06%)</title><rect x="1142.0" y="1445" width="48.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1145.04" y="1455.5" >sche..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,667,605 samples, 0.14%)</title><rect x="84.4" y="469" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1205" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="725" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="821" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="831.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (68,066,423 samples, 0.66%)</title><rect x="463.5" y="1253" width="7.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="466.47" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1397" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1407.5" ></text>
</g>
<g >
<title>operator new (2,784,080 samples, 0.03%)</title><rect x="87.9" y="981" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="90.85" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="405" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,303,079,009 samples, 22.47%)</title><rect x="876.8" y="1573" width="265.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="879.81" y="1583.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1013" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="197" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="693" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1269" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="565" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="575.5" ></text>
</g>
<g >
<title>std::__condvar::notify_all (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1541" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="167.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="389" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="293" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="303.5" ></text>
</g>
<g >
<title>rmqueue_bulk (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1189" width="3.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="81.47" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="325" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,901,044 samples, 0.12%)</title><rect x="84.7" y="421" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.75" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="821" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1589" width="58.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="820.72" y="1599.5" >do_sys..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="437" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="447.5" ></text>
</g>
<g >
<title>ovl_permission (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1365" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="165.96" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="613" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="565" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="575.5" ></text>
</g>
<g >
<title>lockref_get (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1397" width="4.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="75.85" y="1407.5" ></text>
</g>
<g >
<title>sel_ldr (2,174,333,663 samples, 21.22%)</title><rect x="316.0" y="1621" width="250.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="318.97" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>std::string::insert (2,726,378 samples, 0.03%)</title><rect x="163.3" y="1541" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="166.33" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="741" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1189" width="5.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="418.44" y="1199.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (713,744,763 samples, 6.96%)</title><rect x="82.5" y="1589" width="82.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="85.48" y="1599.5" >InotifyBa..</text>
</g>
<g >
<title>lind_close (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1541" width="11.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="324.78" y="1551.5" ></text>
</g>
<g >
<title>execute_command (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1429" width="66.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="655.22" y="1439.5" >execute..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,824,865 samples, 0.26%)</title><rect x="84.4" y="917" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="133" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="149" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="159.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1493" width="11.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="324.78" y="1503.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (890,853,460 samples, 8.69%)</title><rect x="403.8" y="1493" width="102.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="406.84" y="1503.5" >asm_exc_page..</text>
</g>
<g >
<title>__vm_munmap (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1397" width="11.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="324.78" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,894,601 samples, 0.03%)</title><rect x="77.0" y="1589" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="80.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="309" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="319.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1557" width="3.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="81.47" y="1567.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (151,468,748 samples, 1.48%)</title><rect x="345.2" y="1525" width="17.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="348.20" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (687,418,442 samples, 6.71%)</title><rect x="83.5" y="1477" width="79.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.48" y="1487.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (627,819,446 samples, 6.13%)</title><rect x="90.0" y="1205" width="72.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="93.00" y="1215.5" >std::__d..</text>
</g>
<g >
<title>__perf_event_task_sched_out (1,553,807 samples, 0.02%)</title><rect x="1141.8" y="1493" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1144.82" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1445" width="11.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="324.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="917" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1573" width="152.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="569.34" y="1583.5" >[libc.so.6]</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1509" width="11.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="324.78" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1557" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1173" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="821" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="831.5" ></text>
</g>
<g >
<title>try_charge_memcg (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1221" width="6.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="424.31" y="1231.5" ></text>
</g>
<g >
<title>dput (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1317" width="41.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="365.64" y="1327.5" >dput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="309" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="319.5" ></text>
</g>
<g >
<title>vfs_readlink (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1445" width="4.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="75.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1221" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1205" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1141" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1151.5" ></text>
</g>
<g >
<title>enqueue_task (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1477" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1072.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="693" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1525" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1189" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1199.5" ></text>
</g>
<g >
<title>glob_filename (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1413" width="85.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="569.34" y="1423.5" >glob_filen..</text>
</g>
<g >
<title>flush_smp_call_function_queue (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1541" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1072.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="357" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1205" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="933" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="943.5" ></text>
</g>
<g >
<title>operator new (2,661,488 samples, 0.03%)</title><rect x="83.2" y="1493" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="86.17" y="1503.5" ></text>
</g>
<g >
<title>realloc (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1413" width="11.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="534.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,638,765 samples, 0.06%)</title><rect x="165.0" y="69" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="79.5" ></text>
</g>
<g >
<title>__cmd_record (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1589" width="67.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="251.69" y="1599.5" >__cmd_r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1205" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1215.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,719,928,391 samples, 26.54%)</title><rect x="876.8" y="1605" width="313.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="879.81" y="1615.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="613" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="623.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1253" width="6.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="424.31" y="1263.5" ></text>
</g>
<g >
<title>get_page_from_freelist (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1205" width="5.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="418.44" y="1215.5" ></text>
</g>
<g >
<title>glob_filename (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1381" width="85.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="569.34" y="1391.5" >glob_filen..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="565" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="575.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1525" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1072.05" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="703.5" ></text>
</g>
<g >
<title>set_page_dirty (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1253" width="11.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="324.78" y="1263.5" ></text>
</g>
<g >
<title>access_remote_vm (3,374,715 samples, 0.03%)</title><rect x="240.7" y="1397" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="243.71" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="709" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="719.5" ></text>
</g>
<g >
<title>do_readlinkat (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1461" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="244.29" y="1471.5" ></text>
</g>
<g >
<title>search_binary_handler (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1413" width="67.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="251.69" y="1423.5" >search_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="645" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="655.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1525" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="167.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="789" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="485" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_clone (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1413" width="3.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="81.47" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="725" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,226,176 samples, 0.06%)</title><rect x="85.1" y="341" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="88.06" y="351.5" ></text>
</g>
<g >
<title>copy_p4d_range (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1301" width="3.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="81.47" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1477" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="181.96" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,104,951,979 samples, 10.78%)</title><rect x="403.8" y="1509" width="127.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="406.84" y="1519.5" >[libc.so.6]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="997" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1477" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="167.30" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (789,969,145 samples, 7.71%)</title><rect x="409.6" y="1429" width="91.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="412.64" y="1439.5" >__handle_m..</text>
</g>
<g >
<title>__filemap_add_folio (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1269" width="6.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="424.31" y="1279.5" ></text>
</g>
<g >
<title>set_shellopts (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1221" width="66.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="655.22" y="1231.5" >set_she..</text>
</g>
<g >
<title>__alloc_pages (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1221" width="5.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="418.44" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="805" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1237" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="485" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="495.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ZlibContext::DoThreadPoolWork (533,235,003 samples, 5.20%)</title><rect x="179.3" y="1541" width="61.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="182.31" y="1551.5" >node::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,226,176 samples, 0.06%)</title><rect x="85.1" y="325" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="88.06" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="965" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="821" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="831.5" ></text>
</g>
<g >
<title>__lookup_slow (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1381" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="244.29" y="1391.5" ></text>
</g>
<g >
<title>readlink (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1525" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="244.29" y="1535.5" ></text>
</g>
<g >
<title>__folio_cancel_dirty (51,355,660 samples, 0.50%)</title><rect x="397.9" y="1077" width="5.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="400.93" y="1087.5" ></text>
</g>
<g >
<title>cfree (7,128,633 samples, 0.07%)</title><rect x="77.3" y="1589" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="80.33" y="1599.5" ></text>
</g>
<g >
<title>load_elf_binary (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1477" width="7.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="244.70" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1413" width="66.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="655.22" y="1423.5" >execute..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1461" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1077" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1087.5" ></text>
</g>
<g >
<title>vfs_statx (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1445" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="165.96" y="1455.5" ></text>
</g>
<g >
<title>unmap_vmas (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1381" width="7.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="244.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1365" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,390,514 samples, 0.02%)</title><rect x="178.7" y="133" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="181.67" y="143.5" ></text>
</g>
<g >
<title>do_fault (739,593,028 samples, 7.22%)</title><rect x="415.4" y="1397" width="85.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="418.44" y="1407.5" >do_fault</text>
</g>
<g >
<title>do_syscall_64 (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1429" width="11.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="324.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="965" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="629" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,493,037 samples, 0.17%)</title><rect x="84.4" y="597" width="2.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="607.5" ></text>
</g>
<g >
<title>sh (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1621" width="152.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="569.34" y="1631.5" >sh</text>
</g>
<g >
<title>bprm_execve.part.0 (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1445" width="67.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="251.69" y="1455.5" >bprm_ex..</text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1589" width="3.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="81.47" y="1599.5" ></text>
</g>
<g >
<title>parse_and_execute (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1525" width="152.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="569.34" y="1535.5" >parse_and_execute</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="373" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="245" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="255.5" ></text>
</g>
<g >
<title>execute_command_internal (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1365" width="66.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="655.22" y="1375.5" >execute..</text>
</g>
<g >
<title>exc_page_fault (840,477,587 samples, 8.20%)</title><rect x="409.6" y="1477" width="96.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="412.64" y="1487.5" >exc_page_fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="981" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="181" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="191.5" ></text>
</g>
<g >
<title>[unknown] (837,885,025 samples, 8.18%)</title><rect x="82.5" y="1605" width="96.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="85.48" y="1615.5" >[unknown]</text>
</g>
<g >
<title>bprm_execve.part.0 (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1525" width="7.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="244.70" y="1535.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (629,103,554 samples, 6.14%)</title><rect x="1069.4" y="1541" width="72.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1072.38" y="1551.5" >nohz_run..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="517" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1333" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="709" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1541" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1551.5" ></text>
</g>
<g >
<title>deflate.part.3 (533,235,003 samples, 5.20%)</title><rect x="179.3" y="1525" width="61.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="182.31" y="1535.5" >deflat..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="149" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="837" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1333" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1343.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1301" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1311.5" >[bash]</text>
</g>
<g >
<title>do_mas_munmap (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1381" width="11.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="324.78" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="373" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1349" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1359.5" ></text>
</g>
<g >
<title>malloc (2,784,080 samples, 0.03%)</title><rect x="87.9" y="965" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="90.85" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1605" width="7.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="244.70" y="1615.5" ></text>
</g>
<g >
<title>tcp_seq_start (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1381" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="244.10" y="1391.5" ></text>
</g>
<g >
<title>__schedule (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1493" width="58.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="820.72" y="1503.5" >__sche..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1493" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="181.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="677" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="309" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1461" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="167.30" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1429" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1525" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,493,037 samples, 0.17%)</title><rect x="84.4" y="581" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="501" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="511.5" ></text>
</g>
<g >
<title>bprm_execve (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1541" width="7.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="244.70" y="1551.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (264,166,586 samples, 2.58%)</title><rect x="433.1" y="1253" width="30.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="436.06" y="1263.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="117" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="789" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="853" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="293" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="303.5" ></text>
</g>
<g >
<title>readdir64 (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1349" width="85.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="569.34" y="1359.5" >readdir64</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="453" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="463.5" ></text>
</g>
<g >
<title>exit_mmap (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1397" width="7.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="244.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1445" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1455.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1,917,894 samples, 0.02%)</title><rect x="876.6" y="1573" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="879.59" y="1583.5" ></text>
</g>
<g >
<title>dispatcher (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1525" width="41.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="365.64" y="1535.5" >dis..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1029" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1039.5" ></text>
</g>
<g >
<title>next_tgid (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1221" width="85.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="569.34" y="1231.5" >next_tgid</text>
</g>
<g >
<title>exc_page_fault (2,390,514 samples, 0.02%)</title><rect x="82.2" y="1573" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="85.20" y="1583.5" ></text>
</g>
<g >
<title>execute_command_internal (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1509" width="152.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="569.34" y="1519.5" >execute_command_int..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1477" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="725" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1525" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1535.5" ></text>
</g>
<g >
<title>handle_mm_fault (840,477,587 samples, 8.20%)</title><rect x="409.6" y="1445" width="96.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="412.64" y="1455.5" >handle_mm_f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="533" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1397" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1407.5" ></text>
</g>
<g >
<title>read (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1525" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="243.71" y="1535.5" ></text>
</g>
<g >
<title>uv__fs_read (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1541" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="243.71" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1493" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1605" width="58.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="820.72" y="1615.5" >entry_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="197" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="207.5" ></text>
</g>
<g >
<title>__libc_start_main (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1589" width="152.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="569.34" y="1599.5" >__libc_start_main</text>
</g>
<g >
<title>NaClSysClose (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1557" width="11.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="324.78" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_execve (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1573" width="7.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="244.70" y="1583.5" ></text>
</g>
<g >
<title>[ls] (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1557" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="75.85" y="1567.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (416,598,629 samples, 4.07%)</title><rect x="1142.0" y="1493" width="48.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1145.00" y="1503.5" >cpui..</text>
</g>
<g >
<title>__x64_sys_unlink (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1413" width="41.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="365.64" y="1423.5" >__x..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1573" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1189" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1509" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="661" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="165" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="437" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1317" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1327.5" ></text>
</g>
<g >
<title>do_futex (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1445" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="167.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1509" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1519.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (698,969,078 samples, 6.82%)</title><rect x="82.5" y="1541" width="80.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="85.48" y="1551.5" >Watcher::..</text>
</g>
<g >
<title>ct_idle_enter (2,907,137 samples, 0.03%)</title><rect x="877.1" y="1493" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="880.14" y="1503.5" ></text>
</g>
<g >
<title>page_cache_sync_ra (102,568,763 samples, 1.00%)</title><rect x="415.4" y="1333" width="11.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="418.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="69" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="79.5" ></text>
</g>
<g >
<title>exec_mmap (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1445" width="7.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="244.70" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="261" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,205,743,816 samples, 11.77%)</title><rect x="403.8" y="1541" width="138.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="406.84" y="1551.5" >rustposix::safepo..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1285" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1253" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1263.5" ></text>
</g>
<g >
<title>glob_filename (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1397" width="85.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="569.34" y="1407.5" >glob_filen..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1077" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1301" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="773" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="783.5" ></text>
</g>
<g >
<title>main (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1557" width="152.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="569.34" y="1567.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1013" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1023.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1349" width="3.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="81.47" y="1359.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1573" width="62.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >[ld-li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="757" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="767.5" ></text>
</g>
<g >
<title>execve (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1541" width="67.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="251.69" y="1551.5" >execve</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="757" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (14,667,605 samples, 0.14%)</title><rect x="84.4" y="533" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="581" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="591.5" ></text>
</g>
<g >
<title>tcp_get_idx (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1365" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="244.10" y="1375.5" ></text>
</g>
<g >
<title>begin_new_exec (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1461" width="7.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="244.70" y="1471.5" ></text>
</g>
<g >
<title>execute_command_internal (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1461" width="85.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="569.34" y="1471.5" >execute_co..</text>
</g>
<g >
<title>[bash] (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1541" width="152.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="569.34" y="1551.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="309" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1429" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="421" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="949" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="959.5" ></text>
</g>
<g >
<title>__do_fault (537,951,291 samples, 5.25%)</title><rect x="415.4" y="1381" width="62.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="418.44" y="1391.5" >__do_f..</text>
</g>
<g >
<title>vfs_read (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1445" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="243.71" y="1455.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (52,752,550 samples, 0.51%)</title><rect x="471.3" y="1349" width="6.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="474.31" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,669,548,688 samples, 16.29%)</title><rect x="876.8" y="1541" width="192.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="879.81" y="1551.5" >cpuidle_idle_call</text>
</g>
<g >
<title>truncate_cleanup_folio (154,021,688 samples, 1.50%)</title><rect x="386.1" y="1189" width="17.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="389.11" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,718,338 samples, 0.20%)</title><rect x="84.4" y="661" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="671.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (50,379,808 samples, 0.49%)</title><rect x="477.4" y="1333" width="5.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="480.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1445" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="741" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="981" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="991.5" ></text>
</g>
<g >
<title>cpuidle_enter (416,436,396 samples, 4.06%)</title><rect x="1142.0" y="1477" width="48.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1145.00" y="1487.5" >cpui..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="837" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="847.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1493" width="41.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="365.64" y="1503.5" >rus..</text>
</g>
<g >
<title>do_sys_poll (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1461" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="181.96" y="1471.5" ></text>
</g>
<g >
<title>kthread (1,917,894 samples, 0.02%)</title><rect x="876.6" y="1589" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="879.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,901,044 samples, 0.12%)</title><rect x="84.7" y="405" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.75" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1045" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1477" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="244.29" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="981" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="991.5" ></text>
</g>
<g >
<title>InotifyBackend::start (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1541" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="181.96" y="1551.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,205,743,816 samples, 11.77%)</title><rect x="403.8" y="1573" width="138.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="406.84" y="1583.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1445" width="41.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="365.64" y="1455.5" >ent..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="597" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="165" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1093" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="821" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="997" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1381" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="534.07" y="1391.5" ></text>
</g>
<g >
<title>release_pages (101,668,899 samples, 0.99%)</title><rect x="362.6" y="1173" width="11.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="365.64" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1285" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1445" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1455.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,663,792,565 samples, 16.24%)</title><rect x="877.5" y="1493" width="191.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="880.47" y="1503.5" >mwait_idle_with_hints.con..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="373" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1093" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1509" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="244.29" y="1519.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (102,889,870 samples, 1.00%)</title><rect x="392.0" y="1109" width="11.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="394.99" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="805" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="773" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="783.5" ></text>
</g>
<g >
<title>generic_permission (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1333" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="165.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="453" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1461" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1471.5" ></text>
</g>
<g >
<title>update_blocked_averages (629,103,554 samples, 6.14%)</title><rect x="1069.4" y="1509" width="72.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1072.38" y="1519.5" >update_b..</text>
</g>
<g >
<title>dispatcher (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1525" width="11.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="324.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="933" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="757" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1237" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1247.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;InotifySubscription&gt;, std::shared_ptr&lt;InotifySubscription&gt;, std::allocator&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::hash&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (2,821,974 samples, 0.03%)</title><rect x="164.0" y="1557" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="166.98" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1205" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,718,338 samples, 0.20%)</title><rect x="84.4" y="725" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="735.5" ></text>
</g>
<g >
<title>proc_pid_cmdline_read (3,374,715 samples, 0.03%)</title><rect x="240.7" y="1429" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="243.71" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="981" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="901" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="565" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="789" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="799.5" ></text>
</g>
<g >
<title>schedule_idle (1,553,807 samples, 0.02%)</title><rect x="1141.8" y="1541" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1144.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,938,241 samples, 0.09%)</title><rect x="84.7" y="357" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.75" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="197" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="965" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="975.5" ></text>
</g>
<g >
<title>create_empty_buffers (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1301" width="5.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="486.19" y="1311.5" ></text>
</g>
<g >
<title>unlink (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1461" width="41.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="365.64" y="1471.5" >unl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="597" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1173" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (683,860,769 samples, 6.67%)</title><rect x="83.9" y="1429" width="78.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="86.89" y="1439.5" >std::__de..</text>
</g>
<g >
<title>NaClSysRead (252,137,366 samples, 2.46%)</title><rect x="333.6" y="1557" width="29.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="336.61" y="1567.5" >Na..</text>
</g>
<g >
<title>NaClSysReadDecoder (252,137,366 samples, 2.46%)</title><rect x="333.6" y="1573" width="29.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="336.61" y="1583.5" >Na..</text>
</g>
<g >
<title>charge_memcg (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1237" width="6.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="424.31" y="1247.5" ></text>
</g>
<g >
<title>getdents64 (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1333" width="85.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="569.34" y="1343.5" >getdents64</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="597" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="629" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="965" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="975.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,104,951,979 samples, 10.78%)</title><rect x="403.8" y="1525" width="127.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="406.84" y="1535.5" >rustposix::inte..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1349" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="501" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="997" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1007.5" ></text>
</g>
<g >
<title>proc_tgid_base_lookup (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1365" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="244.29" y="1375.5" ></text>
</g>
<g >
<title>lind (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1621" width="62.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >lind</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more@plt (3,381,155 samples, 0.03%)</title><rect x="88.2" y="1045" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="91.17" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,925,366 samples, 0.03%)</title><rect x="162.3" y="1397" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="165.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="677" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1413" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="549" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1237" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (544,900,270 samples, 5.32%)</title><rect x="179.0" y="1589" width="62.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="181.96" y="1599.5" >[libc...</text>
</g>
<g >
<title>swapper (4,096,748,981 samples, 39.98%)</title><rect x="718.3" y="1621" width="471.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="721.27" y="1631.5" >swapper</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1557" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1567.5" ></text>
</g>
<g >
<title>dup_mmap (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1333" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="81.47" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1589" width="4.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="75.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="325" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="565" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="389" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1413" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1493" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="165" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1461" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="645" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="655.5" ></text>
</g>
<g >
<title>ret_from_fork (1,917,894 samples, 0.02%)</title><rect x="876.6" y="1605" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="879.59" y="1615.5" ></text>
</g>
<g >
<title>iput (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1381" width="41.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="365.64" y="1391.5" >iput</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="277" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="287.5" ></text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (533,235,003 samples, 5.20%)</title><rect x="179.3" y="1557" width="61.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="182.31" y="1567.5" >node::..</text>
</g>
<g >
<title>free_pcppages_bulk (50,919,315 samples, 0.50%)</title><rect x="368.5" y="1125" width="5.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="371.48" y="1135.5" ></text>
</g>
<g >
<title>destroy_inode (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1349" width="41.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="365.64" y="1359.5" >des..</text>
</g>
<g >
<title>[anon] (12,814,746 samples, 0.13%)</title><rect x="77.0" y="1605" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="80.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="261" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="645" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1397" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1407.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="181" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1269" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="213" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="223.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1397" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1407.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="933" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="943.5" ></text>
</g>
<g >
<title>do_unlinkat (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1397" width="41.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="365.64" y="1407.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1317" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1413" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1423.5" ></text>
</g>
<g >
<title>do_futex (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1557" width="58.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="820.72" y="1567.5" >do_futex</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1381" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="613" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="623.5" ></text>
</g>
<g >
<title>do_readlinkat (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1461" width="4.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="75.85" y="1471.5" ></text>
</g>
<g >
<title>find_ge_pid (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1205" width="85.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="569.34" y="1215.5" >find_ge_pid</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="853" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="863.5" ></text>
</g>
<g >
<title>established_get_first (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1349" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="244.10" y="1359.5" ></text>
</g>
<g >
<title>__pmd_alloc (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1269" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="81.47" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1109" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="901" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1029" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1157" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="229" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="239.5" ></text>
</g>
<g >
<title>[perf-165885.map] (34,767,169 samples, 0.34%)</title><rect x="78.5" y="1605" width="4.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="81.47" y="1615.5" ></text>
</g>
<g >
<title>folio_memcg_lock.part.0 (51,355,660 samples, 0.50%)</title><rect x="397.9" y="1045" width="5.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="400.93" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="677" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="501" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="239.5" ></text>
</g>
<g >
<title>glob_vector (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1365" width="85.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="569.34" y="1375.5" >glob_vector</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="725" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="735.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (50,508,442 samples, 0.49%)</title><rect x="500.6" y="1429" width="5.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="503.60" y="1439.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (102,568,763 samples, 1.00%)</title><rect x="415.4" y="1349" width="11.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="418.44" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="533" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,884,862 samples, 0.03%)</title><rect x="178.3" y="85" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="181.34" y="95.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1445" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="181.96" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1157" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="421" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,504,243 samples, 0.05%)</title><rect x="165.6" y="69" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="168.63" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="917" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="927.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1493" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="534.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,403,713 samples, 0.47%)</title><rect x="84.4" y="1205" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="517" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1477" width="41.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="365.64" y="1487.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="613" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="85" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="95.5" ></text>
</g>
<g >
<title>execute_command_internal (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1461" width="66.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="655.22" y="1471.5" >execute..</text>
</g>
<g >
<title>worker (541,820,639 samples, 5.29%)</title><rect x="179.3" y="1573" width="62.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="182.31" y="1583.5" >worker</text>
</g>
<g >
<title>alloc_pages (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1237" width="5.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="418.44" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1301" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1311.5" ></text>
</g>
<g >
<title>block_invalidate_folio (102,889,870 samples, 1.00%)</title><rect x="392.0" y="1157" width="11.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="394.99" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1493" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1503.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1285" width="11.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="324.78" y="1295.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1253" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1263.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="165" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="837" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1397" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="293" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1493" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="243.71" y="1503.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (50,404,685 samples, 0.49%)</title><rect x="494.8" y="1333" width="5.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="497.80" y="1343.5" ></text>
</g>
<g >
<title>operator new (3,877,369 samples, 0.04%)</title><rect x="89.6" y="1109" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="92.55" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="885" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1141" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="389" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="437" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="447.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1269" width="5.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="418.44" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="949" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="959.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1573" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="181.96" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (104,844,485 samples, 1.02%)</title><rect x="166.3" y="69" width="12.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="169.26" y="79.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1221" width="5.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="486.19" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,669,548,688 samples, 16.29%)</title><rect x="876.8" y="1525" width="192.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="879.81" y="1535.5" >cpuidle_enter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1029" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1039.5" ></text>
</g>
<g >
<title>search_binary_handler (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1493" width="7.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="244.70" y="1503.5" ></text>
</g>
<g >
<title>node (1,491,102,641 samples, 14.55%)</title><rect x="77.0" y="1621" width="171.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="80.00" y="1631.5" >node</text>
</g>
<g >
<title>command_substitute (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1237" width="66.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="655.22" y="1247.5" >command..</text>
</g>
<g >
<title>execute_command_internal (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1333" width="66.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="655.22" y="1343.5" >execute..</text>
</g>
<g >
<title>x86_64_start_kernel (416,849,382 samples, 4.07%)</title><rect x="1142.0" y="1589" width="48.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1145.00" y="1599.5" >x86_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1237" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="277" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="693" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="437" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="447.5" ></text>
</g>
<g >
<title>uv__fs_work (6,826,568 samples, 0.07%)</title><rect x="240.7" y="1557" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="243.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1189" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="101" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="805" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,791,512 samples, 0.03%)</title><rect x="78.2" y="1589" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="81.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1253" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1263.5" ></text>
</g>
<g >
<title>path_lookupat (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1413" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="741" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="885" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="645" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1237" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="869" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="879.5" ></text>
</g>
<g >
<title>page_cache_async_ra (382,629,978 samples, 3.73%)</title><rect x="427.3" y="1349" width="44.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="430.25" y="1359.5" >page..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="837" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="847.5" ></text>
</g>
<g >
<title>__poll (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1525" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="181.96" y="1535.5" ></text>
</g>
<g >
<title>ct_kernel_exit_state (2,907,137 samples, 0.03%)</title><rect x="877.1" y="1477" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="880.14" y="1487.5" ></text>
</g>
<g >
<title>__do_sys_clone (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1397" width="3.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="81.47" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="469" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="325" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="335.5" ></text>
</g>
<g >
<title>try_charge_memcg (50,391,746 samples, 0.49%)</title><rect x="457.7" y="1221" width="5.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="460.67" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="981" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="991.5" ></text>
</g>
<g >
<title>zap_pte_range (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1317" width="7.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="244.70" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,638,765 samples, 0.06%)</title><rect x="165.0" y="85" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="95.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1557" width="7.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="244.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1077" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1087.5" ></text>
</g>
<g >
<title>filemap_add_folio (314,563,555 samples, 3.07%)</title><rect x="427.3" y="1285" width="36.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="430.25" y="1295.5" >fil..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1317" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="789" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1157" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1167.5" ></text>
</g>
<g >
<title>page_cache_ra_order (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1301" width="5.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="418.44" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (687,418,442 samples, 6.71%)</title><rect x="83.5" y="1461" width="79.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.48" y="1471.5" >std::__de..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (3,079,631 samples, 0.03%)</title><rect x="179.0" y="1557" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="181.96" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="453" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1381" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1391.5" ></text>
</g>
<g >
<title>ls (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1621" width="4.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="75.85" y="1631.5" ></text>
</g>
<g >
<title>enqueue_entity (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1445" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1072.05" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="245" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1221" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="639.5" ></text>
</g>
<g >
<title>cfree (3,229,392 samples, 0.03%)</title><rect x="82.8" y="1493" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="85.80" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1157" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="437" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1317" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1125" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="869" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="997" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1007.5" ></text>
</g>
<g >
<title>futex_wait (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1541" width="58.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="820.72" y="1551.5" >futex_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1493" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="167.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1301" width="78.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="86.89" y="1311.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1445" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,638,765 samples, 0.06%)</title><rect x="165.0" y="37" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1461" width="11.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="534.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="677" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="687.5" ></text>
</g>
<g >
<title>folio_memcg_lock (51,355,660 samples, 0.50%)</title><rect x="397.9" y="1061" width="5.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="400.93" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1349" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,638,765 samples, 0.06%)</title><rect x="165.0" y="53" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="63.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (50,380,409 samples, 0.49%)</title><rect x="489.0" y="1317" width="5.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="492.00" y="1327.5" ></text>
</g>
<g >
<title>__dentry_kill (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1301" width="41.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="365.64" y="1311.5" >__d..</text>
</g>
<g >
<title>do_user_addr_fault (2,390,514 samples, 0.02%)</title><rect x="82.2" y="1557" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="85.20" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (201,811,587 samples, 1.97%)</title><rect x="339.4" y="1541" width="23.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="342.40" y="1551.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (48,403,713 samples, 0.47%)</title><rect x="84.4" y="1173" width="5.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="1183.5" ></text>
</g>
<g >
<title>unmap_page_range (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1301" width="11.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="324.78" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1173" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="133" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_execve (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1493" width="67.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="251.69" y="1503.5" >__x64_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="85" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="95.5" ></text>
</g>
<g >
<title>[ls] (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1605" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="75.85" y="1615.5" ></text>
</g>
<g >
<title>malloc (3,877,369 samples, 0.04%)</title><rect x="89.6" y="1093" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="92.55" y="1103.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (102,116,761 samples, 1.00%)</title><rect x="374.3" y="1189" width="11.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="377.35" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,759,068 samples, 0.02%)</title><rect x="241.5" y="1525" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="244.50" y="1535.5" ></text>
</g>
<g >
<title>___slab_alloc (50,476,835 samples, 0.49%)</title><rect x="483.2" y="1237" width="5.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="486.19" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="805" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1557" width="62.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >[ld-li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="597" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1493" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1429" width="41.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="365.64" y="1439.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1125" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1135.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (154,021,688 samples, 1.50%)</title><rect x="386.1" y="1173" width="17.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="389.11" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1301" width="85.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="569.34" y="1311.5" >do_syscall..</text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1445" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1455.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,054,279 samples, 0.03%)</title><rect x="85.1" y="293" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="88.06" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="869" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="885" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1525" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="165.96" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1157" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1167.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,872,960 samples, 0.03%)</title><rect x="1069.1" y="1493" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1072.05" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1429" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1439.5" ></text>
</g>
<g >
<title>cfree (2,911,775 samples, 0.03%)</title><rect x="89.2" y="1125" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="92.22" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1125" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1135.5" ></text>
</g>
<g >
<title>__free_one_page (50,919,315 samples, 0.50%)</title><rect x="368.5" y="1109" width="5.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="371.48" y="1119.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1605" width="62.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >[ld-li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="357" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,770,752 samples, 0.38%)</title><rect x="84.4" y="1141" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="591.5" ></text>
</g>
<g >
<title>__pagevec_release (101,668,899 samples, 0.99%)</title><rect x="362.6" y="1189" width="11.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="365.64" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (687,418,442 samples, 6.71%)</title><rect x="83.5" y="1445" width="79.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.48" y="1455.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1221" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1231.5" ></text>
</g>
<g >
<title>execute_command (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1477" width="66.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="655.22" y="1487.5" >execute..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (687,418,442 samples, 6.71%)</title><rect x="83.5" y="1493" width="79.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.48" y="1503.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="549" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="549" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="933" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1045" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1055.5" ></text>
</g>
<g >
<title>seq_read_iter (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1397" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="244.10" y="1407.5" ></text>
</g>
<g >
<title>do_idle (2,303,079,009 samples, 22.47%)</title><rect x="876.8" y="1557" width="265.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="879.81" y="1567.5" >do_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,403,713 samples, 0.47%)</title><rect x="84.4" y="1189" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1589" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="181.67" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (3,877,369 samples, 0.04%)</title><rect x="89.6" y="1125" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="92.55" y="1135.5" ></text>
</g>
<g >
<title>memcmp (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1349" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="244.29" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1125" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1135.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,669,548,688 samples, 16.29%)</title><rect x="876.8" y="1509" width="192.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="879.81" y="1519.5" >cpuidle_enter_state</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="757" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="767.5" ></text>
</g>
<g >
<title>evict (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1365" width="41.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="365.64" y="1375.5" >evict</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="533" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1141" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1151.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1285" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1295.5" >[bash]</text>
</g>
<g >
<title>exec_binprm (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1509" width="7.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="244.70" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,493,037 samples, 0.17%)</title><rect x="84.4" y="629" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="639.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (50,325,779 samples, 0.49%)</title><rect x="333.6" y="1541" width="5.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="336.61" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1349" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1359.5" ></text>
</g>
<g >
<title>NaClSysUnlinkDecoder (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1573" width="41.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="365.64" y="1583.5" >NaC..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1541" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1551.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1365" width="11.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="324.78" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="885" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="895.5" ></text>
</g>
<g >
<title>exec_binprm (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1429" width="67.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="251.69" y="1439.5" >exec_bi..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,718,338 samples, 0.20%)</title><rect x="84.4" y="741" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="389" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="399.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1221" width="41.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="365.64" y="1231.5" >tru..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1317" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1327.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="661" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1365" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="534.07" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1493" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.96" y="1503.5" ></text>
</g>
<g >
<title>ext4_evict_inode (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1237" width="41.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="365.64" y="1247.5" >ext..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1189" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="805" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1445" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="229" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1477" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (26,824,865 samples, 0.26%)</title><rect x="84.4" y="789" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.43" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1061" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1509" width="4.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="75.85" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="245" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1445" width="11.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="534.07" y="1455.5" ></text>
</g>
<g >
<title>ext4_release_folio (102,889,870 samples, 1.00%)</title><rect x="392.0" y="1125" width="11.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="394.99" y="1135.5" ></text>
</g>
<g >
<title>start_secondary (2,303,079,009 samples, 22.47%)</title><rect x="876.8" y="1589" width="265.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="879.81" y="1599.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1381" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="53" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="789" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="965" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="975.5" ></text>
</g>
<g >
<title>load_elf_binary (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1397" width="67.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="251.69" y="1407.5" >load_el..</text>
</g>
<g >
<title>dentry_unlink_inode (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1285" width="41.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="365.64" y="1295.5" >den..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1525" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="853" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="901" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="911.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,481,119 samples, 0.50%)</title><rect x="321.8" y="1205" width="5.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="324.78" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,493,037 samples, 0.17%)</title><rect x="84.4" y="613" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1413" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1423.5" ></text>
</g>
<g >
<title>kernel_clone (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1381" width="3.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="81.47" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,865,105 samples, 0.03%)</title><rect x="88.6" y="1077" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="91.56" y="1087.5" ></text>
</g>
<g >
<title>uv_spawn (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1525" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="81.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="117" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="341" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1013" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="325" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="335.5" ></text>
</g>
<g >
<title>pte_alloc_one (52,752,550 samples, 0.51%)</title><rect x="471.3" y="1365" width="6.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="474.31" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1205" width="66.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="655.22" y="1215.5" >[libc.s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1573" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1381" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,770,752 samples, 0.38%)</title><rect x="84.4" y="1093" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="405" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="415.5" ></text>
</g>
<g >
<title>ext4_readahead (68,066,423 samples, 0.66%)</title><rect x="463.5" y="1269" width="7.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="466.47" y="1279.5" ></text>
</g>
<g >
<title>begin_new_exec (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1381" width="67.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="251.69" y="1391.5" >begin_n..</text>
</g>
<g >
<title>start_kernel (416,849,382 samples, 4.07%)</title><rect x="1142.0" y="1573" width="48.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1145.00" y="1583.5" >star..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1541" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1551.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1573" width="3.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="81.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1285" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="773" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,468,748 samples, 1.48%)</title><rect x="345.2" y="1509" width="17.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="348.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1173" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="357" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="367.5" ></text>
</g>
<g >
<title>inode_permission (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1349" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="165.96" y="1359.5" ></text>
</g>
<g >
<title>proc_pid_readlink (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1429" width="4.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="75.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="517" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="527.5" ></text>
</g>
<g >
<title>filemap_fault (485,198,741 samples, 4.73%)</title><rect x="415.4" y="1365" width="55.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="418.44" y="1375.5" >filem..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1077" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1045" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1055.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,205,743,816 samples, 11.77%)</title><rect x="403.8" y="1557" width="138.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="406.84" y="1567.5" >NaClSysWrite</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (50,380,409 samples, 0.49%)</title><rect x="489.0" y="1301" width="5.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="492.00" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1333" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="869" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="117" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="837" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="757" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="245" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="255.5" ></text>
</g>
<g >
<title>filemap_free_folio (50,720,911 samples, 0.49%)</title><rect x="374.3" y="1173" width="5.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="377.35" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="869" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1509" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="243.71" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,911,295 samples, 0.14%)</title><rect x="164.7" y="1557" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1567.5" ></text>
</g>
<g >
<title>filemap_add_folio (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1285" width="6.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="424.31" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="709" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="645" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1333" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1343.5" ></text>
</g>
<g >
<title>finish_fault (50,404,685 samples, 0.49%)</title><rect x="494.8" y="1381" width="5.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="497.80" y="1391.5" ></text>
</g>
<g >
<title>free_unref_page_commit (50,919,315 samples, 0.50%)</title><rect x="368.5" y="1141" width="5.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="371.48" y="1151.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1477" width="11.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="534.07" y="1487.5" ></text>
</g>
<g >
<title>iput (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1269" width="41.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="365.64" y="1279.5" >iput</text>
</g>
<g >
<title>ondemand_readahead (382,629,978 samples, 3.73%)</title><rect x="427.3" y="1333" width="44.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="430.25" y="1343.5" >onde..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (698,969,078 samples, 6.82%)</title><rect x="82.5" y="1509" width="80.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="85.48" y="1519.5" >std::__de..</text>
</g>
<g >
<title>seq_read (1,692,785 samples, 0.02%)</title><rect x="241.1" y="1413" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="244.10" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1061" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1413" width="11.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="324.78" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="469" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="357" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="367.5" ></text>
</g>
<g >
<title>rest_init (416,849,382 samples, 4.07%)</title><rect x="1142.0" y="1541" width="48.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1145.00" y="1551.5" >rest..</text>
</g>
<g >
<title>page_cache_ra_unbounded (50,984,389 samples, 0.50%)</title><rect x="415.4" y="1285" width="5.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="418.44" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1573" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1583.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (704,898,635 samples, 6.88%)</title><rect x="82.5" y="1557" width="81.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="85.48" y="1567.5" >InotifyBa..</text>
</g>
<g >
<title>perf-exec (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1621" width="67.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="251.69" y="1631.5" >perf-exec</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (545,797,373 samples, 5.33%)</title><rect x="10.0" y="1541" width="62.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >[ld-li..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1333" width="7.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="244.70" y="1343.5" ></text>
</g>
<g >
<title>__filemap_add_folio (314,563,555 samples, 3.07%)</title><rect x="427.3" y="1269" width="36.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="430.25" y="1279.5" >__f..</text>
</g>
<g >
<title>futex_wake (3,131,664 samples, 0.03%)</title><rect x="164.3" y="1429" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="167.30" y="1439.5" ></text>
</g>
<g >
<title>idr_get_next (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1189" width="85.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="569.34" y="1199.5" >idr_get_next</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="181" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1557" width="67.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="251.69" y="1567.5" >[libc.s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="1141" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1365" width="78.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="86.89" y="1375.5" >std::__de..</text>
</g>
<g >
<title>futex_wait_queue (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1525" width="58.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="820.72" y="1535.5" >futex_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="277" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="117" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="127.5" ></text>
</g>
<g >
<title>ksys_read (5,067,500 samples, 0.05%)</title><rect x="240.7" y="1461" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="243.71" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1589" width="7.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="244.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1413" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="917" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_list (101,668,899 samples, 0.99%)</title><rect x="362.6" y="1157" width="11.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="365.64" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,524,492 samples, 0.32%)</title><rect x="84.4" y="1029" width="3.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="565" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="575.5" ></text>
</g>
<g >
<title>path_lookupat (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1413" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="244.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,901,044 samples, 0.12%)</title><rect x="84.7" y="389" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="805" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1525" width="11.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="534.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="309" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1109" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1119.5" ></text>
</g>
<g >
<title>operator new (3,171,897 samples, 0.03%)</title><rect x="85.4" y="277" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="88.41" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2,821,974 samples, 0.03%)</title><rect x="164.0" y="1541" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="166.98" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (100,791,837 samples, 0.98%)</title><rect x="531.1" y="1397" width="11.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="534.07" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1333" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="1343.5" ></text>
</g>
<g >
<title>get_mm_cmdline (3,374,715 samples, 0.03%)</title><rect x="240.7" y="1413" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="243.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="261" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="501" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="149" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1461" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1471.5" ></text>
</g>
<g >
<title>lind_unlink (357,807,348 samples, 3.49%)</title><rect x="362.6" y="1541" width="41.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="365.64" y="1551.5" >lin..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1061" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="373" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (3,047,551 samples, 0.03%)</title><rect x="87.2" y="741" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="90.17" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1333" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1343.5" >std::__de..</text>
</g>
<g >
<title>update_rq_clock (629,103,554 samples, 6.14%)</title><rect x="1069.4" y="1493" width="72.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1072.38" y="1503.5" >update_r..</text>
</g>
<g >
<title>[libc.so.6] (2,925,366 samples, 0.03%)</title><rect x="162.3" y="1365" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1269" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1279.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1317" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1327.5" >[bash]</text>
</g>
<g >
<title>filename_lookup (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1429" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="244.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1077" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1087.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1573" width="11.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="324.78" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1589" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="469" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="479.5" ></text>
</g>
<g >
<title>[bash] (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1493" width="152.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="569.34" y="1503.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="677" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="581" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1253" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1263.5" ></text>
</g>
<g >
<title>_Fork (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1461" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="81.47" y="1471.5" ></text>
</g>
<g >
<title>mmput (60,735,431 samples, 0.59%)</title><rect x="241.7" y="1429" width="7.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="244.70" y="1439.5" ></text>
</g>
<g >
<title>malloc (3,171,897 samples, 0.03%)</title><rect x="85.4" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="88.41" y="271.5" ></text>
</g>
<g >
<title>try_to_free_buffers (51,355,660 samples, 0.50%)</title><rect x="397.9" y="1093" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="400.93" y="1103.5" ></text>
</g>
<g >
<title>readlink (36,042,078 samples, 0.35%)</title><rect x="72.8" y="1525" width="4.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="75.85" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="149" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="159.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (2,726,378 samples, 0.03%)</title><rect x="163.3" y="1525" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="166.33" y="1535.5" ></text>
</g>
<g >
<title>do_idle (416,737,356 samples, 4.07%)</title><rect x="1142.0" y="1509" width="48.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1145.00" y="1519.5" >do_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1093" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1103.5" ></text>
</g>
<g >
<title>_start (1,319,489,809 samples, 12.88%)</title><rect x="566.3" y="1605" width="152.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="569.34" y="1615.5" >_start</text>
</g>
<g >
<title>do_syscall_64 (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1429" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="81.47" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="421" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1141" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="757" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="293" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="303.5" ></text>
</g>
<g >
<title>uv_cond_wait (1,759,068 samples, 0.02%)</title><rect x="241.5" y="1557" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="244.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="277" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1221" width="3.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="81.47" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="261" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,768,287 samples, 0.03%)</title><rect x="164.7" y="629" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.66" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1125" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1135.5" ></text>
</g>
<g >
<title>walk_component (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1397" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="244.29" y="1407.5" ></text>
</g>
<g >
<title>membarrier_exec_mmap (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1365" width="67.3" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="251.69" y="1375.5" >membarr..</text>
</g>
<g >
<title>arch_call_rest_init (416,849,382 samples, 4.07%)</title><rect x="1142.0" y="1557" width="48.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1145.00" y="1567.5" >arch..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="229" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="239.5" ></text>
</g>
<g >
<title>user_path_at_empty (1,759,068 samples, 0.02%)</title><rect x="241.3" y="1445" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="244.29" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (680,935,403 samples, 6.64%)</title><rect x="83.9" y="1381" width="78.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="86.89" y="1391.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="133" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="143.5" ></text>
</g>
<g >
<title>do_page_mkwrite (151,237,052 samples, 1.48%)</title><rect x="477.4" y="1381" width="17.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="480.39" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1477" width="1.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="167.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="1045" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="1055.5" ></text>
</g>
<g >
<title>error_entry (55,021,928 samples, 0.54%)</title><rect x="506.4" y="1493" width="6.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="509.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1189" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="405" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="415.5" ></text>
</g>
<g >
<title>operator delete@plt (627,819,446 samples, 6.13%)</title><rect x="90.0" y="1189" width="72.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="93.00" y="1199.5" >operator..</text>
</g>
<g >
<title>do_set_pte (50,404,685 samples, 0.49%)</title><rect x="494.8" y="1365" width="5.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="497.80" y="1375.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child_fork (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1493" width="3.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="81.47" y="1503.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (382,629,978 samples, 3.73%)</title><rect x="427.3" y="1301" width="44.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="430.25" y="1311.5" >page..</text>
</g>
<g >
<title>idr_get_next_ul (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1173" width="85.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="569.34" y="1183.5" >idr_get_ne..</text>
</g>
<g >
<title>[libc.so.6] (2,911,775 samples, 0.03%)</title><rect x="89.2" y="1109" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="92.22" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (3,225,301 samples, 0.03%)</title><rect x="86.4" y="613" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="89.44" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="613" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="133" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,667,605 samples, 0.14%)</title><rect x="84.4" y="549" width="1.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="1253" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="1263.5" ></text>
</g>
<g >
<title>pthread_cond_wait (1,759,068 samples, 0.02%)</title><rect x="241.5" y="1541" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="244.50" y="1551.5" ></text>
</g>
<g >
<title>execute_command (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1381" width="66.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="655.22" y="1391.5" >execute..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1477" width="67.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="251.69" y="1487.5" >do_exec..</text>
</g>
<g >
<title>shell_glob_filename (745,833,074 samples, 7.28%)</title><rect x="566.3" y="1429" width="85.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="569.34" y="1439.5" >shell_glob..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,143,008 samples, 0.11%)</title><rect x="165.0" y="181" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.98" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1013" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.34" y="1023.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (51,584,374 samples, 0.50%)</title><rect x="421.3" y="1301" width="6.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="424.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="933" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="943.5" ></text>
</g>
<g >
<title>[bash] (573,656,735 samples, 5.60%)</title><rect x="652.2" y="1349" width="66.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="655.22" y="1359.5" >[bash]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="341" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1477" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="197" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,632,961 samples, 0.09%)</title><rect x="88.9" y="1141" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="91.89" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,403,713 samples, 0.47%)</title><rect x="84.4" y="1157" width="5.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1167.5" ></text>
</g>
<g >
<title>native_sched_clock (416,083,037 samples, 4.06%)</title><rect x="1142.0" y="1413" width="48.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1145.04" y="1423.5" >nati..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (3,203,179 samples, 0.03%)</title><rect x="163.0" y="1397" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="165.96" y="1407.5" ></text>
</g>
<g >
<title>dequeue_task (511,228,631 samples, 4.99%)</title><rect x="817.7" y="1477" width="58.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="820.72" y="1487.5" >dequeu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (104,844,485 samples, 1.02%)</title><rect x="166.3" y="549" width="12.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.26" y="559.5" ></text>
</g>
<g >
<title>unmap_region (102,723,544 samples, 1.00%)</title><rect x="321.8" y="1349" width="11.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="324.78" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,884,862 samples, 0.03%)</title><rect x="178.3" y="1557" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.34" y="1567.5" ></text>
</g>
<g >
<title>uv__spawn_and_init_child (32,376,655 samples, 0.32%)</title><rect x="78.5" y="1509" width="3.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="81.47" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,844,485 samples, 1.02%)</title><rect x="166.3" y="517" width="12.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="169.26" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,390,514 samples, 0.02%)</title><rect x="178.7" y="709" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="181.67" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,226,176 samples, 0.06%)</title><rect x="85.1" y="309" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="88.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,768,287 samples, 0.03%)</title><rect x="164.7" y="869" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="167.66" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (584,281,349 samples, 5.70%)</title><rect x="248.7" y="1509" width="67.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="251.69" y="1519.5" >do_sysc..</text>
</g>
<g >
<title>ondemand_readahead (102,568,763 samples, 1.00%)</title><rect x="415.4" y="1317" width="11.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="418.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,824,865 samples, 0.26%)</title><rect x="84.4" y="1013" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="87.43" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,390,514 samples, 0.02%)</title><rect x="178.7" y="1381" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="181.67" y="1391.5" ></text>
</g>
</g>
</svg>
