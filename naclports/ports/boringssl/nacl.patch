diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,9 +16,9 @@ if (NOT GO_EXECUTABLE)
   message(FATAL_ERROR "Could not find Go")
 endif()
 
-if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR CMAKE_SYSTEM_PROCESSOR MATCHES "pnacl")
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror -Wsign-compare -Wmissing-field-initializers -ggdb -fvisibility=hidden")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror -Wsign-compare -Wmissing-field-initializers -ggdb -std=c++0x -fvisibility=hidden")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror -Wsign-compare -Wmissing-field-initializers -ggdb -std=gnu++0x -fvisibility=hidden")
 elseif(MSVC)
   set(MSVC_DISABLED_WARNINGS_LIST
       "C4100" # 'exarg' : unreferenced formal parameter
@@ -91,6 +91,15 @@ if(FUZZ)
   link_directories(.)
 endif()
 
+if (NACL)
+  add_definitions(-DOPENSSL_NO_ASM)
+  if (NACL_LIBC STREQUAL newlib)
+    link_libraries(glibc-compat)
+  endif()
+  SET(CMAKE_CXX_FLAGS_RELEASE "-O2")
+  SET(CMAKE_C_FLAGS_RELEASE "-O2")
+endif()
+
 add_definitions(-DBORINGSSL_IMPLEMENTATION)
 
 if (BUILD_SHARED_LIBS)
@@ -125,6 +134,8 @@ elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "armv7-a")
   set(ARCH "arm")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64")
   set(ARCH "aarch64")
+elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "pnacl")
+  set(ARCH "pnacl")
 else()
   message(FATAL_ERROR "Unknown processor:" ${CMAKE_SYSTEM_PROCESSOR})
 endif()
@@ -155,7 +166,9 @@ add_custom_target(all_tests)
 add_subdirectory(crypto)
 add_subdirectory(ssl)
 add_subdirectory(ssl/test)
-add_subdirectory(tool)
+if (NOT NACL)
+  add_subdirectory(tool)
+endif()
 add_subdirectory(decrepit)
 
 if(FUZZ)
diff --git a/crypto/bio/printf.c b/crypto/bio/printf.c
--- a/crypto/bio/printf.c
+++ b/crypto/bio/printf.c
@@ -58,6 +58,12 @@
 #define _POSIX_C_SOURCE 201410L  /* for snprintf, vprintf etc */
 #endif
 
+#if defined(__native_client__) && !defined(__pnacl__)
+/* native client toolchains fail to define vsnprintf/strdup/etc if only
+ * _POSIX_C_SOURCE is defined */
+#define _GNU_SOURCE 1
+#endif
+
 #include <openssl/bio.h>
 
 #include <assert.h>
diff --git a/crypto/lhash/lhash_test.c b/crypto/lhash/lhash_test.c
--- a/crypto/lhash/lhash_test.c
+++ b/crypto/lhash/lhash_test.c
@@ -16,6 +16,12 @@
 #define _POSIX_C_SOURCE 201410L
 #endif
 
+#if defined(__native_client__) && !defined(__pnacl__)
+/* native client toolchains fail to define vsnprintf/strdup/etc if only
+ * _POSIX_C_SOURCE is defined */
+#define _GNU_SOURCE 1
+#endif
+
 #include <openssl/crypto.h>
 #include <openssl/lhash.h>
 
diff --git a/crypto/mem.c b/crypto/mem.c
--- a/crypto/mem.c
+++ b/crypto/mem.c
@@ -58,6 +58,12 @@
 #define _POSIX_C_SOURCE 201410L  /* needed for strdup, snprintf, vprintf etc */
 #endif
 
+#if defined(__native_client__) && !defined(__pnacl__)
+/* native client toolchains fail to define vsnprintf/strdup/etc if only
+ * _POSIX_C_SOURCE is defined */
+#define _GNU_SOURCE 1
+#endif
+
 #include <openssl/mem.h>
 
 #include <assert.h>
diff --git a/crypto/poly1305/poly1305.c b/crypto/poly1305/poly1305.c
--- a/crypto/poly1305/poly1305.c
+++ b/crypto/poly1305/poly1305.c
@@ -23,7 +23,7 @@
 #include <openssl/cpu.h>
 
 
-#if defined(OPENSSL_WINDOWS) || !defined(OPENSSL_X86_64)
+#if defined(OPENSSL_WINDOWS) || !defined(OPENSSL_X86_64) || defined(OPENSSL_NO_ASM)
 
 #if defined(OPENSSL_X86) || defined(OPENSSL_X86_64) || defined(OPENSSL_ARM)
 /* We can assume little-endian. */
diff --git a/crypto/poly1305/poly1305_vec.c b/crypto/poly1305/poly1305_vec.c
--- a/crypto/poly1305/poly1305_vec.c
+++ b/crypto/poly1305/poly1305_vec.c
@@ -21,7 +21,7 @@
 #include <openssl/poly1305.h>
 
 
-#if !defined(OPENSSL_WINDOWS) && defined(OPENSSL_X86_64)
+#if !defined(OPENSSL_WINDOWS) && !defined(__native_client__) && defined(OPENSSL_X86_64)
 
 #include <emmintrin.h>
 
diff --git a/crypto/rand/urandom.c b/crypto/rand/urandom.c
--- a/crypto/rand/urandom.c
+++ b/crypto/rand/urandom.c
@@ -81,6 +81,7 @@ static void init_once(void) {
     abort();
   }
 
+#ifndef __native_client__
   int flags = fcntl(fd, F_GETFD);
   if (flags == -1) {
     abort();
@@ -89,6 +90,7 @@ static void init_once(void) {
   if (fcntl(fd, F_SETFD, flags) == -1) {
     abort();
   }
+#endif
   urandom_fd = fd;
 }
 
diff --git a/crypto/sha/sha512.c b/crypto/sha/sha512.c
--- a/crypto/sha/sha512.c
+++ b/crypto/sha/sha512.c
@@ -241,7 +241,7 @@ int SHA512_Final(uint8_t *md, SHA512_CTX *sha) {
   p[n] = 0x80; /* There always is a room for one */
   n++;
   if (n > (sizeof(sha->u) - 16)) {
-    memset(p + n, 0, sizeof(sha->u) - n);
+    /*memset(p + n, 0, sizeof(sha->u) - n);*/
     n = 0;
     sha512_block_data_order(sha->h, (uint64_t *)p, 1);
   }
@@ -314,33 +314,46 @@ int SHA512_Final(uint8_t *md, SHA512_CTX *sha) {
 
 #ifndef SHA512_ASM
 static const uint64_t K512[80] = {
-    0x428a2f98d728ae22, 0x7137449123ef65cd, 0xb5c0fbcfec4d3b2f,
-    0xe9b5dba58189dbbc, 0x3956c25bf348b538, 0x59f111f1b605d019,
-    0x923f82a4af194f9b, 0xab1c5ed5da6d8118, 0xd807aa98a3030242,
-    0x12835b0145706fbe, 0x243185be4ee4b28c, 0x550c7dc3d5ffb4e2,
-    0x72be5d74f27b896f, 0x80deb1fe3b1696b1, 0x9bdc06a725c71235,
-    0xc19bf174cf692694, 0xe49b69c19ef14ad2, 0xefbe4786384f25e3,
-    0x0fc19dc68b8cd5b5, 0x240ca1cc77ac9c65, 0x2de92c6f592b0275,
-    0x4a7484aa6ea6e483, 0x5cb0a9dcbd41fbd4, 0x76f988da831153b5,
-    0x983e5152ee66dfab, 0xa831c66d2db43210, 0xb00327c898fb213f,
-    0xbf597fc7beef0ee4, 0xc6e00bf33da88fc2, 0xd5a79147930aa725,
-    0x06ca6351e003826f, 0x142929670a0e6e70, 0x27b70a8546d22ffc,
-    0x2e1b21385c26c926, 0x4d2c6dfc5ac42aed, 0x53380d139d95b3df,
-    0x650a73548baf63de, 0x766a0abb3c77b2a8, 0x81c2c92e47edaee6,
-    0x92722c851482353b, 0xa2bfe8a14cf10364, 0xa81a664bbc423001,
-    0xc24b8b70d0f89791, 0xc76c51a30654be30, 0xd192e819d6ef5218,
-    0xd69906245565a910, 0xf40e35855771202a, 0x106aa07032bbd1b8,
-    0x19a4c116b8d2d0c8, 0x1e376c085141ab53, 0x2748774cdf8eeb99,
-    0x34b0bcb5e19b48a8, 0x391c0cb3c5c95a63, 0x4ed8aa4ae3418acb,
-    0x5b9cca4f7763e373, 0x682e6ff3d6b2b8a3, 0x748f82ee5defb2fc,
-    0x78a5636f43172f60, 0x84c87814a1f0ab72, 0x8cc702081a6439ec,
-    0x90befffa23631e28, 0xa4506cebde82bde9, 0xbef9a3f7b2c67915,
-    0xc67178f2e372532b, 0xca273eceea26619c, 0xd186b8c721c0c207,
-    0xeada7dd6cde0eb1e, 0xf57d4f7fee6ed178, 0x06f067aa72176fba,
-    0x0a637dc5a2c898a6, 0x113f9804bef90dae, 0x1b710b35131c471b,
-    0x28db77f523047d84, 0x32caab7b40c72493, 0x3c9ebe0a15c9bebc,
-    0x431d67c49c100d4c, 0x4cc5d4becb3e42b6, 0x597f299cfc657e2a,
-    0x5fcb6fab3ad6faec, 0x6c44198c4a475817};
+    UINT64_C(0x428a2f98d728ae22), UINT64_C(0x7137449123ef65cd),
+    UINT64_C(0xb5c0fbcfec4d3b2f), UINT64_C(0xe9b5dba58189dbbc),
+    UINT64_C(0x3956c25bf348b538), UINT64_C(0x59f111f1b605d019),
+    UINT64_C(0x923f82a4af194f9b), UINT64_C(0xab1c5ed5da6d8118),
+    UINT64_C(0xd807aa98a3030242), UINT64_C(0x12835b0145706fbe),
+    UINT64_C(0x243185be4ee4b28c), UINT64_C(0x550c7dc3d5ffb4e2),
+    UINT64_C(0x72be5d74f27b896f), UINT64_C(0x80deb1fe3b1696b1),
+    UINT64_C(0x9bdc06a725c71235), UINT64_C(0xc19bf174cf692694),
+    UINT64_C(0xe49b69c19ef14ad2), UINT64_C(0xefbe4786384f25e3),
+    UINT64_C(0x0fc19dc68b8cd5b5), UINT64_C(0x240ca1cc77ac9c65),
+    UINT64_C(0x2de92c6f592b0275), UINT64_C(0x4a7484aa6ea6e483),
+    UINT64_C(0x5cb0a9dcbd41fbd4), UINT64_C(0x76f988da831153b5),
+    UINT64_C(0x983e5152ee66dfab), UINT64_C(0xa831c66d2db43210),
+    UINT64_C(0xb00327c898fb213f), UINT64_C(0xbf597fc7beef0ee4),
+    UINT64_C(0xc6e00bf33da88fc2), UINT64_C(0xd5a79147930aa725),
+    UINT64_C(0x06ca6351e003826f), UINT64_C(0x142929670a0e6e70),
+    UINT64_C(0x27b70a8546d22ffc), UINT64_C(0x2e1b21385c26c926),
+    UINT64_C(0x4d2c6dfc5ac42aed), UINT64_C(0x53380d139d95b3df),
+    UINT64_C(0x650a73548baf63de), UINT64_C(0x766a0abb3c77b2a8),
+    UINT64_C(0x81c2c92e47edaee6), UINT64_C(0x92722c851482353b),
+    UINT64_C(0xa2bfe8a14cf10364), UINT64_C(0xa81a664bbc423001),
+    UINT64_C(0xc24b8b70d0f89791), UINT64_C(0xc76c51a30654be30),
+    UINT64_C(0xd192e819d6ef5218), UINT64_C(0xd69906245565a910),
+    UINT64_C(0xf40e35855771202a), UINT64_C(0x106aa07032bbd1b8),
+    UINT64_C(0x19a4c116b8d2d0c8), UINT64_C(0x1e376c085141ab53),
+    UINT64_C(0x2748774cdf8eeb99), UINT64_C(0x34b0bcb5e19b48a8),
+    UINT64_C(0x391c0cb3c5c95a63), UINT64_C(0x4ed8aa4ae3418acb),
+    UINT64_C(0x5b9cca4f7763e373), UINT64_C(0x682e6ff3d6b2b8a3),
+    UINT64_C(0x748f82ee5defb2fc), UINT64_C(0x78a5636f43172f60),
+    UINT64_C(0x84c87814a1f0ab72), UINT64_C(0x8cc702081a6439ec),
+    UINT64_C(0x90befffa23631e28), UINT64_C(0xa4506cebde82bde9),
+    UINT64_C(0xbef9a3f7b2c67915), UINT64_C(0xc67178f2e372532b),
+    UINT64_C(0xca273eceea26619c), UINT64_C(0xd186b8c721c0c207),
+    UINT64_C(0xeada7dd6cde0eb1e), UINT64_C(0xf57d4f7fee6ed178),
+    UINT64_C(0x06f067aa72176fba), UINT64_C(0x0a637dc5a2c898a6),
+    UINT64_C(0x113f9804bef90dae), UINT64_C(0x1b710b35131c471b),
+    UINT64_C(0x28db77f523047d84), UINT64_C(0x32caab7b40c72493),
+    UINT64_C(0x3c9ebe0a15c9bebc), UINT64_C(0x431d67c49c100d4c),
+    UINT64_C(0x4cc5d4becb3e42b6), UINT64_C(0x597f299cfc657e2a),
+    UINT64_C(0x5fcb6fab3ad6faec), UINT64_C(0x6c44198c4a475817)};
 
 #if defined(__GNUC__) && __GNUC__ >= 2 && !defined(OPENSSL_NO_ASM)
 #if defined(__x86_64) || defined(__x86_64__)
diff --git a/crypto/x509/x509_trs.c b/crypto/x509/x509_trs.c
--- a/crypto/x509/x509_trs.c
+++ b/crypto/x509/x509_trs.c
@@ -236,8 +236,8 @@ static void trtable_free(X509_TRUST *p)
 
 void X509_TRUST_cleanup(void)
 {
-	unsigned int i;
-	for(i = 0; i < X509_TRUST_COUNT; i++) trtable_free(trstandard + i);
+	/* unsigned int i; */
+	/* for(i = 0; i < X509_TRUST_COUNT; i++) trtable_free(trstandard + i); */
 	sk_X509_TRUST_pop_free(trtable, trtable_free);
 	trtable = NULL;
 }
diff --git a/crypto/x509v3/v3_purp.c b/crypto/x509v3/v3_purp.c
--- a/crypto/x509v3/v3_purp.c
+++ b/crypto/x509v3/v3_purp.c
@@ -268,9 +268,9 @@ static void xptable_free(X509_PURPOSE *p)
 
 void X509_PURPOSE_cleanup(void)
 {
-	unsigned int i;
+	/* unsigned int i; */
 	sk_X509_PURPOSE_pop_free(xptable, xptable_free);
-	for(i = 0; i < X509_PURPOSE_COUNT; i++) xptable_free(xstandard + i);
+	/*for(i = 0; i < X509_PURPOSE_COUNT; i++) xptable_free(&xstandard[i]); */
 	xptable = NULL;
 }
 
diff --git a/include/openssl/base.h b/include/openssl/base.h
--- a/include/openssl/base.h
+++ b/include/openssl/base.h
@@ -68,8 +68,12 @@ extern "C" {
 
 
 #if defined(__x86_64) || defined(_M_AMD64) || defined(_M_X64)
-#define OPENSSL_64_BIT
 #define OPENSSL_X86_64
+#ifndef __LP64__
+#define OPENSSL_32_BIT
+#else
+#define OPENSSL_64_BIT
+#endif
 #elif defined(__x86) || defined(__i386) || defined(__i386__) || defined(_M_IX86)
 #define OPENSSL_32_BIT
 #define OPENSSL_X86
diff --git a/ssl/test/packeted_bio.h b/ssl/test/packeted_bio.h
--- a/ssl/test/packeted_bio.h
+++ b/ssl/test/packeted_bio.h
@@ -25,7 +25,7 @@
 #include <winsock2.h>
 #pragma warning(pop)
 #else
-#include <sys/types.h>
+#include <sys/time.h>
 #endif
 
 
