# This is a basic workflow to help you get started with Actions

name: Rust Install Testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '*' # [ master ]
  pull_request:
    branches: '*' # [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # Runs a single command using the runners shell
      - name: Run a one-line script.
        run: echo Hello, world!
        
          

      # Runs a set of commands using the runners shell
      - name: View rust versions
        run: |
          cargo -V
          rustup -Version


#         bash -c "docker build --build-arg=BRANCH=github-actions -t securesystemslab/lind ."
#         docker run --ipc=host --cap-add=SYS_PTRACE -it securesystemslab/lind lind /bin/bash -c 'a="regex_test_string"; [[ $a =~ reg.*ng$ ]] && echo "string matched; exec /fork"'
#         docker run --ipc=host --cap-add=SYS_PTRACE -it securesystemslab/lind lind "make test"
      - name: Build docker and run a test case.
        run: |
          cd ./src/safeposix-rust
          ls
          cat Cargo.toml
          echo Done1
