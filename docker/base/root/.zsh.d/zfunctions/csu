
	[[ ${#} -ge 1 ]] && {
		echo " [running:] su -c \""${*}"\" ";
		sudo su -c "$*" && return 0 || echo " error: multiple or incorrect commands entered."; }
	echo -ne " [please enter \";\" delimited root commands:] (i.e.: \`cmd1; cmd2...\`) "; read -r
	## IFS safety net
	IFSbackup=${IFS}
	cstring=$(sed -r '
		:loop
		s_[; \t]*(;)[; \t]* _\1_g
		s_[ \t]*(;)[ \t]* _\1_g
		/$/!b loop' <<< ${REPLY})
	## Set temporary IFS and convert ${cstring} to ${carray[@]}
	IFS=; read -r -A carray <<< ${cstring}
	echo -ne "\n"
	printf '%s\n' 'running the following commands as root:' \
		`tr ';' '\n' <<< ${carray[@]} | sed -r 's/^(..*)/ \1/'`
	printf '%b' 'starting "su -c" command execution...\n\n'
		{ for i in $carray[@]; do sudo su -c ${i}; done; } && return 0 || return 1
	## Old commands
	if true; then
		return 10
	else
		[[ ! -z ${*} && ${#} -eq 1 ]] && {
		echo -e " running: 'su -c \"${*}\"'";
		sudo su -c "$*";
		return 10; }
		[[ ${#} -ge 2 ]] && printf '%b' ' command input too ambiguous!\n continuing script....\n'
		while IFS=';' read -r cmd; do sudo su -c '"'${cmd}'"'; done <<< "${ans}"
		carray=( printf '%s' "$*" )
		for i in "${carray[@]}" ; do
			command='"'${i}'"'
			sudo su -c "${command}"
			done
		carray=(`printf '%s' "${rcom}" | sed -r '
		:loop
		s_(;)[; \t]* _\1_g
		s_[ \t]*(;)[ \t]* _\1_g
		/$/!b loop' | tr ';' '\n'`)
		for i in "${carray[@]}" ; do
		command='"'${i}'"'
		sudo su -c "${command}"
		done
		for i in ${carray[@]}; do
			scommand="sudo su -c \""${i}"\""
		#scommand=${scommand}${i}
		#scommand=${scommand}'"'
		#[[ -x $(which bash) ]] && bash -c ${scommand} || sh -c ${scommand}
		done
		return 20
	fi

