<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="162.5" y="133" width="1.2" height="15.0" fill="rgb(246,140,28)" rx="2" ry="2" />
<text  x="165.46" y="143.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="15.1" y="389" width="1.3" height="15.0" fill="rgb(252,93,22)" rx="2" ry="2" />
<text  x="18.12" y="399.5" ></text>
</g>
<g >
<title>execute_command (3 samples, 0.33%)</title><rect x="11.3" y="389" width="3.8" height="15.0" fill="rgb(252,173,16)" rx="2" ry="2" />
<text  x="14.28" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="340.6" y="261" width="1.2" height="15.0" fill="rgb(236,138,8)" rx="2" ry="2" />
<text  x="343.55" y="271.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.11%)</title><rect x="121.5" y="117" width="1.2" height="15.0" fill="rgb(238,98,3)" rx="2" ry="2" />
<text  x="124.47" y="127.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.11%)</title><rect x="1149.0" y="309" width="1.3" height="15.0" fill="rgb(238,33,45)" rx="2" ry="2" />
<text  x="1152.00" y="319.5" ></text>
</g>
<g >
<title>__wake_up (6 samples, 0.65%)</title><rect x="157.3" y="165" width="7.7" height="15.0" fill="rgb(227,43,23)" rx="2" ry="2" />
<text  x="160.34" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.22%)</title><rect x="487.9" y="405" width="2.6" height="15.0" fill="rgb(227,174,34)" rx="2" ry="2" />
<text  x="490.89" y="415.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.11%)</title><rect x="486.6" y="245" width="1.3" height="15.0" fill="rgb(228,96,46)" rx="2" ry="2" />
<text  x="489.61" y="255.5" ></text>
</g>
<g >
<title>wake_q_add (1 samples, 0.11%)</title><rect x="1078.5" y="373" width="1.3" height="15.0" fill="rgb(248,78,16)" rx="2" ry="2" />
<text  x="1081.53" y="383.5" ></text>
</g>
<g >
<title>tty_ioctl (1 samples, 0.11%)</title><rect x="12.6" y="149" width="1.2" height="15.0" fill="rgb(247,33,28)" rx="2" ry="2" />
<text  x="15.56" y="159.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.33%)</title><rect x="63.8" y="85" width="3.9" height="15.0" fill="rgb(219,114,41)" rx="2" ry="2" />
<text  x="66.81" y="95.5" ></text>
</g>
<g >
<title>smp_call_function_single (78 samples, 8.47%)</title><rect x="505.8" y="277" width="100.0" height="15.0" fill="rgb(254,86,47)" rx="2" ry="2" />
<text  x="508.83" y="287.5" >smp_call_fun..</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.11%)</title><rect x="1154.1" y="229" width="1.3" height="15.0" fill="rgb(224,148,53)" rx="2" ry="2" />
<text  x="1157.13" y="239.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.11%)</title><rect x="1143.9" y="325" width="1.3" height="15.0" fill="rgb(250,45,17)" rx="2" ry="2" />
<text  x="1146.88" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.11%)</title><rect x="31.8" y="165" width="1.3" height="15.0" fill="rgb(216,121,5)" rx="2" ry="2" />
<text  x="34.78" y="175.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.11%)</title><rect x="503.3" y="293" width="1.2" height="15.0" fill="rgb(247,170,24)" rx="2" ry="2" />
<text  x="506.27" y="303.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.11%)</title><rect x="503.3" y="357" width="1.2" height="15.0" fill="rgb(254,79,5)" rx="2" ry="2" />
<text  x="506.27" y="367.5" ></text>
</g>
<g >
<title>tgetent_sp (1 samples, 0.11%)</title><rect x="12.6" y="293" width="1.2" height="15.0" fill="rgb(244,36,23)" rx="2" ry="2" />
<text  x="15.56" y="303.5" ></text>
</g>
<g >
<title>swapper (455 samples, 49.40%)</title><rect x="607.0" y="469" width="583.0" height="15.0" fill="rgb(242,123,27)" rx="2" ry="2" />
<text  x="610.05" y="479.5" >swapper</text>
</g>
<g >
<title>sh_set_lines_and_columns (1 samples, 0.11%)</title><rect x="13.8" y="325" width="1.3" height="15.0" fill="rgb(242,82,16)" rx="2" ry="2" />
<text  x="16.84" y="335.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="1079.8" y="277" width="1.3" height="15.0" fill="rgb(238,51,42)" rx="2" ry="2" />
<text  x="1082.82" y="287.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="1143.9" y="197" width="1.3" height="15.0" fill="rgb(210,54,23)" rx="2" ry="2" />
<text  x="1146.88" y="207.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.11%)</title><rect x="1174.6" y="165" width="1.3" height="15.0" fill="rgb(207,3,49)" rx="2" ry="2" />
<text  x="1177.63" y="175.5" ></text>
</g>
<g >
<title>_nc_get_tty_mode_sp (1 samples, 0.11%)</title><rect x="12.6" y="245" width="1.2" height="15.0" fill="rgb(218,127,23)" rx="2" ry="2" />
<text  x="15.56" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="11.3" y="293" width="1.3" height="15.0" fill="rgb(216,74,19)" rx="2" ry="2" />
<text  x="14.28" y="303.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 8.69%)</title><rect x="504.5" y="437" width="102.5" height="15.0" fill="rgb(211,194,29)" rx="2" ry="2" />
<text  x="507.55" y="447.5" >perf_evsel__..</text>
</g>
<g >
<title>kthread (4 samples, 0.43%)</title><rect x="1090.1" y="437" width="5.1" height="15.0" fill="rgb(207,188,53)" rx="2" ry="2" />
<text  x="1093.07" y="447.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.65%)</title><rect x="494.3" y="341" width="7.7" height="15.0" fill="rgb(206,47,37)" rx="2" ry="2" />
<text  x="497.30" y="351.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.11%)</title><rect x="503.3" y="421" width="1.2" height="15.0" fill="rgb(240,54,10)" rx="2" ry="2" />
<text  x="506.27" y="431.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.11%)</title><rect x="1149.0" y="325" width="1.3" height="15.0" fill="rgb(243,95,30)" rx="2" ry="2" />
<text  x="1152.00" y="335.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.11%)</title><rect x="1082.4" y="309" width="1.3" height="15.0" fill="rgb(244,85,33)" rx="2" ry="2" />
<text  x="1085.38" y="319.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.11%)</title><rect x="122.7" y="117" width="1.3" height="15.0" fill="rgb(248,122,46)" rx="2" ry="2" />
<text  x="125.75" y="127.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (3 samples, 0.33%)</title><rect x="224.0" y="117" width="3.8" height="15.0" fill="rgb(233,153,37)" rx="2" ry="2" />
<text  x="226.96" y="127.5" ></text>
</g>
<g >
<title>__radix_tree_create (2 samples, 0.22%)</title><rect x="125.3" y="117" width="2.6" height="15.0" fill="rgb(227,89,23)" rx="2" ry="2" />
<text  x="128.31" y="127.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.11%)</title><rect x="495.6" y="213" width="1.3" height="15.0" fill="rgb(243,136,53)" rx="2" ry="2" />
<text  x="498.58" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.11%)</title><rect x="118.9" y="133" width="1.3" height="15.0" fill="rgb(228,43,5)" rx="2" ry="2" />
<text  x="121.90" y="143.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (3 samples, 0.33%)</title><rect x="181.7" y="101" width="3.8" height="15.0" fill="rgb(240,23,5)" rx="2" ry="2" />
<text  x="184.68" y="111.5" ></text>
</g>
<g >
<title>do_sys_poll (3 samples, 0.33%)</title><rect x="490.5" y="373" width="3.8" height="15.0" fill="rgb(222,131,30)" rx="2" ry="2" />
<text  x="493.46" y="383.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (9 samples, 0.98%)</title><rect x="198.3" y="53" width="11.6" height="15.0" fill="rgb(216,192,3)" rx="2" ry="2" />
<text  x="201.34" y="63.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (9 samples, 0.98%)</title><rect x="136.8" y="117" width="11.6" height="15.0" fill="rgb(244,59,38)" rx="2" ry="2" />
<text  x="139.84" y="127.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.11%)</title><rect x="496.9" y="229" width="1.2" height="15.0" fill="rgb(209,113,2)" rx="2" ry="2" />
<text  x="499.86" y="239.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (48 samples, 5.21%)</title><rect x="166.3" y="149" width="61.5" height="15.0" fill="rgb(234,70,31)" rx="2" ry="2" />
<text  x="169.31" y="159.5" >ext4_m..</text>
</g>
<g >
<title>timer_clear_idle (1 samples, 0.11%)</title><rect x="1188.7" y="325" width="1.3" height="15.0" fill="rgb(228,148,23)" rx="2" ry="2" />
<text  x="1191.72" y="335.5" ></text>
</g>
<g >
<title>account_page_dirtied (5 samples, 0.54%)</title><rect x="257.3" y="117" width="6.4" height="15.0" fill="rgb(249,68,47)" rx="2" ry="2" />
<text  x="260.27" y="127.5" ></text>
</g>
<g >
<title>__es_remove_extent (3 samples, 0.33%)</title><rect x="83.0" y="149" width="3.9" height="15.0" fill="rgb(214,49,41)" rx="2" ry="2" />
<text  x="86.03" y="159.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.22%)</title><rect x="250.9" y="133" width="2.5" height="15.0" fill="rgb(212,135,24)" rx="2" ry="2" />
<text  x="253.87" y="143.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.11%)</title><rect x="1082.4" y="261" width="1.3" height="15.0" fill="rgb(234,103,26)" rx="2" ry="2" />
<text  x="1085.38" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 1.19%)</title><rect x="134.3" y="149" width="14.1" height="15.0" fill="rgb(237,25,32)" rx="2" ry="2" />
<text  x="137.28" y="159.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (8 samples, 0.87%)</title><rect x="154.8" y="181" width="10.2" height="15.0" fill="rgb(253,89,54)" rx="2" ry="2" />
<text  x="157.78" y="191.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.11%)</title><rect x="503.3" y="341" width="1.2" height="15.0" fill="rgb(222,96,32)" rx="2" ry="2" />
<text  x="506.27" y="351.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.11%)</title><rect x="1149.0" y="341" width="1.3" height="15.0" fill="rgb(238,193,26)" rx="2" ry="2" />
<text  x="1152.00" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (72 samples, 7.82%)</title><rect x="513.5" y="261" width="92.3" height="15.0" fill="rgb(247,192,47)" rx="2" ry="2" />
<text  x="516.52" y="271.5" >generic_exe..</text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.11%)</title><rect x="11.3" y="197" width="1.3" height="15.0" fill="rgb(232,88,38)" rx="2" ry="2" />
<text  x="14.28" y="207.5" ></text>
</g>
<g >
<title>rest_init (30 samples, 3.26%)</title><rect x="1151.6" y="389" width="38.4" height="15.0" fill="rgb(230,91,51)" rx="2" ry="2" />
<text  x="1154.56" y="399.5" >res..</text>
</g>
<g >
<title>memcmp (1 samples, 0.11%)</title><rect x="1090.1" y="389" width="1.2" height="15.0" fill="rgb(211,153,50)" rx="2" ry="2" />
<text  x="1093.07" y="399.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.11%)</title><rect x="502.0" y="309" width="1.3" height="15.0" fill="rgb(219,97,15)" rx="2" ry="2" />
<text  x="504.99" y="319.5" ></text>
</g>
<g >
<title>arp_process (1 samples, 0.11%)</title><rect x="1143.9" y="165" width="1.3" height="15.0" fill="rgb(250,92,1)" rx="2" ry="2" />
<text  x="1146.88" y="175.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.22%)</title><rect x="179.1" y="101" width="2.6" height="15.0" fill="rgb(228,181,38)" rx="2" ry="2" />
<text  x="182.12" y="111.5" ></text>
</g>
<g >
<title>tty_paranoia_check (1 samples, 0.11%)</title><rect x="1087.5" y="373" width="1.3" height="15.0" fill="rgb(214,32,46)" rx="2" ry="2" />
<text  x="1090.50" y="383.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (80 samples, 8.69%)</title><rect x="504.5" y="357" width="102.5" height="15.0" fill="rgb(215,190,13)" rx="2" ry="2" />
<text  x="507.55" y="367.5" >do_vfs_ioctl</text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="15.1" y="421" width="1.3" height="15.0" fill="rgb(235,106,22)" rx="2" ry="2" />
<text  x="18.12" y="431.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.11%)</title><rect x="106.1" y="101" width="1.3" height="15.0" fill="rgb(241,65,37)" rx="2" ry="2" />
<text  x="109.09" y="111.5" ></text>
</g>
<g >
<title>create_empty_buffers (10 samples, 1.09%)</title><rect x="56.1" y="181" width="12.8" height="15.0" fill="rgb(226,189,26)" rx="2" ry="2" />
<text  x="59.12" y="191.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.43%)</title><rect x="11.3" y="453" width="5.1" height="15.0" fill="rgb(222,108,51)" rx="2" ry="2" />
<text  x="14.28" y="463.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (47 samples, 5.10%)</title><rect x="271.4" y="213" width="60.2" height="15.0" fill="rgb(229,34,20)" rx="2" ry="2" />
<text  x="274.37" y="223.5" >iov_it..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="1154.1" y="277" width="1.3" height="15.0" fill="rgb(216,50,42)" rx="2" ry="2" />
<text  x="1157.13" y="287.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.11%)</title><rect x="1143.9" y="277" width="1.3" height="15.0" fill="rgb(248,189,51)" rx="2" ry="2" />
<text  x="1146.88" y="287.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (48 samples, 5.21%)</title><rect x="166.3" y="181" width="61.5" height="15.0" fill="rgb(227,33,18)" rx="2" ry="2" />
<text  x="169.31" y="191.5" >__mark..</text>
</g>
<g >
<title>__radix_tree_replace (5 samples, 0.54%)</title><rect x="127.9" y="117" width="6.4" height="15.0" fill="rgb(244,148,46)" rx="2" ry="2" />
<text  x="130.87" y="127.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.11%)</title><rect x="1146.4" y="373" width="1.3" height="15.0" fill="rgb(228,40,48)" rx="2" ry="2" />
<text  x="1149.44" y="383.5" ></text>
</g>
<g >
<title>cpu_load_update (1 samples, 0.11%)</title><rect x="1168.2" y="197" width="1.3" height="15.0" fill="rgb(213,223,44)" rx="2" ry="2" />
<text  x="1171.22" y="207.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.11%)</title><rect x="43.3" y="149" width="1.3" height="15.0" fill="rgb(219,138,1)" rx="2" ry="2" />
<text  x="46.31" y="159.5" ></text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.11%)</title><rect x="11.3" y="229" width="1.3" height="15.0" fill="rgb(229,113,0)" rx="2" ry="2" />
<text  x="14.28" y="239.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.11%)</title><rect x="107.4" y="101" width="1.3" height="15.0" fill="rgb(231,200,20)" rx="2" ry="2" />
<text  x="110.37" y="111.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="502.0" y="357" width="1.3" height="15.0" fill="rgb(216,127,35)" rx="2" ry="2" />
<text  x="504.99" y="367.5" ></text>
</g>
<g >
<title>all (921 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(205,49,13)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sys_ioctl (1 samples, 0.11%)</title><rect x="12.6" y="181" width="1.2" height="15.0" fill="rgb(223,148,28)" rx="2" ry="2" />
<text  x="15.56" y="191.5" ></text>
</g>
<g >
<title>do_idle (43 samples, 4.67%)</title><rect x="1096.5" y="405" width="55.1" height="15.0" fill="rgb(209,140,8)" rx="2" ry="2" />
<text  x="1099.47" y="415.5" >do_idle</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.11%)</title><rect x="496.9" y="197" width="1.2" height="15.0" fill="rgb(253,79,3)" rx="2" ry="2" />
<text  x="499.86" y="207.5" ></text>
</g>
<g >
<title>__vfs_read (114 samples, 12.38%)</title><rect x="341.8" y="309" width="146.1" height="15.0" fill="rgb(220,71,2)" rx="2" ry="2" />
<text  x="344.83" y="319.5" >__vfs_read</text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.11%)</title><rect x="1091.3" y="421" width="1.3" height="15.0" fill="rgb(239,165,52)" rx="2" ry="2" />
<text  x="1094.35" y="431.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.11%)</title><rect x="222.7" y="85" width="1.3" height="15.0" fill="rgb(250,166,4)" rx="2" ry="2" />
<text  x="225.68" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="503.3" y="405" width="1.2" height="15.0" fill="rgb(226,187,27)" rx="2" ry="2" />
<text  x="506.27" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="66.4" y="37" width="1.3" height="15.0" fill="rgb(226,206,15)" rx="2" ry="2" />
<text  x="69.37" y="47.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.22%)</title><rect x="1099.0" y="229" width="2.6" height="15.0" fill="rgb(242,20,3)" rx="2" ry="2" />
<text  x="1102.03" y="239.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (1 samples, 0.11%)</title><rect x="54.8" y="165" width="1.3" height="15.0" fill="rgb(229,206,38)" rx="2" ry="2" />
<text  x="57.84" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.11%)</title><rect x="66.4" y="69" width="1.3" height="15.0" fill="rgb(251,223,48)" rx="2" ry="2" />
<text  x="69.37" y="79.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (1 samples, 0.11%)</title><rect x="81.7" y="165" width="1.3" height="15.0" fill="rgb(245,92,42)" rx="2" ry="2" />
<text  x="84.75" y="175.5" ></text>
</g>
<g >
<title>__perf_event_enable (66 samples, 7.17%)</title><rect x="519.9" y="213" width="84.6" height="15.0" fill="rgb(251,204,1)" rx="2" ry="2" />
<text  x="522.92" y="223.5" >__perf_ev..</text>
</g>
<g >
<title>run_rebalance_domains (15 samples, 1.63%)</title><rect x="1166.9" y="213" width="19.3" height="15.0" fill="rgb(225,110,22)" rx="2" ry="2" />
<text  x="1169.94" y="223.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (17 samples, 1.85%)</title><rect x="112.5" y="149" width="21.8" height="15.0" fill="rgb(212,213,47)" rx="2" ry="2" />
<text  x="115.50" y="159.5" >_..</text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.33%)</title><rect x="44.6" y="149" width="3.8" height="15.0" fill="rgb(211,122,25)" rx="2" ry="2" />
<text  x="47.59" y="159.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.65%)</title><rect x="494.3" y="325" width="7.7" height="15.0" fill="rgb(241,112,28)" rx="2" ry="2" />
<text  x="497.30" y="335.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="15.1" y="325" width="1.3" height="15.0" fill="rgb(240,221,45)" rx="2" ry="2" />
<text  x="18.12" y="335.5" ></text>
</g>
<g >
<title>sys_mmap_pgoff (1 samples, 0.11%)</title><rect x="15.1" y="245" width="1.3" height="15.0" fill="rgb(243,75,54)" rx="2" ry="2" />
<text  x="18.12" y="255.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (1 samples, 0.11%)</title><rect x="149.7" y="149" width="1.2" height="15.0" fill="rgb(244,2,6)" rx="2" ry="2" />
<text  x="152.65" y="159.5" ></text>
</g>
<g >
<title>load_balance (4 samples, 0.43%)</title><rect x="1173.3" y="181" width="5.2" height="15.0" fill="rgb(246,154,11)" rx="2" ry="2" />
<text  x="1176.34" y="191.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.11%)</title><rect x="495.6" y="165" width="1.3" height="15.0" fill="rgb(249,189,37)" rx="2" ry="2" />
<text  x="498.58" y="175.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="502.0" y="325" width="1.3" height="15.0" fill="rgb(215,104,20)" rx="2" ry="2" />
<text  x="504.99" y="335.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.22%)</title><rect x="1101.6" y="245" width="2.6" height="15.0" fill="rgb(213,87,31)" rx="2" ry="2" />
<text  x="1104.60" y="255.5" ></text>
</g>
<g >
<title>irq_exit (15 samples, 1.63%)</title><rect x="1166.9" y="245" width="19.3" height="15.0" fill="rgb(253,69,39)" rx="2" ry="2" />
<text  x="1169.94" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16 samples, 1.74%)</title><rect x="92.0" y="133" width="20.5" height="15.0" fill="rgb(225,60,24)" rx="2" ry="2" />
<text  x="95.00" y="143.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (1 samples, 0.11%)</title><rect x="489.2" y="325" width="1.3" height="15.0" fill="rgb(213,202,49)" rx="2" ry="2" />
<text  x="492.17" y="335.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.11%)</title><rect x="1084.9" y="373" width="1.3" height="15.0" fill="rgb(217,64,43)" rx="2" ry="2" />
<text  x="1087.94" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.33%)</title><rect x="11.3" y="437" width="3.8" height="15.0" fill="rgb(209,208,29)" rx="2" ry="2" />
<text  x="14.28" y="447.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.11%)</title><rect x="503.3" y="453" width="1.2" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="506.27" y="463.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.22%)</title><rect x="494.3" y="261" width="2.6" height="15.0" fill="rgb(218,25,32)" rx="2" ry="2" />
<text  x="497.30" y="271.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.11%)</title><rect x="262.4" y="101" width="1.3" height="15.0" fill="rgb(243,116,11)" rx="2" ry="2" />
<text  x="265.40" y="111.5" ></text>
</g>
<g >
<title>tty_poll (2 samples, 0.22%)</title><rect x="1086.2" y="389" width="2.6" height="15.0" fill="rgb(233,185,20)" rx="2" ry="2" />
<text  x="1089.22" y="399.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.11%)</title><rect x="503.3" y="325" width="1.2" height="15.0" fill="rgb(208,211,20)" rx="2" ry="2" />
<text  x="506.27" y="335.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (11 samples, 1.19%)</title><rect x="519.9" y="133" width="14.1" height="15.0" fill="rgb(243,111,51)" rx="2" ry="2" />
<text  x="522.92" y="143.5" ></text>
</g>
<g >
<title>page_cache_tree_insert (8 samples, 0.87%)</title><rect x="124.0" y="133" width="10.3" height="15.0" fill="rgb(240,117,23)" rx="2" ry="2" />
<text  x="127.03" y="143.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 8.69%)</title><rect x="504.5" y="421" width="102.5" height="15.0" fill="rgb(219,225,36)" rx="2" ry="2" />
<text  x="507.55" y="431.5" >__ioctl</text>
</g>
<g >
<title>vfs_write (7 samples, 0.76%)</title><rect x="494.3" y="373" width="9.0" height="15.0" fill="rgb(246,103,0)" rx="2" ry="2" />
<text  x="497.30" y="383.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.22%)</title><rect x="1147.7" y="357" width="2.6" height="15.0" fill="rgb(214,142,24)" rx="2" ry="2" />
<text  x="1150.72" y="367.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.11%)</title><rect x="15.1" y="357" width="1.3" height="15.0" fill="rgb(230,187,16)" rx="2" ry="2" />
<text  x="18.12" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (254 samples, 27.58%)</title><rect x="16.4" y="341" width="325.4" height="15.0" fill="rgb(249,6,52)" rx="2" ry="2" />
<text  x="19.41" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>__vfs_write (6 samples, 0.65%)</title><rect x="494.3" y="357" width="7.7" height="15.0" fill="rgb(239,28,46)" rx="2" ry="2" />
<text  x="497.30" y="367.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.43%)</title><rect x="140.7" y="101" width="5.1" height="15.0" fill="rgb(227,37,21)" rx="2" ry="2" />
<text  x="143.68" y="111.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.11%)</title><rect x="495.6" y="197" width="1.3" height="15.0" fill="rgb(215,217,38)" rx="2" ry="2" />
<text  x="498.58" y="207.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.11%)</title><rect x="1079.8" y="341" width="1.3" height="15.0" fill="rgb(224,50,3)" rx="2" ry="2" />
<text  x="1082.82" y="351.5" ></text>
</g>
<g >
<title>[cat] (368 samples, 39.96%)</title><rect x="16.4" y="453" width="471.5" height="15.0" fill="rgb(245,55,31)" rx="2" ry="2" />
<text  x="19.41" y="463.5" >[cat]</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="13.8" y="245" width="1.3" height="15.0" fill="rgb(234,1,34)" rx="2" ry="2" />
<text  x="16.84" y="255.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (66 samples, 7.17%)</title><rect x="519.9" y="149" width="84.6" height="15.0" fill="rgb(252,36,34)" rx="2" ry="2" />
<text  x="522.92" y="159.5" >__intel_p..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="1092.6" y="341" width="1.3" height="15.0" fill="rgb(238,45,47)" rx="2" ry="2" />
<text  x="1095.63" y="351.5" ></text>
</g>
<g >
<title>sys_write (254 samples, 27.58%)</title><rect x="16.4" y="325" width="325.4" height="15.0" fill="rgb(223,117,11)" rx="2" ry="2" />
<text  x="19.41" y="335.5" >sys_write</text>
</g>
<g >
<title>__tick_nohz_idle_enter (3 samples, 0.33%)</title><rect x="1147.7" y="373" width="3.9" height="15.0" fill="rgb(245,157,44)" rx="2" ry="2" />
<text  x="1150.72" y="383.5" ></text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.11%)</title><rect x="261.1" y="101" width="1.3" height="15.0" fill="rgb(222,216,9)" rx="2" ry="2" />
<text  x="264.12" y="111.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.11%)</title><rect x="270.1" y="181" width="1.3" height="15.0" fill="rgb(246,118,23)" rx="2" ry="2" />
<text  x="273.09" y="191.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.65%)</title><rect x="494.3" y="293" width="7.7" height="15.0" fill="rgb(217,80,10)" rx="2" ry="2" />
<text  x="497.30" y="303.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.11%)</title><rect x="1147.7" y="325" width="1.3" height="15.0" fill="rgb(211,150,47)" rx="2" ry="2" />
<text  x="1150.72" y="335.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.11%)</title><rect x="12.6" y="309" width="1.2" height="15.0" fill="rgb(249,138,21)" rx="2" ry="2" />
<text  x="15.56" y="319.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.22%)</title><rect x="490.5" y="325" width="2.5" height="15.0" fill="rgb(249,204,29)" rx="2" ry="2" />
<text  x="493.46" y="335.5" ></text>
</g>
<g >
<title>jbd2__journal_start (15 samples, 1.63%)</title><rect x="29.2" y="181" width="19.2" height="15.0" fill="rgb(236,30,21)" rx="2" ry="2" />
<text  x="32.22" y="191.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.11%)</title><rect x="11.3" y="277" width="1.3" height="15.0" fill="rgb(235,117,23)" rx="2" ry="2" />
<text  x="14.28" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.22%)</title><rect x="1187.4" y="341" width="2.6" height="15.0" fill="rgb(208,4,32)" rx="2" ry="2" />
<text  x="1190.44" y="351.5" ></text>
</g>
<g >
<title>wake_q_add (1 samples, 0.11%)</title><rect x="489.2" y="309" width="1.3" height="15.0" fill="rgb(210,168,24)" rx="2" ry="2" />
<text  x="492.17" y="319.5" ></text>
</g>
<g >
<title>event_function (68 samples, 7.38%)</title><rect x="518.6" y="229" width="87.2" height="15.0" fill="rgb(215,141,34)" rx="2" ry="2" />
<text  x="521.64" y="239.5" >event_func..</text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.11%)</title><rect x="268.8" y="133" width="1.3" height="15.0" fill="rgb(228,92,23)" rx="2" ry="2" />
<text  x="271.81" y="143.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.11%)</title><rect x="1092.6" y="389" width="1.3" height="15.0" fill="rgb(245,131,17)" rx="2" ry="2" />
<text  x="1095.63" y="399.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.11%)</title><rect x="495.6" y="229" width="1.3" height="15.0" fill="rgb(237,145,8)" rx="2" ry="2" />
<text  x="498.58" y="239.5" ></text>
</g>
<g >
<title>scheduler_ipi (17 samples, 1.85%)</title><rect x="1165.7" y="261" width="21.7" height="15.0" fill="rgb(234,45,44)" rx="2" ry="2" />
<text  x="1168.66" y="271.5" >s..</text>
</g>
<g >
<title>cpu_startup_entry (43 samples, 4.67%)</title><rect x="1096.5" y="421" width="55.1" height="15.0" fill="rgb(226,82,18)" rx="2" ry="2" />
<text  x="1099.47" y="431.5" >cpu_s..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="1143.9" y="293" width="1.3" height="15.0" fill="rgb(215,55,12)" rx="2" ry="2" />
<text  x="1146.88" y="303.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.11%)</title><rect x="493.0" y="357" width="1.3" height="15.0" fill="rgb(254,145,38)" rx="2" ry="2" />
<text  x="496.02" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1 samples, 0.11%)</title><rect x="184.2" y="85" width="1.3" height="15.0" fill="rgb(254,35,35)" rx="2" ry="2" />
<text  x="187.25" y="95.5" ></text>
</g>
<g >
<title>start_kernel (30 samples, 3.26%)</title><rect x="1151.6" y="405" width="38.4" height="15.0" fill="rgb(221,86,33)" rx="2" ry="2" />
<text  x="1154.56" y="415.5" >sta..</text>
</g>
<g >
<title>rebalance_domains (4 samples, 0.43%)</title><rect x="1099.0" y="261" width="5.2" height="15.0" fill="rgb(208,46,22)" rx="2" ry="2" />
<text  x="1102.03" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter (37 samples, 4.02%)</title><rect x="1097.8" y="373" width="47.4" height="15.0" fill="rgb(243,89,29)" rx="2" ry="2" />
<text  x="1100.75" y="383.5" >cpui..</text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.43%)</title><rect x="63.8" y="101" width="5.1" height="15.0" fill="rgb(251,116,27)" rx="2" ry="2" />
<text  x="66.81" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="163.7" y="149" width="1.3" height="15.0" fill="rgb(242,96,26)" rx="2" ry="2" />
<text  x="166.75" y="159.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.11%)</title><rect x="1143.9" y="261" width="1.3" height="15.0" fill="rgb(213,161,27)" rx="2" ry="2" />
<text  x="1146.88" y="271.5" ></text>
</g>
<g >
<title>[cat] (254 samples, 27.58%)</title><rect x="16.4" y="389" width="325.4" height="15.0" fill="rgb(227,126,41)" rx="2" ry="2" />
<text  x="19.41" y="399.5" >[cat]</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.11%)</title><rect x="1079.8" y="293" width="1.3" height="15.0" fill="rgb(238,87,39)" rx="2" ry="2" />
<text  x="1082.82" y="303.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.11%)</title><rect x="16.4" y="229" width="1.3" height="15.0" fill="rgb(211,188,40)" rx="2" ry="2" />
<text  x="19.41" y="239.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.11%)</title><rect x="340.6" y="277" width="1.2" height="15.0" fill="rgb(205,59,30)" rx="2" ry="2" />
<text  x="343.55" y="287.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.11%)</title><rect x="15.1" y="437" width="1.3" height="15.0" fill="rgb(246,65,10)" rx="2" ry="2" />
<text  x="18.12" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1082.4" y="341" width="1.3" height="15.0" fill="rgb(208,56,23)" rx="2" ry="2" />
<text  x="1085.38" y="351.5" ></text>
</g>
<g >
<title>pagecache_get_page (47 samples, 5.10%)</title><rect x="90.7" y="181" width="60.2" height="15.0" fill="rgb(212,136,22)" rx="2" ry="2" />
<text  x="93.72" y="191.5" >pageca..</text>
</g>
<g >
<title>replace_slot (1 samples, 0.11%)</title><rect x="133.0" y="101" width="1.3" height="15.0" fill="rgb(241,34,39)" rx="2" ry="2" />
<text  x="136.00" y="111.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (6 samples, 0.65%)</title><rect x="331.6" y="213" width="7.7" height="15.0" fill="rgb(253,97,39)" rx="2" ry="2" />
<text  x="334.59" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="494.3" y="181" width="1.3" height="15.0" fill="rgb(217,182,37)" rx="2" ry="2" />
<text  x="497.30" y="191.5" ></text>
</g>
<g >
<title>new_sync_read (114 samples, 12.38%)</title><rect x="341.8" y="293" width="146.1" height="15.0" fill="rgb(222,111,30)" rx="2" ry="2" />
<text  x="344.83" y="303.5" >new_sync_read</text>
</g>
<g >
<title>poll_schedule_timeout (2 samples, 0.22%)</title><rect x="1081.1" y="389" width="2.6" height="15.0" fill="rgb(225,3,6)" rx="2" ry="2" />
<text  x="1084.10" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.56 (15 samples, 1.63%)</title><rect x="190.7" y="85" width="19.2" height="15.0" fill="rgb(228,172,3)" rx="2" ry="2" />
<text  x="193.65" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (114 samples, 12.38%)</title><rect x="341.8" y="373" width="146.1" height="15.0" fill="rgb(232,50,39)" rx="2" ry="2" />
<text  x="344.83" y="383.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>ext4_mark_inode_dirty (1 samples, 0.11%)</title><rect x="496.9" y="213" width="1.2" height="15.0" fill="rgb(241,153,7)" rx="2" ry="2" />
<text  x="499.86" y="223.5" ></text>
</g>
<g >
<title>read (1 samples, 0.11%)</title><rect x="503.3" y="437" width="1.2" height="15.0" fill="rgb(236,128,40)" rx="2" ry="2" />
<text  x="506.27" y="447.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.22%)</title><rect x="1078.5" y="389" width="2.6" height="15.0" fill="rgb(251,140,36)" rx="2" ry="2" />
<text  x="1081.53" y="399.5" ></text>
</g>
<g >
<title>n_tty_ioctl_helper (1 samples, 0.11%)</title><rect x="12.6" y="117" width="1.2" height="15.0" fill="rgb(229,10,37)" rx="2" ry="2" />
<text  x="15.56" y="127.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.11%)</title><rect x="1079.8" y="373" width="1.3" height="15.0" fill="rgb(240,43,12)" rx="2" ry="2" />
<text  x="1082.82" y="383.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.11%)</title><rect x="1095.2" y="453" width="1.3" height="15.0" fill="rgb(237,27,51)" rx="2" ry="2" />
<text  x="1098.19" y="463.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.11%)</title><rect x="1082.4" y="277" width="1.3" height="15.0" fill="rgb(251,71,36)" rx="2" ry="2" />
<text  x="1085.38" y="287.5" ></text>
</g>
<g >
<title>sched_avg_update (1 samples, 0.11%)</title><rect x="1168.2" y="181" width="1.3" height="15.0" fill="rgb(227,94,25)" rx="2" ry="2" />
<text  x="1171.22" y="191.5" ></text>
</g>
<g >
<title>vfs_read (114 samples, 12.38%)</title><rect x="341.8" y="325" width="146.1" height="15.0" fill="rgb(233,70,2)" rx="2" ry="2" />
<text  x="344.83" y="335.5" >vfs_read</text>
</g>
<g >
<title>apic_timer_interrupt (7 samples, 0.76%)</title><rect x="1097.8" y="341" width="8.9" height="15.0" fill="rgb(229,73,22)" rx="2" ry="2" />
<text  x="1100.75" y="351.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="1149.0" y="293" width="1.3" height="15.0" fill="rgb(242,51,39)" rx="2" ry="2" />
<text  x="1152.00" y="303.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (15 samples, 1.63%)</title><rect x="68.9" y="181" width="19.3" height="15.0" fill="rgb(211,95,1)" rx="2" ry="2" />
<text  x="71.94" y="191.5" ></text>
</g>
<g >
<title>ksm_scan_thread (1 samples, 0.11%)</title><rect x="1090.1" y="421" width="1.2" height="15.0" fill="rgb(232,59,33)" rx="2" ry="2" />
<text  x="1093.07" y="431.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.22%)</title><rect x="1081.1" y="373" width="2.6" height="15.0" fill="rgb(221,157,12)" rx="2" ry="2" />
<text  x="1084.10" y="383.5" ></text>
</g>
<g >
<title>__GI___poll (3 samples, 0.33%)</title><rect x="490.5" y="437" width="3.8" height="15.0" fill="rgb(223,86,26)" rx="2" ry="2" />
<text  x="493.46" y="447.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (2 samples, 0.22%)</title><rect x="487.9" y="357" width="2.6" height="15.0" fill="rgb(221,42,52)" rx="2" ry="2" />
<text  x="490.89" y="367.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.11%)</title><rect x="211.2" y="117" width="1.2" height="15.0" fill="rgb(216,10,22)" rx="2" ry="2" />
<text  x="214.15" y="127.5" ></text>
</g>
<g >
<title>pagecache_get_page (16 samples, 1.74%)</title><rect x="466.1" y="245" width="20.5" height="15.0" fill="rgb(226,150,29)" rx="2" ry="2" />
<text  x="469.11" y="255.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (28 samples, 3.04%)</title><rect x="112.5" y="165" width="35.9" height="15.0" fill="rgb(206,208,36)" rx="2" ry="2" />
<text  x="115.50" y="175.5" >add..</text>
</g>
<g >
<title>release_pages (2 samples, 0.22%)</title><rect x="145.8" y="101" width="2.6" height="15.0" fill="rgb(242,103,24)" rx="2" ry="2" />
<text  x="148.81" y="111.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (7 samples, 0.76%)</title><rect x="60.0" y="133" width="8.9" height="15.0" fill="rgb(230,77,0)" rx="2" ry="2" />
<text  x="62.97" y="143.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.11%)</title><rect x="75.3" y="165" width="1.3" height="15.0" fill="rgb(228,19,32)" rx="2" ry="2" />
<text  x="78.34" y="175.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (253 samples, 27.47%)</title><rect x="16.4" y="261" width="324.2" height="15.0" fill="rgb(212,114,33)" rx="2" ry="2" />
<text  x="19.41" y="271.5" >ext4_file_write_iter</text>
</g>
<g >
<title>smpboot_thread_fn (2 samples, 0.22%)</title><rect x="1092.6" y="421" width="2.6" height="15.0" fill="rgb(209,5,8)" rx="2" ry="2" />
<text  x="1095.63" y="431.5" ></text>
</g>
<g >
<title>ion (7 samples, 0.76%)</title><rect x="494.3" y="453" width="9.0" height="15.0" fill="rgb(238,0,4)" rx="2" ry="2" />
<text  x="497.30" y="463.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.11%)</title><rect x="502.0" y="341" width="1.3" height="15.0" fill="rgb(253,96,14)" rx="2" ry="2" />
<text  x="504.99" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.11%)</title><rect x="496.9" y="277" width="1.2" height="15.0" fill="rgb(225,115,41)" rx="2" ry="2" />
<text  x="499.86" y="287.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (1 samples, 0.11%)</title><rect x="1186.2" y="245" width="1.2" height="15.0" fill="rgb(225,71,29)" rx="2" ry="2" />
<text  x="1189.16" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 1.09%)</title><rect x="1077.3" y="437" width="12.8" height="15.0" fill="rgb(218,151,43)" rx="2" ry="2" />
<text  x="1080.25" y="447.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.11%)</title><rect x="503.3" y="309" width="1.2" height="15.0" fill="rgb(247,142,12)" rx="2" ry="2" />
<text  x="506.27" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.11%)</title><rect x="144.5" y="85" width="1.3" height="15.0" fill="rgb(238,221,45)" rx="2" ry="2" />
<text  x="147.53" y="95.5" ></text>
</g>
<g >
<title>delete_node (2 samples, 0.22%)</title><rect x="130.4" y="101" width="2.6" height="15.0" fill="rgb(246,36,54)" rx="2" ry="2" />
<text  x="133.43" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (114 samples, 12.38%)</title><rect x="341.8" y="357" width="146.1" height="15.0" fill="rgb(205,29,16)" rx="2" ry="2" />
<text  x="344.83" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>alloc_buffer_head (7 samples, 0.76%)</title><rect x="60.0" y="149" width="8.9" height="15.0" fill="rgb(215,157,8)" rx="2" ry="2" />
<text  x="62.97" y="159.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.11%)</title><rect x="1105.4" y="309" width="1.3" height="15.0" fill="rgb(252,66,26)" rx="2" ry="2" />
<text  x="1108.44" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.11%)</title><rect x="185.5" y="101" width="1.3" height="15.0" fill="rgb(214,173,46)" rx="2" ry="2" />
<text  x="188.53" y="111.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.11%)</title><rect x="1088.8" y="405" width="1.3" height="15.0" fill="rgb(209,132,16)" rx="2" ry="2" />
<text  x="1091.78" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 8.69%)</title><rect x="504.5" y="453" width="102.5" height="15.0" fill="rgb(212,169,25)" rx="2" ry="2" />
<text  x="507.55" y="463.5" >perf_evsel__..</text>
</g>
<g >
<title>seq_put_decimal_ull (1 samples, 0.11%)</title><rect x="503.3" y="277" width="1.2" height="15.0" fill="rgb(252,209,5)" rx="2" ry="2" />
<text  x="506.27" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.11%)</title><rect x="122.7" y="133" width="1.3" height="15.0" fill="rgb(251,222,31)" rx="2" ry="2" />
<text  x="125.75" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.76%)</title><rect x="494.3" y="421" width="9.0" height="15.0" fill="rgb(230,229,50)" rx="2" ry="2" />
<text  x="497.30" y="431.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.11%)</title><rect x="495.6" y="181" width="1.3" height="15.0" fill="rgb(210,108,21)" rx="2" ry="2" />
<text  x="498.58" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (45 samples, 4.89%)</title><rect x="273.9" y="197" width="57.7" height="15.0" fill="rgb(247,60,24)" rx="2" ry="2" />
<text  x="276.93" y="207.5" >copy_u..</text>
</g>
<g >
<title>node_page_state (1 samples, 0.11%)</title><rect x="111.2" y="101" width="1.3" height="15.0" fill="rgb(225,121,6)" rx="2" ry="2" />
<text  x="114.22" y="111.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="1079.8" y="357" width="1.3" height="15.0" fill="rgb(241,58,33)" rx="2" ry="2" />
<text  x="1082.82" y="367.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.11%)</title><rect x="165.0" y="181" width="1.3" height="15.0" fill="rgb(231,161,13)" rx="2" ry="2" />
<text  x="168.03" y="191.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.11%)</title><rect x="1143.9" y="245" width="1.3" height="15.0" fill="rgb(237,132,12)" rx="2" ry="2" />
<text  x="1146.88" y="255.5" ></text>
</g>
<g >
<title>_nc_setupterm (1 samples, 0.11%)</title><rect x="12.6" y="277" width="1.2" height="15.0" fill="rgb(226,93,31)" rx="2" ry="2" />
<text  x="15.56" y="287.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (48 samples, 5.21%)</title><rect x="166.3" y="165" width="61.5" height="15.0" fill="rgb(240,216,28)" rx="2" ry="2" />
<text  x="169.31" y="175.5" >ext4_d..</text>
</g>
<g >
<title>dl_main (1 samples, 0.11%)</title><rect x="15.1" y="405" width="1.3" height="15.0" fill="rgb(245,195,11)" rx="2" ry="2" />
<text  x="18.12" y="415.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.11%)</title><rect x="1147.7" y="341" width="1.3" height="15.0" fill="rgb(206,80,36)" rx="2" ry="2" />
<text  x="1150.72" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (253 samples, 27.47%)</title><rect x="16.4" y="277" width="324.2" height="15.0" fill="rgb(223,42,47)" rx="2" ry="2" />
<text  x="19.41" y="287.5" >new_sync_write</text>
</g>
<g >
<title>__ext4_get_inode_loc (9 samples, 0.98%)</title><rect x="212.4" y="117" width="11.6" height="15.0" fill="rgb(213,203,45)" rx="2" ry="2" />
<text  x="215.43" y="127.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.11%)</title><rect x="1187.4" y="309" width="1.3" height="15.0" fill="rgb(218,149,21)" rx="2" ry="2" />
<text  x="1190.44" y="319.5" ></text>
</g>
<g >
<title>__libc_write (7 samples, 0.76%)</title><rect x="494.3" y="437" width="9.0" height="15.0" fill="rgb(208,7,16)" rx="2" ry="2" />
<text  x="497.30" y="447.5" ></text>
</g>
<g >
<title>affinity__set (2 samples, 0.22%)</title><rect x="487.9" y="453" width="2.6" height="15.0" fill="rgb(233,30,41)" rx="2" ry="2" />
<text  x="490.89" y="463.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.11%)</title><rect x="496.9" y="245" width="1.2" height="15.0" fill="rgb(230,31,47)" rx="2" ry="2" />
<text  x="499.86" y="255.5" ></text>
</g>
<g >
<title>__set_page_dirty (11 samples, 1.19%)</title><rect x="253.4" y="133" width="14.1" height="15.0" fill="rgb(224,180,33)" rx="2" ry="2" />
<text  x="256.43" y="143.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.11%)</title><rect x="603.2" y="133" width="1.3" height="15.0" fill="rgb(217,107,13)" rx="2" ry="2" />
<text  x="606.20" y="143.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="1093.9" y="373" width="1.3" height="15.0" fill="rgb(231,37,13)" rx="2" ry="2" />
<text  x="1096.91" y="383.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.11%)</title><rect x="86.9" y="165" width="1.3" height="15.0" fill="rgb(248,139,41)" rx="2" ry="2" />
<text  x="89.87" y="175.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.22%)</title><rect x="12.6" y="357" width="2.5" height="15.0" fill="rgb(226,99,31)" rx="2" ry="2" />
<text  x="15.56" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="66.4" y="53" width="1.3" height="15.0" fill="rgb(239,47,41)" rx="2" ry="2" />
<text  x="69.37" y="63.5" ></text>
</g>
<g >
<title>ctx_resched (66 samples, 7.17%)</title><rect x="519.9" y="197" width="84.6" height="15.0" fill="rgb(250,98,0)" rx="2" ry="2" />
<text  x="522.92" y="207.5" >ctx_resched</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 8.69%)</title><rect x="504.5" y="405" width="102.5" height="15.0" fill="rgb(225,190,31)" rx="2" ry="2" />
<text  x="507.55" y="415.5" >entry_SYSCAL..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="339.3" y="213" width="1.3" height="15.0" fill="rgb(238,130,2)" rx="2" ry="2" />
<text  x="342.27" y="223.5" ></text>
</g>
<g >
<title>sys_futex (3 samples, 0.33%)</title><rect x="1077.3" y="421" width="3.8" height="15.0" fill="rgb(224,192,54)" rx="2" ry="2" />
<text  x="1080.25" y="431.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.11%)</title><rect x="117.6" y="133" width="1.3" height="15.0" fill="rgb(251,37,42)" rx="2" ry="2" />
<text  x="120.62" y="143.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.22%)</title><rect x="1083.7" y="389" width="2.5" height="15.0" fill="rgb(249,99,22)" rx="2" ry="2" />
<text  x="1086.66" y="399.5" ></text>
</g>
<g >
<title>n_tty_ioctl (1 samples, 0.11%)</title><rect x="12.6" y="133" width="1.2" height="15.0" fill="rgb(250,57,45)" rx="2" ry="2" />
<text  x="15.56" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.33%)</title><rect x="490.5" y="421" width="3.8" height="15.0" fill="rgb(252,220,1)" rx="2" ry="2" />
<text  x="493.46" y="431.5" ></text>
</g>
<g >
<title>radix_tree_tag_set (3 samples, 0.33%)</title><rect x="263.7" y="117" width="3.8" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="266.68" y="127.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.11%)</title><rect x="487.9" y="309" width="1.3" height="15.0" fill="rgb(206,83,5)" rx="2" ry="2" />
<text  x="490.89" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="340.6" y="293" width="1.2" height="15.0" fill="rgb(247,54,4)" rx="2" ry="2" />
<text  x="343.55" y="303.5" ></text>
</g>
<g >
<title>__GI___read (114 samples, 12.38%)</title><rect x="341.8" y="389" width="146.1" height="15.0" fill="rgb(213,55,27)" rx="2" ry="2" />
<text  x="344.83" y="399.5" >__GI___read</text>
</g>
<g >
<title>do_futex (3 samples, 0.33%)</title><rect x="1077.3" y="405" width="3.8" height="15.0" fill="rgb(250,124,7)" rx="2" ry="2" />
<text  x="1080.25" y="415.5" ></text>
</g>
<g >
<title>xmalloc (1 samples, 0.11%)</title><rect x="13.8" y="261" width="1.3" height="15.0" fill="rgb(211,221,12)" rx="2" ry="2" />
<text  x="16.84" y="271.5" ></text>
</g>
<g >
<title>__vfs_write (253 samples, 27.47%)</title><rect x="16.4" y="293" width="324.2" height="15.0" fill="rgb(242,3,53)" rx="2" ry="2" />
<text  x="19.41" y="303.5" >__vfs_write</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.22%)</title><rect x="254.7" y="117" width="2.6" height="15.0" fill="rgb(230,145,45)" rx="2" ry="2" />
<text  x="257.71" y="127.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.11%)</title><rect x="27.9" y="181" width="1.3" height="15.0" fill="rgb(224,52,9)" rx="2" ry="2" />
<text  x="30.94" y="191.5" ></text>
</g>
<g >
<title>[cat] (368 samples, 39.96%)</title><rect x="16.4" y="421" width="471.5" height="15.0" fill="rgb(253,198,43)" rx="2" ry="2" />
<text  x="19.41" y="431.5" >[cat]</text>
</g>
<g >
<title>clean_bdev_aliases (2 samples, 0.22%)</title><rect x="53.6" y="181" width="2.5" height="15.0" fill="rgb(221,64,23)" rx="2" ry="2" />
<text  x="56.56" y="191.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (114 samples, 12.38%)</title><rect x="341.8" y="277" width="146.1" height="15.0" fill="rgb(220,141,18)" rx="2" ry="2" />
<text  x="344.83" y="287.5" >ext4_file_read_iter</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="15.1" y="293" width="1.3" height="15.0" fill="rgb(214,151,36)" rx="2" ry="2" />
<text  x="18.12" y="303.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.11%)</title><rect x="245.7" y="149" width="1.3" height="15.0" fill="rgb(213,116,43)" rx="2" ry="2" />
<text  x="248.74" y="159.5" ></text>
</g>
<g >
<title>__lru_cache_add (11 samples, 1.19%)</title><rect x="134.3" y="133" width="14.1" height="15.0" fill="rgb(205,68,30)" rx="2" ry="2" />
<text  x="137.28" y="143.5" ></text>
</g>
<g >
<title>bash (5 samples, 0.54%)</title><rect x="10.0" y="469" width="6.4" height="15.0" fill="rgb(209,152,32)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>node_dirty_ok (2 samples, 0.22%)</title><rect x="108.7" y="101" width="2.5" height="15.0" fill="rgb(226,83,52)" rx="2" ry="2" />
<text  x="111.65" y="111.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.11%)</title><rect x="1165.7" y="245" width="1.2" height="15.0" fill="rgb(245,158,54)" rx="2" ry="2" />
<text  x="1168.66" y="255.5" ></text>
</g>
<g >
<title>__unlock_page_memcg (1 samples, 0.11%)</title><rect x="268.8" y="117" width="1.3" height="15.0" fill="rgb(226,187,48)" rx="2" ry="2" />
<text  x="271.81" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="1154.1" y="261" width="1.3" height="15.0" fill="rgb(207,182,31)" rx="2" ry="2" />
<text  x="1157.13" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.22%)</title><rect x="1175.9" y="165" width="2.6" height="15.0" fill="rgb(249,166,26)" rx="2" ry="2" />
<text  x="1178.91" y="175.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.11%)</title><rect x="1088.8" y="421" width="1.3" height="15.0" fill="rgb(226,100,21)" rx="2" ry="2" />
<text  x="1091.78" y="431.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.11%)</title><rect x="148.4" y="149" width="1.3" height="15.0" fill="rgb(253,31,6)" rx="2" ry="2" />
<text  x="151.37" y="159.5" ></text>
</g>
<g >
<title>perf (93 samples, 10.10%)</title><rect x="487.9" y="469" width="119.1" height="15.0" fill="rgb(205,141,7)" rx="2" ry="2" />
<text  x="490.89" y="479.5" >perf</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="1082.4" y="325" width="1.3" height="15.0" fill="rgb(252,224,12)" rx="2" ry="2" />
<text  x="1085.38" y="335.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.9 (2 samples, 0.22%)</title><rect x="225.2" y="85" width="2.6" height="15.0" fill="rgb(233,133,50)" rx="2" ry="2" />
<text  x="228.24" y="95.5" ></text>
</g>
<g >
<title>sys_read (114 samples, 12.38%)</title><rect x="341.8" y="341" width="146.1" height="15.0" fill="rgb(212,0,34)" rx="2" ry="2" />
<text  x="344.83" y="351.5" >sys_read</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.11%)</title><rect x="1143.9" y="229" width="1.3" height="15.0" fill="rgb(252,28,9)" rx="2" ry="2" />
<text  x="1146.88" y="239.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="487.9" y="325" width="1.3" height="15.0" fill="rgb(238,182,5)" rx="2" ry="2" />
<text  x="490.89" y="335.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.11%)</title><rect x="1092.6" y="309" width="1.3" height="15.0" fill="rgb(209,6,2)" rx="2" ry="2" />
<text  x="1095.63" y="319.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.11%)</title><rect x="33.1" y="165" width="1.2" height="15.0" fill="rgb(221,99,39)" rx="2" ry="2" />
<text  x="36.06" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (27 samples, 2.93%)</title><rect x="1152.8" y="309" width="34.6" height="15.0" fill="rgb(244,103,23)" rx="2" ry="2" />
<text  x="1155.84" y="319.5" >cp..</text>
</g>
<g >
<title>mark_buffer_dirty (18 samples, 1.95%)</title><rect x="247.0" y="149" width="23.1" height="15.0" fill="rgb(252,20,44)" rx="2" ry="2" />
<text  x="250.02" y="159.5" >m..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.11%)</title><rect x="1092.6" y="325" width="1.3" height="15.0" fill="rgb(233,95,31)" rx="2" ry="2" />
<text  x="1095.63" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (92 samples, 9.99%)</title><rect x="348.2" y="229" width="117.9" height="15.0" fill="rgb(240,130,19)" rx="2" ry="2" />
<text  x="351.24" y="239.5" >copy_user_enha..</text>
</g>
<g >
<title>do_syscall_64 (80 samples, 8.69%)</title><rect x="504.5" y="389" width="102.5" height="15.0" fill="rgb(224,67,45)" rx="2" ry="2" />
<text  x="507.55" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="15.1" y="277" width="1.3" height="15.0" fill="rgb(231,26,35)" rx="2" ry="2" />
<text  x="18.12" y="287.5" ></text>
</g>
<g >
<title>find_get_entry (2 samples, 0.22%)</title><rect x="148.4" y="165" width="2.5" height="15.0" fill="rgb(214,7,24)" rx="2" ry="2" />
<text  x="151.37" y="175.5" ></text>
</g>
<g >
<title>_perf_event_enable (78 samples, 8.47%)</title><rect x="505.8" y="309" width="100.0" height="15.0" fill="rgb(213,89,31)" rx="2" ry="2" />
<text  x="508.83" y="319.5" >_perf_event_..</text>
</g>
<g >
<title>cat (368 samples, 39.96%)</title><rect x="16.4" y="469" width="471.5" height="15.0" fill="rgb(229,164,43)" rx="2" ry="2" />
<text  x="19.41" y="479.5" >cat</text>
</g>
<g >
<title>rebalance_domains (13 samples, 1.41%)</title><rect x="1169.5" y="197" width="16.7" height="15.0" fill="rgb(213,225,14)" rx="2" ry="2" />
<text  x="1172.50" y="207.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (30 samples, 3.26%)</title><rect x="1151.6" y="437" width="38.4" height="15.0" fill="rgb(216,219,17)" rx="2" ry="2" />
<text  x="1154.56" y="447.5" >x86..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (2 samples, 0.22%)</title><rect x="20.2" y="213" width="2.6" height="15.0" fill="rgb(229,77,0)" rx="2" ry="2" />
<text  x="23.25" y="223.5" ></text>
</g>
<g >
<title>call_cpuidle (27 samples, 2.93%)</title><rect x="1152.8" y="341" width="34.6" height="15.0" fill="rgb(214,183,38)" rx="2" ry="2" />
<text  x="1155.84" y="351.5" >ca..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.11%)</title><rect x="1143.9" y="309" width="1.3" height="15.0" fill="rgb(252,35,7)" rx="2" ry="2" />
<text  x="1146.88" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.54%)</title><rect x="157.3" y="149" width="6.4" height="15.0" fill="rgb(229,59,40)" rx="2" ry="2" />
<text  x="160.34" y="159.5" ></text>
</g>
<g >
<title>generic_file_read_iter (114 samples, 12.38%)</title><rect x="341.8" y="261" width="146.1" height="15.0" fill="rgb(206,79,49)" rx="2" ry="2" />
<text  x="344.83" y="271.5" >generic_file_read_..</text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="15.1" y="373" width="1.3" height="15.0" fill="rgb(221,3,53)" rx="2" ry="2" />
<text  x="18.12" y="383.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.11%)</title><rect x="1079.8" y="325" width="1.3" height="15.0" fill="rgb(216,158,36)" rx="2" ry="2" />
<text  x="1082.82" y="335.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.11%)</title><rect x="97.1" y="117" width="1.3" height="15.0" fill="rgb(244,151,13)" rx="2" ry="2" />
<text  x="100.12" y="127.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.11%)</title><rect x="11.3" y="325" width="1.3" height="15.0" fill="rgb(238,101,44)" rx="2" ry="2" />
<text  x="14.28" y="335.5" ></text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.33%)</title><rect x="11.3" y="373" width="3.8" height="15.0" fill="rgb(209,54,52)" rx="2" ry="2" />
<text  x="14.28" y="383.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.11%)</title><rect x="88.2" y="197" width="1.2" height="15.0" fill="rgb(231,12,25)" rx="2" ry="2" />
<text  x="91.15" y="207.5" ></text>
</g>
<g >
<title>crypto_shash_update (12 samples, 1.30%)</title><rect x="194.5" y="69" width="15.4" height="15.0" fill="rgb(251,43,18)" rx="2" ry="2" />
<text  x="197.50" y="79.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.22%)</title><rect x="494.3" y="277" width="2.6" height="15.0" fill="rgb(243,152,27)" rx="2" ry="2" />
<text  x="497.30" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (368 samples, 39.96%)</title><rect x="16.4" y="437" width="471.5" height="15.0" fill="rgb(215,59,6)" rx="2" ry="2" />
<text  x="19.41" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.11%)</title><rect x="1081.1" y="341" width="1.3" height="15.0" fill="rgb(209,87,5)" rx="2" ry="2" />
<text  x="1084.10" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.11%)</title><rect x="494.3" y="213" width="1.3" height="15.0" fill="rgb(253,183,38)" rx="2" ry="2" />
<text  x="497.30" y="223.5" ></text>
</g>
<g >
<title>main (3 samples, 0.33%)</title><rect x="11.3" y="421" width="3.8" height="15.0" fill="rgb(209,5,25)" rx="2" ry="2" />
<text  x="14.28" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="12.6" y="197" width="1.2" height="15.0" fill="rgb(231,6,15)" rx="2" ry="2" />
<text  x="15.56" y="207.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.11%)</title><rect x="135.6" y="117" width="1.2" height="15.0" fill="rgb(254,64,36)" rx="2" ry="2" />
<text  x="138.56" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="1154.1" y="245" width="1.3" height="15.0" fill="rgb(235,85,30)" rx="2" ry="2" />
<text  x="1157.13" y="255.5" ></text>
</g>
<g >
<title>get_user_pages_remote (1 samples, 0.11%)</title><rect x="11.3" y="213" width="1.3" height="15.0" fill="rgb(240,107,11)" rx="2" ry="2" />
<text  x="14.28" y="223.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.11%)</title><rect x="536.6" y="133" width="1.3" height="15.0" fill="rgb(237,187,28)" rx="2" ry="2" />
<text  x="539.58" y="143.5" ></text>
</g>
<g >
<title>do_sys_poll (6 samples, 0.65%)</title><rect x="1081.1" y="405" width="7.7" height="15.0" fill="rgb(209,118,33)" rx="2" ry="2" />
<text  x="1084.10" y="415.5" ></text>
</g>
<g >
<title>intel_idle (8 samples, 0.87%)</title><rect x="1155.4" y="293" width="10.3" height="15.0" fill="rgb(231,113,11)" rx="2" ry="2" />
<text  x="1158.41" y="303.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (3 samples, 0.33%)</title><rect x="83.0" y="165" width="3.9" height="15.0" fill="rgb(205,157,30)" rx="2" ry="2" />
<text  x="86.03" y="175.5" ></text>
</g>
<g >
<title>__page_cache_alloc (17 samples, 1.85%)</title><rect x="90.7" y="165" width="21.8" height="15.0" fill="rgb(236,217,18)" rx="2" ry="2" />
<text  x="93.72" y="175.5" >_..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.11%)</title><rect x="1104.2" y="261" width="1.2" height="15.0" fill="rgb(238,161,48)" rx="2" ry="2" />
<text  x="1107.16" y="271.5" ></text>
</g>
<g >
<title>stop_one_cpu (1 samples, 0.11%)</title><rect x="489.2" y="341" width="1.3" height="15.0" fill="rgb(244,154,13)" rx="2" ry="2" />
<text  x="492.17" y="351.5" ></text>
</g>
<g >
<title>remote_function (68 samples, 7.38%)</title><rect x="518.6" y="245" width="87.2" height="15.0" fill="rgb(212,213,44)" rx="2" ry="2" />
<text  x="521.64" y="255.5" >remote_fun..</text>
</g>
<g >
<title>find_get_pages_range (1 samples, 0.11%)</title><rect x="54.8" y="149" width="1.3" height="15.0" fill="rgb(242,74,14)" rx="2" ry="2" />
<text  x="57.84" y="159.5" ></text>
</g>
<g >
<title>[cat] (368 samples, 39.96%)</title><rect x="16.4" y="405" width="471.5" height="15.0" fill="rgb(250,223,34)" rx="2" ry="2" />
<text  x="19.41" y="415.5" >[cat]</text>
</g>
<g >
<title>event_function_call (78 samples, 8.47%)</title><rect x="505.8" y="293" width="100.0" height="15.0" fill="rgb(212,17,27)" rx="2" ry="2" />
<text  x="508.83" y="303.5" >event_functi..</text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.33%)</title><rect x="186.8" y="101" width="3.9" height="15.0" fill="rgb(238,96,17)" rx="2" ry="2" />
<text  x="189.81" y="111.5" ></text>
</g>
<g >
<title>generic_write_end (83 samples, 9.01%)</title><rect x="165.0" y="197" width="106.4" height="15.0" fill="rgb(244,112,50)" rx="2" ry="2" />
<text  x="168.03" y="207.5" >generic_write..</text>
</g>
<g >
<title>force_qs_rnp (1 samples, 0.11%)</title><rect x="1091.3" y="405" width="1.3" height="15.0" fill="rgb(210,54,52)" rx="2" ry="2" />
<text  x="1094.35" y="415.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (33 samples, 3.58%)</title><rect x="170.2" y="133" width="42.2" height="15.0" fill="rgb(244,225,48)" rx="2" ry="2" />
<text  x="173.15" y="143.5" >ext..</text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.11%)</title><rect x="1082.4" y="245" width="1.3" height="15.0" fill="rgb(221,66,35)" rx="2" ry="2" />
<text  x="1085.38" y="255.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.11%)</title><rect x="11.3" y="357" width="1.3" height="15.0" fill="rgb(245,135,22)" rx="2" ry="2" />
<text  x="14.28" y="367.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.11%)</title><rect x="12.6" y="165" width="1.2" height="15.0" fill="rgb(205,30,22)" rx="2" ry="2" />
<text  x="15.56" y="175.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.22%)</title><rect x="498.1" y="277" width="2.6" height="15.0" fill="rgb(240,80,44)" rx="2" ry="2" />
<text  x="501.14" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.09%)</title><rect x="1077.3" y="453" width="12.8" height="15.0" fill="rgb(237,164,39)" rx="2" ry="2" />
<text  x="1080.25" y="463.5" ></text>
</g>
<g >
<title>_warn_unseeded_randomness (1 samples, 0.11%)</title><rect x="65.1" y="69" width="1.3" height="15.0" fill="rgb(253,55,10)" rx="2" ry="2" />
<text  x="68.09" y="79.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.22%)</title><rect x="1099.0" y="245" width="2.6" height="15.0" fill="rgb(220,133,27)" rx="2" ry="2" />
<text  x="1102.03" y="255.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.11%)</title><rect x="267.5" y="133" width="1.3" height="15.0" fill="rgb(222,229,4)" rx="2" ry="2" />
<text  x="270.52" y="143.5" ></text>
</g>
<g >
<title>arp_rcv (1 samples, 0.11%)</title><rect x="1143.9" y="181" width="1.3" height="15.0" fill="rgb(206,43,6)" rx="2" ry="2" />
<text  x="1146.88" y="191.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.11%)</title><rect x="209.9" y="101" width="1.3" height="15.0" fill="rgb(225,151,33)" rx="2" ry="2" />
<text  x="212.87" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="57.4" y="165" width="1.3" height="15.0" fill="rgb(245,4,23)" rx="2" ry="2" />
<text  x="60.40" y="175.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.22%)</title><rect x="490.5" y="341" width="2.5" height="15.0" fill="rgb(208,180,42)" rx="2" ry="2" />
<text  x="493.46" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.22%)</title><rect x="487.9" y="421" width="2.6" height="15.0" fill="rgb(237,76,43)" rx="2" ry="2" />
<text  x="490.89" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64 (73 samples, 7.93%)</title><rect x="1096.5" y="453" width="93.5" height="15.0" fill="rgb(233,219,39)" rx="2" ry="2" />
<text  x="1099.47" y="463.5" >secondary_s..</text>
</g>
<g >
<title>mutex_lock (1 samples, 0.11%)</title><rect x="1088.8" y="357" width="1.3" height="15.0" fill="rgb(247,84,0)" rx="2" ry="2" />
<text  x="1091.78" y="367.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (48 samples, 5.21%)</title><rect x="89.4" y="197" width="61.5" height="15.0" fill="rgb(210,184,34)" rx="2" ry="2" />
<text  x="92.44" y="207.5" >grab_c..</text>
</g>
<g >
<title>__generic_file_write_iter (6 samples, 0.65%)</title><rect x="494.3" y="309" width="7.7" height="15.0" fill="rgb(254,166,1)" rx="2" ry="2" />
<text  x="497.30" y="319.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.11%)</title><rect x="34.3" y="165" width="1.3" height="15.0" fill="rgb(213,71,26)" rx="2" ry="2" />
<text  x="37.34" y="175.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.22%)</title><rect x="1183.6" y="165" width="2.6" height="15.0" fill="rgb(240,132,38)" rx="2" ry="2" />
<text  x="1186.59" y="175.5" ></text>
</g>
<g >
<title>vfs_write (254 samples, 27.58%)</title><rect x="16.4" y="309" width="325.4" height="15.0" fill="rgb(216,91,13)" rx="2" ry="2" />
<text  x="19.41" y="319.5" >vfs_write</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.43%)</title><rect x="157.3" y="133" width="5.2" height="15.0" fill="rgb(243,157,15)" rx="2" ry="2" />
<text  x="160.34" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="494.3" y="197" width="1.3" height="15.0" fill="rgb(227,122,43)" rx="2" ry="2" />
<text  x="497.30" y="207.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.11%)</title><rect x="12.6" y="325" width="1.2" height="15.0" fill="rgb(218,132,31)" rx="2" ry="2" />
<text  x="15.56" y="335.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.11%)</title><rect x="493.0" y="341" width="1.3" height="15.0" fill="rgb(207,176,24)" rx="2" ry="2" />
<text  x="496.02" y="351.5" ></text>
</g>
<g >
<title>sys_ioctl (80 samples, 8.69%)</title><rect x="504.5" y="373" width="102.5" height="15.0" fill="rgb(250,141,25)" rx="2" ry="2" />
<text  x="507.55" y="383.5" >sys_ioctl</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="1154.1" y="197" width="1.3" height="15.0" fill="rgb(237,214,25)" rx="2" ry="2" />
<text  x="1157.13" y="207.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.11%)</title><rect x="1165.7" y="229" width="1.2" height="15.0" fill="rgb(213,5,43)" rx="2" ry="2" />
<text  x="1168.66" y="239.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.11%)</title><rect x="1143.9" y="213" width="1.3" height="15.0" fill="rgb(238,93,16)" rx="2" ry="2" />
<text  x="1146.88" y="223.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.43%)</title><rect x="63.8" y="117" width="5.1" height="15.0" fill="rgb(242,29,42)" rx="2" ry="2" />
<text  x="66.81" y="127.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.11%)</title><rect x="89.4" y="181" width="1.3" height="15.0" fill="rgb(249,224,24)" rx="2" ry="2" />
<text  x="92.44" y="191.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (30 samples, 3.26%)</title><rect x="1151.6" y="421" width="38.4" height="15.0" fill="rgb(240,119,44)" rx="2" ry="2" />
<text  x="1154.56" y="431.5" >x86..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.76%)</title><rect x="494.3" y="405" width="9.0" height="15.0" fill="rgb(223,13,17)" rx="2" ry="2" />
<text  x="497.30" y="415.5" ></text>
</g>
<g >
<title>intel_idle (29 samples, 3.15%)</title><rect x="1106.7" y="341" width="37.2" height="15.0" fill="rgb(254,9,17)" rx="2" ry="2" />
<text  x="1109.72" y="351.5" >int..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.11%)</title><rect x="147.1" y="85" width="1.3" height="15.0" fill="rgb(241,207,32)" rx="2" ry="2" />
<text  x="150.09" y="95.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (7 samples, 0.76%)</title><rect x="1097.8" y="325" width="8.9" height="15.0" fill="rgb(252,52,16)" rx="2" ry="2" />
<text  x="1100.75" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (30 samples, 3.26%)</title><rect x="1151.6" y="373" width="38.4" height="15.0" fill="rgb(206,14,3)" rx="2" ry="2" />
<text  x="1154.56" y="383.5" >cpu..</text>
</g>
<g >
<title>start_this_handle (10 samples, 1.09%)</title><rect x="35.6" y="165" width="12.8" height="15.0" fill="rgb(252,27,43)" rx="2" ry="2" />
<text  x="38.62" y="175.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.11%)</title><rect x="1187.4" y="325" width="1.3" height="15.0" fill="rgb(207,164,47)" rx="2" ry="2" />
<text  x="1190.44" y="335.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.11%)</title><rect x="1154.1" y="213" width="1.3" height="15.0" fill="rgb(251,76,43)" rx="2" ry="2" />
<text  x="1157.13" y="223.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.11%)</title><rect x="1150.3" y="357" width="1.3" height="15.0" fill="rgb(230,123,14)" rx="2" ry="2" />
<text  x="1153.28" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (66 samples, 7.17%)</title><rect x="519.9" y="181" width="84.6" height="15.0" fill="rgb(230,14,53)" rx="2" ry="2" />
<text  x="522.92" y="191.5" >x86_pmu_e..</text>
</g>
<g >
<title>radix_tree_lookup_slot (2 samples, 0.22%)</title><rect x="484.0" y="213" width="2.6" height="15.0" fill="rgb(225,197,47)" rx="2" ry="2" />
<text  x="487.05" y="223.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="15.1" y="229" width="1.3" height="15.0" fill="rgb(248,178,13)" rx="2" ry="2" />
<text  x="18.12" y="239.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.11%)</title><rect x="13.8" y="293" width="1.3" height="15.0" fill="rgb(217,12,35)" rx="2" ry="2" />
<text  x="16.84" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_current (17 samples, 1.85%)</title><rect x="90.7" y="149" width="21.8" height="15.0" fill="rgb(232,29,36)" rx="2" ry="2" />
<text  x="93.72" y="159.5" >a..</text>
</g>
<g >
<title>hash_insert (1 samples, 0.11%)</title><rect x="13.8" y="277" width="1.3" height="15.0" fill="rgb(236,4,9)" rx="2" ry="2" />
<text  x="16.84" y="287.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.22%)</title><rect x="494.3" y="245" width="2.6" height="15.0" fill="rgb(223,83,41)" rx="2" ry="2" />
<text  x="497.30" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.54%)</title><rect x="1099.0" y="293" width="6.4" height="15.0" fill="rgb(229,65,21)" rx="2" ry="2" />
<text  x="1102.03" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_write (254 samples, 27.58%)</title><rect x="16.4" y="373" width="325.4" height="15.0" fill="rgb(226,81,15)" rx="2" ry="2" />
<text  x="19.41" y="383.5" >__GI___libc_write</text>
</g>
<g >
<title>__softirqentry_text_start (15 samples, 1.63%)</title><rect x="1166.9" y="229" width="19.3" height="15.0" fill="rgb(219,85,53)" rx="2" ry="2" />
<text  x="1169.94" y="239.5" ></text>
</g>
<g >
<title>block_write_end (33 samples, 3.58%)</title><rect x="227.8" y="181" width="42.3" height="15.0" fill="rgb(215,94,1)" rx="2" ry="2" />
<text  x="230.81" y="191.5" >blo..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="503.3" y="389" width="1.2" height="15.0" fill="rgb(241,222,18)" rx="2" ry="2" />
<text  x="506.27" y="399.5" ></text>
</g>
<g >
<title>setup_object_debug.isra.60 (1 samples, 0.11%)</title><rect x="67.7" y="85" width="1.2" height="15.0" fill="rgb(220,85,25)" rx="2" ry="2" />
<text  x="70.65" y="95.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.11%)</title><rect x="340.6" y="245" width="1.2" height="15.0" fill="rgb(253,167,3)" rx="2" ry="2" />
<text  x="343.55" y="255.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (37 samples, 4.02%)</title><rect x="1097.8" y="357" width="47.4" height="15.0" fill="rgb(246,44,12)" rx="2" ry="2" />
<text  x="1100.75" y="367.5" >cpui..</text>
</g>
<g >
<title>sys_mmap (1 samples, 0.11%)</title><rect x="15.1" y="261" width="1.3" height="15.0" fill="rgb(229,24,0)" rx="2" ry="2" />
<text  x="18.12" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (254 samples, 27.58%)</title><rect x="16.4" y="357" width="325.4" height="15.0" fill="rgb(215,118,10)" rx="2" ry="2" />
<text  x="19.41" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.11%)</title><rect x="1143.9" y="149" width="1.3" height="15.0" fill="rgb(239,204,16)" rx="2" ry="2" />
<text  x="1146.88" y="159.5" ></text>
</g>
<g >
<title>__atime_needs_update (1 samples, 0.11%)</title><rect x="486.6" y="229" width="1.3" height="15.0" fill="rgb(226,46,53)" rx="2" ry="2" />
<text  x="489.61" y="239.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (2 samples, 0.22%)</title><rect x="484.0" y="197" width="2.6" height="15.0" fill="rgb(220,196,52)" rx="2" ry="2" />
<text  x="487.05" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.33%)</title><rect x="490.5" y="405" width="3.8" height="15.0" fill="rgb(242,132,41)" rx="2" ry="2" />
<text  x="493.46" y="415.5" ></text>
</g>
<g >
<title>memcmp_pages (1 samples, 0.11%)</title><rect x="1090.1" y="405" width="1.2" height="15.0" fill="rgb(230,204,54)" rx="2" ry="2" />
<text  x="1093.07" y="415.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (16 samples, 1.74%)</title><rect x="27.9" y="197" width="20.5" height="15.0" fill="rgb(250,150,43)" rx="2" ry="2" />
<text  x="30.94" y="207.5" ></text>
</g>
<g >
<title>copy_strings_kernel (1 samples, 0.11%)</title><rect x="11.3" y="245" width="1.3" height="15.0" fill="rgb(240,146,45)" rx="2" ry="2" />
<text  x="14.28" y="255.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.11%)</title><rect x="149.7" y="133" width="1.2" height="15.0" fill="rgb(214,162,30)" rx="2" ry="2" />
<text  x="152.65" y="143.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.34 (33 samples, 3.58%)</title><rect x="227.8" y="165" width="42.3" height="15.0" fill="rgb(222,90,22)" rx="2" ry="2" />
<text  x="230.81" y="175.5" >__b..</text>
</g>
<g >
<title>__inc_zone_page_state (1 samples, 0.11%)</title><rect x="253.4" y="117" width="1.3" height="15.0" fill="rgb(206,153,29)" rx="2" ry="2" />
<text  x="256.43" y="127.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.11%)</title><rect x="1088.8" y="389" width="1.3" height="15.0" fill="rgb(229,203,44)" rx="2" ry="2" />
<text  x="1091.78" y="399.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.11%)</title><rect x="209.9" y="85" width="1.3" height="15.0" fill="rgb(211,182,54)" rx="2" ry="2" />
<text  x="212.87" y="95.5" ></text>
</g>
<g >
<title>_raw_write_lock (1 samples, 0.11%)</title><rect x="79.2" y="165" width="1.3" height="15.0" fill="rgb(254,155,13)" rx="2" ry="2" />
<text  x="82.19" y="175.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.11%)</title><rect x="1092.6" y="357" width="1.3" height="15.0" fill="rgb(236,68,11)" rx="2" ry="2" />
<text  x="1095.63" y="367.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.11%)</title><rect x="11.3" y="261" width="1.3" height="15.0" fill="rgb(253,87,3)" rx="2" ry="2" />
<text  x="14.28" y="271.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.11%)</title><rect x="487.9" y="277" width="1.3" height="15.0" fill="rgb(254,38,53)" rx="2" ry="2" />
<text  x="490.89" y="287.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.11%)</title><rect x="1088.8" y="373" width="1.3" height="15.0" fill="rgb(242,142,18)" rx="2" ry="2" />
<text  x="1091.78" y="383.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (1 samples, 0.11%)</title><rect x="604.5" y="213" width="1.3" height="15.0" fill="rgb(219,171,6)" rx="2" ry="2" />
<text  x="607.48" y="223.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.11%)</title><rect x="487.9" y="293" width="1.3" height="15.0" fill="rgb(250,40,47)" rx="2" ry="2" />
<text  x="490.89" y="303.5" ></text>
</g>
<g >
<title>sys_poll (3 samples, 0.33%)</title><rect x="490.5" y="389" width="3.8" height="15.0" fill="rgb(220,184,54)" rx="2" ry="2" />
<text  x="493.46" y="399.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (10 samples, 1.09%)</title><rect x="152.2" y="197" width="12.8" height="15.0" fill="rgb(237,133,30)" rx="2" ry="2" />
<text  x="155.21" y="207.5" ></text>
</g>
<g >
<title>__GI___sched_setaffinity_new (2 samples, 0.22%)</title><rect x="487.9" y="437" width="2.6" height="15.0" fill="rgb(210,117,9)" rx="2" ry="2" />
<text  x="490.89" y="447.5" ></text>
</g>
<g >
<title>copy_page_to_iter (95 samples, 10.31%)</title><rect x="344.4" y="245" width="121.7" height="15.0" fill="rgb(244,211,50)" rx="2" ry="2" />
<text  x="347.40" y="255.5" >copy_page_to_iter</text>
</g>
<g >
<title>reader_loop (3 samples, 0.33%)</title><rect x="11.3" y="405" width="3.8" height="15.0" fill="rgb(209,35,44)" rx="2" ry="2" />
<text  x="14.28" y="415.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.11%)</title><rect x="1091.3" y="373" width="1.3" height="15.0" fill="rgb(236,84,35)" rx="2" ry="2" />
<text  x="1094.35" y="383.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (79 samples, 8.58%)</title><rect x="504.5" y="325" width="101.3" height="15.0" fill="rgb(232,64,13)" rx="2" ry="2" />
<text  x="507.55" y="335.5" >perf_event_f..</text>
</g>
<g >
<title>ext4_reserve_inode_write (12 samples, 1.30%)</title><rect x="212.4" y="133" width="15.4" height="15.0" fill="rgb(226,121,45)" rx="2" ry="2" />
<text  x="215.43" y="143.5" ></text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.11%)</title><rect x="261.1" y="85" width="1.3" height="15.0" fill="rgb(218,186,33)" rx="2" ry="2" />
<text  x="264.12" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="11.3" y="309" width="1.3" height="15.0" fill="rgb(223,164,38)" rx="2" ry="2" />
<text  x="14.28" y="319.5" ></text>
</g>
<g >
<title>find_get_entry (15 samples, 1.63%)</title><rect x="467.4" y="229" width="19.2" height="15.0" fill="rgb(237,85,46)" rx="2" ry="2" />
<text  x="470.39" y="239.5" ></text>
</g>
<g >
<title>irq_exit (6 samples, 0.65%)</title><rect x="1097.8" y="309" width="7.6" height="15.0" fill="rgb(206,40,38)" rx="2" ry="2" />
<text  x="1100.75" y="319.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.11%)</title><rect x="1091.3" y="389" width="1.3" height="15.0" fill="rgb(218,34,36)" rx="2" ry="2" />
<text  x="1094.35" y="399.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (31 samples, 3.37%)</title><rect x="48.4" y="197" width="39.8" height="15.0" fill="rgb(205,41,11)" rx="2" ry="2" />
<text  x="51.44" y="207.5" >ext..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.22%)</title><rect x="498.1" y="261" width="2.6" height="15.0" fill="rgb(225,86,40)" rx="2" ry="2" />
<text  x="501.14" y="271.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.11%)</title><rect x="535.3" y="133" width="1.3" height="15.0" fill="rgb(227,166,51)" rx="2" ry="2" />
<text  x="538.30" y="143.5" ></text>
</g>
<g >
<title>shell_execve (1 samples, 0.11%)</title><rect x="11.3" y="341" width="1.3" height="15.0" fill="rgb(245,73,20)" rx="2" ry="2" />
<text  x="14.28" y="351.5" ></text>
</g>
<g >
<title>__GI___tcgetattr (1 samples, 0.11%)</title><rect x="12.6" y="229" width="1.2" height="15.0" fill="rgb(212,206,3)" rx="2" ry="2" />
<text  x="15.56" y="239.5" ></text>
</g>
<g >
<title>do_set_cpus_allowed (1 samples, 0.11%)</title><rect x="487.9" y="341" width="1.3" height="15.0" fill="rgb(248,6,37)" rx="2" ry="2" />
<text  x="490.89" y="351.5" ></text>
</g>
<g >
<title>alloc_page_buffers (8 samples, 0.87%)</title><rect x="58.7" y="165" width="10.2" height="15.0" fill="rgb(216,190,40)" rx="2" ry="2" />
<text  x="61.69" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.11%)</title><rect x="1166.9" y="197" width="1.3" height="15.0" fill="rgb(241,104,23)" rx="2" ry="2" />
<text  x="1169.94" y="207.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 0.43%)</title><rect x="1099.0" y="277" width="5.2" height="15.0" fill="rgb(209,109,25)" rx="2" ry="2" />
<text  x="1102.03" y="287.5" ></text>
</g>
<g >
<title>do_idle (29 samples, 3.15%)</title><rect x="1152.8" y="357" width="37.2" height="15.0" fill="rgb(231,131,10)" rx="2" ry="2" />
<text  x="1155.84" y="367.5" >do_..</text>
</g>
<g >
<title>sys_write (7 samples, 0.76%)</title><rect x="494.3" y="389" width="9.0" height="15.0" fill="rgb(228,48,26)" rx="2" ry="2" />
<text  x="497.30" y="399.5" ></text>
</g>
<g >
<title>call_cpuidle (37 samples, 4.02%)</title><rect x="1097.8" y="389" width="47.4" height="15.0" fill="rgb(238,75,11)" rx="2" ry="2" />
<text  x="1100.75" y="399.5" >call..</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.11%)</title><rect x="1104.2" y="229" width="1.2" height="15.0" fill="rgb(218,71,34)" rx="2" ry="2" />
<text  x="1107.16" y="239.5" ></text>
</g>
<g >
<title>perf_ioctl (79 samples, 8.58%)</title><rect x="504.5" y="341" width="101.3" height="15.0" fill="rgb(253,74,31)" rx="2" ry="2" />
<text  x="507.55" y="351.5" >perf_ioctl</text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.11%)</title><rect x="500.7" y="277" width="1.3" height="15.0" fill="rgb(218,146,44)" rx="2" ry="2" />
<text  x="503.71" y="287.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.11%)</title><rect x="15.1" y="309" width="1.3" height="15.0" fill="rgb(241,40,18)" rx="2" ry="2" />
<text  x="18.12" y="319.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.22%)</title><rect x="1081.1" y="357" width="2.6" height="15.0" fill="rgb(214,23,10)" rx="2" ry="2" />
<text  x="1084.10" y="367.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.11%)</title><rect x="1092.6" y="405" width="1.3" height="15.0" fill="rgb(250,106,40)" rx="2" ry="2" />
<text  x="1095.63" y="415.5" ></text>
</g>
<g >
<title>sched_setaffinity (2 samples, 0.22%)</title><rect x="487.9" y="373" width="2.6" height="15.0" fill="rgb(219,150,14)" rx="2" ry="2" />
<text  x="490.89" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="1104.2" y="213" width="1.2" height="15.0" fill="rgb(245,222,14)" rx="2" ry="2" />
<text  x="1107.16" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_end (94 samples, 10.21%)</title><rect x="150.9" y="213" width="120.5" height="15.0" fill="rgb(216,104,46)" rx="2" ry="2" />
<text  x="153.93" y="223.5" >ext4_da_write_end</text>
</g>
<g >
<title>mem_cgroup_commit_charge (2 samples, 0.22%)</title><rect x="120.2" y="133" width="2.5" height="15.0" fill="rgb(222,201,39)" rx="2" ry="2" />
<text  x="123.18" y="143.5" ></text>
</g>
<g >
<title>sys_ppoll (6 samples, 0.65%)</title><rect x="1081.1" y="421" width="7.7" height="15.0" fill="rgb(213,50,21)" rx="2" ry="2" />
<text  x="1084.10" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (100 samples, 10.86%)</title><rect x="22.8" y="213" width="128.1" height="15.0" fill="rgb(213,60,50)" rx="2" ry="2" />
<text  x="25.81" y="223.5" >ext4_da_write_be..</text>
</g>
<g >
<title>get_page_from_freelist (11 samples, 1.19%)</title><rect x="98.4" y="117" width="14.1" height="15.0" fill="rgb(230,81,19)" rx="2" ry="2" />
<text  x="101.40" y="127.5" ></text>
</g>
<g >
<title>fdarray__poll (3 samples, 0.33%)</title><rect x="490.5" y="453" width="3.8" height="15.0" fill="rgb(242,223,18)" rx="2" ry="2" />
<text  x="493.46" y="463.5" ></text>
</g>
<g >
<title>sys_sched_setaffinity (2 samples, 0.22%)</title><rect x="487.9" y="389" width="2.6" height="15.0" fill="rgb(236,180,41)" rx="2" ry="2" />
<text  x="490.89" y="399.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.11%)</title><rect x="81.7" y="149" width="1.3" height="15.0" fill="rgb(243,39,12)" rx="2" ry="2" />
<text  x="84.75" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.22%)</title><rect x="72.8" y="149" width="2.5" height="15.0" fill="rgb(241,103,37)" rx="2" ry="2" />
<text  x="75.78" y="159.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="1093.9" y="341" width="1.3" height="15.0" fill="rgb(206,184,1)" rx="2" ry="2" />
<text  x="1096.91" y="351.5" ></text>
</g>
<g >
<title>reschedule_interrupt (17 samples, 1.85%)</title><rect x="1165.7" y="293" width="21.7" height="15.0" fill="rgb(205,19,15)" rx="2" ry="2" />
<text  x="1168.66" y="303.5" >r..</text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.11%)</title><rect x="16.4" y="213" width="1.3" height="15.0" fill="rgb(247,125,16)" rx="2" ry="2" />
<text  x="19.41" y="223.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.22%)</title><rect x="490.5" y="357" width="2.5" height="15.0" fill="rgb(222,118,23)" rx="2" ry="2" />
<text  x="493.46" y="367.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.11%)</title><rect x="605.8" y="341" width="1.2" height="15.0" fill="rgb(238,4,9)" rx="2" ry="2" />
<text  x="608.77" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.22%)</title><rect x="1145.2" y="389" width="2.5" height="15.0" fill="rgb(207,41,21)" rx="2" ry="2" />
<text  x="1148.16" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="12.6" y="213" width="1.2" height="15.0" fill="rgb(254,90,22)" rx="2" ry="2" />
<text  x="15.56" y="223.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.43%)</title><rect x="1090.1" y="453" width="5.1" height="15.0" fill="rgb(239,203,20)" rx="2" ry="2" />
<text  x="1093.07" y="463.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.11%)</title><rect x="1104.2" y="277" width="1.2" height="15.0" fill="rgb(217,151,50)" rx="2" ry="2" />
<text  x="1107.16" y="287.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.11%)</title><rect x="80.5" y="165" width="1.2" height="15.0" fill="rgb(235,85,23)" rx="2" ry="2" />
<text  x="83.47" y="175.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.11%)</title><rect x="1145.2" y="373" width="1.2" height="15.0" fill="rgb(222,207,51)" rx="2" ry="2" />
<text  x="1148.16" y="383.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="1079.8" y="309" width="1.3" height="15.0" fill="rgb(207,67,43)" rx="2" ry="2" />
<text  x="1082.82" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="1093.9" y="389" width="1.3" height="15.0" fill="rgb(236,211,47)" rx="2" ry="2" />
<text  x="1096.91" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="1154.1" y="293" width="1.3" height="15.0" fill="rgb(211,80,46)" rx="2" ry="2" />
<text  x="1157.13" y="303.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.11%)</title><rect x="1143.9" y="341" width="1.3" height="15.0" fill="rgb(208,109,10)" rx="2" ry="2" />
<text  x="1146.88" y="351.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.11%)</title><rect x="534.0" y="133" width="1.3" height="15.0" fill="rgb(250,202,13)" rx="2" ry="2" />
<text  x="537.02" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.33%)</title><rect x="1147.7" y="389" width="3.9" height="15.0" fill="rgb(217,28,46)" rx="2" ry="2" />
<text  x="1150.72" y="399.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="1082.4" y="293" width="1.3" height="15.0" fill="rgb(223,117,38)" rx="2" ry="2" />
<text  x="1085.38" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="1093.9" y="357" width="1.3" height="15.0" fill="rgb(251,67,2)" rx="2" ry="2" />
<text  x="1096.91" y="367.5" ></text>
</g>
<g >
<title>smp_reschedule_interrupt (17 samples, 1.85%)</title><rect x="1165.7" y="277" width="21.7" height="15.0" fill="rgb(216,155,4)" rx="2" ry="2" />
<text  x="1168.66" y="287.5" >s..</text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1093.9" y="405" width="1.3" height="15.0" fill="rgb(250,40,45)" rx="2" ry="2" />
<text  x="1096.91" y="415.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (253 samples, 27.47%)</title><rect x="16.4" y="245" width="324.2" height="15.0" fill="rgb(225,82,28)" rx="2" ry="2" />
<text  x="19.41" y="255.5" >__generic_file_write_iter</text>
</g>
<g >
<title>intel_pmu_enable_all (66 samples, 7.17%)</title><rect x="519.9" y="165" width="84.6" height="15.0" fill="rgb(222,89,18)" rx="2" ry="2" />
<text  x="522.92" y="175.5" >intel_pmu..</text>
</g>
<g >
<title>__dquot_alloc_space (3 samples, 0.33%)</title><rect x="71.5" y="165" width="3.8" height="15.0" fill="rgb(242,96,48)" rx="2" ry="2" />
<text  x="74.50" y="175.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.11%)</title><rect x="15.1" y="341" width="1.3" height="15.0" fill="rgb(239,35,41)" rx="2" ry="2" />
<text  x="18.12" y="351.5" ></text>
</g>
<g >
<title>tty_mode_ioctl (1 samples, 0.11%)</title><rect x="12.6" y="101" width="1.2" height="15.0" fill="rgb(253,123,36)" rx="2" ry="2" />
<text  x="15.56" y="111.5" ></text>
</g>
<g >
<title>update_blocked_averages (6 samples, 0.65%)</title><rect x="1178.5" y="181" width="7.7" height="15.0" fill="rgb(211,31,45)" rx="2" ry="2" />
<text  x="1181.47" y="191.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="97.1" y="101" width="1.3" height="15.0" fill="rgb(228,48,22)" rx="2" ry="2" />
<text  x="100.12" y="111.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.11%)</title><rect x="1143.9" y="133" width="1.3" height="15.0" fill="rgb(229,23,26)" rx="2" ry="2" />
<text  x="1146.88" y="143.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.22%)</title><rect x="12.6" y="341" width="2.5" height="15.0" fill="rgb(239,138,3)" rx="2" ry="2" />
<text  x="15.56" y="351.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 0.22%)</title><rect x="1074.7" y="453" width="2.6" height="15.0" fill="rgb(249,53,31)" rx="2" ry="2" />
<text  x="1077.69" y="463.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.11%)</title><rect x="503.3" y="373" width="1.2" height="15.0" fill="rgb(254,138,36)" rx="2" ry="2" />
<text  x="506.27" y="383.5" ></text>
</g>
<g >
<title>start_secondary (43 samples, 4.67%)</title><rect x="1096.5" y="437" width="55.1" height="15.0" fill="rgb(246,96,34)" rx="2" ry="2" />
<text  x="1099.47" y="447.5" >start..</text>
</g>
<g >
<title>cpuidle_enter (27 samples, 2.93%)</title><rect x="1152.8" y="325" width="34.6" height="15.0" fill="rgb(216,14,42)" rx="2" ry="2" />
<text  x="1155.84" y="335.5" >cp..</text>
</g>
<g >
<title>__getblk_gfp (2 samples, 0.22%)</title><rect x="221.4" y="101" width="2.6" height="15.0" fill="rgb(242,110,10)" rx="2" ry="2" />
<text  x="224.40" y="111.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.11%)</title><rect x="496.9" y="261" width="1.2" height="15.0" fill="rgb(229,40,8)" rx="2" ry="2" />
<text  x="499.86" y="271.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (15 samples, 1.63%)</title><rect x="190.7" y="101" width="19.2" height="15.0" fill="rgb(208,181,46)" rx="2" ry="2" />
<text  x="193.65" y="111.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (29 samples, 3.15%)</title><rect x="174.0" y="117" width="37.2" height="15.0" fill="rgb(221,2,39)" rx="2" ry="2" />
<text  x="177.00" y="127.5" >ext..</text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.11%)</title><rect x="494.3" y="229" width="1.3" height="15.0" fill="rgb(236,224,22)" rx="2" ry="2" />
<text  x="497.30" y="239.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.11%)</title><rect x="13.8" y="309" width="1.3" height="15.0" fill="rgb(247,29,32)" rx="2" ry="2" />
<text  x="16.84" y="319.5" ></text>
</g>
<g >
<title>generic_perform_write (252 samples, 27.36%)</title><rect x="17.7" y="229" width="322.9" height="15.0" fill="rgb(206,183,32)" rx="2" ry="2" />
<text  x="20.69" y="239.5" >generic_perform_write</text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.22%)</title><rect x="76.6" y="165" width="2.6" height="15.0" fill="rgb(215,61,37)" rx="2" ry="2" />
<text  x="79.62" y="175.5" ></text>
</g>
<g >
<title>def_shell_mode_sp (1 samples, 0.11%)</title><rect x="12.6" y="261" width="1.2" height="15.0" fill="rgb(219,126,47)" rx="2" ry="2" />
<text  x="15.56" y="271.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.11%)</title><rect x="1104.2" y="245" width="1.2" height="15.0" fill="rgb(244,153,32)" rx="2" ry="2" />
<text  x="1107.16" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="13.8" y="229" width="1.3" height="15.0" fill="rgb(242,136,25)" rx="2" ry="2" />
<text  x="16.84" y="239.5" ></text>
</g>
<g >
<title>__migrate_task (1 samples, 0.11%)</title><rect x="1092.6" y="373" width="1.3" height="15.0" fill="rgb(253,201,32)" rx="2" ry="2" />
<text  x="1095.63" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (3 samples, 0.33%)</title><rect x="224.0" y="101" width="3.8" height="15.0" fill="rgb(250,89,35)" rx="2" ry="2" />
<text  x="226.96" y="111.5" ></text>
</g>
<g >
<title>native_write_msr (51 samples, 5.54%)</title><rect x="537.9" y="133" width="65.3" height="15.0" fill="rgb(253,5,42)" rx="2" ry="2" />
<text  x="540.86" y="143.5" >native_..</text>
</g>
</g>
</svg>
