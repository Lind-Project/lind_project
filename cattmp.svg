<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>cpu_stop_queue_work (1 samples, 0.11%)</title><rect x="506.3" y="373" width="1.3" height="15.0" fill="rgb(241,194,28)" rx="2" ry="2" />
<text  x="509.30" y="383.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (5 samples, 0.55%)</title><rect x="1108.6" y="469" width="6.4" height="15.0" fill="rgb(220,215,4)" rx="2" ry="2" />
<text  x="1111.58" y="479.5" ></text>
</g>
<g >
<title>__radix_tree_replace (4 samples, 0.44%)</title><rect x="147.0" y="165" width="5.2" height="15.0" fill="rgb(224,188,42)" rx="2" ry="2" />
<text  x="150.00" y="175.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (12 samples, 1.31%)</title><rect x="16.5" y="245" width="15.5" height="15.0" fill="rgb(207,210,52)" rx="2" ry="2" />
<text  x="19.46" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="506.3" y="469" width="1.3" height="15.0" fill="rgb(231,214,8)" rx="2" ry="2" />
<text  x="509.30" y="479.5" ></text>
</g>
<g >
<title>all (913 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(248,160,1)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="1188.7" y="277" width="1.3" height="15.0" fill="rgb(250,37,46)" rx="2" ry="2" />
<text  x="1191.71" y="287.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.11%)</title><rect x="511.5" y="389" width="1.3" height="15.0" fill="rgb(243,103,42)" rx="2" ry="2" />
<text  x="514.47" y="399.5" ></text>
</g>
<g >
<title>dst_destroy_rcu (1 samples, 0.11%)</title><rect x="1125.4" y="325" width="1.3" height="15.0" fill="rgb(249,10,1)" rx="2" ry="2" />
<text  x="1128.38" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.22%)</title><rect x="1178.4" y="373" width="2.6" height="15.0" fill="rgb(221,53,26)" rx="2" ry="2" />
<text  x="1181.37" y="383.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.11%)</title><rect x="547.7" y="181" width="1.2" height="15.0" fill="rgb(205,229,1)" rx="2" ry="2" />
<text  x="550.66" y="191.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (24 samples, 2.63%)</title><rect x="205.2" y="165" width="31.0" height="15.0" fill="rgb(220,165,44)" rx="2" ry="2" />
<text  x="208.16" y="175.5" >ex..</text>
</g>
<g >
<title>sys_read (1 samples, 0.11%)</title><rect x="511.5" y="421" width="1.3" height="15.0" fill="rgb(215,62,22)" rx="2" ry="2" />
<text  x="514.47" y="431.5" ></text>
</g>
<g >
<title>__inc_zone_state (1 samples, 0.11%)</title><rect x="272.4" y="149" width="1.3" height="15.0" fill="rgb(213,126,33)" rx="2" ry="2" />
<text  x="275.37" y="159.5" ></text>
</g>
<g >
<title>do_idle (56 samples, 6.13%)</title><rect x="1116.3" y="453" width="72.4" height="15.0" fill="rgb(238,58,47)" rx="2" ry="2" />
<text  x="1119.33" y="463.5" >do_idle</text>
</g>
<g >
<title>generic_write_end (69 samples, 7.56%)</title><rect x="194.8" y="245" width="89.2" height="15.0" fill="rgb(239,219,23)" rx="2" ry="2" />
<text  x="197.82" y="255.5" >generic_wr..</text>
</g>
<g >
<title>rcu_implicit_dynticks_qs (1 samples, 0.11%)</title><rect x="1109.9" y="437" width="1.3" height="15.0" fill="rgb(232,186,2)" rx="2" ry="2" />
<text  x="1112.87" y="447.5" ></text>
</g>
<g >
<title>hugetlb_report_usage (1 samples, 0.11%)</title><rect x="511.5" y="325" width="1.3" height="15.0" fill="rgb(245,66,0)" rx="2" ry="2" />
<text  x="514.47" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.11%)</title><rect x="1188.7" y="421" width="1.3" height="15.0" fill="rgb(233,92,7)" rx="2" ry="2" />
<text  x="1191.71" y="431.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.11%)</title><rect x="1188.7" y="245" width="1.3" height="15.0" fill="rgb(208,46,10)" rx="2" ry="2" />
<text  x="1191.71" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.11%)</title><rect x="546.4" y="181" width="1.3" height="15.0" fill="rgb(217,47,14)" rx="2" ry="2" />
<text  x="549.36" y="191.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (11 samples, 1.20%)</title><rect x="180.6" y="229" width="14.2" height="15.0" fill="rgb(238,17,53)" rx="2" ry="2" />
<text  x="183.60" y="239.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (42 samples, 4.60%)</title><rect x="200.0" y="213" width="54.3" height="15.0" fill="rgb(232,42,1)" rx="2" ry="2" />
<text  x="202.99" y="223.5" >ext4_..</text>
</g>
<g >
<title>scheduler_ipi (1 samples, 0.11%)</title><rect x="1188.7" y="309" width="1.3" height="15.0" fill="rgb(220,150,9)" rx="2" ry="2" />
<text  x="1191.71" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (12 samples, 1.31%)</title><rect x="179.3" y="245" width="15.5" height="15.0" fill="rgb(218,128,9)" rx="2" ry="2" />
<text  x="182.31" y="255.5" ></text>
</g>
<g >
<title>__vfs_read (103 samples, 11.28%)</title><rect x="370.6" y="357" width="133.1" height="15.0" fill="rgb(241,154,36)" rx="2" ry="2" />
<text  x="373.59" y="367.5" >__vfs_read</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="65.6" y="197" width="1.3" height="15.0" fill="rgb(251,168,54)" rx="2" ry="2" />
<text  x="68.58" y="207.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (12 samples, 1.31%)</title><rect x="219.4" y="149" width="15.5" height="15.0" fill="rgb(254,129,43)" rx="2" ry="2" />
<text  x="222.38" y="159.5" ></text>
</g>
<g >
<title>[cat] (276 samples, 30.23%)</title><rect x="12.6" y="437" width="356.7" height="15.0" fill="rgb(253,29,35)" rx="2" ry="2" />
<text  x="15.58" y="447.5" >[cat]</text>
</g>
<g >
<title>seq_read (1 samples, 0.11%)</title><rect x="511.5" y="373" width="1.3" height="15.0" fill="rgb(231,207,33)" rx="2" ry="2" />
<text  x="514.47" y="383.5" ></text>
</g>
<g >
<title>__set_page_dirty (11 samples, 1.20%)</title><rect x="265.9" y="181" width="14.2" height="15.0" fill="rgb(236,97,0)" rx="2" ry="2" />
<text  x="268.90" y="191.5" ></text>
</g>
<g >
<title>radix_tree_tag_set (3 samples, 0.33%)</title><rect x="276.2" y="165" width="3.9" height="15.0" fill="rgb(236,219,26)" rx="2" ry="2" />
<text  x="279.24" y="175.5" ></text>
</g>
<g >
<title>find_derivation (1 samples, 0.11%)</title><rect x="10.0" y="485" width="1.3" height="15.0" fill="rgb(239,12,5)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__page_cache_alloc (21 samples, 2.30%)</title><rect x="81.1" y="213" width="27.1" height="15.0" fill="rgb(231,114,31)" rx="2" ry="2" />
<text  x="84.08" y="223.5" >_..</text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (2 samples, 0.22%)</title><rect x="215.5" y="133" width="2.6" height="15.0" fill="rgb(219,95,30)" rx="2" ry="2" />
<text  x="218.50" y="143.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.22%)</title><rect x="1178.4" y="389" width="2.6" height="15.0" fill="rgb(227,155,16)" rx="2" ry="2" />
<text  x="1181.37" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.56 (12 samples, 1.31%)</title><rect x="219.4" y="133" width="15.5" height="15.0" fill="rgb(239,142,13)" rx="2" ry="2" />
<text  x="222.38" y="143.5" ></text>
</g>
<g >
<title>__GI___read (105 samples, 11.50%)</title><rect x="369.3" y="437" width="135.7" height="15.0" fill="rgb(220,4,54)" rx="2" ry="2" />
<text  x="372.30" y="447.5" >__GI___read</text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.11%)</title><rect x="11.3" y="437" width="1.3" height="15.0" fill="rgb(243,220,6)" rx="2" ry="2" />
<text  x="14.29" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.22%)</title><rect x="273.7" y="133" width="2.5" height="15.0" fill="rgb(234,89,51)" rx="2" ry="2" />
<text  x="276.66" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (275 samples, 30.12%)</title><rect x="12.6" y="389" width="355.4" height="15.0" fill="rgb(238,104,18)" rx="2" ry="2" />
<text  x="15.58" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>jbd2__journal_start (11 samples, 1.20%)</title><rect x="16.5" y="229" width="14.2" height="15.0" fill="rgb(221,52,46)" rx="2" ry="2" />
<text  x="19.46" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (381 samples, 41.73%)</title><rect x="12.6" y="485" width="492.4" height="15.0" fill="rgb(230,189,53)" rx="2" ry="2" />
<text  x="15.58" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1113.7" y="437" width="1.3" height="15.0" fill="rgb(248,153,51)" rx="2" ry="2" />
<text  x="1116.75" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.44%)</title><rect x="157.3" y="149" width="5.2" height="15.0" fill="rgb(246,193,43)" rx="2" ry="2" />
<text  x="160.34" y="159.5" ></text>
</g>
<g >
<title>alloc_page_buffers (7 samples, 0.77%)</title><rect x="41.0" y="213" width="9.1" height="15.0" fill="rgb(210,102,47)" rx="2" ry="2" />
<text  x="44.02" y="223.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (82 samples, 8.98%)</title><rect x="373.2" y="277" width="106.0" height="15.0" fill="rgb(212,192,53)" rx="2" ry="2" />
<text  x="376.18" y="287.5" >copy_user_en..</text>
</g>
<g >
<title>alloc_pages_current (21 samples, 2.30%)</title><rect x="81.1" y="197" width="27.1" height="15.0" fill="rgb(251,180,9)" rx="2" ry="2" />
<text  x="84.08" y="207.5" >a..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.33%)</title><rect x="507.6" y="453" width="3.9" height="15.0" fill="rgb(241,126,50)" rx="2" ry="2" />
<text  x="510.59" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 1.97%)</title><rect x="82.4" y="181" width="23.2" height="15.0" fill="rgb(205,102,51)" rx="2" ry="2" />
<text  x="85.38" y="191.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.33%)</title><rect x="507.6" y="469" width="3.9" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="510.59" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="368.0" y="405" width="1.3" height="15.0" fill="rgb(222,25,45)" rx="2" ry="2" />
<text  x="371.01" y="415.5" ></text>
</g>
<g >
<title>__GI___sched_setaffinity_new (1 samples, 0.11%)</title><rect x="506.3" y="485" width="1.3" height="15.0" fill="rgb(226,168,45)" rx="2" ry="2" />
<text  x="509.30" y="495.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.11%)</title><rect x="1178.4" y="261" width="1.3" height="15.0" fill="rgb(205,229,26)" rx="2" ry="2" />
<text  x="1181.37" y="271.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.11%)</title><rect x="503.7" y="341" width="1.3" height="15.0" fill="rgb(243,211,5)" rx="2" ry="2" />
<text  x="506.71" y="351.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.11%)</title><rect x="11.3" y="501" width="1.3" height="15.0" fill="rgb(232,179,54)" rx="2" ry="2" />
<text  x="14.29" y="511.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.11%)</title><rect x="369.3" y="357" width="1.3" height="15.0" fill="rgb(254,184,38)" rx="2" ry="2" />
<text  x="372.30" y="367.5" ></text>
</g>
<g >
<title>create_empty_buffers (13 samples, 1.42%)</title><rect x="33.3" y="229" width="16.8" height="15.0" fill="rgb(206,94,33)" rx="2" ry="2" />
<text  x="36.26" y="239.5" ></text>
</g>
<g >
<title>sys_ioctl (79 samples, 8.65%)</title><rect x="512.8" y="421" width="102.1" height="15.0" fill="rgb(236,18,4)" rx="2" ry="2" />
<text  x="515.76" y="431.5" >sys_ioctl</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(205,50,2)" rx="2" ry="2" />
<text  x="1191.71" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (4 samples, 0.44%)</title><rect x="1118.9" y="309" width="5.2" height="15.0" fill="rgb(217,118,17)" rx="2" ry="2" />
<text  x="1121.92" y="319.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.11%)</title><rect x="511.5" y="469" width="1.3" height="15.0" fill="rgb(234,163,10)" rx="2" ry="2" />
<text  x="514.47" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.11%)</title><rect x="1188.7" y="485" width="1.3" height="15.0" fill="rgb(240,91,37)" rx="2" ry="2" />
<text  x="1191.71" y="495.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (4 samples, 0.44%)</title><rect x="212.9" y="149" width="5.2" height="15.0" fill="rgb(209,162,18)" rx="2" ry="2" />
<text  x="215.91" y="159.5" ></text>
</g>
<g >
<title>__inc_node_page_state (2 samples, 0.22%)</title><rect x="117.3" y="181" width="2.6" height="15.0" fill="rgb(221,153,44)" rx="2" ry="2" />
<text  x="120.27" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.55%)</title><rect x="42.3" y="181" width="6.5" height="15.0" fill="rgb(238,47,48)" rx="2" ry="2" />
<text  x="45.31" y="191.5" ></text>
</g>
<g >
<title>trace_ignore_this_task (1 samples, 0.11%)</title><rect x="1131.8" y="245" width="1.3" height="15.0" fill="rgb(209,71,24)" rx="2" ry="2" />
<text  x="1134.84" y="255.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (275 samples, 30.12%)</title><rect x="12.6" y="293" width="355.4" height="15.0" fill="rgb(216,171,4)" rx="2" ry="2" />
<text  x="15.58" y="303.5" >__generic_file_write_iter</text>
</g>
<g >
<title>down_read (4 samples, 0.44%)</title><rect x="61.7" y="213" width="5.2" height="15.0" fill="rgb(207,103,4)" rx="2" ry="2" />
<text  x="64.70" y="223.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.11%)</title><rect x="1131.8" y="325" width="1.3" height="15.0" fill="rgb(206,93,15)" rx="2" ry="2" />
<text  x="1134.84" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.22%)</title><rect x="38.4" y="213" width="2.6" height="15.0" fill="rgb(252,195,13)" rx="2" ry="2" />
<text  x="41.43" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 0.44%)</title><rect x="1126.7" y="325" width="5.1" height="15.0" fill="rgb(231,82,26)" rx="2" ry="2" />
<text  x="1129.67" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.11%)</title><rect x="1188.7" y="469" width="1.3" height="15.0" fill="rgb(247,140,9)" rx="2" ry="2" />
<text  x="1191.71" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="1179.7" y="341" width="1.3" height="15.0" fill="rgb(243,220,30)" rx="2" ry="2" />
<text  x="1182.66" y="351.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.11%)</title><rect x="237.5" y="165" width="1.3" height="15.0" fill="rgb(221,140,11)" rx="2" ry="2" />
<text  x="240.47" y="175.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.11%)</title><rect x="1122.8" y="261" width="1.3" height="15.0" fill="rgb(224,52,13)" rx="2" ry="2" />
<text  x="1125.79" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (42 samples, 4.60%)</title><rect x="200.0" y="197" width="54.3" height="15.0" fill="rgb(222,147,10)" rx="2" ry="2" />
<text  x="202.99" y="207.5" >ext4_..</text>
</g>
<g >
<title>ext4_es_insert_extent (4 samples, 0.44%)</title><rect x="66.9" y="213" width="5.1" height="15.0" fill="rgb(216,162,47)" rx="2" ry="2" />
<text  x="69.87" y="223.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.11%)</title><rect x="105.6" y="181" width="1.3" height="15.0" fill="rgb(206,94,4)" rx="2" ry="2" />
<text  x="108.64" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (5 samples, 0.55%)</title><rect x="121.2" y="181" width="6.4" height="15.0" fill="rgb(221,203,49)" rx="2" ry="2" />
<text  x="124.15" y="191.5" ></text>
</g>
<g >
<title>_perf_event_enable (78 samples, 8.54%)</title><rect x="514.1" y="357" width="100.8" height="15.0" fill="rgb(223,119,19)" rx="2" ry="2" />
<text  x="517.05" y="367.5" >_perf_event_..</text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.11%)</title><rect x="545.1" y="181" width="1.3" height="15.0" fill="rgb(231,13,37)" rx="2" ry="2" />
<text  x="548.07" y="191.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.11%)</title><rect x="1187.4" y="389" width="1.3" height="15.0" fill="rgb(208,5,9)" rx="2" ry="2" />
<text  x="1190.42" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (6 samples, 0.66%)</title><rect x="1125.4" y="341" width="7.7" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="1128.38" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="1131.8" y="261" width="1.3" height="15.0" fill="rgb(240,122,46)" rx="2" ry="2" />
<text  x="1134.84" y="271.5" ></text>
</g>
<g >
<title>_raw_write_lock (3 samples, 0.33%)</title><rect x="68.2" y="197" width="3.8" height="15.0" fill="rgb(211,159,53)" rx="2" ry="2" />
<text  x="71.16" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="1115.0" y="437" width="1.3" height="15.0" fill="rgb(217,156,21)" rx="2" ry="2" />
<text  x="1118.04" y="447.5" ></text>
</g>
<g >
<title>unlock_page (2 samples, 0.22%)</title><rect x="281.4" y="229" width="2.6" height="15.0" fill="rgb(242,68,36)" rx="2" ry="2" />
<text  x="284.41" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.11%)</title><rect x="123.7" y="165" width="1.3" height="15.0" fill="rgb(215,170,33)" rx="2" ry="2" />
<text  x="126.73" y="175.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.11%)</title><rect x="511.5" y="357" width="1.3" height="15.0" fill="rgb(248,19,52)" rx="2" ry="2" />
<text  x="514.47" y="367.5" ></text>
</g>
<g >
<title>pagecache_get_page (75 samples, 8.21%)</title><rect x="79.8" y="229" width="96.9" height="15.0" fill="rgb(231,76,33)" rx="2" ry="2" />
<text  x="82.79" y="239.5" >pagecache_g..</text>
</g>
<g >
<title>ext4_da_write_begin (128 samples, 14.02%)</title><rect x="12.6" y="261" width="165.4" height="15.0" fill="rgb(237,178,20)" rx="2" ry="2" />
<text  x="15.58" y="271.5" >ext4_da_write_begin</text>
</g>
<g >
<title>generic_perform_write (275 samples, 30.12%)</title><rect x="12.6" y="277" width="355.4" height="15.0" fill="rgb(245,10,48)" rx="2" ry="2" />
<text  x="15.58" y="287.5" >generic_perform_write</text>
</g>
<g >
<title>process_timeout (1 samples, 0.11%)</title><rect x="1131.8" y="293" width="1.3" height="15.0" fill="rgb(240,162,28)" rx="2" ry="2" />
<text  x="1134.84" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.55%)</title><rect x="127.6" y="181" width="6.5" height="15.0" fill="rgb(240,185,27)" rx="2" ry="2" />
<text  x="130.61" y="191.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (7 samples, 0.77%)</title><rect x="494.7" y="261" width="9.0" height="15.0" fill="rgb(219,133,7)" rx="2" ry="2" />
<text  x="497.67" y="271.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.11%)</title><rect x="1187.4" y="373" width="1.3" height="15.0" fill="rgb(218,102,44)" rx="2" ry="2" />
<text  x="1190.42" y="383.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.11%)</title><rect x="106.9" y="181" width="1.3" height="15.0" fill="rgb(216,148,6)" rx="2" ry="2" />
<text  x="109.93" y="191.5" ></text>
</g>
<g >
<title>vfs_write (275 samples, 30.12%)</title><rect x="12.6" y="357" width="355.4" height="15.0" fill="rgb(243,178,53)" rx="2" ry="2" />
<text  x="15.58" y="367.5" >vfs_write</text>
</g>
<g >
<title>ext4_da_write_end (82 samples, 8.98%)</title><rect x="178.0" y="261" width="106.0" height="15.0" fill="rgb(205,221,38)" rx="2" ry="2" />
<text  x="181.02" y="271.5" >ext4_da_writ..</text>
</g>
<g >
<title>radix_tree_lookup_slot (7 samples, 0.77%)</title><rect x="166.4" y="197" width="9.0" height="15.0" fill="rgb(220,148,7)" rx="2" ry="2" />
<text  x="169.39" y="207.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.44%)</title><rect x="128.9" y="165" width="5.2" height="15.0" fill="rgb(234,151,5)" rx="2" ry="2" />
<text  x="131.90" y="175.5" ></text>
</g>
<g >
<title>new_sync_write (275 samples, 30.12%)</title><rect x="12.6" y="325" width="355.4" height="15.0" fill="rgb(250,29,11)" rx="2" ry="2" />
<text  x="15.58" y="335.5" >new_sync_write</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="218.1" y="149" width="1.3" height="15.0" fill="rgb(246,31,4)" rx="2" ry="2" />
<text  x="221.08" y="159.5" ></text>
</g>
<g >
<title>node_dirty_ok (5 samples, 0.55%)</title><rect x="97.9" y="149" width="6.4" height="15.0" fill="rgb(241,42,46)" rx="2" ry="2" />
<text  x="100.89" y="159.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (9 samples, 0.99%)</title><rect x="240.1" y="165" width="11.6" height="15.0" fill="rgb(209,122,28)" rx="2" ry="2" />
<text  x="243.05" y="175.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.11%)</title><rect x="369.3" y="373" width="1.3" height="15.0" fill="rgb(235,39,51)" rx="2" ry="2" />
<text  x="372.30" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (14 samples, 1.53%)</title><rect x="1116.3" y="373" width="18.1" height="15.0" fill="rgb(241,113,51)" rx="2" ry="2" />
<text  x="1119.33" y="383.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.22%)</title><rect x="508.9" y="325" width="2.6" height="15.0" fill="rgb(246,80,28)" rx="2" ry="2" />
<text  x="511.88" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.11%)</title><rect x="1187.4" y="437" width="1.3" height="15.0" fill="rgb(218,174,2)" rx="2" ry="2" />
<text  x="1190.42" y="447.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.11%)</title><rect x="1131.8" y="309" width="1.3" height="15.0" fill="rgb(239,127,44)" rx="2" ry="2" />
<text  x="1134.84" y="319.5" ></text>
</g>
<g >
<title>call_init.part.0 (1 samples, 0.11%)</title><rect x="11.3" y="469" width="1.3" height="15.0" fill="rgb(249,139,38)" rx="2" ry="2" />
<text  x="14.29" y="479.5" ></text>
</g>
<g >
<title>__find_get_block (3 samples, 0.33%)</title><rect x="246.5" y="133" width="3.9" height="15.0" fill="rgb(216,88,47)" rx="2" ry="2" />
<text  x="249.52" y="143.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.11%)</title><rect x="1187.4" y="421" width="1.3" height="15.0" fill="rgb(249,22,38)" rx="2" ry="2" />
<text  x="1190.42" y="431.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.11%)</title><rect x="11.3" y="485" width="1.3" height="15.0" fill="rgb(241,63,23)" rx="2" ry="2" />
<text  x="14.29" y="495.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.11%)</title><rect x="17.8" y="213" width="1.2" height="15.0" fill="rgb(223,0,44)" rx="2" ry="2" />
<text  x="20.75" y="223.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.11%)</title><rect x="1117.6" y="325" width="1.3" height="15.0" fill="rgb(210,75,47)" rx="2" ry="2" />
<text  x="1120.62" y="335.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.11%)</title><rect x="1178.4" y="293" width="1.3" height="15.0" fill="rgb(217,159,26)" rx="2" ry="2" />
<text  x="1181.37" y="303.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.11%)</title><rect x="1179.7" y="325" width="1.3" height="15.0" fill="rgb(248,157,30)" rx="2" ry="2" />
<text  x="1182.66" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (76 samples, 8.32%)</title><rect x="78.5" y="245" width="98.2" height="15.0" fill="rgb(246,131,15)" rx="2" ry="2" />
<text  x="81.50" y="255.5" >grab_cache_..</text>
</g>
<g >
<title>handle_irq (1 samples, 0.11%)</title><rect x="1178.4" y="357" width="1.3" height="15.0" fill="rgb(212,226,5)" rx="2" ry="2" />
<text  x="1181.37" y="367.5" ></text>
</g>
<g >
<title>smp_reschedule_interrupt (1 samples, 0.11%)</title><rect x="1188.7" y="325" width="1.3" height="15.0" fill="rgb(246,50,17)" rx="2" ry="2" />
<text  x="1191.71" y="335.5" ></text>
</g>
<g >
<title>call_cpuidle (50 samples, 5.48%)</title><rect x="1116.3" y="437" width="64.7" height="15.0" fill="rgb(247,166,25)" rx="2" ry="2" />
<text  x="1119.33" y="447.5" >call_cp..</text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.22%)</title><rect x="59.1" y="213" width="2.6" height="15.0" fill="rgb(220,76,9)" rx="2" ry="2" />
<text  x="62.11" y="223.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.22%)</title><rect x="1129.3" y="293" width="2.5" height="15.0" fill="rgb(214,36,23)" rx="2" ry="2" />
<text  x="1132.26" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (14 samples, 1.53%)</title><rect x="1116.3" y="389" width="18.1" height="15.0" fill="rgb(236,206,27)" rx="2" ry="2" />
<text  x="1119.33" y="399.5" ></text>
</g>
<g >
<title>intel_idle (34 samples, 3.72%)</title><rect x="1134.4" y="389" width="44.0" height="15.0" fill="rgb(234,100,52)" rx="2" ry="2" />
<text  x="1137.42" y="399.5" >inte..</text>
</g>
<g >
<title>__radix_tree_create (9 samples, 0.99%)</title><rect x="135.4" y="165" width="11.6" height="15.0" fill="rgb(227,125,23)" rx="2" ry="2" />
<text  x="138.37" y="175.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.11%)</title><rect x="156.0" y="149" width="1.3" height="15.0" fill="rgb(224,229,46)" rx="2" ry="2" />
<text  x="159.05" y="159.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.11%)</title><rect x="1179.7" y="293" width="1.3" height="15.0" fill="rgb(251,226,33)" rx="2" ry="2" />
<text  x="1182.66" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.11%)</title><rect x="1188.7" y="357" width="1.3" height="15.0" fill="rgb(215,63,28)" rx="2" ry="2" />
<text  x="1191.71" y="367.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.11%)</title><rect x="1179.7" y="261" width="1.3" height="15.0" fill="rgb(234,65,22)" rx="2" ry="2" />
<text  x="1182.66" y="271.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.33%)</title><rect x="26.8" y="197" width="3.9" height="15.0" fill="rgb(230,157,47)" rx="2" ry="2" />
<text  x="29.80" y="207.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.11%)</title><rect x="1187.4" y="405" width="1.3" height="15.0" fill="rgb(217,1,31)" rx="2" ry="2" />
<text  x="1190.42" y="415.5" ></text>
</g>
<g >
<title>__vfs_write (275 samples, 30.12%)</title><rect x="12.6" y="341" width="355.4" height="15.0" fill="rgb(235,169,12)" rx="2" ry="2" />
<text  x="15.58" y="351.5" >__vfs_write</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.11%)</title><rect x="1178.4" y="309" width="1.3" height="15.0" fill="rgb(222,200,4)" rx="2" ry="2" />
<text  x="1181.37" y="319.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (15 samples, 1.64%)</title><rect x="262.0" y="197" width="19.4" height="15.0" fill="rgb(221,86,26)" rx="2" ry="2" />
<text  x="265.03" y="207.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (58 samples, 6.35%)</title><rect x="289.2" y="245" width="74.9" height="15.0" fill="rgb(205,142,41)" rx="2" ry="2" />
<text  x="292.17" y="255.5" >copy_use..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="145.7" y="53" width="1.3" height="15.0" fill="rgb(211,113,50)" rx="2" ry="2" />
<text  x="148.71" y="63.5" ></text>
</g>
<g >
<title>memcg_check_events (2 samples, 0.22%)</title><rect x="125.0" y="165" width="2.6" height="15.0" fill="rgb(205,202,38)" rx="2" ry="2" />
<text  x="128.03" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (105 samples, 11.50%)</title><rect x="369.3" y="421" width="135.7" height="15.0" fill="rgb(206,65,13)" rx="2" ry="2" />
<text  x="372.30" y="431.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.11%)</title><rect x="1188.7" y="293" width="1.3" height="15.0" fill="rgb(217,51,5)" rx="2" ry="2" />
<text  x="1191.71" y="303.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1115.0" y="453" width="1.3" height="15.0" fill="rgb(216,116,41)" rx="2" ry="2" />
<text  x="1118.04" y="463.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (3 samples, 0.33%)</title><rect x="364.1" y="261" width="3.9" height="15.0" fill="rgb(249,155,28)" rx="2" ry="2" />
<text  x="367.13" y="271.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.11%)</title><rect x="1183.5" y="437" width="1.3" height="15.0" fill="rgb(215,183,54)" rx="2" ry="2" />
<text  x="1186.54" y="447.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (6 samples, 0.66%)</title><rect x="167.7" y="181" width="7.7" height="15.0" fill="rgb(249,107,48)" rx="2" ry="2" />
<text  x="170.68" y="191.5" ></text>
</g>
<g >
<title>clean_bdev_aliases (1 samples, 0.11%)</title><rect x="32.0" y="229" width="1.3" height="15.0" fill="rgb(252,31,34)" rx="2" ry="2" />
<text  x="34.97" y="239.5" ></text>
</g>
<g >
<title>[cat] (381 samples, 41.73%)</title><rect x="12.6" y="469" width="492.4" height="15.0" fill="rgb(234,199,38)" rx="2" ry="2" />
<text  x="15.58" y="479.5" >[cat]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="511.5" y="453" width="1.3" height="15.0" fill="rgb(215,187,14)" rx="2" ry="2" />
<text  x="514.47" y="463.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.11%)</title><rect x="1133.1" y="357" width="1.3" height="15.0" fill="rgb(247,32,39)" rx="2" ry="2" />
<text  x="1136.13" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="267.2" y="165" width="1.3" height="15.0" fill="rgb(214,191,20)" rx="2" ry="2" />
<text  x="270.20" y="175.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.11%)</title><rect x="145.7" y="85" width="1.3" height="15.0" fill="rgb(251,6,51)" rx="2" ry="2" />
<text  x="148.71" y="95.5" ></text>
</g>
<g >
<title>read (1 samples, 0.11%)</title><rect x="511.5" y="485" width="1.3" height="15.0" fill="rgb(252,223,9)" rx="2" ry="2" />
<text  x="514.47" y="495.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.11%)</title><rect x="1115.0" y="469" width="1.3" height="15.0" fill="rgb(236,48,45)" rx="2" ry="2" />
<text  x="1118.04" y="479.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.22%)</title><rect x="190.9" y="213" width="2.6" height="15.0" fill="rgb(236,22,20)" rx="2" ry="2" />
<text  x="193.94" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (65 samples, 7.12%)</title><rect x="529.6" y="245" width="84.0" height="15.0" fill="rgb(224,165,22)" rx="2" ry="2" />
<text  x="532.56" y="255.5" >ctx_resched</text>
</g>
<g >
<title>udp4_gro_receive (1 samples, 0.11%)</title><rect x="1179.7" y="245" width="1.3" height="15.0" fill="rgb(241,148,38)" rx="2" ry="2" />
<text  x="1182.66" y="255.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (275 samples, 30.12%)</title><rect x="12.6" y="309" width="355.4" height="15.0" fill="rgb(252,53,7)" rx="2" ry="2" />
<text  x="15.58" y="319.5" >ext4_file_write_iter</text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.11%)</title><rect x="1181.0" y="421" width="1.2" height="15.0" fill="rgb(238,225,5)" rx="2" ry="2" />
<text  x="1183.95" y="431.5" ></text>
</g>
<g >
<title>new_sync_read (103 samples, 11.28%)</title><rect x="370.6" y="341" width="133.1" height="15.0" fill="rgb(230,132,10)" rx="2" ry="2" />
<text  x="373.59" y="351.5" >new_sync_read</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.11%)</title><rect x="175.4" y="213" width="1.3" height="15.0" fill="rgb(240,147,32)" rx="2" ry="2" />
<text  x="178.43" y="223.5" ></text>
</g>
<g >
<title>update_process_times (4 samples, 0.44%)</title><rect x="1118.9" y="293" width="5.2" height="15.0" fill="rgb(249,224,38)" rx="2" ry="2" />
<text  x="1121.92" y="303.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.33%)</title><rect x="507.6" y="421" width="3.9" height="15.0" fill="rgb(252,171,46)" rx="2" ry="2" />
<text  x="510.59" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="1113.7" y="421" width="1.3" height="15.0" fill="rgb(221,162,35)" rx="2" ry="2" />
<text  x="1116.75" y="431.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (21 samples, 2.30%)</title><rect x="50.1" y="229" width="27.1" height="15.0" fill="rgb(249,36,29)" rx="2" ry="2" />
<text  x="53.07" y="239.5" >e..</text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.11%)</title><rect x="47.5" y="117" width="1.3" height="15.0" fill="rgb(240,70,17)" rx="2" ry="2" />
<text  x="50.48" y="127.5" ></text>
</g>
<g >
<title>cat (381 samples, 41.73%)</title><rect x="12.6" y="517" width="492.4" height="15.0" fill="rgb(234,87,25)" rx="2" ry="2" />
<text  x="15.58" y="527.5" >cat</text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.11%)</title><rect x="507.6" y="293" width="1.3" height="15.0" fill="rgb(254,155,5)" rx="2" ry="2" />
<text  x="510.59" y="303.5" ></text>
</g>
<g >
<title>update_ts_time_stats (1 samples, 0.11%)</title><rect x="1124.1" y="325" width="1.3" height="15.0" fill="rgb(243,4,54)" rx="2" ry="2" />
<text  x="1127.09" y="335.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.11%)</title><rect x="103.1" y="133" width="1.2" height="15.0" fill="rgb(236,149,2)" rx="2" ry="2" />
<text  x="106.06" y="143.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.11%)</title><rect x="280.1" y="181" width="1.3" height="15.0" fill="rgb(236,212,15)" rx="2" ry="2" />
<text  x="283.12" y="191.5" ></text>
</g>
<g >
<title>[libc-2.32.so] (1 samples, 0.11%)</title><rect x="10.0" y="469" width="1.3" height="15.0" fill="rgb(230,138,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>alloc_buffer_head (7 samples, 0.77%)</title><rect x="41.0" y="197" width="9.1" height="15.0" fill="rgb(220,162,40)" rx="2" ry="2" />
<text  x="44.02" y="207.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="249.1" y="117" width="1.3" height="15.0" fill="rgb(244,21,21)" rx="2" ry="2" />
<text  x="252.10" y="127.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.11%)</title><rect x="1188.7" y="453" width="1.3" height="15.0" fill="rgb(241,94,48)" rx="2" ry="2" />
<text  x="1191.71" y="463.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.34 (21 samples, 2.30%)</title><rect x="254.3" y="213" width="27.1" height="15.0" fill="rgb(243,178,20)" rx="2" ry="2" />
<text  x="257.27" y="223.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.22%)</title><rect x="190.9" y="181" width="2.6" height="15.0" fill="rgb(212,75,44)" rx="2" ry="2" />
<text  x="193.94" y="191.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 8.43%)</title><rect x="515.3" y="341" width="99.6" height="15.0" fill="rgb(214,66,50)" rx="2" ry="2" />
<text  x="518.35" y="351.5" >event_functi..</text>
</g>
<g >
<title>idle_cpu (1 samples, 0.11%)</title><rect x="1115.0" y="373" width="1.3" height="15.0" fill="rgb(224,215,43)" rx="2" ry="2" />
<text  x="1118.04" y="383.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.11%)</title><rect x="1117.6" y="309" width="1.3" height="15.0" fill="rgb(253,192,28)" rx="2" ry="2" />
<text  x="1120.62" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.11%)</title><rect x="145.7" y="69" width="1.3" height="15.0" fill="rgb(225,73,39)" rx="2" ry="2" />
<text  x="148.71" y="79.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="1115.0" y="405" width="1.3" height="15.0" fill="rgb(241,76,30)" rx="2" ry="2" />
<text  x="1118.04" y="415.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (1 samples, 0.11%)</title><rect x="506.3" y="405" width="1.3" height="15.0" fill="rgb(244,77,47)" rx="2" ry="2" />
<text  x="509.30" y="415.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.11%)</title><rect x="1179.7" y="277" width="1.3" height="15.0" fill="rgb(235,81,30)" rx="2" ry="2" />
<text  x="1182.66" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.11%)</title><rect x="1188.7" y="373" width="1.3" height="15.0" fill="rgb(222,17,46)" rx="2" ry="2" />
<text  x="1191.71" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="47.5" y="101" width="1.3" height="15.0" fill="rgb(253,101,8)" rx="2" ry="2" />
<text  x="50.48" y="111.5" ></text>
</g>
<g >
<title>affinity__set (1 samples, 0.11%)</title><rect x="506.3" y="501" width="1.3" height="15.0" fill="rgb(216,39,9)" rx="2" ry="2" />
<text  x="509.30" y="511.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.11%)</title><rect x="511.5" y="341" width="1.3" height="15.0" fill="rgb(235,98,52)" rx="2" ry="2" />
<text  x="514.47" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (56 samples, 6.13%)</title><rect x="1116.3" y="469" width="72.4" height="15.0" fill="rgb(215,141,8)" rx="2" ry="2" />
<text  x="1119.33" y="479.5" >cpu_star..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 7.01%)</title><rect x="529.6" y="197" width="82.7" height="15.0" fill="rgb(253,187,20)" rx="2" ry="2" />
<text  x="532.56" y="207.5" >__intel_p..</text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.33%)</title><rect x="44.9" y="149" width="3.9" height="15.0" fill="rgb(246,65,6)" rx="2" ry="2" />
<text  x="47.90" y="159.5" ></text>
</g>
<g >
<title>__perf_event_enable (65 samples, 7.12%)</title><rect x="529.6" y="261" width="84.0" height="15.0" fill="rgb(246,8,41)" rx="2" ry="2" />
<text  x="532.56" y="271.5" >__perf_ev..</text>
</g>
<g >
<title>bash (2 samples, 0.22%)</title><rect x="10.0" y="517" width="2.6" height="15.0" fill="rgb(216,51,42)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (275 samples, 30.12%)</title><rect x="12.6" y="405" width="355.4" height="15.0" fill="rgb(206,198,19)" rx="2" ry="2" />
<text  x="15.58" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>perf_ioctl (79 samples, 8.65%)</title><rect x="512.8" y="389" width="102.1" height="15.0" fill="rgb(248,210,51)" rx="2" ry="2" />
<text  x="515.76" y="399.5" >perf_ioctl</text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.11%)</title><rect x="77.2" y="245" width="1.3" height="15.0" fill="rgb(223,226,37)" rx="2" ry="2" />
<text  x="80.21" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.11%)</title><rect x="236.2" y="165" width="1.3" height="15.0" fill="rgb(235,17,40)" rx="2" ry="2" />
<text  x="239.18" y="175.5" ></text>
</g>
<g >
<title>replace_slot (2 samples, 0.22%)</title><rect x="149.6" y="149" width="2.6" height="15.0" fill="rgb(247,67,18)" rx="2" ry="2" />
<text  x="152.58" y="159.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (79 samples, 8.65%)</title><rect x="512.8" y="405" width="102.1" height="15.0" fill="rgb(214,137,47)" rx="2" ry="2" />
<text  x="515.76" y="415.5" >do_vfs_ioctl</text>
</g>
<g >
<title>__ioctl (79 samples, 8.65%)</title><rect x="512.8" y="469" width="102.1" height="15.0" fill="rgb(254,176,51)" rx="2" ry="2" />
<text  x="515.76" y="479.5" >__ioctl</text>
</g>
<g >
<title>start_secondary (56 samples, 6.13%)</title><rect x="1116.3" y="485" width="72.4" height="15.0" fill="rgb(215,140,1)" rx="2" ry="2" />
<text  x="1119.33" y="495.5" >start_se..</text>
</g>
<g >
<title>start_this_handle (1 samples, 0.11%)</title><rect x="30.7" y="229" width="1.3" height="15.0" fill="rgb(207,66,5)" rx="2" ry="2" />
<text  x="33.68" y="239.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.11%)</title><rect x="1179.7" y="309" width="1.3" height="15.0" fill="rgb(240,78,48)" rx="2" ry="2" />
<text  x="1182.66" y="319.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.11%)</title><rect x="511.5" y="405" width="1.3" height="15.0" fill="rgb(246,80,26)" rx="2" ry="2" />
<text  x="514.47" y="415.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.33%)</title><rect x="507.6" y="389" width="3.9" height="15.0" fill="rgb(254,82,28)" rx="2" ry="2" />
<text  x="510.59" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (49 samples, 5.37%)</title><rect x="548.9" y="181" width="63.4" height="15.0" fill="rgb(247,85,15)" rx="2" ry="2" />
<text  x="551.95" y="191.5" >native..</text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.11%)</title><rect x="72.0" y="213" width="1.3" height="15.0" fill="rgb(223,110,28)" rx="2" ry="2" />
<text  x="75.04" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter (83 samples, 9.09%)</title><rect x="371.9" y="293" width="107.3" height="15.0" fill="rgb(252,11,4)" rx="2" ry="2" />
<text  x="374.88" y="303.5" >copy_page_to_..</text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.11%)</title><rect x="1112.5" y="437" width="1.2" height="15.0" fill="rgb(221,17,0)" rx="2" ry="2" />
<text  x="1115.45" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single (73 samples, 8.00%)</title><rect x="520.5" y="325" width="94.4" height="15.0" fill="rgb(248,177,5)" rx="2" ry="2" />
<text  x="523.51" y="335.5" >smp_call_fu..</text>
</g>
<g >
<title>__getblk_gfp (4 samples, 0.44%)</title><rect x="245.2" y="149" width="5.2" height="15.0" fill="rgb(246,83,54)" rx="2" ry="2" />
<text  x="248.22" y="159.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.11%)</title><rect x="612.3" y="197" width="1.3" height="15.0" fill="rgb(238,0,10)" rx="2" ry="2" />
<text  x="615.28" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.22%)</title><rect x="1184.8" y="421" width="2.6" height="15.0" fill="rgb(247,138,46)" rx="2" ry="2" />
<text  x="1187.83" y="431.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="1115.0" y="421" width="1.3" height="15.0" fill="rgb(246,16,12)" rx="2" ry="2" />
<text  x="1118.04" y="431.5" ></text>
</g>
<g >
<title>sys_read (105 samples, 11.50%)</title><rect x="369.3" y="389" width="135.7" height="15.0" fill="rgb(216,37,15)" rx="2" ry="2" />
<text  x="372.30" y="399.5" >sys_read</text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.11%)</title><rect x="284.0" y="261" width="1.3" height="15.0" fill="rgb(254,219,46)" rx="2" ry="2" />
<text  x="287.00" y="271.5" ></text>
</g>
<g >
<title>generic_exec_single (72 samples, 7.89%)</title><rect x="521.8" y="309" width="93.1" height="15.0" fill="rgb(250,88,17)" rx="2" ry="2" />
<text  x="524.81" y="319.5" >generic_exe..</text>
</g>
<g >
<title>cpuidle_enter (50 samples, 5.48%)</title><rect x="1116.3" y="421" width="64.7" height="15.0" fill="rgb(232,101,54)" rx="2" ry="2" />
<text  x="1119.33" y="431.5" >cpuidle..</text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.11%)</title><rect x="11.3" y="421" width="1.3" height="15.0" fill="rgb(215,107,21)" rx="2" ry="2" />
<text  x="14.29" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.11%)</title><rect x="503.7" y="325" width="1.3" height="15.0" fill="rgb(227,99,42)" rx="2" ry="2" />
<text  x="506.71" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add (10 samples, 1.10%)</title><rect x="152.2" y="197" width="12.9" height="15.0" fill="rgb(248,130,33)" rx="2" ry="2" />
<text  x="155.17" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="265.9" y="165" width="1.3" height="15.0" fill="rgb(237,80,45)" rx="2" ry="2" />
<text  x="268.90" y="175.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.11%)</title><rect x="1126.7" y="293" width="1.3" height="15.0" fill="rgb(222,57,3)" rx="2" ry="2" />
<text  x="1129.67" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="1128.0" y="293" width="1.3" height="15.0" fill="rgb(211,156,51)" rx="2" ry="2" />
<text  x="1130.96" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="1188.7" y="229" width="1.3" height="15.0" fill="rgb(248,106,28)" rx="2" ry="2" />
<text  x="1191.71" y="239.5" ></text>
</g>
<g >
<title>sys_write (3 samples, 0.33%)</title><rect x="507.6" y="437" width="3.9" height="15.0" fill="rgb(221,141,10)" rx="2" ry="2" />
<text  x="510.59" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.22%)</title><rect x="508.9" y="309" width="2.6" height="15.0" fill="rgb(236,56,51)" rx="2" ry="2" />
<text  x="511.88" y="319.5" ></text>
</g>
<g >
<title>vfs_read (104 samples, 11.39%)</title><rect x="370.6" y="373" width="134.4" height="15.0" fill="rgb(230,168,14)" rx="2" ry="2" />
<text  x="373.59" y="383.5" >vfs_read</text>
</g>
<g >
<title>__generic_file_write_iter (3 samples, 0.33%)</title><rect x="507.6" y="357" width="3.9" height="15.0" fill="rgb(230,22,29)" rx="2" ry="2" />
<text  x="510.59" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.44%)</title><rect x="1118.9" y="325" width="5.2" height="15.0" fill="rgb(247,97,39)" rx="2" ry="2" />
<text  x="1121.92" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="511.5" y="437" width="1.3" height="15.0" fill="rgb(218,87,34)" rx="2" ry="2" />
<text  x="514.47" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="1107.3" y="501" width="1.3" height="15.0" fill="rgb(210,149,19)" rx="2" ry="2" />
<text  x="1110.28" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.11%)</title><rect x="10.0" y="501" width="1.3" height="15.0" fill="rgb(252,152,36)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__es_tree_search (1 samples, 0.11%)</title><rect x="66.9" y="197" width="1.3" height="15.0" fill="rgb(228,148,6)" rx="2" ry="2" />
<text  x="69.87" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.11%)</title><rect x="162.5" y="149" width="1.3" height="15.0" fill="rgb(231,176,19)" rx="2" ry="2" />
<text  x="165.51" y="159.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (6 samples, 0.66%)</title><rect x="496.0" y="245" width="7.7" height="15.0" fill="rgb(249,160,49)" rx="2" ry="2" />
<text  x="498.96" y="255.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (43 samples, 4.71%)</title><rect x="198.7" y="229" width="55.6" height="15.0" fill="rgb(242,202,41)" rx="2" ry="2" />
<text  x="201.70" y="239.5" >__mar..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="176.7" y="245" width="1.3" height="15.0" fill="rgb(216,147,4)" rx="2" ry="2" />
<text  x="179.73" y="255.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.11%)</title><rect x="48.8" y="181" width="1.3" height="15.0" fill="rgb(246,123,21)" rx="2" ry="2" />
<text  x="51.77" y="191.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.11%)</title><rect x="507.6" y="277" width="1.3" height="15.0" fill="rgb(220,3,16)" rx="2" ry="2" />
<text  x="510.59" y="287.5" ></text>
</g>
<g >
<title>stop_one_cpu (1 samples, 0.11%)</title><rect x="506.3" y="389" width="1.3" height="15.0" fill="rgb(253,132,50)" rx="2" ry="2" />
<text  x="509.30" y="399.5" ></text>
</g>
<g >
<title>udp4_lib_lookup_skb (1 samples, 0.11%)</title><rect x="1179.7" y="229" width="1.3" height="15.0" fill="rgb(243,53,15)" rx="2" ry="2" />
<text  x="1182.66" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 8.65%)</title><rect x="512.8" y="437" width="102.1" height="15.0" fill="rgb(233,108,38)" rx="2" ry="2" />
<text  x="515.76" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>crypto_shash_update (11 samples, 1.20%)</title><rect x="220.7" y="117" width="14.2" height="15.0" fill="rgb(222,49,37)" rx="2" ry="2" />
<text  x="223.67" y="127.5" ></text>
</g>
<g >
<title>init_cacheinfo (1 samples, 0.11%)</title><rect x="11.3" y="453" width="1.3" height="15.0" fill="rgb(209,89,25)" rx="2" ry="2" />
<text  x="14.29" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (2 samples, 0.22%)</title><rect x="251.7" y="165" width="2.6" height="15.0" fill="rgb(211,77,13)" rx="2" ry="2" />
<text  x="254.69" y="175.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.11%)</title><rect x="1118.9" y="277" width="1.3" height="15.0" fill="rgb(221,161,26)" rx="2" ry="2" />
<text  x="1121.92" y="287.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="503.7" y="357" width="1.3" height="15.0" fill="rgb(220,48,37)" rx="2" ry="2" />
<text  x="506.71" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6 samples, 0.66%)</title><rect x="1116.3" y="341" width="7.8" height="15.0" fill="rgb(249,123,24)" rx="2" ry="2" />
<text  x="1119.33" y="351.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (61 samples, 6.68%)</title><rect x="285.3" y="261" width="78.8" height="15.0" fill="rgb(215,129,14)" rx="2" ry="2" />
<text  x="288.29" y="271.5" >iov_iter_..</text>
</g>
<g >
<title>sys_sched_setaffinity (1 samples, 0.11%)</title><rect x="506.3" y="437" width="1.3" height="15.0" fill="rgb(211,108,12)" rx="2" ry="2" />
<text  x="509.30" y="447.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.11%)</title><rect x="511.5" y="501" width="1.3" height="15.0" fill="rgb(216,124,45)" rx="2" ry="2" />
<text  x="514.47" y="511.5" ></text>
</g>
<g >
<title>kthread (6 samples, 0.66%)</title><rect x="1108.6" y="485" width="7.7" height="15.0" fill="rgb(212,217,53)" rx="2" ry="2" />
<text  x="1111.58" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 8.65%)</title><rect x="512.8" y="453" width="102.1" height="15.0" fill="rgb(208,50,52)" rx="2" ry="2" />
<text  x="515.76" y="463.5" >entry_SYSCAL..</text>
</g>
<g >
<title>hrtimer_interrupt (6 samples, 0.66%)</title><rect x="1116.3" y="357" width="7.8" height="15.0" fill="rgb(207,209,24)" rx="2" ry="2" />
<text  x="1119.33" y="367.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.11%)</title><rect x="1124.1" y="341" width="1.3" height="15.0" fill="rgb(216,197,16)" rx="2" ry="2" />
<text  x="1127.09" y="351.5" ></text>
</g>
<g >
<title>irq_exit (6 samples, 0.66%)</title><rect x="1125.4" y="357" width="7.7" height="15.0" fill="rgb(218,56,23)" rx="2" ry="2" />
<text  x="1128.38" y="367.5" ></text>
</g>
<g >
<title>page_cache_tree_insert (14 samples, 1.53%)</title><rect x="134.1" y="181" width="18.1" height="15.0" fill="rgb(221,22,9)" rx="2" ry="2" />
<text  x="137.07" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.11%)</title><rect x="1179.7" y="357" width="1.3" height="15.0" fill="rgb(206,211,18)" rx="2" ry="2" />
<text  x="1182.66" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (16 samples, 1.75%)</title><rect x="85.0" y="165" width="20.6" height="15.0" fill="rgb(205,81,28)" rx="2" ry="2" />
<text  x="87.96" y="175.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.11%)</title><rect x="507.6" y="325" width="1.3" height="15.0" fill="rgb(242,40,13)" rx="2" ry="2" />
<text  x="510.59" y="335.5" ></text>
</g>
<g >
<title>__brelse (1 samples, 0.11%)</title><rect x="211.6" y="149" width="1.3" height="15.0" fill="rgb(223,167,26)" rx="2" ry="2" />
<text  x="214.62" y="159.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="1115.0" y="389" width="1.3" height="15.0" fill="rgb(251,191,44)" rx="2" ry="2" />
<text  x="1118.04" y="399.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.11%)</title><rect x="1124.1" y="357" width="1.3" height="15.0" fill="rgb(207,190,5)" rx="2" ry="2" />
<text  x="1127.09" y="367.5" ></text>
</g>
<g >
<title>start_this_handle (6 samples, 0.66%)</title><rect x="22.9" y="213" width="7.8" height="15.0" fill="rgb(220,218,5)" rx="2" ry="2" />
<text  x="25.92" y="223.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.11%)</title><rect x="234.9" y="133" width="1.3" height="15.0" fill="rgb(234,173,42)" rx="2" ry="2" />
<text  x="237.88" y="143.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.11%)</title><rect x="1178.4" y="325" width="1.3" height="15.0" fill="rgb(217,219,22)" rx="2" ry="2" />
<text  x="1181.37" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="1107.3" y="485" width="1.3" height="15.0" fill="rgb(225,171,33)" rx="2" ry="2" />
<text  x="1110.28" y="495.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.11%)</title><rect x="506.3" y="421" width="1.3" height="15.0" fill="rgb(237,105,28)" rx="2" ry="2" />
<text  x="509.30" y="431.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="1188.7" y="213" width="1.3" height="15.0" fill="rgb(227,17,11)" rx="2" ry="2" />
<text  x="1191.71" y="223.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.33%)</title><rect x="44.9" y="165" width="3.9" height="15.0" fill="rgb(250,99,4)" rx="2" ry="2" />
<text  x="47.90" y="175.5" ></text>
</g>
<g >
<title>account_page_dirtied (6 samples, 0.66%)</title><rect x="268.5" y="165" width="7.7" height="15.0" fill="rgb(234,95,9)" rx="2" ry="2" />
<text  x="271.49" y="175.5" ></text>
</g>
<g >
<title>remote_function (69 samples, 7.56%)</title><rect x="525.7" y="293" width="89.2" height="15.0" fill="rgb(210,92,49)" rx="2" ry="2" />
<text  x="528.68" y="303.5" >remote_fun..</text>
</g>
<g >
<title>[cat] (381 samples, 41.73%)</title><rect x="12.6" y="501" width="492.4" height="15.0" fill="rgb(235,171,17)" rx="2" ry="2" />
<text  x="15.58" y="511.5" >[cat]</text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.11%)</title><rect x="1112.5" y="421" width="1.2" height="15.0" fill="rgb(222,124,46)" rx="2" ry="2" />
<text  x="1115.45" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 8.65%)</title><rect x="512.8" y="501" width="102.1" height="15.0" fill="rgb(207,108,52)" rx="2" ry="2" />
<text  x="515.76" y="511.5" >perf_evsel__..</text>
</g>
<g >
<title>new_slab (2 samples, 0.22%)</title><rect x="46.2" y="133" width="2.6" height="15.0" fill="rgb(223,1,7)" rx="2" ry="2" />
<text  x="49.19" y="143.5" ></text>
</g>
<g >
<title>pagecache_get_page (18 samples, 1.97%)</title><rect x="480.4" y="293" width="23.3" height="15.0" fill="rgb(224,174,8)" rx="2" ry="2" />
<text  x="483.45" y="303.5" >p..</text>
</g>
<g >
<title>do_idle (1 samples, 0.11%)</title><rect x="1188.7" y="405" width="1.3" height="15.0" fill="rgb(222,54,4)" rx="2" ry="2" />
<text  x="1191.71" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64 (57 samples, 6.24%)</title><rect x="1116.3" y="501" width="73.7" height="15.0" fill="rgb(221,4,41)" rx="2" ry="2" />
<text  x="1119.33" y="511.5" >secondar..</text>
</g>
<g >
<title>rebalance_domains (4 samples, 0.44%)</title><rect x="1126.7" y="309" width="5.1" height="15.0" fill="rgb(243,49,5)" rx="2" ry="2" />
<text  x="1129.67" y="319.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.22%)</title><rect x="1181.0" y="437" width="2.5" height="15.0" fill="rgb(223,141,1)" rx="2" ry="2" />
<text  x="1183.95" y="447.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12 samples, 1.31%)</title><rect x="238.8" y="181" width="15.5" height="15.0" fill="rgb(214,117,36)" rx="2" ry="2" />
<text  x="241.76" y="191.5" ></text>
</g>
<g >
<title>__inc_node_state (2 samples, 0.22%)</title><rect x="117.3" y="165" width="2.6" height="15.0" fill="rgb(214,160,43)" rx="2" ry="2" />
<text  x="120.27" y="175.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (78 samples, 8.54%)</title><rect x="514.1" y="373" width="100.8" height="15.0" fill="rgb(250,186,27)" rx="2" ry="2" />
<text  x="517.05" y="383.5" >perf_event_f..</text>
</g>
<g >
<title>__add_to_page_cache_locked (33 samples, 3.61%)</title><rect x="109.5" y="197" width="42.7" height="15.0" fill="rgb(211,184,51)" rx="2" ry="2" />
<text  x="112.52" y="207.5" >__ad..</text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.11%)</title><rect x="507.6" y="309" width="1.3" height="15.0" fill="rgb(249,25,3)" rx="2" ry="2" />
<text  x="510.59" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.22%)</title><rect x="190.9" y="197" width="2.6" height="15.0" fill="rgb(216,81,32)" rx="2" ry="2" />
<text  x="193.94" y="207.5" ></text>
</g>
<g >
<title>perf (85 samples, 9.31%)</title><rect x="505.0" y="517" width="109.9" height="15.0" fill="rgb(246,98,44)" rx="2" ry="2" />
<text  x="508.01" y="527.5" >perf</text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="479.2" y="293" width="1.2" height="15.0" fill="rgb(228,134,36)" rx="2" ry="2" />
<text  x="482.16" y="303.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (44 samples, 4.82%)</title><rect x="108.2" y="213" width="56.9" height="15.0" fill="rgb(219,103,16)" rx="2" ry="2" />
<text  x="111.23" y="223.5" >add_to..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (12 samples, 1.31%)</title><rect x="529.6" y="181" width="15.5" height="15.0" fill="rgb(253,72,47)" rx="2" ry="2" />
<text  x="532.56" y="191.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.11%)</title><rect x="503.7" y="309" width="1.3" height="15.0" fill="rgb(231,28,0)" rx="2" ry="2" />
<text  x="506.71" y="319.5" ></text>
</g>
<g >
<title>find_get_entry (8 samples, 0.88%)</title><rect x="165.1" y="213" width="10.3" height="15.0" fill="rgb(216,71,8)" rx="2" ry="2" />
<text  x="168.09" y="223.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (28 samples, 3.07%)</title><rect x="202.6" y="181" width="36.2" height="15.0" fill="rgb(252,69,30)" rx="2" ry="2" />
<text  x="205.57" y="191.5" >ext..</text>
</g>
<g >
<title>ext4_file_read_iter (103 samples, 11.28%)</title><rect x="370.6" y="325" width="133.1" height="15.0" fill="rgb(223,120,49)" rx="2" ry="2" />
<text  x="373.59" y="335.5" >ext4_file_read_i..</text>
</g>
<g >
<title>event_function (66 samples, 7.23%)</title><rect x="528.3" y="277" width="85.3" height="15.0" fill="rgb(226,20,54)" rx="2" ry="2" />
<text  x="531.27" y="287.5" >event_func..</text>
</g>
<g >
<title>[cat] (381 samples, 41.73%)</title><rect x="12.6" y="453" width="492.4" height="15.0" fill="rgb(229,183,34)" rx="2" ry="2" />
<text  x="15.58" y="463.5" >[cat]</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.11%)</title><rect x="145.7" y="133" width="1.3" height="15.0" fill="rgb(216,87,5)" rx="2" ry="2" />
<text  x="148.71" y="143.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.22%)</title><rect x="1184.8" y="437" width="2.6" height="15.0" fill="rgb(217,105,39)" rx="2" ry="2" />
<text  x="1187.83" y="447.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.11%)</title><rect x="83.7" y="165" width="1.3" height="15.0" fill="rgb(221,73,21)" rx="2" ry="2" />
<text  x="86.67" y="175.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="1113.7" y="405" width="1.3" height="15.0" fill="rgb(230,97,48)" rx="2" ry="2" />
<text  x="1116.75" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_write (276 samples, 30.23%)</title><rect x="12.6" y="421" width="356.7" height="15.0" fill="rgb(221,208,28)" rx="2" ry="2" />
<text  x="15.58" y="431.5" >__GI___libc_write</text>
</g>
<g >
<title>__lru_cache_add (10 samples, 1.10%)</title><rect x="152.2" y="181" width="12.9" height="15.0" fill="rgb(234,99,20)" rx="2" ry="2" />
<text  x="155.17" y="191.5" ></text>
</g>
<g >
<title>ret_from_fork (6 samples, 0.66%)</title><rect x="1108.6" y="501" width="7.7" height="15.0" fill="rgb(238,7,51)" rx="2" ry="2" />
<text  x="1111.58" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="193.5" y="213" width="1.3" height="15.0" fill="rgb(241,211,29)" rx="2" ry="2" />
<text  x="196.53" y="223.5" ></text>
</g>
<g >
<title>force_qs_rnp (1 samples, 0.11%)</title><rect x="1109.9" y="453" width="1.3" height="15.0" fill="rgb(205,67,8)" rx="2" ry="2" />
<text  x="1112.87" y="463.5" ></text>
</g>
<g >
<title>generic_file_read_iter (103 samples, 11.28%)</title><rect x="370.6" y="309" width="133.1" height="15.0" fill="rgb(217,108,34)" rx="2" ry="2" />
<text  x="373.59" y="319.5" >generic_file_rea..</text>
</g>
<g >
<title>pagevec_lru_move_fn (10 samples, 1.10%)</title><rect x="152.2" y="165" width="12.9" height="15.0" fill="rgb(244,177,8)" rx="2" ry="2" />
<text  x="155.17" y="175.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.11%)</title><rect x="145.7" y="101" width="1.3" height="15.0" fill="rgb(207,101,44)" rx="2" ry="2" />
<text  x="148.71" y="111.5" ></text>
</g>
<g >
<title>schedule_timeout (3 samples, 0.33%)</title><rect x="1111.2" y="453" width="3.8" height="15.0" fill="rgb(223,155,6)" rx="2" ry="2" />
<text  x="1114.16" y="463.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.11%)</title><rect x="104.3" y="149" width="1.3" height="15.0" fill="rgb(224,26,37)" rx="2" ry="2" />
<text  x="107.35" y="159.5" ></text>
</g>
<g >
<title>block_write_end (21 samples, 2.30%)</title><rect x="254.3" y="229" width="27.1" height="15.0" fill="rgb(226,165,43)" rx="2" ry="2" />
<text  x="257.27" y="239.5" >b..</text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.11%)</title><rect x="1188.7" y="389" width="1.3" height="15.0" fill="rgb(223,13,5)" rx="2" ry="2" />
<text  x="1191.71" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="506.3" y="453" width="1.3" height="15.0" fill="rgb(205,184,7)" rx="2" ry="2" />
<text  x="509.30" y="463.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.11%)</title><rect x="1182.2" y="421" width="1.3" height="15.0" fill="rgb(228,177,23)" rx="2" ry="2" />
<text  x="1185.25" y="431.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.22%)</title><rect x="273.7" y="149" width="2.5" height="15.0" fill="rgb(220,3,54)" rx="2" ry="2" />
<text  x="276.66" y="159.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.11%)</title><rect x="264.6" y="181" width="1.3" height="15.0" fill="rgb(238,106,6)" rx="2" ry="2" />
<text  x="267.61" y="191.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 8.65%)</title><rect x="512.8" y="485" width="102.1" height="15.0" fill="rgb(206,81,29)" rx="2" ry="2" />
<text  x="515.76" y="495.5" >perf_evsel__..</text>
</g>
<g >
<title>do_syscall_64 (105 samples, 11.50%)</title><rect x="369.3" y="405" width="135.7" height="15.0" fill="rgb(221,90,32)" rx="2" ry="2" />
<text  x="372.30" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="145.7" y="37" width="1.3" height="15.0" fill="rgb(233,147,37)" rx="2" ry="2" />
<text  x="148.71" y="47.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.11%)</title><rect x="1178.4" y="277" width="1.3" height="15.0" fill="rgb(234,33,14)" rx="2" ry="2" />
<text  x="1181.37" y="287.5" ></text>
</g>
<g >
<title>__vfs_write (3 samples, 0.33%)</title><rect x="507.6" y="405" width="3.9" height="15.0" fill="rgb(206,74,10)" rx="2" ry="2" />
<text  x="510.59" y="415.5" ></text>
</g>
<g >
<title>ion (3 samples, 0.33%)</title><rect x="507.6" y="501" width="3.9" height="15.0" fill="rgb(234,67,13)" rx="2" ry="2" />
<text  x="510.59" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (65 samples, 7.12%)</title><rect x="529.6" y="229" width="84.0" height="15.0" fill="rgb(233,147,42)" rx="2" ry="2" />
<text  x="532.56" y="239.5" >x86_pmu_e..</text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 7.12%)</title><rect x="529.6" y="213" width="84.0" height="15.0" fill="rgb(253,191,35)" rx="2" ry="2" />
<text  x="532.56" y="223.5" >intel_pmu..</text>
</g>
<g >
<title>__libc_write (3 samples, 0.33%)</title><rect x="507.6" y="485" width="3.9" height="15.0" fill="rgb(205,130,25)" rx="2" ry="2" />
<text  x="510.59" y="495.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.33%)</title><rect x="507.6" y="341" width="3.9" height="15.0" fill="rgb(243,226,33)" rx="2" ry="2" />
<text  x="510.59" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="1128.0" y="277" width="1.3" height="15.0" fill="rgb(248,0,46)" rx="2" ry="2" />
<text  x="1130.96" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.11%)</title><rect x="119.9" y="181" width="1.3" height="15.0" fill="rgb(248,133,2)" rx="2" ry="2" />
<text  x="122.86" y="191.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (5 samples, 0.55%)</title><rect x="228.4" y="101" width="6.5" height="15.0" fill="rgb(250,62,18)" rx="2" ry="2" />
<text  x="231.42" y="111.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.11%)</title><rect x="250.4" y="149" width="1.3" height="15.0" fill="rgb(206,59,11)" rx="2" ry="2" />
<text  x="253.39" y="159.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.33%)</title><rect x="73.3" y="213" width="3.9" height="15.0" fill="rgb(237,116,40)" rx="2" ry="2" />
<text  x="76.33" y="223.5" ></text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.11%)</title><rect x="1111.2" y="437" width="1.3" height="15.0" fill="rgb(252,85,53)" rx="2" ry="2" />
<text  x="1114.16" y="447.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.11%)</title><rect x="1120.2" y="277" width="1.3" height="15.0" fill="rgb(231,69,53)" rx="2" ry="2" />
<text  x="1123.21" y="287.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.33%)</title><rect x="507.6" y="373" width="3.9" height="15.0" fill="rgb(212,193,30)" rx="2" ry="2" />
<text  x="510.59" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (50 samples, 5.48%)</title><rect x="1116.3" y="405" width="64.7" height="15.0" fill="rgb(253,100,24)" rx="2" ry="2" />
<text  x="1119.33" y="415.5" >cpuidle..</text>
</g>
<g >
<title>rest_init (1 samples, 0.11%)</title><rect x="1188.7" y="437" width="1.3" height="15.0" fill="rgb(253,65,47)" rx="2" ry="2" />
<text  x="1191.71" y="447.5" ></text>
</g>
<g >
<title>swapper (445 samples, 48.74%)</title><rect x="614.9" y="517" width="575.1" height="15.0" fill="rgb(236,203,0)" rx="2" ry="2" />
<text  x="617.86" y="527.5" >swapper</text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.11%)</title><rect x="72.0" y="197" width="1.3" height="15.0" fill="rgb(249,165,40)" rx="2" ry="2" />
<text  x="75.04" y="207.5" ></text>
</g>
<g >
<title>memset_erms (3 samples, 0.33%)</title><rect x="19.0" y="213" width="3.9" height="15.0" fill="rgb(253,113,53)" rx="2" ry="2" />
<text  x="22.05" y="223.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (1 samples, 0.11%)</title><rect x="613.6" y="277" width="1.3" height="15.0" fill="rgb(254,127,39)" rx="2" ry="2" />
<text  x="616.57" y="287.5" ></text>
</g>
<g >
<title>from_kprojid (1 samples, 0.11%)</title><rect x="234.9" y="149" width="1.3" height="15.0" fill="rgb(230,7,30)" rx="2" ry="2" />
<text  x="237.88" y="159.5" ></text>
</g>
<g >
<title>radix_tree_node_alloc.constprop.19 (1 samples, 0.11%)</title><rect x="145.7" y="149" width="1.3" height="15.0" fill="rgb(217,158,10)" rx="2" ry="2" />
<text  x="148.71" y="159.5" ></text>
</g>
<g >
<title>sys_write (275 samples, 30.12%)</title><rect x="12.6" y="373" width="355.4" height="15.0" fill="rgb(254,40,13)" rx="2" ry="2" />
<text  x="15.58" y="383.5" >sys_write</text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.11%)</title><rect x="1178.4" y="341" width="1.3" height="15.0" fill="rgb(222,34,9)" rx="2" ry="2" />
<text  x="1181.37" y="351.5" ></text>
</g>
<g >
<title>find_get_entry (18 samples, 1.97%)</title><rect x="480.4" y="277" width="23.3" height="15.0" fill="rgb(222,58,12)" rx="2" ry="2" />
<text  x="483.45" y="287.5" >f..</text>
</g>
<g >
<title>reschedule_interrupt (1 samples, 0.11%)</title><rect x="1188.7" y="341" width="1.3" height="15.0" fill="rgb(250,65,53)" rx="2" ry="2" />
<text  x="1191.71" y="351.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.11%)</title><rect x="1131.8" y="277" width="1.3" height="15.0" fill="rgb(211,102,36)" rx="2" ry="2" />
<text  x="1134.84" y="287.5" ></text>
</g>
<g >
<title>wake_q_add (1 samples, 0.11%)</title><rect x="506.3" y="357" width="1.3" height="15.0" fill="rgb(248,166,6)" rx="2" ry="2" />
<text  x="509.30" y="367.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.11%)</title><rect x="163.8" y="149" width="1.3" height="15.0" fill="rgb(221,69,7)" rx="2" ry="2" />
<text  x="166.80" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.22%)</title><rect x="1121.5" y="277" width="2.6" height="15.0" fill="rgb(210,67,51)" rx="2" ry="2" />
<text  x="1124.50" y="287.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.11%)</title><rect x="145.7" y="117" width="1.3" height="15.0" fill="rgb(213,123,3)" rx="2" ry="2" />
<text  x="148.71" y="127.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (35 samples, 3.83%)</title><rect x="32.0" y="245" width="45.2" height="15.0" fill="rgb(225,102,53)" rx="2" ry="2" />
<text  x="34.97" y="255.5" >ext4..</text>
</g>
</g>
</svg>
